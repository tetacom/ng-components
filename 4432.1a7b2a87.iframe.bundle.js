/*! For license information please see 4432.1a7b2a87.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_ng_components_source=self.webpackChunk_ng_components_source||[]).push([[4432],{"./node_modules/@angular/core/fesm2022/rxjs-interop.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{br:()=>toObservable,ot:()=>toSignal,pQ:()=>takeUntilDestroyed});var _angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),rxjs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Observable.js"),rxjs__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/ReplaySubject.js"),rxjs_operators__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js");function takeUntilDestroyed(destroyRef){destroyRef||((0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.assertInInjectionContext)(takeUntilDestroyed),destroyRef=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.inject)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.DestroyRef));const destroyed$=new rxjs__WEBPACK_IMPORTED_MODULE_1__.c((observer=>destroyRef.onDestroy(observer.next.bind(observer))));return source=>source.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.Q)(destroyed$))}function toObservable(source,options){!options?.injector&&(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.assertInInjectionContext)(toObservable);const injector=options?.injector??(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.inject)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.Injector),subject=new rxjs__WEBPACK_IMPORTED_MODULE_3__.m(1),watcher=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.effect)((()=>{let value;try{value=source()}catch(err){return void(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.untracked)((()=>subject.error(err)))}(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.untracked)((()=>subject.next(value)))}),{injector,manualCleanup:!0});return injector.get(_angular_core__WEBPACK_IMPORTED_MODULE_0__.DestroyRef).onDestroy((()=>{watcher.destroy(),subject.complete()})),subject.asObservable()}function toSignal(source,options){ngDevMode&&(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.assertNotInReactiveContext)(toSignal,"Invoking `toSignal` causes new subscriptions every time. Consider moving `toSignal` outside of the reactive context and read the signal value where needed.");const requiresCleanup=!options?.manualCleanup;requiresCleanup&&!options?.injector&&(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.assertInInjectionContext)(toSignal);const cleanupRef=requiresCleanup?options?.injector?.get(_angular_core__WEBPACK_IMPORTED_MODULE_0__.DestroyRef)??(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.inject)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.DestroyRef):null,equal=function makeToSignalEqual(userEquality=Object.is){return(a,b)=>1===a.kind&&1===b.kind&&userEquality(a.value,b.value)}(options?.equal);let state;state=options?.requireSync?(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.signal)({kind:0},{equal}):(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.signal)({kind:1,value:options?.initialValue},{equal});const sub=source.subscribe({next:value=>state.set({kind:1,value}),error:error=>{if(options?.rejectErrors)throw error;state.set({kind:2,error})}});if(options?.requireSync&&0===state().kind)throw new _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵRuntimeError"](601,("undefined"==typeof ngDevMode||ngDevMode)&&"`toSignal()` called with `requireSync` but `Observable` did not emit synchronously.");return cleanupRef?.onDestroy(sub.unsubscribe.bind(sub)),(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.computed)((()=>{const current=state();switch(current.kind){case 1:return current.value;case 2:throw current.error;case 0:throw new _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵRuntimeError"](601,("undefined"==typeof ngDevMode||ngDevMode)&&"`toSignal()` called with `requireSync` but `Observable` did not emit synchronously.")}}),{equal:options?.equal})}},"./node_modules/angular-three-soba/fesm2022/angular-three-soba-abstractions.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Lr:()=>NgtsLine,Ix:()=>NgtsText});var core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),angular_three=__webpack_require__("./node_modules/angular-three/fesm2022/angular-three.mjs"),three_module=__webpack_require__("./node_modules/three/build/three.module.js"),observable_combineLatest=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/combineLatest.js"),operators_map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),operators_switchMap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/switchMap.js"),observable_of=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js");class LineMaterial extends three_module.ShaderMaterial{constructor(parameters){super({type:"LineMaterial",uniforms:three_module.UniformsUtils.clone(three_module.UniformsUtils.merge([three_module.UniformsLib.common,three_module.UniformsLib.fog,{worldUnits:{value:1},linewidth:{value:1},resolution:{value:new three_module.Vector2(1,1)},dashOffset:{value:0},dashScale:{value:1},dashSize:{value:1},gapSize:{value:1}}])),vertexShader:"\n\t\t\t\t#include <common>\n\t\t\t\t#include <fog_pars_vertex>\n\t\t\t\t#include <logdepthbuf_pars_vertex>\n\t\t\t\t#include <clipping_planes_pars_vertex>\n\n\t\t\t\tuniform float linewidth;\n\t\t\t\tuniform vec2 resolution;\n\n\t\t\t\tattribute vec3 instanceStart;\n\t\t\t\tattribute vec3 instanceEnd;\n\n\t\t\t\t#ifdef USE_COLOR\n\t\t\t\t\t#ifdef USE_LINE_COLOR_ALPHA\n\t\t\t\t\t\tvarying vec4 vLineColor;\n\t\t\t\t\t\tattribute vec4 instanceColorStart;\n\t\t\t\t\t\tattribute vec4 instanceColorEnd;\n\t\t\t\t\t#else\n\t\t\t\t\t\tvarying vec3 vLineColor;\n\t\t\t\t\t\tattribute vec3 instanceColorStart;\n\t\t\t\t\t\tattribute vec3 instanceColorEnd;\n\t\t\t\t\t#endif\n\t\t\t\t#endif\n\n\t\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t\tvarying vec4 worldPos;\n\t\t\t\t\tvarying vec3 worldStart;\n\t\t\t\t\tvarying vec3 worldEnd;\n\n\t\t\t\t\t#ifdef USE_DASH\n\n\t\t\t\t\t\tvarying vec2 vUv;\n\n\t\t\t\t\t#endif\n\n\t\t\t\t#else\n\n\t\t\t\t\tvarying vec2 vUv;\n\n\t\t\t\t#endif\n\n\t\t\t\t#ifdef USE_DASH\n\n\t\t\t\t\tuniform float dashScale;\n\t\t\t\t\tattribute float instanceDistanceStart;\n\t\t\t\t\tattribute float instanceDistanceEnd;\n\t\t\t\t\tvarying float vLineDistance;\n\n\t\t\t\t#endif\n\n\t\t\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t\t\t// conservative estimate of the near plane\n\t\t\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\t#ifdef USE_COLOR\n\n\t\t\t\t\t\tvLineColor = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t\t\t#endif\n\n\t\t\t\t\t#ifdef USE_DASH\n\n\t\t\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\t\t\t\t\t\tvUv = uv;\n\n\t\t\t\t\t#endif\n\n\t\t\t\t\tfloat aspect = resolution.x / resolution.y;\n\n\t\t\t\t\t// camera space\n\t\t\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t\t\tworldStart = start.xyz;\n\t\t\t\t\t\tworldEnd = end.xyz;\n\n\t\t\t\t\t#else\n\n\t\t\t\t\t\tvUv = uv;\n\n\t\t\t\t\t#endif\n\n\t\t\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\t\t\tif ( perspective ) {\n\n\t\t\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// clip space\n\t\t\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t\t\t// ndc space\n\t\t\t\t\tvec3 ndcStart = clipStart.xyz / clipStart.w;\n\t\t\t\t\tvec3 ndcEnd = clipEnd.xyz / clipEnd.w;\n\n\t\t\t\t\t// direction\n\t\t\t\t\tvec2 dir = ndcEnd.xy - ndcStart.xy;\n\n\t\t\t\t\t// account for clip-space aspect ratio\n\t\t\t\t\tdir.x *= aspect;\n\t\t\t\t\tdir = normalize( dir );\n\n\t\t\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t\t\t// get the offset direction as perpendicular to the view vector\n\t\t\t\t\t\tvec3 worldDir = normalize( end.xyz - start.xyz );\n\t\t\t\t\t\tvec3 offset;\n\t\t\t\t\t\tif ( position.y < 0.5 ) {\n\n\t\t\t\t\t\t\toffset = normalize( cross( start.xyz, worldDir ) );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\toffset = normalize( cross( end.xyz, worldDir ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// sign flip\n\t\t\t\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t\t\t\tfloat forwardOffset = dot( worldDir, vec3( 0.0, 0.0, 1.0 ) );\n\n\t\t\t\t\t\t// don't extend the line if we're rendering dashes because we\n\t\t\t\t\t\t// won't be rendering the endcaps\n\t\t\t\t\t\t#ifndef USE_DASH\n\n\t\t\t\t\t\t\t// extend the line bounds to encompass  endcaps\n\t\t\t\t\t\t\tstart.xyz += - worldDir * linewidth * 0.5;\n\t\t\t\t\t\t\tend.xyz += worldDir * linewidth * 0.5;\n\n\t\t\t\t\t\t\t// shift the position of the quad so it hugs the forward edge of the line\n\t\t\t\t\t\t\toffset.xy -= dir * forwardOffset;\n\t\t\t\t\t\t\toffset.z += 0.5;\n\n\t\t\t\t\t\t#endif\n\n\t\t\t\t\t\t// endcaps\n\t\t\t\t\t\tif ( position.y > 1.0 || position.y < 0.0 ) {\n\n\t\t\t\t\t\t\toffset.xy += dir * 2.0 * forwardOffset;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// adjust for linewidth\n\t\t\t\t\t\toffset *= linewidth * 0.5;\n\n\t\t\t\t\t\t// set the world position\n\t\t\t\t\t\tworldPos = ( position.y < 0.5 ) ? start : end;\n\t\t\t\t\t\tworldPos.xyz += offset;\n\n\t\t\t\t\t\t// project the worldpos\n\t\t\t\t\t\tvec4 clip = projectionMatrix * worldPos;\n\n\t\t\t\t\t\t// shift the depth of the projected points so the line\n\t\t\t\t\t\t// segments overlap neatly\n\t\t\t\t\t\tvec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;\n\t\t\t\t\t\tclip.z = clipPose.z * clip.w;\n\n\t\t\t\t\t#else\n\n\t\t\t\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\t\t\t\t\t\t// undo aspect ratio adjustment\n\t\t\t\t\t\tdir.x /= aspect;\n\t\t\t\t\t\toffset.x /= aspect;\n\n\t\t\t\t\t\t// sign flip\n\t\t\t\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t\t\t\t// endcaps\n\t\t\t\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\t\t\t\toffset += - dir;\n\n\t\t\t\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\t\t\t\toffset += dir;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// adjust for linewidth\n\t\t\t\t\t\toffset *= linewidth;\n\n\t\t\t\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\t\t\t\toffset /= resolution.y;\n\n\t\t\t\t\t\t// select end\n\t\t\t\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t\t\t\t// back to clip space\n\t\t\t\t\t\toffset *= clip.w;\n\n\t\t\t\t\t\tclip.xy += offset;\n\n\t\t\t\t\t#endif\n\n\t\t\t\t\tgl_Position = clip;\n\n\t\t\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n\t\t\t\t\t#include <logdepthbuf_vertex>\n\t\t\t\t\t#include <clipping_planes_vertex>\n\t\t\t\t\t#include <fog_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:`\n\t\t\t\tuniform vec3 diffuse;\n\t\t\t\tuniform float opacity;\n\t\t\t\tuniform float linewidth;\n\n\t\t\t\t#ifdef USE_DASH\n\n\t\t\t\t\tuniform float dashOffset;\n\t\t\t\t\tuniform float dashSize;\n\t\t\t\t\tuniform float gapSize;\n\n\t\t\t\t#endif\n\n\t\t\t\tvarying float vLineDistance;\n\n\t\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t\tvarying vec4 worldPos;\n\t\t\t\t\tvarying vec3 worldStart;\n\t\t\t\t\tvarying vec3 worldEnd;\n\n\t\t\t\t\t#ifdef USE_DASH\n\n\t\t\t\t\t\tvarying vec2 vUv;\n\n\t\t\t\t\t#endif\n\n\t\t\t\t#else\n\n\t\t\t\t\tvarying vec2 vUv;\n\n\t\t\t\t#endif\n\n\t\t\t\t#include <common>\n\t\t\t\t#include <fog_pars_fragment>\n\t\t\t\t#include <logdepthbuf_pars_fragment>\n\t\t\t\t#include <clipping_planes_pars_fragment>\n\n\t\t\t\t#ifdef USE_COLOR\n\t\t\t\t\t#ifdef USE_LINE_COLOR_ALPHA\n\t\t\t\t\t\tvarying vec4 vLineColor;\n\t\t\t\t\t#else\n\t\t\t\t\t\tvarying vec3 vLineColor;\n\t\t\t\t\t#endif\n\t\t\t\t#endif\n\n\t\t\t\tvec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {\n\n\t\t\t\t\tfloat mua;\n\t\t\t\t\tfloat mub;\n\n\t\t\t\t\tvec3 p13 = p1 - p3;\n\t\t\t\t\tvec3 p43 = p4 - p3;\n\n\t\t\t\t\tvec3 p21 = p2 - p1;\n\n\t\t\t\t\tfloat d1343 = dot( p13, p43 );\n\t\t\t\t\tfloat d4321 = dot( p43, p21 );\n\t\t\t\t\tfloat d1321 = dot( p13, p21 );\n\t\t\t\t\tfloat d4343 = dot( p43, p43 );\n\t\t\t\t\tfloat d2121 = dot( p21, p21 );\n\n\t\t\t\t\tfloat denom = d2121 * d4343 - d4321 * d4321;\n\n\t\t\t\t\tfloat numer = d1343 * d4321 - d1321 * d4343;\n\n\t\t\t\t\tmua = numer / denom;\n\t\t\t\t\tmua = clamp( mua, 0.0, 1.0 );\n\t\t\t\t\tmub = ( d1343 + d4321 * ( mua ) ) / d4343;\n\t\t\t\t\tmub = clamp( mub, 0.0, 1.0 );\n\n\t\t\t\t\treturn vec2( mua, mub );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t\t\t#ifdef USE_DASH\n\n\t\t\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n\t\t\t\t\t\tif ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n\t\t\t\t\t#endif\n\n\t\t\t\t\tfloat alpha = opacity;\n\n\t\t\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t\t\t// Find the closest points on the view ray and the line segment\n\t\t\t\t\t\tvec3 rayEnd = normalize( worldPos.xyz ) * 1e5;\n\t\t\t\t\t\tvec3 lineDir = worldEnd - worldStart;\n\t\t\t\t\t\tvec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );\n\n\t\t\t\t\t\tvec3 p1 = worldStart + lineDir * params.x;\n\t\t\t\t\t\tvec3 p2 = rayEnd * params.y;\n\t\t\t\t\t\tvec3 delta = p1 - p2;\n\t\t\t\t\t\tfloat len = length( delta );\n\t\t\t\t\t\tfloat norm = len / linewidth;\n\n\t\t\t\t\t\t#ifndef USE_DASH\n\n\t\t\t\t\t\t\t#ifdef USE_ALPHA_TO_COVERAGE\n\n\t\t\t\t\t\t\t\tfloat dnorm = fwidth( norm );\n\t\t\t\t\t\t\t\talpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );\n\n\t\t\t\t\t\t\t#else\n\n\t\t\t\t\t\t\t\tif ( norm > 0.5 ) {\n\n\t\t\t\t\t\t\t\t\tdiscard;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t#endif\n\n\t\t\t\t\t\t#endif\n\n\t\t\t\t\t#else\n\n\t\t\t\t\t\t#ifdef USE_ALPHA_TO_COVERAGE\n\n\t\t\t\t\t\t\t// artifacts appear on some hardware if a derivative is taken within a conditional\n\t\t\t\t\t\t\tfloat a = vUv.x;\n\t\t\t\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\t\t\t\tfloat len2 = a * a + b * b;\n\t\t\t\t\t\t\tfloat dlen = fwidth( len2 );\n\n\t\t\t\t\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\t\t\t\t\talpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t#else\n\n\t\t\t\t\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\t\t\t\t\tfloat a = vUv.x;\n\t\t\t\t\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\t\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\t\t\t\t\tif ( len2 > 1.0 ) discard;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t#endif\n\n\t\t\t\t\t#endif\n\n\t\t\t\t\tvec4 diffuseColor = vec4( diffuse, alpha );\n\t\t\t\t\t#ifdef USE_COLOR\n\t\t\t\t\t\t#ifdef USE_LINE_COLOR_ALPHA\n\t\t\t\t\t\t\tdiffuseColor *= vLineColor;\n\t\t\t\t\t\t#else\n\t\t\t\t\t\t\tdiffuseColor.rgb *= vLineColor;\n\t\t\t\t\t\t#endif\n\t\t\t\t\t#endif\n\n\t\t\t\t\t#include <logdepthbuf_fragment>\n\n\t\t\t\t\tgl_FragColor = diffuseColor;\n\n\t\t\t\t\t#include <tonemapping_fragment>\n\t\t\t\t\t#include <${parseInt(three_module.REVISION.replace(/\D+/g,""))>=154?"colorspace_fragment":"encodings_fragment"}>\n\t\t\t\t\t#include <fog_fragment>\n\t\t\t\t\t#include <premultiplied_alpha_fragment>\n\n\t\t\t\t}\n\t\t\t`,clipping:!0}),this.isLineMaterial=!0,this.onBeforeCompile=function(){this.transparent?this.defines.USE_LINE_COLOR_ALPHA="1":delete this.defines.USE_LINE_COLOR_ALPHA},Object.defineProperties(this,{color:{enumerable:!0,get:function(){return this.uniforms.diffuse.value},set:function(value){this.uniforms.diffuse.value=value}},worldUnits:{enumerable:!0,get:function(){return"WORLD_UNITS"in this.defines},set:function(value){!0===value?this.defines.WORLD_UNITS="":delete this.defines.WORLD_UNITS}},linewidth:{enumerable:!0,get:function(){return this.uniforms.linewidth.value},set:function(value){this.uniforms.linewidth.value=value}},dashed:{enumerable:!0,get:function(){return Boolean("USE_DASH"in this.defines)},set(value){Boolean(value)!==Boolean("USE_DASH"in this.defines)&&(this.needsUpdate=!0),!0===value?this.defines.USE_DASH="":delete this.defines.USE_DASH}},dashScale:{enumerable:!0,get:function(){return this.uniforms.dashScale.value},set:function(value){this.uniforms.dashScale.value=value}},dashSize:{enumerable:!0,get:function(){return this.uniforms.dashSize.value},set:function(value){this.uniforms.dashSize.value=value}},dashOffset:{enumerable:!0,get:function(){return this.uniforms.dashOffset.value},set:function(value){this.uniforms.dashOffset.value=value}},gapSize:{enumerable:!0,get:function(){return this.uniforms.gapSize.value},set:function(value){this.uniforms.gapSize.value=value}},opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(value){this.uniforms.opacity.value=value}},resolution:{enumerable:!0,get:function(){return this.uniforms.resolution.value},set:function(value){this.uniforms.resolution.value.copy(value)}},alphaToCoverage:{enumerable:!0,get:function(){return Boolean("USE_ALPHA_TO_COVERAGE"in this.defines)},set:function(value){Boolean(value)!==Boolean("USE_ALPHA_TO_COVERAGE"in this.defines)&&(this.needsUpdate=!0),!0===value?(this.defines.USE_ALPHA_TO_COVERAGE="",this.extensions.derivatives=!0):(delete this.defines.USE_ALPHA_TO_COVERAGE,this.extensions.derivatives=!1)}}}),this.setValues(parameters)}}const _box=new three_module.Box3,_vector=new three_module.Vector3;class LineSegmentsGeometry extends three_module.InstancedBufferGeometry{constructor(){super(),this.isLineSegmentsGeometry=!0,this.type="LineSegmentsGeometry";this.setIndex([0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5]),this.setAttribute("position",new three_module.Float32BufferAttribute([-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],3)),this.setAttribute("uv",new three_module.Float32BufferAttribute([-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],2))}applyMatrix4(matrix){const start=this.attributes.instanceStart,end=this.attributes.instanceEnd;return void 0!==start&&(start.applyMatrix4(matrix),end.applyMatrix4(matrix),start.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}setPositions(array){let lineSegments;array instanceof Float32Array?lineSegments=array:Array.isArray(array)&&(lineSegments=new Float32Array(array));const instanceBuffer=new three_module.InstancedInterleavedBuffer(lineSegments,6,1);return this.setAttribute("instanceStart",new three_module.InterleavedBufferAttribute(instanceBuffer,3,0)),this.setAttribute("instanceEnd",new three_module.InterleavedBufferAttribute(instanceBuffer,3,3)),this.computeBoundingBox(),this.computeBoundingSphere(),this}setColors(array,itemSize=3){let colors;array instanceof Float32Array?colors=array:Array.isArray(array)&&(colors=new Float32Array(array));const instanceColorBuffer=new three_module.InstancedInterleavedBuffer(colors,2*itemSize,1);return this.setAttribute("instanceColorStart",new three_module.InterleavedBufferAttribute(instanceColorBuffer,itemSize,0)),this.setAttribute("instanceColorEnd",new three_module.InterleavedBufferAttribute(instanceColorBuffer,itemSize,itemSize)),this}fromWireframeGeometry(geometry){return this.setPositions(geometry.attributes.position.array),this}fromEdgesGeometry(geometry){return this.setPositions(geometry.attributes.position.array),this}fromMesh(mesh){return this.fromWireframeGeometry(new three_module.WireframeGeometry(mesh.geometry)),this}fromLineSegments(lineSegments){const geometry=lineSegments.geometry;return this.setPositions(geometry.attributes.position.array),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new three_module.Box3);const start=this.attributes.instanceStart,end=this.attributes.instanceEnd;void 0!==start&&void 0!==end&&(this.boundingBox.setFromBufferAttribute(start),_box.setFromBufferAttribute(end),this.boundingBox.union(_box))}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new three_module.Sphere),null===this.boundingBox&&this.computeBoundingBox();const start=this.attributes.instanceStart,end=this.attributes.instanceEnd;if(void 0!==start&&void 0!==end){const center=this.boundingSphere.center;this.boundingBox.getCenter(center);let maxRadiusSq=0;for(let i=0,il=start.count;i<il;i++)_vector.fromBufferAttribute(start,i),maxRadiusSq=Math.max(maxRadiusSq,center.distanceToSquared(_vector)),_vector.fromBufferAttribute(end,i),maxRadiusSq=Math.max(maxRadiusSq,center.distanceToSquared(_vector));this.boundingSphere.radius=Math.sqrt(maxRadiusSq),isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}toJSON(){}applyMatrix(matrix){return console.warn("THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4()."),this.applyMatrix4(matrix)}}class LineGeometry extends LineSegmentsGeometry{constructor(){super(),this.isLineGeometry=!0,this.type="LineGeometry"}setPositions(array){const length=array.length-3,points=new Float32Array(2*length);for(let i=0;i<length;i+=3)points[2*i]=array[i],points[2*i+1]=array[i+1],points[2*i+2]=array[i+2],points[2*i+3]=array[i+3],points[2*i+4]=array[i+4],points[2*i+5]=array[i+5];return super.setPositions(points),this}setColors(array,itemSize=3){const length=array.length-itemSize,colors=new Float32Array(2*length);if(3===itemSize)for(let i=0;i<length;i+=itemSize)colors[2*i]=array[i],colors[2*i+1]=array[i+1],colors[2*i+2]=array[i+2],colors[2*i+3]=array[i+3],colors[2*i+4]=array[i+4],colors[2*i+5]=array[i+5];else for(let i=0;i<length;i+=itemSize)colors[2*i]=array[i],colors[2*i+1]=array[i+1],colors[2*i+2]=array[i+2],colors[2*i+3]=array[i+3],colors[2*i+4]=array[i+4],colors[2*i+5]=array[i+5],colors[2*i+6]=array[i+6],colors[2*i+7]=array[i+7];return super.setColors(colors,itemSize),this}fromLine(line){const geometry=line.geometry;return this.setPositions(geometry.attributes.position.array),this}}const _start=new three_module.Vector3,_end=new three_module.Vector3,_start4=new three_module.Vector4,_end4=new three_module.Vector4,_ssOrigin=new three_module.Vector4,_ssOrigin3=new three_module.Vector3,_mvMatrix=new three_module.Matrix4,_line=new three_module.Line3,_closestPoint=new three_module.Vector3,LineSegments2_box=new three_module.Box3,_sphere=new three_module.Sphere,_clipToWorldVector=new three_module.Vector4;let _ray,_instanceStart,_instanceEnd,_lineWidth;function getWorldSpaceHalfWidth(camera,distance,resolution){return _clipToWorldVector.set(0,0,-distance,1).applyMatrix4(camera.projectionMatrix),_clipToWorldVector.multiplyScalar(1/_clipToWorldVector.w),_clipToWorldVector.x=_lineWidth/resolution.width,_clipToWorldVector.y=_lineWidth/resolution.height,_clipToWorldVector.applyMatrix4(camera.projectionMatrixInverse),_clipToWorldVector.multiplyScalar(1/_clipToWorldVector.w),Math.abs(Math.max(_clipToWorldVector.x,_clipToWorldVector.y))}class LineSegments2 extends three_module.Mesh{constructor(geometry=new LineSegmentsGeometry,material=new LineMaterial({color:16777215*Math.random()})){super(geometry,material),this.isLineSegments2=!0,this.type="LineSegments2"}computeLineDistances(){const geometry=this.geometry,instanceStart=geometry.attributes.instanceStart,instanceEnd=geometry.attributes.instanceEnd,lineDistances=new Float32Array(2*instanceStart.count);for(let i=0,j=0,l=instanceStart.count;i<l;i++,j+=2)_start.fromBufferAttribute(instanceStart,i),_end.fromBufferAttribute(instanceEnd,i),lineDistances[j]=0===j?0:lineDistances[j-1],lineDistances[j+1]=lineDistances[j]+_start.distanceTo(_end);const instanceDistanceBuffer=new three_module.InstancedInterleavedBuffer(lineDistances,2,1);return geometry.setAttribute("instanceDistanceStart",new three_module.InterleavedBufferAttribute(instanceDistanceBuffer,1,0)),geometry.setAttribute("instanceDistanceEnd",new three_module.InterleavedBufferAttribute(instanceDistanceBuffer,1,1)),this}raycast(raycaster,intersects){const worldUnits=this.material.worldUnits,camera=raycaster.camera;null!==camera||worldUnits||console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2 while worldUnits is set to false.');const threshold=void 0!==raycaster.params.Line2&&raycaster.params.Line2.threshold||0;_ray=raycaster.ray;const matrixWorld=this.matrixWorld,geometry=this.geometry,material=this.material;let sphereMargin,boxMargin;if(_lineWidth=material.linewidth+threshold,_instanceStart=geometry.attributes.instanceStart,_instanceEnd=geometry.attributes.instanceEnd,null===geometry.boundingSphere&&geometry.computeBoundingSphere(),_sphere.copy(geometry.boundingSphere).applyMatrix4(matrixWorld),worldUnits)sphereMargin=.5*_lineWidth;else{sphereMargin=getWorldSpaceHalfWidth(camera,Math.max(camera.near,_sphere.distanceToPoint(_ray.origin)),material.resolution)}if(_sphere.radius+=sphereMargin,!1!==_ray.intersectsSphere(_sphere)){if(null===geometry.boundingBox&&geometry.computeBoundingBox(),LineSegments2_box.copy(geometry.boundingBox).applyMatrix4(matrixWorld),worldUnits)boxMargin=.5*_lineWidth;else{boxMargin=getWorldSpaceHalfWidth(camera,Math.max(camera.near,LineSegments2_box.distanceToPoint(_ray.origin)),material.resolution)}LineSegments2_box.expandByScalar(boxMargin),!1!==_ray.intersectsBox(LineSegments2_box)&&(worldUnits?function raycastWorldUnits(lineSegments,intersects){for(let i=0,l=_instanceStart.count;i<l;i++){_line.start.fromBufferAttribute(_instanceStart,i),_line.end.fromBufferAttribute(_instanceEnd,i);const pointOnLine=new three_module.Vector3,point=new three_module.Vector3;_ray.distanceSqToSegment(_line.start,_line.end,point,pointOnLine),point.distanceTo(pointOnLine)<.5*_lineWidth&&intersects.push({point,pointOnLine,distance:_ray.origin.distanceTo(point),object:lineSegments,face:null,faceIndex:i,uv:null,uv2:null})}}(this,intersects):function raycastScreenSpace(lineSegments,camera,intersects){const projectionMatrix=camera.projectionMatrix,resolution=lineSegments.material.resolution,matrixWorld=lineSegments.matrixWorld,geometry=lineSegments.geometry,instanceStart=geometry.attributes.instanceStart,instanceEnd=geometry.attributes.instanceEnd,near=-camera.near;_ray.at(1,_ssOrigin),_ssOrigin.w=1,_ssOrigin.applyMatrix4(camera.matrixWorldInverse),_ssOrigin.applyMatrix4(projectionMatrix),_ssOrigin.multiplyScalar(1/_ssOrigin.w),_ssOrigin.x*=resolution.x/2,_ssOrigin.y*=resolution.y/2,_ssOrigin.z=0,_ssOrigin3.copy(_ssOrigin),_mvMatrix.multiplyMatrices(camera.matrixWorldInverse,matrixWorld);for(let i=0,l=instanceStart.count;i<l;i++){if(_start4.fromBufferAttribute(instanceStart,i),_end4.fromBufferAttribute(instanceEnd,i),_start4.w=1,_end4.w=1,_start4.applyMatrix4(_mvMatrix),_end4.applyMatrix4(_mvMatrix),_start4.z>near&&_end4.z>near)continue;if(_start4.z>near){const deltaDist=_start4.z-_end4.z,t=(_start4.z-near)/deltaDist;_start4.lerp(_end4,t)}else if(_end4.z>near){const deltaDist=_end4.z-_start4.z,t=(_end4.z-near)/deltaDist;_end4.lerp(_start4,t)}_start4.applyMatrix4(projectionMatrix),_end4.applyMatrix4(projectionMatrix),_start4.multiplyScalar(1/_start4.w),_end4.multiplyScalar(1/_end4.w),_start4.x*=resolution.x/2,_start4.y*=resolution.y/2,_end4.x*=resolution.x/2,_end4.y*=resolution.y/2,_line.start.copy(_start4),_line.start.z=0,_line.end.copy(_end4),_line.end.z=0;const param=_line.closestPointToPointParameter(_ssOrigin3,!0);_line.at(param,_closestPoint);const zPos=three_module.MathUtils.lerp(_start4.z,_end4.z,param),isInClipSpace=zPos>=-1&&zPos<=1,isInside=_ssOrigin3.distanceTo(_closestPoint)<.5*_lineWidth;if(isInClipSpace&&isInside){_line.start.fromBufferAttribute(instanceStart,i),_line.end.fromBufferAttribute(instanceEnd,i),_line.start.applyMatrix4(matrixWorld),_line.end.applyMatrix4(matrixWorld);const pointOnLine=new three_module.Vector3,point=new three_module.Vector3;_ray.distanceSqToSegment(_line.start,_line.end,point,pointOnLine),intersects.push({point,pointOnLine,distance:_ray.origin.distanceTo(point),object:lineSegments,face:null,faceIndex:i,uv:null,uv2:null})}}}(this,camera,intersects))}}}class Line2 extends LineSegments2{constructor(geometry=new LineGeometry,material=new LineMaterial({color:16777215*Math.random()})){super(geometry,material),this.isLine2=!0,this.type="Line2"}}class TextGeometry extends three_module.ExtrudeGeometry{constructor(text,parameters={}){const{bevelEnabled=!1,bevelSize=8,bevelThickness=10,font,height=50,size=100,lineHeight=1,letterSpacing=0,...rest}=parameters;if(void 0===font)super();else{super(font.generateShapes(text,size,{lineHeight,letterSpacing}),{...rest,bevelEnabled,bevelSize,bevelThickness,depth:height})}this.type="TextGeometry"}}var __defProp=Object.defineProperty,__publicField=(obj,key,value)=>(((obj,key,value)=>{key in obj?__defProp(obj,key,{enumerable:!0,configurable:!0,writable:!0,value}):obj[key]=value})(obj,"symbol"!=typeof key?key+"":key,value),value);class FontLoader extends three_module.Loader{constructor(manager){super(manager)}load(url,onLoad,onProgress,onError){const loader=new three_module.FileLoader(this.manager);loader.setPath(this.path),loader.setRequestHeader(this.requestHeader),loader.setWithCredentials(this.withCredentials),loader.load(url,(response=>{if("string"!=typeof response)throw new Error("unsupported data type");const json=JSON.parse(response),font=this.parse(json);onLoad&&onLoad(font)}),onProgress,onError)}loadAsync(url,onProgress){return super.loadAsync(url,onProgress)}parse(json){return new Font(json)}}class Font{constructor(data){__publicField(this,"data"),this.data=data}generateShapes(text,size=100,_options){const shapes=[],options={letterSpacing:0,lineHeight:1,..._options},paths=function createPaths(text,size,data,options){const chars=Array.from(text),scale=size/data.resolution,line_height=(data.boundingBox.yMax-data.boundingBox.yMin+data.underlineThickness)*scale,paths=[];let offsetX=0,offsetY=0;for(let i=0;i<chars.length;i++){const char=chars[i];if("\n"===char)offsetX=0,offsetY-=line_height*options.lineHeight;else{const ret=createPath(char,scale,offsetX,offsetY,data);ret&&(offsetX+=ret.offsetX+options.letterSpacing,paths.push(ret.path))}}return paths}(text,size,this.data,options);for(let p=0,pl=paths.length;p<pl;p++)Array.prototype.push.apply(shapes,paths[p].toShapes(!1));return shapes}}function createPath(char,scale,offsetX,offsetY,data){const glyph=data.glyphs[char]||data.glyphs["?"];if(!glyph)return void console.error('THREE.Font: character "'+char+'" does not exists in font family '+data.familyName+".");const path=new three_module.ShapePath;let x,y,cpx,cpy,cpx1,cpy1,cpx2,cpy2;if(glyph.o){const outline=glyph._cachedOutline||(glyph._cachedOutline=glyph.o.split(" "));for(let i=0,l=outline.length;i<l;){switch(outline[i++]){case"m":x=parseInt(outline[i++])*scale+offsetX,y=parseInt(outline[i++])*scale+offsetY,path.moveTo(x,y);break;case"l":x=parseInt(outline[i++])*scale+offsetX,y=parseInt(outline[i++])*scale+offsetY,path.lineTo(x,y);break;case"q":cpx=parseInt(outline[i++])*scale+offsetX,cpy=parseInt(outline[i++])*scale+offsetY,cpx1=parseInt(outline[i++])*scale+offsetX,cpy1=parseInt(outline[i++])*scale+offsetY,path.quadraticCurveTo(cpx1,cpy1,cpx,cpy);break;case"b":cpx=parseInt(outline[i++])*scale+offsetX,cpy=parseInt(outline[i++])*scale+offsetY,cpx1=parseInt(outline[i++])*scale+offsetX,cpy1=parseInt(outline[i++])*scale+offsetY,cpx2=parseInt(outline[i++])*scale+offsetX,cpy2=parseInt(outline[i++])*scale+offsetY,path.bezierCurveTo(cpx1,cpy1,cpx2,cpy2,cpx,cpy)}}}return{offsetX:glyph.ha*scale,path}}__publicField(Font,"isFont"),__publicField(Font,"type");var common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),util_isObservable=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/isObservable.js"),operators_takeUntil=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js");class NgtsBakeShadows extends angular_three.fj{constructor(){super(...arguments),this.store=(0,core.inject)(angular_three.PW)}ngOnInit(){this.effect(this.store.select("gl"),(gl=>(gl.shadowMap.autoUpdate=!1,gl.shadowMap.needsUpdate=!0,()=>{gl.shadowMap.autoUpdate=gl.shadowMap.needsUpdate=!0})))}static#_=this.ɵfac=(()=>{let ɵNgtsBakeShadows_BaseFactory;return function NgtsBakeShadows_Factory(__ngFactoryType__){return(ɵNgtsBakeShadows_BaseFactory||(ɵNgtsBakeShadows_BaseFactory=core["ɵɵgetInheritedFactory"](NgtsBakeShadows)))(__ngFactoryType__||NgtsBakeShadows)}})();static#_2=this.ɵdir=core["ɵɵdefineDirective"]({type:NgtsBakeShadows,selectors:[["ngts-bake-shadows"]],standalone:!0,features:[core["ɵɵInheritDefinitionFeature"]]})}function injectNgtsFBO(paramsFactory){const store=(0,core.inject)(angular_three.PW),targetRef=(0,angular_three.sY)(),{destroy$,cdr}=(0,angular_three.TV)((()=>{targetRef.nativeElement?.dispose()})),params=paramsFactory({});return((0,util_isObservable.A)(params)?params:(0,observable_of.of)(params)).pipe((0,operators_takeUntil.Q)(destroy$)).subscribe((({width,height,settings})=>{const{gl,size,viewport}=store.get(),_width="number"==typeof width?width:size.width*viewport.dpr,_height="number"==typeof height?height:size.height*viewport.dpr,_settings=("number"==typeof width?settings:width)||{},{samples=0,depth,...targetSettings}=_settings;if(!targetRef.nativeElement){const target=new three_module.WebGLRenderTarget(_width,_height,{minFilter:three_module.LinearFilter,magFilter:three_module.LinearFilter,encoding:gl.outputEncoding,type:three_module.HalfFloatType,...targetSettings});depth&&(target.depthTexture=new three_module.DepthTexture(_width,_height,three_module.FloatType)),target.samples=samples,targetRef.nativeElement=target}targetRef.nativeElement.setSize(_width,_height),samples&&(targetRef.nativeElement.samples=samples),(0,angular_three.UR)(cdr)})),targetRef}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtsBakeShadows,[{type:core.Directive,args:[{selector:"ngts-bake-shadows",standalone:!0}]}],null,null);const _c0=["group"],_c1=(a0,a1)=>({fbo:a0,group:a1});function NgtsCubeCamera_ngt_cube_camera_1_Template(rf,ctx){if(1&rf&&core["ɵɵelement"](0,"ngt-cube-camera",4),2&rf){const ctx_r0=core["ɵɵnextContext"]();core["ɵɵproperty"]("ref",ctx_r0.cameraRef)}}function NgtsCubeCamera_ng_container_4_Template(rf,ctx){if(1&rf&&core["ɵɵelementContainer"](0,5),2&rf){const ctx_r0=core["ɵɵnextContext"](),group_r2=core["ɵɵreference"](3);core["ɵɵproperty"]("ngTemplateOutlet",ctx_r0.cameraContent.template)("ngTemplateOutletContext",core["ɵɵpureFunction2"](2,_c1,ctx_r0.get("fbo").texture,group_r2))}}function NgtsOrthographicCamera_ng_container_5_Template(rf,ctx){if(1&rf&&core["ɵɵelementContainer"](0,4),2&rf){const ctx_r0=core["ɵɵnextContext"]();core["ɵɵproperty"]("ngTemplateOutlet",ctx_r0.cameraContent.template)}}function NgtsOrthographicCamera_ngt_group_6_ng_container_2_Template(rf,ctx){1&rf&&core["ɵɵelementContainer"](0)}function NgtsOrthographicCamera_ngt_group_6_Template(rf,ctx){if(1&rf&&(core["ɵɵelementStart"](0,"ngt-group",null,0),core["ɵɵtemplate"](2,NgtsOrthographicCamera_ngt_group_6_ng_container_2_Template,1,0,"ng-container",5),core["ɵɵelementEnd"]()),2&rf){const group_r2=core["ɵɵreference"](1),ctx_r0=core["ɵɵnextContext"]();core["ɵɵadvance"](2),core["ɵɵproperty"]("ngTemplateOutlet",ctx_r0.cameraContent.template)("ngTemplateOutletContext",core["ɵɵpureFunction2"](2,_c1,ctx_r0.fboRef.nativeElement,group_r2))}}function NgtsPerspectiveCamera_ng_container_1_Template(rf,ctx){if(1&rf&&core["ɵɵelementContainer"](0,4),2&rf){const ctx_r0=core["ɵɵnextContext"]();core["ɵɵproperty"]("ngTemplateOutlet",ctx_r0.cameraContent.template)}}function NgtsPerspectiveCamera_ngt_group_2_ng_container_2_Template(rf,ctx){1&rf&&core["ɵɵelementContainer"](0)}function NgtsPerspectiveCamera_ngt_group_2_Template(rf,ctx){if(1&rf&&(core["ɵɵelementStart"](0,"ngt-group",null,0),core["ɵɵtemplate"](2,NgtsPerspectiveCamera_ngt_group_2_ng_container_2_Template,1,0,"ng-container",5),core["ɵɵelementEnd"]()),2&rf){const group_r2=core["ɵɵreference"](1),ctx_r0=core["ɵɵnextContext"]();core["ɵɵadvance"](2),core["ɵɵproperty"]("ngTemplateOutlet",ctx_r0.cameraContent.template)("ngTemplateOutletContext",core["ɵɵpureFunction2"](2,_c1,ctx_r0.fboRef.nativeElement,group_r2))}}class NgtsCameraContent{constructor(){this.template=(0,core.inject)(core.TemplateRef),this.ngtsCameraContent=""}static ngTemplateContextGuard(_,ctx){return!0}static#_=this.ɵfac=function NgtsCameraContent_Factory(__ngFactoryType__){return new(__ngFactoryType__||NgtsCameraContent)};static#_2=this.ɵdir=core["ɵɵdefineDirective"]({type:NgtsCameraContent,selectors:[["ng-template","ngtsCameraContent",""]],inputs:{ngtsCameraContent:"ngtsCameraContent"},standalone:!0})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtsCameraContent,[{type:core.Directive,args:[{selector:"ng-template[ngtsCameraContent]",standalone:!0}]}],null,{ngtsCameraContent:[{type:core.Input}]}),(0,angular_three.X$)({Group:three_module.Group,CubeCamera:three_module.CubeCamera});class NgtsCubeCamera extends angular_three.fj{set frames(frames){this.set({frames})}set resolution(resolution){this.set({resolution})}set near(near){this.set({near})}set far(far){this.set({far})}set envMap(envMap){this.set({envMap})}set fog(fog){this.set({fog})}initialize(){super.initialize(),this.set({frames:1/0,resolution:256,near:.1,far:1e3})}constructor(){super(),this.cameraRef=(0,angular_three.sY)(),this.store=(0,core.inject)(angular_three.PW),this.connect("fbo",this.select("resolution").pipe((0,operators_map.T)((resolution=>{const fbo=new three_module.WebGLCubeRenderTarget(resolution);return fbo.texture.encoding=this.store.get("gl").outputEncoding,fbo.texture.type=three_module.HalfFloatType,fbo})))),this.connect("cameraArgs",(0,observable_combineLatest.z)([this.select("near"),this.select("far"),this.select("fbo")]));let originalFog,originalBackground,count=0;(0,angular_three.bC)((({scene,gl})=>{const{frames,envMap,fog}=this.get();envMap&&this.cameraRef.nativeElement&&this.groupRef.nativeElement&&(frames===1/0||count<frames)&&(this.groupRef.nativeElement.visible=!1,originalFog=scene.fog,originalBackground=scene.background,scene.background=envMap||originalBackground,scene.fog=fog||originalFog,this.cameraRef.nativeElement.update(gl,scene),scene.fog=originalFog,scene.background=originalBackground,this.groupRef.nativeElement.visible=!0,count++)}))}static#_=this.ɵfac=function NgtsCubeCamera_Factory(__ngFactoryType__){return new(__ngFactoryType__||NgtsCubeCamera)};static#_2=this.ɵcmp=core["ɵɵdefineComponent"]({type:NgtsCubeCamera,selectors:[["ngts-cube-camera"]],contentQueries:function NgtsCubeCamera_ContentQueries(rf,ctx,dirIndex){if(1&rf&&core["ɵɵcontentQuery"](dirIndex,NgtsCameraContent,5),2&rf){let _t;core["ɵɵqueryRefresh"](_t=core["ɵɵloadQuery"]())&&(ctx.cameraContent=_t.first)}},viewQuery:function NgtsCubeCamera_Query(rf,ctx){if(1&rf&&core["ɵɵviewQuery"](_c0,7),2&rf){let _t;core["ɵɵqueryRefresh"](_t=core["ɵɵloadQuery"]())&&(ctx.groupRef=_t.first)}},inputs:{frames:"frames",resolution:"resolution",near:"near",far:"far",envMap:"envMap",fog:"fog"},standalone:!0,features:[core["ɵɵInheritDefinitionFeature"],core["ɵɵStandaloneFeature"]],decls:5,vars:2,consts:[["group",""],["ngtCompound",""],[3,"ref",4,"args"],[3,"ngTemplateOutlet","ngTemplateOutletContext",4,"ngIf"],[3,"ref"],[3,"ngTemplateOutlet","ngTemplateOutletContext"]],template:function NgtsCubeCamera_Template(rf,ctx){1&rf&&(core["ɵɵelementStart"](0,"ngt-group",1),core["ɵɵtemplate"](1,NgtsCubeCamera_ngt_cube_camera_1_Template,1,1,"ngt-cube-camera",2),core["ɵɵelementStart"](2,"ngt-group",null,0),core["ɵɵtemplate"](4,NgtsCubeCamera_ng_container_4_Template,1,5,"ng-container",3),core["ɵɵelementEnd"]()()),2&rf&&(core["ɵɵadvance"](),core["ɵɵproperty"]("args",ctx.get("cameraArgs")),core["ɵɵadvance"](3),core["ɵɵproperty"]("ngIf",ctx.cameraContent&&ctx.cameraContent.ngtsCameraContent&&ctx.get("fbo")))},dependencies:[common.NgIf,common.NgTemplateOutlet,angular_three.nQ],encapsulation:2})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtsCubeCamera,[{type:core.Component,args:[{selector:"ngts-cube-camera",standalone:!0,template:'\n        <ngt-group ngtCompound>\n            <ngt-cube-camera [ref]="cameraRef" *args="get(\'cameraArgs\')" />\n            <ngt-group #group>\n                <ng-container\n                    *ngIf="cameraContent && cameraContent.ngtsCameraContent && get(\'fbo\')"\n                    [ngTemplateOutlet]="cameraContent.template"\n                    [ngTemplateOutletContext]="{ fbo: get(\'fbo\').texture, group }"\n                />\n            </ngt-group>\n        </ngt-group>\n    ',imports:[common.NgIf,common.NgTemplateOutlet,angular_three.nQ],schemas:[core.CUSTOM_ELEMENTS_SCHEMA]}]}],(function(){return[]}),{groupRef:[{type:core.ViewChild,args:["group",{static:!0}]}],cameraContent:[{type:core.ContentChild,args:[NgtsCameraContent]}],frames:[{type:core.Input}],resolution:[{type:core.Input}],near:[{type:core.Input}],far:[{type:core.Input}],envMap:[{type:core.Input}],fog:[{type:core.Input}]});class NgtsCamera extends angular_three.fj{constructor(){super(...arguments),this.cameraRef=(0,angular_three.sY)(),this.store=(0,core.inject)(angular_three.PW),this.fboRef=injectNgtsFBO((()=>this.select("resolution").pipe((0,operators_map.T)((resolution=>({width:resolution}))))))}set makeDefault(makeDefault){this.set({makeDefault})}set manual(manual){this.set({manual})}set frames(frames){this.set({frames})}set resolution(resolution){this.set({resolution})}set envMap(envMap){this.set({envMap})}initialize(){super.initialize(),this.set({resolution:256,frames:1/0,makeDefault:!1,manual:!1})}ngOnInit(){this.hold(this.cameraRef.$,(camera=>{camera.updateProjectionMatrix(),this.setDefaultCamera(),this.updateProjectionMatrix()}))}setDefaultCamera(){this.effect((0,observable_combineLatest.z)([this.cameraRef.$,this.select("makeDefault")]),(([camera,makeDefault])=>{if(makeDefault){const{camera:oldCamera}=this.store.get();return this.store.set({camera}),()=>{this.store.set({camera:oldCamera})}}}))}updateProjectionMatrix(){this.effect((0,observable_combineLatest.z)([this.cameraRef.$,this.select("manual")]),(([camera,manual])=>{!manual&&camera&&camera.updateProjectionMatrix()}))}static#_=this.ɵfac=(()=>{let ɵNgtsCamera_BaseFactory;return function NgtsCamera_Factory(__ngFactoryType__){return(ɵNgtsCamera_BaseFactory||(ɵNgtsCamera_BaseFactory=core["ɵɵgetInheritedFactory"](NgtsCamera)))(__ngFactoryType__||NgtsCamera)}})();static#_2=this.ɵdir=core["ɵɵdefineDirective"]({type:NgtsCamera,inputs:{makeDefault:"makeDefault",manual:"manual",frames:"frames",resolution:"resolution",envMap:"envMap",cameraRef:"cameraRef"},features:[core["ɵɵInheritDefinitionFeature"]]})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtsCamera,[{type:core.Directive}],null,{makeDefault:[{type:core.Input}],manual:[{type:core.Input}],frames:[{type:core.Input}],resolution:[{type:core.Input}],envMap:[{type:core.Input}],cameraRef:[{type:core.Input}]}),(0,angular_three.X$)({OrthographicCamera:three_module.OrthographicCamera,Group:three_module.Group});class NgtsOrthographicCamera extends NgtsCamera{constructor(){super(...arguments),this.left$=(0,observable_combineLatest.z)([this.select("left"),this.store.select("size")]).pipe((0,operators_map.T)((([left,size])=>left||size.width/-2))),this.right$=(0,observable_combineLatest.z)([this.select("right"),this.store.select("size")]).pipe((0,operators_map.T)((([right,size])=>right||size.width/2))),this.top$=(0,observable_combineLatest.z)([this.select("top"),this.store.select("size")]).pipe((0,operators_map.T)((([top,size])=>top||size.height/2))),this.bottom$=(0,observable_combineLatest.z)([this.select("bottom"),this.store.select("size")]).pipe((0,operators_map.T)((([bottom,size])=>bottom||size.height/-2)))}set left(left){this.set({left})}set right(right){this.set({right})}set top(top){this.set({top})}set bottom(bottom){this.set({bottom})}initialize(){super.initialize(),this.set({left:0,right:0,top:0,bottom:0})}static#_=this.ɵfac=(()=>{let ɵNgtsOrthographicCamera_BaseFactory;return function NgtsOrthographicCamera_Factory(__ngFactoryType__){return(ɵNgtsOrthographicCamera_BaseFactory||(ɵNgtsOrthographicCamera_BaseFactory=core["ɵɵgetInheritedFactory"](NgtsOrthographicCamera)))(__ngFactoryType__||NgtsOrthographicCamera)}})();static#_2=this.ɵcmp=core["ɵɵdefineComponent"]({type:NgtsOrthographicCamera,selectors:[["ngts-orthographic-camera"]],contentQueries:function NgtsOrthographicCamera_ContentQueries(rf,ctx,dirIndex){if(1&rf&&core["ɵɵcontentQuery"](dirIndex,NgtsCameraContent,5),2&rf){let _t;core["ɵɵqueryRefresh"](_t=core["ɵɵloadQuery"]())&&(ctx.cameraContent=_t.first)}},inputs:{left:"left",right:"right",top:"top",bottom:"bottom"},standalone:!0,features:[core["ɵɵInheritDefinitionFeature"],core["ɵɵStandaloneFeature"]],decls:7,vars:15,consts:[["group",""],["ngtCompound","",3,"ref","left","right","top","bottom"],[3,"ngTemplateOutlet",4,"ngIf"],[4,"ngIf"],[3,"ngTemplateOutlet"],[4,"ngTemplateOutlet","ngTemplateOutletContext"]],template:function NgtsOrthographicCamera_Template(rf,ctx){1&rf&&(core["ɵɵelementStart"](0,"ngt-orthographic-camera",1),core["ɵɵpipe"](1,"ngtPush"),core["ɵɵpipe"](2,"ngtPush"),core["ɵɵpipe"](3,"ngtPush"),core["ɵɵpipe"](4,"ngtPush"),core["ɵɵtemplate"](5,NgtsOrthographicCamera_ng_container_5_Template,1,1,"ng-container",2),core["ɵɵelementEnd"](),core["ɵɵtemplate"](6,NgtsOrthographicCamera_ngt_group_6_Template,3,5,"ngt-group",3)),2&rf&&(core["ɵɵproperty"]("ref",ctx.cameraRef)("left",core["ɵɵpipeBind1"](1,7,ctx.left$))("right",core["ɵɵpipeBind1"](2,9,ctx.right$))("top",core["ɵɵpipeBind1"](3,11,ctx.top$))("bottom",core["ɵɵpipeBind1"](4,13,ctx.bottom$)),core["ɵɵadvance"](5),core["ɵɵproperty"]("ngIf",ctx.cameraContent&&!ctx.cameraContent.ngtsCameraContent),core["ɵɵadvance"](),core["ɵɵproperty"]("ngIf",ctx.cameraContent&&ctx.cameraContent.ngtsCameraContent))},dependencies:[common.NgIf,common.NgTemplateOutlet,angular_three.mp],encapsulation:2})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtsOrthographicCamera,[{type:core.Component,args:[{selector:"ngts-orthographic-camera",standalone:!0,template:'\n        <ngt-orthographic-camera\n            ngtCompound\n            [ref]="cameraRef"\n            [left]="left$ | ngtPush"\n            [right]="right$ | ngtPush"\n            [top]="top$ | ngtPush"\n            [bottom]="bottom$ | ngtPush"\n        >\n            <ng-container\n                *ngIf="cameraContent && !cameraContent.ngtsCameraContent"\n                [ngTemplateOutlet]="cameraContent.template"\n            />\n        </ngt-orthographic-camera>\n        <ngt-group #group *ngIf="cameraContent && cameraContent.ngtsCameraContent">\n            <ng-container *ngTemplateOutlet="cameraContent.template; context: { fbo: fboRef.nativeElement, group }" />\n        </ngt-group>\n    ',imports:[common.NgIf,common.NgTemplateOutlet,angular_three.mp],schemas:[core.CUSTOM_ELEMENTS_SCHEMA]}]}],null,{cameraContent:[{type:core.ContentChild,args:[NgtsCameraContent]}],left:[{type:core.Input}],right:[{type:core.Input}],top:[{type:core.Input}],bottom:[{type:core.Input}]}),(0,angular_three.X$)({PerspectiveCamera:three_module.PerspectiveCamera,Group:three_module.Group});class NgtsPerspectiveCamera extends NgtsCamera{static#_=this.ɵfac=(()=>{let ɵNgtsPerspectiveCamera_BaseFactory;return function NgtsPerspectiveCamera_Factory(__ngFactoryType__){return(ɵNgtsPerspectiveCamera_BaseFactory||(ɵNgtsPerspectiveCamera_BaseFactory=core["ɵɵgetInheritedFactory"](NgtsPerspectiveCamera)))(__ngFactoryType__||NgtsPerspectiveCamera)}})();static#_2=this.ɵcmp=core["ɵɵdefineComponent"]({type:NgtsPerspectiveCamera,selectors:[["ngts-perspective-camera"]],contentQueries:function NgtsPerspectiveCamera_ContentQueries(rf,ctx,dirIndex){if(1&rf&&core["ɵɵcontentQuery"](dirIndex,NgtsCameraContent,5),2&rf){let _t;core["ɵɵqueryRefresh"](_t=core["ɵɵloadQuery"]())&&(ctx.cameraContent=_t.first)}},standalone:!0,features:[core["ɵɵInheritDefinitionFeature"],core["ɵɵStandaloneFeature"]],decls:3,vars:3,consts:[["group",""],["ngtCompound","",3,"ref"],[3,"ngTemplateOutlet",4,"ngIf"],[4,"ngIf"],[3,"ngTemplateOutlet"],[4,"ngTemplateOutlet","ngTemplateOutletContext"]],template:function NgtsPerspectiveCamera_Template(rf,ctx){1&rf&&(core["ɵɵelementStart"](0,"ngt-perspective-camera",1),core["ɵɵtemplate"](1,NgtsPerspectiveCamera_ng_container_1_Template,1,1,"ng-container",2),core["ɵɵelementEnd"](),core["ɵɵtemplate"](2,NgtsPerspectiveCamera_ngt_group_2_Template,3,5,"ngt-group",3)),2&rf&&(core["ɵɵproperty"]("ref",ctx.cameraRef),core["ɵɵadvance"](),core["ɵɵproperty"]("ngIf",ctx.cameraContent&&!ctx.cameraContent.ngtsCameraContent),core["ɵɵadvance"](),core["ɵɵproperty"]("ngIf",ctx.cameraContent&&ctx.cameraContent.ngtsCameraContent))},dependencies:[common.NgIf,common.NgTemplateOutlet],encapsulation:2})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtsPerspectiveCamera,[{type:core.Component,args:[{selector:"ngts-perspective-camera",standalone:!0,template:'\n        <ngt-perspective-camera [ref]="cameraRef" ngtCompound>\n            <ng-container\n                *ngIf="cameraContent && !cameraContent.ngtsCameraContent"\n                [ngTemplateOutlet]="cameraContent.template"\n            />\n        </ngt-perspective-camera>\n        <ngt-group #group *ngIf="cameraContent && cameraContent.ngtsCameraContent">\n            <ng-container *ngTemplateOutlet="cameraContent.template; context: { fbo: fboRef.nativeElement, group }" />\n        </ngt-group>\n    ',imports:[common.NgIf,common.NgTemplateOutlet],schemas:[core.CUSTOM_ELEMENTS_SCHEMA]}]}],null,{cameraContent:[{type:core.ContentChild,args:[NgtsCameraContent]}]});var Subject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subject.js"),merge=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/merge.js");function actionProxyHandler({subjectMap,transformsMap,effectMap,errorHandler=null}){function getEventEmitter(prop){return subjectMap[prop]||(subjectMap[prop]=new Subject.B),subjectMap[prop]}function dispatch(value,prop){subjectMap[prop]=subjectMap[prop]||new Subject.B;try{const val=transformsMap&&transformsMap[prop]?transformsMap[prop](value):value;subjectMap[prop].next(val)}catch(err){errorHandler?.handleError(err)}}return{apply(_,__,props){props.forEach((slice=>Object.entries(slice).forEach((([k,v])=>dispatch(v,k)))))},get(_,property){const prop=property;if("$"===prop.toString().split("").pop()){if(1===prop.toString().length)return props=>(0,merge.h)(...props.map((k=>getEventEmitter(k))));return getEventEmitter(prop.toString().slice(0,-1))}if(prop.toString().startsWith("on")){const slicedPropName=prop.toString().slice(2),propName=slicedPropName.charAt(0).toLowerCase()+slicedPropName.slice(1);return(behaviour,sf)=>{const sub=getEventEmitter(propName).pipe(behaviour).subscribe(sf);return effectMap[propName]=sub,()=>sub.unsubscribe()}}return args=>{dispatch(args,prop)}},set(){throw new Error("No setters available. To emit call the property name.")}}}class RxActionFactory{errorHandler;subjects=[];constructor(errorHandler){this.errorHandler=errorHandler}create(transforms){const subjectMap={};return this.subjects.push(subjectMap),new Proxy((function signals(){}),actionProxyHandler({subjectMap,effectMap:{},transformsMap:transforms,errorHandler:this.errorHandler??null}))}destroy(){this.subjects.forEach((s=>{Object.values(s).forEach((subject=>subject.complete()))}))}ngOnDestroy(){this.destroy()}static ɵfac=function RxActionFactory_Factory(__ngFactoryType__){return new(__ngFactoryType__||RxActionFactory)(core["ɵɵinject"](core.ErrorHandler,8))};static ɵprov=core["ɵɵdefineInjectable"]({token:RxActionFactory,factory:RxActionFactory.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](RxActionFactory,[{type:core.Injectable}],(()=>[{type:core.ErrorHandler,decorators:[{type:core.Optional}]}]),null);__webpack_require__("./node_modules/process/browser.js");function workerBootstrap(){var modules=Object.create(null);function registerModule(ref,callback){var id=ref.id,name=ref.name,dependencies=ref.dependencies;void 0===dependencies&&(dependencies=[]);var init=ref.init;void 0===init&&(init=function(){});var getTransferables=ref.getTransferables;if(void 0===getTransferables&&(getTransferables=null),!modules[id])try{dependencies=dependencies.map((function(dep){return dep&&dep.isWorkerModule&&(registerModule(dep,(function(depResult){if(depResult instanceof Error)throw depResult})),dep=modules[dep.id].value),dep})),init=rehydrate("<"+name+">.init",init),getTransferables&&(getTransferables=rehydrate("<"+name+">.getTransferables",getTransferables));var value=null;"function"==typeof init?value=init.apply(void 0,dependencies):console.error("worker module init function failed to rehydrate"),modules[id]={id,value,getTransferables},callback(value)}catch(err){err&&err.noLog||console.error(err),callback(err)}}function rehydrate(name,str){var result=void 0;self.troikaDefine=function(r){return result=r};var url=URL.createObjectURL(new Blob(["/** "+name.replace(/\*/g,"")+" **/\n\ntroikaDefine(\n"+str+"\n)"],{type:"application/javascript"}));try{importScripts(url)}catch(err){console.error(err)}return URL.revokeObjectURL(url),delete self.troikaDefine,result}self.addEventListener("message",(function(e){var ref=e.data,messageId=ref.messageId,action=ref.action,data=ref.data;try{"registerModule"===action&&registerModule(data,(function(result){result instanceof Error?postMessage({messageId,success:!1,error:result.message}):postMessage({messageId,success:!0,result:{isCallable:"function"==typeof result}})})),"callModule"===action&&function callModule(ref,callback){var ref$1,id=ref.id,args=ref.args;modules[id]&&"function"==typeof modules[id].value||callback(new Error("Worker module "+id+": not found or its 'init' did not return a function"));try{var result=(ref$1=modules[id]).value.apply(ref$1,args);result&&"function"==typeof result.then?result.then(handleResult,(function(rej){return callback(rej instanceof Error?rej:new Error(""+rej))})):handleResult(result)}catch(err){callback(err)}function handleResult(result){try{var tx=modules[id].getTransferables&&modules[id].getTransferables(result);tx&&Array.isArray(tx)&&tx.length||(tx=void 0),callback(result,tx)}catch(err){console.error(err),callback(err)}}}(data,(function(result,transferables){result instanceof Error?postMessage({messageId,success:!1,error:result.message}):postMessage({messageId,success:!0,result},transferables||void 0)}))}catch(err){postMessage({messageId,success:!1,error:err.stack})}}))}var supportsWorkers=function(){var supported=!1;if("undefined"!=typeof window&&void 0!==window.document)try{new Worker(URL.createObjectURL(new Blob([""],{type:"application/javascript"}))).terminate(),supported=!0}catch(err){console.log("Troika createWorkerModule: web workers not allowed; falling back to main thread execution. Cause: ["+err.message+"]")}return supportsWorkers=function(){return supported},supported},_workerModuleId=0,_messageId=0,_allowInitAsString=!1,workers=Object.create(null),registeredModules=Object.create(null),openRequests=Object.create(null);function defineWorkerModule(options){if(!(options&&"function"==typeof options.init||_allowInitAsString))throw new Error("requires `options.init` function");var dependencies=options.dependencies,init=options.init,getTransferables=options.getTransferables,workerId=options.workerId;if(!supportsWorkers())return function defineMainThreadModule(options){var moduleFunc=function(){for(var args=[],len=arguments.length;len--;)args[len]=arguments[len];return moduleFunc._getInitResult().then((function(initResult){if("function"==typeof initResult)return initResult.apply(void 0,args);throw new Error("Worker module function was called but `init` did not return a callable function")}))};return moduleFunc._getInitResult=function(){var dependencies=options.dependencies,init=options.init;dependencies=Array.isArray(dependencies)?dependencies.map((function(dep){return dep&&dep._getInitResult?dep._getInitResult():dep})):[];var initPromise=Promise.all(dependencies).then((function(deps){return init.apply(null,deps)}));return moduleFunc._getInitResult=function(){return initPromise},initPromise},moduleFunc}(options);null==workerId&&(workerId="#default");var id="workerModule"+ ++_workerModuleId,name=options.name||id,registrationPromise=null;function moduleFunc(){for(var args=[],len=arguments.length;len--;)args[len]=arguments[len];if(!registrationPromise){registrationPromise=callWorker(workerId,"registerModule",moduleFunc.workerModuleData);var unregister=function(){registrationPromise=null,registeredModules[workerId].delete(unregister)};(registeredModules[workerId]||(registeredModules[workerId]=new Set)).add(unregister)}return registrationPromise.then((function(ref){if(ref.isCallable)return callWorker(workerId,"callModule",{id,args});throw new Error("Worker module function was called but `init` did not return a callable function")}))}return dependencies=dependencies&&dependencies.map((function(dep){return"function"!=typeof dep||dep.workerModuleData||(_allowInitAsString=!0,dep=defineWorkerModule({workerId,name:"<"+name+"> function dependency: "+dep.name,init:"function(){return (\n"+stringifyFunction(dep)+"\n)}"}),_allowInitAsString=!1),dep&&dep.workerModuleData&&(dep=dep.workerModuleData),dep})),moduleFunc.workerModuleData={isWorkerModule:!0,id,name,dependencies,init:stringifyFunction(init),getTransferables:getTransferables&&stringifyFunction(getTransferables)},moduleFunc}function stringifyFunction(fn){var str=fn.toString();return!/^function/.test(str)&&/^\w+\s*\(/.test(str)&&(str="function "+str),str}function callWorker(workerId,action,data){return new Promise((function(resolve,reject){var messageId=++_messageId;openRequests[messageId]=function(response){response.success?resolve(response.result):reject(new Error("Error in worker "+action+" call: "+response.error))},function getWorker(workerId){var worker=workers[workerId];if(!worker){var bootstrap=stringifyFunction(workerBootstrap);(worker=workers[workerId]=new Worker(URL.createObjectURL(new Blob(["/** Worker Module Bootstrap: "+workerId.replace(/\*/g,"")+" **/\n\n;("+bootstrap+")()"],{type:"application/javascript"})))).onmessage=function(e){var response=e.data,msgId=response.messageId,callback=openRequests[msgId];if(!callback)throw new Error("WorkerModule response with empty or unknown messageId");delete openRequests[msgId],callback(response)}}return worker}(workerId).postMessage({messageId,action,data})}))}function SDFGenerator(){var exports=function(exports){function pointOnCubicBezier(x0,y0,x1,y1,x2,y2,x3,y3,t,pointOut){var t2=1-t;pointOut.x=t2*t2*t2*x0+3*t2*t2*t*x1+3*t2*t*t*x2+t*t*t*x3,pointOut.y=t2*t2*t2*y0+3*t2*t2*t*y1+3*t2*t*t*y2+t*t*t*y3}function forEachPathCommand(pathString,commandCallback){for(var match,firstX,firstY,prevX,prevY,segmentRE=/([MLQCZ])([^MLQCZ]*)/g;match=segmentRE.exec(pathString);){var args=match[2].replace(/^\s*|\s*$/g,"").split(/[,\s]+/).map((function(v){return parseFloat(v)}));switch(match[1]){case"M":prevX=firstX=args[0],prevY=firstY=args[1];break;case"L":args[0]===prevX&&args[1]===prevY||commandCallback("L",prevX,prevY,prevX=args[0],prevY=args[1]);break;case"Q":commandCallback("Q",prevX,prevY,prevX=args[2],prevY=args[3],args[0],args[1]);break;case"C":commandCallback("C",prevX,prevY,prevX=args[4],prevY=args[5],args[0],args[1],args[2],args[3]);break;case"Z":prevX===firstX&&prevY===firstY||commandCallback("L",prevX,prevY,firstX,firstY)}}}function pathToLineSegments(pathString,segmentCallback,curvePoints){void 0===curvePoints&&(curvePoints=16);var tempPoint={x:0,y:0};forEachPathCommand(pathString,(function(command,startX,startY,endX,endY,ctrl1X,ctrl1Y,ctrl2X,ctrl2Y){switch(command){case"L":segmentCallback(startX,startY,endX,endY);break;case"Q":for(var prevCurveX=startX,prevCurveY=startY,i=1;i<curvePoints;i++)y0=startY,y1=ctrl1Y,y2=endY,t2=void 0,t2=1-(t=i/(curvePoints-1)),(pointOut=tempPoint).x=t2*t2*startX+2*t2*t*ctrl1X+t*t*endX,pointOut.y=t2*t2*y0+2*t2*t*y1+t*t*y2,segmentCallback(prevCurveX,prevCurveY,tempPoint.x,tempPoint.y),prevCurveX=tempPoint.x,prevCurveY=tempPoint.y;break;case"C":for(var prevCurveX$1=startX,prevCurveY$1=startY,i$1=1;i$1<curvePoints;i$1++)pointOnCubicBezier(startX,startY,ctrl1X,ctrl1Y,ctrl2X,ctrl2Y,endX,endY,i$1/(curvePoints-1),tempPoint),segmentCallback(prevCurveX$1,prevCurveY$1,tempPoint.x,tempPoint.y),prevCurveX$1=tempPoint.x,prevCurveY$1=tempPoint.y}var y0,y1,y2,t,pointOut,t2}))}var viewportQuadVertex="precision highp float;attribute vec2 aUV;varying vec2 vUV;void main(){vUV=aUV;gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}",copyTexFragment="precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){gl_FragColor=texture2D(tex,vUV);}",cache=new WeakMap,glContextParams={premultipliedAlpha:!1,preserveDrawingBuffer:!0,antialias:!1,depth:!1};function withWebGLContext(glOrCanvas,callback){var gl=glOrCanvas.getContext?glOrCanvas.getContext("webgl",glContextParams):glOrCanvas,wrapper=cache.get(gl);if(!wrapper){var isWebGL2="undefined"!=typeof WebGL2RenderingContext&&gl instanceof WebGL2RenderingContext,extensions={},programs={},textures={},textureUnit=-1,framebufferStack=[];function getExtension(name){var ext=extensions[name];if(!ext&&!(ext=extensions[name]=gl.getExtension(name)))throw new Error(name+" not supported");return ext}function compileShader(src,type){var shader=gl.createShader(type);return gl.shaderSource(shader,src),gl.compileShader(shader),shader}function withProgram(name,vert,frag,func){if(!programs[name]){var attributes={},uniforms={},program=gl.createProgram();gl.attachShader(program,compileShader(vert,gl.VERTEX_SHADER)),gl.attachShader(program,compileShader(frag,gl.FRAGMENT_SHADER)),gl.linkProgram(program),programs[name]={program,transaction:function transaction(func){gl.useProgram(program),func({setUniform:function setUniform(type,name){for(var values=[],len=arguments.length-2;len-- >0;)values[len]=arguments[len+2];var uniformLoc=uniforms[name]||(uniforms[name]=gl.getUniformLocation(program,name));gl["uniform"+type].apply(gl,[uniformLoc].concat(values))},setAttribute:function setAttribute(name,size,usage,instancingDivisor,data){var attr=attributes[name];attr||(attr=attributes[name]={buf:gl.createBuffer(),loc:gl.getAttribLocation(program,name),data:null}),gl.bindBuffer(gl.ARRAY_BUFFER,attr.buf),gl.vertexAttribPointer(attr.loc,size,gl.FLOAT,!1,0,0),gl.enableVertexAttribArray(attr.loc),isWebGL2?gl.vertexAttribDivisor(attr.loc,instancingDivisor):getExtension("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(attr.loc,instancingDivisor),data!==attr.data&&(gl.bufferData(gl.ARRAY_BUFFER,data,usage),attr.data=data)}})}}}programs[name].transaction(func)}function withTexture(name,func){textureUnit++;try{gl.activeTexture(gl.TEXTURE0+textureUnit);var texture=textures[name];texture||(texture=textures[name]=gl.createTexture(),gl.bindTexture(gl.TEXTURE_2D,texture),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.NEAREST),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.NEAREST)),gl.bindTexture(gl.TEXTURE_2D,texture),func(texture,textureUnit)}finally{textureUnit--}}function withTextureFramebuffer(texture,textureUnit,func){var framebuffer=gl.createFramebuffer();framebufferStack.push(framebuffer),gl.bindFramebuffer(gl.FRAMEBUFFER,framebuffer),gl.activeTexture(gl.TEXTURE0+textureUnit),gl.bindTexture(gl.TEXTURE_2D,texture),gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,gl.TEXTURE_2D,texture,0);try{func(framebuffer)}finally{gl.deleteFramebuffer(framebuffer),gl.bindFramebuffer(gl.FRAMEBUFFER,framebufferStack[--framebufferStack.length-1]||null)}}function handleContextLoss(){extensions={},programs={},textures={},textureUnit=-1,framebufferStack.length=0}gl.canvas.addEventListener("webglcontextlost",(function(e){handleContextLoss(),e.preventDefault()}),!1),cache.set(gl,wrapper={gl,isWebGL2,getExtension,withProgram,withTexture,withTextureFramebuffer,handleContextLoss})}callback(wrapper)}function renderImageData(glOrCanvas,imageData,x,y,width,height,channels,framebuffer){void 0===channels&&(channels=15),void 0===framebuffer&&(framebuffer=null),withWebGLContext(glOrCanvas,(function(ref){var gl=ref.gl,withProgram=ref.withProgram;(0,ref.withTexture)("copy",(function(tex,texUnit){gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,width,height,0,gl.RGBA,gl.UNSIGNED_BYTE,imageData),withProgram("copy",viewportQuadVertex,copyTexFragment,(function(ref){var setUniform=ref.setUniform;(0,ref.setAttribute)("aUV",2,gl.STATIC_DRAW,0,new Float32Array([0,0,2,0,0,2])),setUniform("1i","image",texUnit),gl.bindFramebuffer(gl.FRAMEBUFFER,framebuffer||null),gl.disable(gl.BLEND),gl.colorMask(8&channels,4&channels,2&channels,1&channels),gl.viewport(x,y,width,height),gl.scissor(x,y,width,height),gl.drawArrays(gl.TRIANGLES,0,3)}))}))}))}var webglUtils=Object.freeze({__proto__:null,withWebGLContext,renderImageData,resizeWebGLCanvasWithoutClearing:function resizeWebGLCanvasWithoutClearing(canvas,newWidth,newHeight){var width=canvas.width,height=canvas.height;withWebGLContext(canvas,(function(ref){var gl=ref.gl,data=new Uint8Array(width*height*4);gl.readPixels(0,0,width,height,gl.RGBA,gl.UNSIGNED_BYTE,data),canvas.width=newWidth,canvas.height=newHeight,renderImageData(gl,data,0,0,width,height)}))}});function generate$2(sdfWidth,sdfHeight,path,viewBox,maxDistance,sdfExponent){void 0===sdfExponent&&(sdfExponent=1);var textureData=new Uint8Array(sdfWidth*sdfHeight),viewBoxWidth=viewBox[2]-viewBox[0],viewBoxHeight=viewBox[3]-viewBox[1],segments=[];pathToLineSegments(path,(function(x1,y1,x2,y2){segments.push({x1,y1,x2,y2,minX:Math.min(x1,x2),minY:Math.min(y1,y2),maxX:Math.max(x1,x2),maxY:Math.max(y1,y2)})})),segments.sort((function(a,b){return a.maxX-b.maxX}));for(var sdfX=0;sdfX<sdfWidth;sdfX++)for(var sdfY=0;sdfY<sdfHeight;sdfY++){var signedDist=findNearestSignedDistance(viewBox[0]+viewBoxWidth*(sdfX+.5)/sdfWidth,viewBox[1]+viewBoxHeight*(sdfY+.5)/sdfHeight),alpha=Math.pow(1-Math.abs(signedDist)/maxDistance,sdfExponent)/2;signedDist<0&&(alpha=1-alpha),alpha=Math.max(0,Math.min(255,Math.round(255*alpha))),textureData[sdfY*sdfWidth+sdfX]=alpha}return textureData;function findNearestSignedDistance(x,y){for(var closestDistSq=1/0,closestDist=1/0,i=segments.length;i--;){var seg=segments[i];if(seg.maxX+closestDist<=x)break;if(x+closestDist>seg.minX&&y-closestDist<seg.maxY&&y+closestDist>seg.minY){var distSq=absSquareDistanceToLineSegment(x,y,seg.x1,seg.y1,seg.x2,seg.y2);distSq<closestDistSq&&(closestDistSq=distSq,closestDist=Math.sqrt(closestDistSq))}}return function isPointInPoly(x,y){for(var winding=0,i=segments.length;i--;){var seg=segments[i];if(seg.maxX<=x)break;seg.y1>y!=seg.y2>y&&x<(seg.x2-seg.x1)*(y-seg.y1)/(seg.y2-seg.y1)+seg.x1&&(winding+=seg.y1<seg.y2?1:-1)}return 0!==winding}(x,y)&&(closestDist=-closestDist),closestDist}}function generateIntoCanvas$2(sdfWidth,sdfHeight,path,viewBox,maxDistance,sdfExponent,canvas,x,y,channel){void 0===sdfExponent&&(sdfExponent=1),void 0===x&&(x=0),void 0===y&&(y=0),void 0===channel&&(channel=0),generateIntoFramebuffer$1(sdfWidth,sdfHeight,path,viewBox,maxDistance,sdfExponent,canvas,null,x,y,channel)}function generateIntoFramebuffer$1(sdfWidth,sdfHeight,path,viewBox,maxDistance,sdfExponent,glOrCanvas,framebuffer,x,y,channel){void 0===sdfExponent&&(sdfExponent=1),void 0===x&&(x=0),void 0===y&&(y=0),void 0===channel&&(channel=0);for(var data=generate$2(sdfWidth,sdfHeight,path,viewBox,maxDistance,sdfExponent),rgbaData=new Uint8Array(4*data.length),i=0;i<data.length;i++)rgbaData[4*i+channel]=data[i];renderImageData(glOrCanvas,rgbaData,x,y,sdfWidth,sdfHeight,1<<3-channel,framebuffer)}function absSquareDistanceToLineSegment(x,y,lineX0,lineY0,lineX1,lineY1){var ldx=lineX1-lineX0,ldy=lineY1-lineY0,lengthSq=ldx*ldx+ldy*ldy,t=lengthSq?Math.max(0,Math.min(1,((x-lineX0)*ldx+(y-lineY0)*ldy)/lengthSq)):0,dx=x-(lineX0+t*ldx),dy=y-(lineY0+t*ldy);return dx*dx+dy*dy}var javascript=Object.freeze({__proto__:null,generate:generate$2,generateIntoCanvas:generateIntoCanvas$2,generateIntoFramebuffer:generateIntoFramebuffer$1}),mainVertex="precision highp float;uniform vec4 uGlyphBounds;attribute vec2 aUV;attribute vec4 aLineSegment;varying vec4 vLineSegment;varying vec2 vGlyphXY;void main(){vLineSegment=aLineSegment;vGlyphXY=mix(uGlyphBounds.xy,uGlyphBounds.zw,aUV);gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}",mainFragment="precision highp float;uniform vec4 uGlyphBounds;uniform float uMaxDistance;uniform float uExponent;varying vec4 vLineSegment;varying vec2 vGlyphXY;float absDistToSegment(vec2 point,vec2 lineA,vec2 lineB){vec2 lineDir=lineB-lineA;float lenSq=dot(lineDir,lineDir);float t=lenSq==0.0 ? 0.0 : clamp(dot(point-lineA,lineDir)/lenSq,0.0,1.0);vec2 linePt=lineA+t*lineDir;return distance(point,linePt);}void main(){vec4 seg=vLineSegment;vec2 p=vGlyphXY;float dist=absDistToSegment(p,seg.xy,seg.zw);float val=pow(1.0-clamp(dist/uMaxDistance,0.0,1.0),uExponent)*0.5;bool crossing=(seg.y>p.y!=seg.w>p.y)&&(p.x<(seg.z-seg.x)*(p.y-seg.y)/(seg.w-seg.y)+seg.x);bool crossingUp=crossing&&vLineSegment.y<vLineSegment.w;gl_FragColor=vec4(crossingUp ? 1.0/255.0 : 0.0,crossing&&!crossingUp ? 1.0/255.0 : 0.0,0.0,val);}",postFragment="precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){vec4 color=texture2D(tex,vUV);bool inside=color.r!=color.g;float val=inside ? 1.0-color.a : color.a;gl_FragColor=vec4(val);}",viewportUVs=new Float32Array([0,0,2,0,0,2]),implicitContext=null,isTestingSupport=!1,NULL_OBJECT={},supportByCanvas=new WeakMap;function validateSupport(glOrCanvas){if(!isTestingSupport&&!isSupported(glOrCanvas))throw new Error("WebGL generation not supported")}function generate$1(sdfWidth,sdfHeight,path,viewBox,maxDistance,sdfExponent,glOrCanvas){if(void 0===sdfExponent&&(sdfExponent=1),void 0===glOrCanvas&&(glOrCanvas=null),!glOrCanvas&&!(glOrCanvas=implicitContext)){var canvas="function"==typeof OffscreenCanvas?new OffscreenCanvas(1,1):"undefined"!=typeof document?document.createElement("canvas"):null;if(!canvas)throw new Error("OffscreenCanvas or DOM canvas not supported");glOrCanvas=implicitContext=canvas.getContext("webgl",{depth:!1})}validateSupport(glOrCanvas);var rgbaData=new Uint8Array(sdfWidth*sdfHeight*4);withWebGLContext(glOrCanvas,(function(ref){var gl=ref.gl,withTexture=ref.withTexture,withTextureFramebuffer=ref.withTextureFramebuffer;withTexture("readable",(function(texture,textureUnit){gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,sdfWidth,sdfHeight,0,gl.RGBA,gl.UNSIGNED_BYTE,null),withTextureFramebuffer(texture,textureUnit,(function(framebuffer){generateIntoFramebuffer(sdfWidth,sdfHeight,path,viewBox,maxDistance,sdfExponent,gl,framebuffer,0,0,0),gl.readPixels(0,0,sdfWidth,sdfHeight,gl.RGBA,gl.UNSIGNED_BYTE,rgbaData)}))}))}));for(var data=new Uint8Array(sdfWidth*sdfHeight),i=0,j=0;i<rgbaData.length;i+=4)data[j++]=rgbaData[i];return data}function generateIntoCanvas$1(sdfWidth,sdfHeight,path,viewBox,maxDistance,sdfExponent,canvas,x,y,channel){void 0===sdfExponent&&(sdfExponent=1),void 0===x&&(x=0),void 0===y&&(y=0),void 0===channel&&(channel=0),generateIntoFramebuffer(sdfWidth,sdfHeight,path,viewBox,maxDistance,sdfExponent,canvas,null,x,y,channel)}function generateIntoFramebuffer(sdfWidth,sdfHeight,path,viewBox,maxDistance,sdfExponent,glOrCanvas,framebuffer,x,y,channel){void 0===sdfExponent&&(sdfExponent=1),void 0===x&&(x=0),void 0===y&&(y=0),void 0===channel&&(channel=0),validateSupport(glOrCanvas);var lineSegmentCoords=[];pathToLineSegments(path,(function(x1,y1,x2,y2){lineSegmentCoords.push(x1,y1,x2,y2)})),lineSegmentCoords=new Float32Array(lineSegmentCoords),withWebGLContext(glOrCanvas,(function(ref){var gl=ref.gl,isWebGL2=ref.isWebGL2,getExtension=ref.getExtension,withProgram=ref.withProgram,withTexture=ref.withTexture,withTextureFramebuffer=ref.withTextureFramebuffer,handleContextLoss=ref.handleContextLoss;if(withTexture("rawDistances",(function(intermediateTexture,intermediateTextureUnit){sdfWidth===intermediateTexture._lastWidth&&sdfHeight===intermediateTexture._lastHeight||gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,intermediateTexture._lastWidth=sdfWidth,intermediateTexture._lastHeight=sdfHeight,0,gl.RGBA,gl.UNSIGNED_BYTE,null),withProgram("main",mainVertex,mainFragment,(function(ref){var setAttribute=ref.setAttribute,setUniform=ref.setUniform,instancingExtension=!isWebGL2&&getExtension("ANGLE_instanced_arrays"),blendMinMaxExtension=!isWebGL2&&getExtension("EXT_blend_minmax");setAttribute("aUV",2,gl.STATIC_DRAW,0,viewportUVs),setAttribute("aLineSegment",4,gl.DYNAMIC_DRAW,1,lineSegmentCoords),setUniform.apply(void 0,["4f","uGlyphBounds"].concat(viewBox)),setUniform("1f","uMaxDistance",maxDistance),setUniform("1f","uExponent",sdfExponent),withTextureFramebuffer(intermediateTexture,intermediateTextureUnit,(function(framebuffer){gl.enable(gl.BLEND),gl.colorMask(!0,!0,!0,!0),gl.viewport(0,0,sdfWidth,sdfHeight),gl.scissor(0,0,sdfWidth,sdfHeight),gl.blendFunc(gl.ONE,gl.ONE),gl.blendEquationSeparate(gl.FUNC_ADD,isWebGL2?gl.MAX:blendMinMaxExtension.MAX_EXT),gl.clear(gl.COLOR_BUFFER_BIT),isWebGL2?gl.drawArraysInstanced(gl.TRIANGLES,0,3,lineSegmentCoords.length/4):instancingExtension.drawArraysInstancedANGLE(gl.TRIANGLES,0,3,lineSegmentCoords.length/4)}))})),withProgram("post",viewportQuadVertex,postFragment,(function(program){program.setAttribute("aUV",2,gl.STATIC_DRAW,0,viewportUVs),program.setUniform("1i","tex",intermediateTextureUnit),gl.bindFramebuffer(gl.FRAMEBUFFER,framebuffer),gl.disable(gl.BLEND),gl.colorMask(0===channel,1===channel,2===channel,3===channel),gl.viewport(x,y,sdfWidth,sdfHeight),gl.scissor(x,y,sdfWidth,sdfHeight),gl.drawArrays(gl.TRIANGLES,0,3)}))})),gl.isContextLost())throw handleContextLoss(),new Error("webgl context lost")}))}function isSupported(glOrCanvas){var key=glOrCanvas&&glOrCanvas!==implicitContext?glOrCanvas.canvas||glOrCanvas:NULL_OBJECT,supported=supportByCanvas.get(key);if(void 0===supported){isTestingSupport=!0;var failReason=null;try{var expectedResult=[97,106,97,61,99,137,118,80,80,118,137,99,61,97,106,97],testResult=generate$1(4,4,"M8,8L16,8L24,24L16,24Z",[0,0,32,32],24,1,glOrCanvas);(supported=testResult&&expectedResult.length===testResult.length&&testResult.every((function(val,i){return val===expectedResult[i]})))||(failReason="bad trial run results",console.info(expectedResult,testResult))}catch(err){supported=!1,failReason=err.message}failReason&&console.warn("WebGL SDF generation not supported:",failReason),isTestingSupport=!1,supportByCanvas.set(key,supported)}return supported}var webgl=Object.freeze({__proto__:null,generate:generate$1,generateIntoCanvas:generateIntoCanvas$1,generateIntoFramebuffer,isSupported});return exports.forEachPathCommand=forEachPathCommand,exports.generate=function generate(sdfWidth,sdfHeight,path,viewBox,maxDistance,sdfExponent){void 0===maxDistance&&(maxDistance=Math.max(viewBox[2]-viewBox[0],viewBox[3]-viewBox[1])/2),void 0===sdfExponent&&(sdfExponent=1);try{return generate$1.apply(webgl,arguments)}catch(e){return console.info("WebGL SDF generation failed, falling back to JS",e),generate$2.apply(javascript,arguments)}},exports.generateIntoCanvas=function generateIntoCanvas(sdfWidth,sdfHeight,path,viewBox,maxDistance,sdfExponent,canvas,x,y,channel){void 0===maxDistance&&(maxDistance=Math.max(viewBox[2]-viewBox[0],viewBox[3]-viewBox[1])/2),void 0===sdfExponent&&(sdfExponent=1),void 0===x&&(x=0),void 0===y&&(y=0),void 0===channel&&(channel=0);try{return generateIntoCanvas$1.apply(webgl,arguments)}catch(e){return console.info("WebGL SDF generation failed, falling back to JS",e),generateIntoCanvas$2.apply(javascript,arguments)}},exports.javascript=javascript,exports.pathToLineSegments=pathToLineSegments,exports.webgl=webgl,exports.webglUtils=webglUtils,Object.defineProperty(exports,"__esModule",{value:!0}),exports}({});return exports}const bidi=function bidiFactory(){return function(exports){var DATA={R:"13k,1a,2,3,3,2+1j,ch+16,a+1,5+2,2+n,5,a,4,6+16,4+3,h+1b,4mo,179q,2+9,2+11,2i9+7y,2+68,4,3+4,5+13,4+3,2+4k,3+29,8+cf,1t+7z,w+17,3+3m,1t+3z,16o1+5r,8+30,8+mc,29+1r,29+4v,75+73",EN:"1c+9,3d+1,6,187+9,513,4+5,7+9,sf+j,175h+9,qw+q,161f+1d,4xt+a,25i+9",ES:"17,2,6dp+1,f+1,av,16vr,mx+1,4o,2",ET:"z+2,3h+3,b+1,ym,3e+1,2o,p4+1,8,6u,7c,g6,1wc,1n9+4,30+1b,2n,6d,qhx+1,h0m,a+1,49+2,63+1,4+1,6bb+3,12jj",AN:"16o+5,2j+9,2+1,35,ed,1ff2+9,87+u",CS:"18,2+1,b,2u,12k,55v,l,17v0,2,3,53,2+1,b",B:"a,3,f+2,2v,690",S:"9,2,k",WS:"c,k,4f4,1vk+a,u,1j,335",ON:"x+1,4+4,h+5,r+5,r+3,z,5+3,2+1,2+1,5,2+2,3+4,o,w,ci+1,8+d,3+d,6+8,2+g,39+1,9,6+1,2,33,b8,3+1,3c+1,7+1,5r,b,7h+3,sa+5,2,3i+6,jg+3,ur+9,2v,ij+1,9g+9,7+a,8m,4+1,49+x,14u,2+2,c+2,e+2,e+2,e+1,i+n,e+e,2+p,u+2,e+2,36+1,2+3,2+1,b,2+2,6+5,2,2,2,h+1,5+4,6+3,3+f,16+2,5+3l,3+81,1y+p,2+40,q+a,m+13,2r+ch,2+9e,75+hf,3+v,2+2w,6e+5,f+6,75+2a,1a+p,2+2g,d+5x,r+b,6+3,4+o,g,6+1,6+2,2k+1,4,2j,5h+z,1m+1,1e+f,t+2,1f+e,d+3,4o+3,2s+1,w,535+1r,h3l+1i,93+2,2s,b+1,3l+x,2v,4g+3,21+3,kz+1,g5v+1,5a,j+9,n+v,2,3,2+8,2+1,3+2,2,3,46+1,4+4,h+5,r+5,r+a,3h+2,4+6,b+4,78,1r+24,4+c,4,1hb,ey+6,103+j,16j+c,1ux+7,5+g,fsh,jdq+1t,4,57+2e,p1,1m,1m,1m,1m,4kt+1,7j+17,5+2r,d+e,3+e,2+e,2+10,m+4,w,1n+5,1q,4z+5,4b+rb,9+c,4+c,4+37,d+2g,8+b,l+b,5+1j,9+9,7+13,9+t,3+1,27+3c,2+29,2+3q,d+d,3+4,4+2,6+6,a+o,8+6,a+2,e+6,16+42,2+1i",BN:"0+8,6+d,2s+5,2+p,e,4m9,1kt+2,2b+5,5+5,17q9+v,7k,6p+8,6+1,119d+3,440+7,96s+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+75,6p+2rz,1ben+1,1ekf+1,1ekf+1",NSM:"lc+33,7o+6,7c+18,2,2+1,2+1,2,21+a,1d+k,h,2u+6,3+5,3+1,2+3,10,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,g+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+g,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,k1+w,2db+2,3y,2p+v,ff+3,30+1,n9x+3,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,r2,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+5,3+1,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2d+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,f0c+4,1o+6,t5,1s+3,2a,f5l+1,43t+2,i+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,gzhy+6n",AL:"16w,3,2,e+1b,z+2,2+2s,g+1,8+1,b+m,2+t,s+2i,c+e,4h+f,1d+1e,1bwe+dp,3+3z,x+c,2+1,35+3y,2rm+z,5+7,b+5,dt+l,c+u,17nl+27,1t+27,4x+6n,3+d",LRO:"6ct",RLO:"6cu",LRE:"6cq",RLE:"6cr",PDF:"6cs",LRI:"6ee",RLI:"6ef",FSI:"6eg",PDI:"6eh"},TYPES={},TYPES_TO_NAMES={};TYPES.L=1,TYPES_TO_NAMES[1]="L",Object.keys(DATA).forEach((function(type,i){TYPES[type]=1<<i+1,TYPES_TO_NAMES[TYPES[type]]=type})),Object.freeze(TYPES);var ISOLATE_INIT_TYPES=TYPES.LRI|TYPES.RLI|TYPES.FSI,STRONG_TYPES=TYPES.L|TYPES.R|TYPES.AL,NEUTRAL_ISOLATE_TYPES=TYPES.B|TYPES.S|TYPES.WS|TYPES.ON|TYPES.FSI|TYPES.LRI|TYPES.RLI|TYPES.PDI,BN_LIKE_TYPES=TYPES.BN|TYPES.RLE|TYPES.LRE|TYPES.RLO|TYPES.LRO|TYPES.PDF,TRAILING_TYPES=TYPES.S|TYPES.WS|TYPES.B|ISOLATE_INIT_TYPES|TYPES.PDI|BN_LIKE_TYPES,map=null;function getBidiCharType(char){return function parseData(){if(!map){map=new Map;var loop=function(type){if(DATA.hasOwnProperty(type)){var lastCode=0;DATA[type].split(",").forEach((function(range){var ref=range.split("+"),skip=ref[0],step=ref[1];skip=parseInt(skip,36),step=step?parseInt(step,36):0,map.set(lastCode+=skip,TYPES[type]);for(var i=0;i<step;i++)map.set(++lastCode,TYPES[type])}))}};for(var type in DATA)loop(type)}}(),map.get(char.codePointAt(0))||TYPES.L}var openToClose,closeToOpen,canonical,data$1={pairs:"14>1,1e>2,u>2,2wt>1,1>1,1ge>1,1wp>1,1j>1,f>1,hm>1,1>1,u>1,u6>1,1>1,+5,28>1,w>1,1>1,+3,b8>1,1>1,+3,1>3,-1>-1,3>1,1>1,+2,1s>1,1>1,x>1,th>1,1>1,+2,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,4q>1,1e>2,u>2,2>1,+1",canonical:"6f1>-6dx,6dy>-6dx,6ec>-6ed,6ee>-6ed,6ww>2jj,-2ji>2jj,14r4>-1e7l,1e7m>-1e7l,1e7m>-1e5c,1e5d>-1e5b,1e5c>-14qx,14qy>-14qx,14vn>-1ecg,1ech>-1ecg,1edu>-1ecg,1eci>-1ecg,1eda>-1ecg,1eci>-1ecg,1eci>-168q,168r>-168q,168s>-14ye,14yf>-14ye"};function parseCharacterMap(encodedString,includeReverse){var prevPair,lastCode=0,map=new Map,reverseMap=includeReverse&&new Map;return encodedString.split(",").forEach((function visit(entry){if(-1!==entry.indexOf("+"))for(var i=+entry;i--;)visit(prevPair);else{prevPair=entry;var ref=entry.split(">"),a=ref[0],b=ref[1];a=String.fromCodePoint(lastCode+=parseInt(a,36)),b=String.fromCodePoint(lastCode+=parseInt(b,36)),map.set(a,b),includeReverse&&reverseMap.set(b,a)}})),{map,reverseMap}}function parse$1(){if(!openToClose){var ref=parseCharacterMap(data$1.pairs,!0),map=ref.map,reverseMap=ref.reverseMap;openToClose=map,closeToOpen=reverseMap,canonical=parseCharacterMap(data$1.canonical,!1).map}}function openingToClosingBracket(char){return parse$1(),openToClose.get(char)||null}function closingToOpeningBracket(char){return parse$1(),closeToOpen.get(char)||null}function getCanonicalBracket(char){return parse$1(),canonical.get(char)||null}var TYPE_L=TYPES.L,TYPE_R=TYPES.R,TYPE_EN=TYPES.EN,TYPE_ES=TYPES.ES,TYPE_ET=TYPES.ET,TYPE_AN=TYPES.AN,TYPE_CS=TYPES.CS,TYPE_B=TYPES.B,TYPE_S=TYPES.S,TYPE_ON=TYPES.ON,TYPE_BN=TYPES.BN,TYPE_NSM=TYPES.NSM,TYPE_AL=TYPES.AL,TYPE_LRO=TYPES.LRO,TYPE_RLO=TYPES.RLO,TYPE_LRE=TYPES.LRE,TYPE_RLE=TYPES.RLE,TYPE_PDF=TYPES.PDF,TYPE_LRI=TYPES.LRI,TYPE_RLI=TYPES.RLI,TYPE_FSI=TYPES.FSI,TYPE_PDI=TYPES.PDI;var mirrorMap,data="14>1,j>2,t>2,u>2,1a>g,2v3>1,1>1,1ge>1,1wd>1,b>1,1j>1,f>1,ai>3,-2>3,+1,8>1k0,-1jq>1y7,-1y6>1hf,-1he>1h6,-1h5>1ha,-1h8>1qi,-1pu>1,6>3u,-3s>7,6>1,1>1,f>1,1>1,+2,3>1,1>1,+13,4>1,1>1,6>1eo,-1ee>1,3>1mg,-1me>1mk,-1mj>1mi,-1mg>1mi,-1md>1,1>1,+2,1>10k,-103>1,1>1,4>1,5>1,1>1,+10,3>1,1>8,-7>8,+1,-6>7,+1,a>1,1>1,u>1,u6>1,1>1,+5,26>1,1>1,2>1,2>2,8>1,7>1,4>1,1>1,+5,b8>1,1>1,+3,1>3,-2>1,2>1,1>1,+2,c>1,3>1,1>1,+2,h>1,3>1,a>1,1>1,2>1,3>1,1>1,d>1,f>1,3>1,1a>1,1>1,6>1,7>1,13>1,k>1,1>1,+19,4>1,1>1,+2,2>1,1>1,+18,m>1,a>1,1>1,lk>1,1>1,4>1,2>1,f>1,3>1,1>1,+3,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,6>1,4j>1,j>2,t>2,u>2,2>1,+1";function getMirroredCharacter(char){return function parse(){if(!mirrorMap){var ref=parseCharacterMap(data,!0),map=ref.map;ref.reverseMap.forEach((function(value,key){map.set(key,value)})),mirrorMap=map}}(),mirrorMap.get(char)||null}function getReorderSegments(string,embeddingLevelsResult,start,end){var strLen=string.length;start=Math.max(0,null==start?0:+start),end=Math.min(strLen-1,null==end?strLen-1:+end);var segments=[];return embeddingLevelsResult.paragraphs.forEach((function(paragraph){var lineStart=Math.max(start,paragraph.start),lineEnd=Math.min(end,paragraph.end);if(lineStart<lineEnd){for(var lineLevels=embeddingLevelsResult.levels.slice(lineStart,lineEnd+1),i=lineEnd;i>=lineStart&&getBidiCharType(string[i])&TRAILING_TYPES;i--)lineLevels[i]=paragraph.level;for(var maxLevel=paragraph.level,minOddLevel=1/0,i$1=0;i$1<lineLevels.length;i$1++){var level=lineLevels[i$1];level>maxLevel&&(maxLevel=level),level<minOddLevel&&(minOddLevel=1|level)}for(var lvl=maxLevel;lvl>=minOddLevel;lvl--)for(var i$2=0;i$2<lineLevels.length;i$2++)if(lineLevels[i$2]>=lvl){for(var segStart=i$2;i$2+1<lineLevels.length&&lineLevels[i$2+1]>=lvl;)i$2++;i$2>segStart&&segments.push([segStart+lineStart,i$2+lineStart])}}})),segments}function getReorderedIndices(string,embedLevelsResult,start,end){for(var segments=getReorderSegments(string,embedLevelsResult,start,end),indices=[],i=0;i<string.length;i++)indices[i]=i;return segments.forEach((function(ref){for(var start=ref[0],end=ref[1],slice=indices.slice(start,end+1),i=slice.length;i--;)indices[end-i]=slice[i]})),indices}return exports.closingToOpeningBracket=closingToOpeningBracket,exports.getBidiCharType=getBidiCharType,exports.getBidiCharTypeName=function getBidiCharTypeName(char){return TYPES_TO_NAMES[getBidiCharType(char)]},exports.getCanonicalBracket=getCanonicalBracket,exports.getEmbeddingLevels=function getEmbeddingLevels(string,baseDirection){for(var charTypes=new Uint32Array(string.length),i=0;i<string.length;i++)charTypes[i]=getBidiCharType(string[i]);var charTypeCounts=new Map;function changeCharType(i,type){var oldType=charTypes[i];charTypes[i]=type,charTypeCounts.set(oldType,charTypeCounts.get(oldType)-1),oldType&NEUTRAL_ISOLATE_TYPES&&charTypeCounts.set(NEUTRAL_ISOLATE_TYPES,charTypeCounts.get(NEUTRAL_ISOLATE_TYPES)-1),charTypeCounts.set(type,(charTypeCounts.get(type)||0)+1),type&NEUTRAL_ISOLATE_TYPES&&charTypeCounts.set(NEUTRAL_ISOLATE_TYPES,(charTypeCounts.get(NEUTRAL_ISOLATE_TYPES)||0)+1)}for(var embedLevels=new Uint8Array(string.length),isolationPairs=new Map,paragraphs=[],paragraph=null,i$1=0;i$1<string.length;i$1++)paragraph||paragraphs.push(paragraph={start:i$1,end:string.length-1,level:"rtl"===baseDirection?1:"ltr"===baseDirection?0:determineAutoEmbedLevel(i$1,!1)}),charTypes[i$1]&TYPE_B&&(paragraph.end=i$1,paragraph=null);for(var FORMATTING_TYPES=TYPE_RLE|TYPE_LRE|TYPE_RLO|TYPE_LRO|ISOLATE_INIT_TYPES|TYPE_PDI|TYPE_PDF|TYPE_B,nextEven=function(n){return n+(1&n?1:2)},nextOdd=function(n){return n+(1&n?2:1)},paraIdx=0;paraIdx<paragraphs.length;paraIdx++){var statusStack=[{_level:(paragraph=paragraphs[paraIdx]).level,_override:0,_isolate:0}],stackTop=void 0,overflowIsolateCount=0,overflowEmbeddingCount=0,validIsolateCount=0;charTypeCounts.clear();for(var i$2=paragraph.start;i$2<=paragraph.end;i$2++){var charType=charTypes[i$2];if(stackTop=statusStack[statusStack.length-1],charTypeCounts.set(charType,(charTypeCounts.get(charType)||0)+1),charType&NEUTRAL_ISOLATE_TYPES&&charTypeCounts.set(NEUTRAL_ISOLATE_TYPES,(charTypeCounts.get(NEUTRAL_ISOLATE_TYPES)||0)+1),charType&FORMATTING_TYPES)if(charType&(TYPE_RLE|TYPE_LRE)){embedLevels[i$2]=stackTop._level;var level=(charType===TYPE_RLE?nextOdd:nextEven)(stackTop._level);level<=125&&!overflowIsolateCount&&!overflowEmbeddingCount?statusStack.push({_level:level,_override:0,_isolate:0}):overflowIsolateCount||overflowEmbeddingCount++}else if(charType&(TYPE_RLO|TYPE_LRO)){embedLevels[i$2]=stackTop._level;var level$1=(charType===TYPE_RLO?nextOdd:nextEven)(stackTop._level);level$1<=125&&!overflowIsolateCount&&!overflowEmbeddingCount?statusStack.push({_level:level$1,_override:charType&TYPE_RLO?TYPE_R:TYPE_L,_isolate:0}):overflowIsolateCount||overflowEmbeddingCount++}else if(charType&ISOLATE_INIT_TYPES){charType&TYPE_FSI&&(charType=1===determineAutoEmbedLevel(i$2+1,!0)?TYPE_RLI:TYPE_LRI),embedLevels[i$2]=stackTop._level,stackTop._override&&changeCharType(i$2,stackTop._override);var level$2=(charType===TYPE_RLI?nextOdd:nextEven)(stackTop._level);level$2<=125&&0===overflowIsolateCount&&0===overflowEmbeddingCount?(validIsolateCount++,statusStack.push({_level:level$2,_override:0,_isolate:1,_isolInitIndex:i$2})):overflowIsolateCount++}else if(charType&TYPE_PDI){if(overflowIsolateCount>0)overflowIsolateCount--;else if(validIsolateCount>0){for(overflowEmbeddingCount=0;!statusStack[statusStack.length-1]._isolate;)statusStack.pop();var isolInitIndex=statusStack[statusStack.length-1]._isolInitIndex;null!=isolInitIndex&&(isolationPairs.set(isolInitIndex,i$2),isolationPairs.set(i$2,isolInitIndex)),statusStack.pop(),validIsolateCount--}stackTop=statusStack[statusStack.length-1],embedLevels[i$2]=stackTop._level,stackTop._override&&changeCharType(i$2,stackTop._override)}else charType&TYPE_PDF?(0===overflowIsolateCount&&(overflowEmbeddingCount>0?overflowEmbeddingCount--:!stackTop._isolate&&statusStack.length>1&&(statusStack.pop(),stackTop=statusStack[statusStack.length-1])),embedLevels[i$2]=stackTop._level):charType&TYPE_B&&(embedLevels[i$2]=paragraph.level);else embedLevels[i$2]=stackTop._level,stackTop._override&&charType!==TYPE_BN&&changeCharType(i$2,stackTop._override)}for(var levelRuns=[],currentRun=null,i$3=paragraph.start;i$3<=paragraph.end;i$3++){var charType$1=charTypes[i$3];if(!(charType$1&BN_LIKE_TYPES)){var lvl=embedLevels[i$3],isIsolInit=charType$1&ISOLATE_INIT_TYPES,isPDI=charType$1===TYPE_PDI;currentRun&&lvl===currentRun._level?(currentRun._end=i$3,currentRun._endsWithIsolInit=isIsolInit):levelRuns.push(currentRun={_start:i$3,_end:i$3,_level:lvl,_startsWithPDI:isPDI,_endsWithIsolInit:isIsolInit})}}for(var isolatingRunSeqs=[],runIdx=0;runIdx<levelRuns.length;runIdx++){var run=levelRuns[runIdx];if(!run._startsWithPDI||run._startsWithPDI&&!isolationPairs.has(run._start)){for(var seqRuns=[currentRun=run],pdiIndex=void 0;currentRun&&currentRun._endsWithIsolInit&&null!=(pdiIndex=isolationPairs.get(currentRun._end));)for(var i$4=runIdx+1;i$4<levelRuns.length;i$4++)if(levelRuns[i$4]._start===pdiIndex){seqRuns.push(currentRun=levelRuns[i$4]);break}for(var seqIndices=[],i$5=0;i$5<seqRuns.length;i$5++)for(var run$1=seqRuns[i$5],j=run$1._start;j<=run$1._end;j++)seqIndices.push(j);for(var firstLevel=embedLevels[seqIndices[0]],prevLevel=paragraph.level,i$6=seqIndices[0]-1;i$6>=0;i$6--)if(!(charTypes[i$6]&BN_LIKE_TYPES)){prevLevel=embedLevels[i$6];break}var lastIndex=seqIndices[seqIndices.length-1],lastLevel=embedLevels[lastIndex],nextLevel=paragraph.level;if(!(charTypes[lastIndex]&ISOLATE_INIT_TYPES))for(var i$7=lastIndex+1;i$7<=paragraph.end;i$7++)if(!(charTypes[i$7]&BN_LIKE_TYPES)){nextLevel=embedLevels[i$7];break}isolatingRunSeqs.push({_seqIndices:seqIndices,_sosType:Math.max(prevLevel,firstLevel)%2?TYPE_R:TYPE_L,_eosType:Math.max(nextLevel,lastLevel)%2?TYPE_R:TYPE_L})}}for(var seqIdx=0;seqIdx<isolatingRunSeqs.length;seqIdx++){var ref=isolatingRunSeqs[seqIdx],seqIndices$1=ref._seqIndices,sosType=ref._sosType,eosType=ref._eosType,embedDirection=1&embedLevels[seqIndices$1[0]]?TYPE_R:TYPE_L;if(charTypeCounts.get(TYPE_NSM))for(var si=0;si<seqIndices$1.length;si++){var i$8=seqIndices$1[si];if(charTypes[i$8]&TYPE_NSM){for(var prevType=sosType,sj=si-1;sj>=0;sj--)if(!(charTypes[seqIndices$1[sj]]&BN_LIKE_TYPES)){prevType=charTypes[seqIndices$1[sj]];break}changeCharType(i$8,prevType&(ISOLATE_INIT_TYPES|TYPE_PDI)?TYPE_ON:prevType)}}if(charTypeCounts.get(TYPE_EN))for(var si$1=0;si$1<seqIndices$1.length;si$1++){var i$9=seqIndices$1[si$1];if(charTypes[i$9]&TYPE_EN)for(var sj$1=si$1-1;sj$1>=-1;sj$1--){var prevCharType=-1===sj$1?sosType:charTypes[seqIndices$1[sj$1]];if(prevCharType&STRONG_TYPES){prevCharType===TYPE_AL&&changeCharType(i$9,TYPE_AN);break}}}if(charTypeCounts.get(TYPE_AL))for(var si$2=0;si$2<seqIndices$1.length;si$2++){var i$10=seqIndices$1[si$2];charTypes[i$10]&TYPE_AL&&changeCharType(i$10,TYPE_R)}if(charTypeCounts.get(TYPE_ES)||charTypeCounts.get(TYPE_CS))for(var si$3=1;si$3<seqIndices$1.length-1;si$3++){var i$11=seqIndices$1[si$3];if(charTypes[i$11]&(TYPE_ES|TYPE_CS)){for(var prevType$1=0,nextType=0,sj$2=si$3-1;sj$2>=0&&(prevType$1=charTypes[seqIndices$1[sj$2]])&BN_LIKE_TYPES;sj$2--);for(var sj$3=si$3+1;sj$3<seqIndices$1.length&&(nextType=charTypes[seqIndices$1[sj$3]])&BN_LIKE_TYPES;sj$3++);prevType$1===nextType&&(charTypes[i$11]===TYPE_ES?prevType$1===TYPE_EN:prevType$1&(TYPE_EN|TYPE_AN))&&changeCharType(i$11,prevType$1)}}if(charTypeCounts.get(TYPE_EN))for(var si$4=0;si$4<seqIndices$1.length;si$4++){var i$12=seqIndices$1[si$4];if(charTypes[i$12]&TYPE_EN){for(var sj$4=si$4-1;sj$4>=0&&charTypes[seqIndices$1[sj$4]]&(TYPE_ET|BN_LIKE_TYPES);sj$4--)changeCharType(seqIndices$1[sj$4],TYPE_EN);for(si$4++;si$4<seqIndices$1.length&&charTypes[seqIndices$1[si$4]]&(TYPE_ET|BN_LIKE_TYPES|TYPE_EN);si$4++)charTypes[seqIndices$1[si$4]]!==TYPE_EN&&changeCharType(seqIndices$1[si$4],TYPE_EN)}}if(charTypeCounts.get(TYPE_ET)||charTypeCounts.get(TYPE_ES)||charTypeCounts.get(TYPE_CS))for(var si$5=0;si$5<seqIndices$1.length;si$5++){var i$13=seqIndices$1[si$5];if(charTypes[i$13]&(TYPE_ET|TYPE_ES|TYPE_CS)){changeCharType(i$13,TYPE_ON);for(var sj$5=si$5-1;sj$5>=0&&charTypes[seqIndices$1[sj$5]]&BN_LIKE_TYPES;sj$5--)changeCharType(seqIndices$1[sj$5],TYPE_ON);for(var sj$6=si$5+1;sj$6<seqIndices$1.length&&charTypes[seqIndices$1[sj$6]]&BN_LIKE_TYPES;sj$6++)changeCharType(seqIndices$1[sj$6],TYPE_ON)}}if(charTypeCounts.get(TYPE_EN))for(var si$6=0,prevStrongType=sosType;si$6<seqIndices$1.length;si$6++){var i$14=seqIndices$1[si$6],type=charTypes[i$14];type&TYPE_EN?prevStrongType===TYPE_L&&changeCharType(i$14,TYPE_L):type&STRONG_TYPES&&(prevStrongType=type)}if(charTypeCounts.get(NEUTRAL_ISOLATE_TYPES)){for(var R_TYPES_FOR_N_STEPS=TYPE_R|TYPE_EN|TYPE_AN,STRONG_TYPES_FOR_N_STEPS=R_TYPES_FOR_N_STEPS|TYPE_L,bracketPairs=[],openerStack=[],si$7=0;si$7<seqIndices$1.length;si$7++)if(charTypes[seqIndices$1[si$7]]&NEUTRAL_ISOLATE_TYPES){var char=string[seqIndices$1[si$7]],oppositeBracket=void 0;if(null!==openingToClosingBracket(char)){if(!(openerStack.length<63))break;openerStack.push({char,seqIndex:si$7})}else if(null!==(oppositeBracket=closingToOpeningBracket(char)))for(var stackIdx=openerStack.length-1;stackIdx>=0;stackIdx--){var stackChar=openerStack[stackIdx].char;if(stackChar===oppositeBracket||stackChar===closingToOpeningBracket(getCanonicalBracket(char))||openingToClosingBracket(getCanonicalBracket(stackChar))===char){bracketPairs.push([openerStack[stackIdx].seqIndex,si$7]),openerStack.length=stackIdx;break}}}bracketPairs.sort((function(a,b){return a[0]-b[0]}));for(var pairIdx=0;pairIdx<bracketPairs.length;pairIdx++){for(var ref$1=bracketPairs[pairIdx],openSeqIdx=ref$1[0],closeSeqIdx=ref$1[1],foundStrongType=!1,useStrongType=0,si$8=openSeqIdx+1;si$8<closeSeqIdx;si$8++){var i$15=seqIndices$1[si$8];if(charTypes[i$15]&STRONG_TYPES_FOR_N_STEPS){foundStrongType=!0;var lr=charTypes[i$15]&R_TYPES_FOR_N_STEPS?TYPE_R:TYPE_L;if(lr===embedDirection){useStrongType=lr;break}}}if(foundStrongType&&!useStrongType){useStrongType=sosType;for(var si$9=openSeqIdx-1;si$9>=0;si$9--){var i$16=seqIndices$1[si$9];if(charTypes[i$16]&STRONG_TYPES_FOR_N_STEPS){var lr$1=charTypes[i$16]&R_TYPES_FOR_N_STEPS?TYPE_R:TYPE_L;useStrongType=lr$1!==embedDirection?lr$1:embedDirection;break}}}if(useStrongType){if(charTypes[seqIndices$1[openSeqIdx]]=charTypes[seqIndices$1[closeSeqIdx]]=useStrongType,useStrongType!==embedDirection)for(var si$10=openSeqIdx+1;si$10<seqIndices$1.length;si$10++)if(!(charTypes[seqIndices$1[si$10]]&BN_LIKE_TYPES)){getBidiCharType(string[seqIndices$1[si$10]])&TYPE_NSM&&(charTypes[seqIndices$1[si$10]]=useStrongType);break}if(useStrongType!==embedDirection)for(var si$11=closeSeqIdx+1;si$11<seqIndices$1.length;si$11++)if(!(charTypes[seqIndices$1[si$11]]&BN_LIKE_TYPES)){getBidiCharType(string[seqIndices$1[si$11]])&TYPE_NSM&&(charTypes[seqIndices$1[si$11]]=useStrongType);break}}}for(var si$12=0;si$12<seqIndices$1.length;si$12++)if(charTypes[seqIndices$1[si$12]]&NEUTRAL_ISOLATE_TYPES){for(var niRunStart=si$12,niRunEnd=si$12,prevType$2=sosType,si2=si$12-1;si2>=0;si2--){if(!(charTypes[seqIndices$1[si2]]&BN_LIKE_TYPES)){prevType$2=charTypes[seqIndices$1[si2]]&R_TYPES_FOR_N_STEPS?TYPE_R:TYPE_L;break}niRunStart=si2}for(var nextType$1=eosType,si2$1=si$12+1;si2$1<seqIndices$1.length;si2$1++){if(!(charTypes[seqIndices$1[si2$1]]&(NEUTRAL_ISOLATE_TYPES|BN_LIKE_TYPES))){nextType$1=charTypes[seqIndices$1[si2$1]]&R_TYPES_FOR_N_STEPS?TYPE_R:TYPE_L;break}niRunEnd=si2$1}for(var sj$7=niRunStart;sj$7<=niRunEnd;sj$7++)charTypes[seqIndices$1[sj$7]]=prevType$2===nextType$1?prevType$2:embedDirection;si$12=niRunEnd}}}for(var i$17=paragraph.start;i$17<=paragraph.end;i$17++){var level$3=embedLevels[i$17],type$1=charTypes[i$17];if(1&level$3?type$1&(TYPE_L|TYPE_EN|TYPE_AN)&&embedLevels[i$17]++:type$1&TYPE_R?embedLevels[i$17]++:type$1&(TYPE_AN|TYPE_EN)&&(embedLevels[i$17]+=2),type$1&BN_LIKE_TYPES&&(embedLevels[i$17]=0===i$17?paragraph.level:embedLevels[i$17-1]),i$17===paragraph.end||getBidiCharType(string[i$17])&(TYPE_S|TYPE_B))for(var j$1=i$17;j$1>=0&&getBidiCharType(string[j$1])&TRAILING_TYPES;j$1--)embedLevels[j$1]=paragraph.level}}return{levels:embedLevels,paragraphs};function determineAutoEmbedLevel(start,isFSI){for(var i=start;i<string.length;i++){var charType=charTypes[i];if(charType&(TYPE_R|TYPE_AL))return 1;if(charType&(TYPE_B|TYPE_L)||isFSI&&charType===TYPE_PDI)return 0;if(charType&ISOLATE_INIT_TYPES){var pdi=indexOfMatchingPDI(i);i=-1===pdi?string.length:pdi}}return 0}function indexOfMatchingPDI(isolateStart){for(var isolationLevel=1,i=isolateStart+1;i<string.length;i++){var charType=charTypes[i];if(charType&TYPE_B)break;if(charType&TYPE_PDI){if(0==--isolationLevel)return i}else charType&ISOLATE_INIT_TYPES&&isolationLevel++}return-1}},exports.getMirroredCharacter=getMirroredCharacter,exports.getMirroredCharactersMap=function getMirroredCharactersMap(string,embeddingLevels,start,end){var strLen=string.length;start=Math.max(0,null==start?0:+start),end=Math.min(strLen-1,null==end?strLen-1:+end);for(var map=new Map,i=start;i<=end;i++)if(1&embeddingLevels[i]){var mirror=getMirroredCharacter(string[i]);null!==mirror&&map.set(i,mirror)}return map},exports.getReorderSegments=getReorderSegments,exports.getReorderedIndices=getReorderedIndices,exports.getReorderedString=function getReorderedString(string,embedLevelsResult,start,end){var indices=getReorderedIndices(string,embedLevelsResult,start,end),chars=[].concat(string);return indices.forEach((function(charIndex,i){chars[i]=(1&embedLevelsResult.levels[charIndex]?getMirroredCharacter(string[charIndex]):null)||string[charIndex]})),chars.join("")},exports.openingToClosingBracket=openingToClosingBracket,Object.defineProperty(exports,"__esModule",{value:!0}),exports}({})},voidMainRegExp=/\bvoid\s+main\s*\(\s*\)\s*{/g;function expandShaderIncludes(source){return source.replace(/^[ \t]*#include +<([\w\d./]+)>/gm,(function replace(match,include){let chunk=three_module.ShaderChunk[include];return chunk?expandShaderIncludes(chunk):match}))}const _lut=[];for(let i=0;i<256;i++)_lut[i]=(i<16?"0":"")+i.toString(16);const troika_three_utils_esm_assign=Object.assign||function(){let target=arguments[0];for(let i=1,len=arguments.length;i<len;i++){let source=arguments[i];if(source)for(let prop in source)Object.prototype.hasOwnProperty.call(source,prop)&&(target[prop]=source[prop])}return target},epoch=Date.now(),CONSTRUCTOR_CACHE=new WeakMap,SHADER_UPGRADE_CACHE=new Map;let materialInstanceId=1e10;function createDerivedMaterial(baseMaterial,options){const optionsKey=function getKeyForOptions(options){const optionsHash=JSON.stringify(options,optionsJsonReplacer);let id=optionsHashesToIds.get(optionsHash);null==id&&optionsHashesToIds.set(optionsHash,id=++_idCtr);return id}(options);let ctorsByDerivation=CONSTRUCTOR_CACHE.get(baseMaterial);if(ctorsByDerivation||CONSTRUCTOR_CACHE.set(baseMaterial,ctorsByDerivation=Object.create(null)),ctorsByDerivation[optionsKey])return new ctorsByDerivation[optionsKey];const privateBeforeCompileProp=`_onBeforeCompile${optionsKey}`,onBeforeCompile=function(shaderInfo,renderer){baseMaterial.onBeforeCompile.call(this,shaderInfo,renderer);const cacheKey=this.customProgramCacheKey()+"|"+shaderInfo.vertexShader+"|"+shaderInfo.fragmentShader;let upgradedShaders=SHADER_UPGRADE_CACHE[cacheKey];if(!upgradedShaders){const upgraded=function upgradeShaders(material,{vertexShader,fragmentShader},options,key){let{vertexDefs,vertexMainIntro,vertexMainOutro,vertexTransform,fragmentDefs,fragmentMainIntro,fragmentMainOutro,fragmentColorTransform,customRewriter,timeUniform}=options;vertexDefs=vertexDefs||"",vertexMainIntro=vertexMainIntro||"",vertexMainOutro=vertexMainOutro||"",fragmentDefs=fragmentDefs||"",fragmentMainIntro=fragmentMainIntro||"",fragmentMainOutro=fragmentMainOutro||"",(vertexTransform||customRewriter)&&(vertexShader=expandShaderIncludes(vertexShader));(fragmentColorTransform||customRewriter)&&(fragmentShader=expandShaderIncludes(fragmentShader=fragmentShader.replace(/^[ \t]*#include <((?:tonemapping|encodings|fog|premultiplied_alpha|dithering)_fragment)>/gm,"\n//!BEGIN_POST_CHUNK $1\n$&\n//!END_POST_CHUNK\n")));if(customRewriter){let res=customRewriter({vertexShader,fragmentShader});vertexShader=res.vertexShader,fragmentShader=res.fragmentShader}if(fragmentColorTransform){let postChunks=[];fragmentShader=fragmentShader.replace(/^\/\/!BEGIN_POST_CHUNK[^]+?^\/\/!END_POST_CHUNK/gm,(match=>(postChunks.push(match),""))),fragmentMainOutro=`${fragmentColorTransform}\n${postChunks.join("\n")}\n${fragmentMainOutro}`}if(timeUniform){const code=`\nuniform float ${timeUniform};\n`;vertexDefs=code+vertexDefs,fragmentDefs=code+fragmentDefs}vertexTransform&&(vertexDefs=`${vertexDefs}\nvoid troikaVertexTransform${key}(inout vec3 position, inout vec3 normal, inout vec2 uv) {\n  ${vertexTransform}\n}\n`,vertexMainIntro=`\ntroika_position_${key} = vec3(position);\ntroika_normal_${key} = vec3(normal);\ntroika_uv_${key} = vec2(uv);\ntroikaVertexTransform${key}(troika_position_${key}, troika_normal_${key}, troika_uv_${key});\n${vertexMainIntro}\n`,vertexShader=(vertexShader=`vec3 troika_position_${key};\nvec3 troika_normal_${key};\nvec2 troika_uv_${key};\n${vertexShader}\n`).replace(/\b(position|normal|uv)\b/g,((match,match1,index,fullStr)=>/\battribute\s+vec[23]\s+$/.test(fullStr.substr(0,index))?match1:`troika_${match1}_${key}`)),material.map&&material.map.channel>0||(vertexShader=vertexShader.replace(/\bMAP_UV\b/g,`troika_uv_${key}`)));return vertexShader=injectIntoShaderCode(vertexShader,key,vertexDefs,vertexMainIntro,vertexMainOutro),fragmentShader=injectIntoShaderCode(fragmentShader,key,fragmentDefs,fragmentMainIntro,fragmentMainOutro),{vertexShader,fragmentShader}}(this,shaderInfo,options,optionsKey);upgradedShaders=SHADER_UPGRADE_CACHE[cacheKey]=upgraded}shaderInfo.vertexShader=upgradedShaders.vertexShader,shaderInfo.fragmentShader=upgradedShaders.fragmentShader,troika_three_utils_esm_assign(shaderInfo.uniforms,this.uniforms),options.timeUniform&&(shaderInfo.uniforms[options.timeUniform]={get value(){return Date.now()-epoch}}),this[privateBeforeCompileProp]&&this[privateBeforeCompileProp](shaderInfo)},DerivedMaterial=function DerivedMaterial(){return derive(options.chained?baseMaterial:baseMaterial.clone())},derive=function(base){const derived=Object.create(base,descriptor);return Object.defineProperty(derived,"baseMaterial",{value:baseMaterial}),Object.defineProperty(derived,"id",{value:materialInstanceId++}),derived.uuid=function generateUUID(){const d0=4294967295*Math.random()|0,d1=4294967295*Math.random()|0,d2=4294967295*Math.random()|0,d3=4294967295*Math.random()|0;return(_lut[255&d0]+_lut[d0>>8&255]+_lut[d0>>16&255]+_lut[d0>>24&255]+"-"+_lut[255&d1]+_lut[d1>>8&255]+"-"+_lut[d1>>16&15|64]+_lut[d1>>24&255]+"-"+_lut[63&d2|128]+_lut[d2>>8&255]+"-"+_lut[d2>>16&255]+_lut[d2>>24&255]+_lut[255&d3]+_lut[d3>>8&255]+_lut[d3>>16&255]+_lut[d3>>24&255]).toUpperCase()}(),derived.uniforms=troika_three_utils_esm_assign({},base.uniforms,options.uniforms),derived.defines=troika_three_utils_esm_assign({},base.defines,options.defines),derived.defines[`TROIKA_DERIVED_MATERIAL_${optionsKey}`]="",derived.extensions=troika_three_utils_esm_assign({},base.extensions,options.extensions),derived._listeners=void 0,derived},descriptor={constructor:{value:DerivedMaterial},isDerivedMaterial:{value:!0},customProgramCacheKey:{writable:!0,configurable:!0,value:function(){return baseMaterial.customProgramCacheKey()+"|"+optionsKey}},onBeforeCompile:{get:()=>onBeforeCompile,set(fn){this[privateBeforeCompileProp]=fn}},copy:{writable:!0,configurable:!0,value:function(source){return baseMaterial.copy.call(this,source),baseMaterial.isShaderMaterial||baseMaterial.isDerivedMaterial||(troika_three_utils_esm_assign(this.extensions,source.extensions),troika_three_utils_esm_assign(this.defines,source.defines),troika_three_utils_esm_assign(this.uniforms,three_module.UniformsUtils.clone(source.uniforms))),this}},clone:{writable:!0,configurable:!0,value:function(){const newBase=new baseMaterial.constructor;return derive(newBase).copy(this)}},getDepthMaterial:{writable:!0,configurable:!0,value:function(){let depthMaterial=this._depthMaterial;return depthMaterial||(depthMaterial=this._depthMaterial=createDerivedMaterial(baseMaterial.isDerivedMaterial?baseMaterial.getDepthMaterial():new three_module.MeshDepthMaterial({depthPacking:three_module.RGBADepthPacking}),options),depthMaterial.defines.IS_DEPTH_MATERIAL="",depthMaterial.uniforms=this.uniforms),depthMaterial}},getDistanceMaterial:{writable:!0,configurable:!0,value:function(){let distanceMaterial=this._distanceMaterial;return distanceMaterial||(distanceMaterial=this._distanceMaterial=createDerivedMaterial(baseMaterial.isDerivedMaterial?baseMaterial.getDistanceMaterial():new three_module.MeshDistanceMaterial,options),distanceMaterial.defines.IS_DISTANCE_MATERIAL="",distanceMaterial.uniforms=this.uniforms),distanceMaterial}},dispose:{writable:!0,configurable:!0,value(){const{_depthMaterial,_distanceMaterial}=this;_depthMaterial&&_depthMaterial.dispose(),_distanceMaterial&&_distanceMaterial.dispose(),baseMaterial.dispose.call(this)}}};return ctorsByDerivation[optionsKey]=DerivedMaterial,new DerivedMaterial}function injectIntoShaderCode(shaderCode,id,defs,intro,outro){return(intro||outro||defs)&&(shaderCode=shaderCode.replace(voidMainRegExp,`\n${defs}\nvoid troikaOrigMain${id}() {`),shaderCode+=`\nvoid main() {\n  ${intro}\n  troikaOrigMain${id}();\n  ${outro}\n}`),shaderCode}function optionsJsonReplacer(key,value){return"uniforms"===key?void 0:"function"==typeof value?value.toString():value}let _idCtr=0;const optionsHashesToIds=new Map;three_module.DoubleSide;three_module.Mesh;const workerModule=defineWorkerModule({name:"Typr Font Parser",dependencies:[function typrFactory(){return"undefined"==typeof window&&(self.window=self),function(r){var e={parse:function(r){var t=e._bin,a=new Uint8Array(r);if("ttcf"==t.readASCII(a,0,4)){var n=4;t.readUshort(a,n),n+=2,t.readUshort(a,n),n+=2;var o=t.readUint(a,n);n+=4;for(var s=[],i=0;i<o;i++){var h=t.readUint(a,n);n+=4,s.push(e._readFont(a,h))}return s}return[e._readFont(a,0)]},_readFont:function(r,t){var a=e._bin,n=t;a.readFixed(r,t),t+=4;var o=a.readUshort(r,t);t+=2,a.readUshort(r,t),t+=2,a.readUshort(r,t),t+=2,a.readUshort(r,t),t+=2;for(var s=["cmap","head","hhea","maxp","hmtx","name","OS/2","post","loca","glyf","kern","CFF ","GPOS","GSUB","SVG "],i={_data:r,_offset:n},h={},f=0;f<o;f++){var d=a.readASCII(r,t,4);t+=4,a.readUint(r,t),t+=4;var u=a.readUint(r,t);t+=4;var l=a.readUint(r,t);t+=4,h[d]={offset:u,length:l}}for(f=0;f<s.length;f++){var v=s[f];h[v]&&(i[v.trim()]=e[v.trim()].parse(r,h[v].offset,h[v].length,i))}return i},_tabOffset:function(r,t,a){for(var n=e._bin,o=n.readUshort(r,a+4),s=a+12,i=0;i<o;i++){var h=n.readASCII(r,s,4);s+=4,n.readUint(r,s),s+=4;var f=n.readUint(r,s);if(s+=4,n.readUint(r,s),s+=4,h==t)return f}return 0}};e._bin={readFixed:function(r,e){return(r[e]<<8|r[e+1])+(r[e+2]<<8|r[e+3])/65540},readF2dot14:function(r,t){return e._bin.readShort(r,t)/16384},readInt:function(r,t){return e._bin._view(r).getInt32(t)},readInt8:function(r,t){return e._bin._view(r).getInt8(t)},readShort:function(r,t){return e._bin._view(r).getInt16(t)},readUshort:function(r,t){return e._bin._view(r).getUint16(t)},readUshorts:function(r,t,a){for(var n=[],o=0;o<a;o++)n.push(e._bin.readUshort(r,t+2*o));return n},readUint:function(r,t){return e._bin._view(r).getUint32(t)},readUint64:function(r,t){return 4294967296*e._bin.readUint(r,t)+e._bin.readUint(r,t+4)},readASCII:function(r,e,t){for(var a="",n=0;n<t;n++)a+=String.fromCharCode(r[e+n]);return a},readUnicode:function(r,e,t){for(var a="",n=0;n<t;n++){var o=r[e++]<<8|r[e++];a+=String.fromCharCode(o)}return a},_tdec:"undefined"!=typeof window&&window.TextDecoder?new window.TextDecoder:null,readUTF8:function(r,t,a){var n=e._bin._tdec;return n&&0==t&&a==r.length?n.decode(r):e._bin.readASCII(r,t,a)},readBytes:function(r,e,t){for(var a=[],n=0;n<t;n++)a.push(r[e+n]);return a},readASCIIArray:function(r,e,t){for(var a=[],n=0;n<t;n++)a.push(String.fromCharCode(r[e+n]));return a},_view:function(r){return r._dataView||(r._dataView=r.buffer?new DataView(r.buffer,r.byteOffset,r.byteLength):new DataView(new Uint8Array(r).buffer))}},e._lctf={},e._lctf.parse=function(r,t,a,n,o){var s=e._bin,i={},h=t;s.readFixed(r,t),t+=4;var f=s.readUshort(r,t);t+=2;var d=s.readUshort(r,t);t+=2;var u=s.readUshort(r,t);return t+=2,i.scriptList=e._lctf.readScriptList(r,h+f),i.featureList=e._lctf.readFeatureList(r,h+d),i.lookupList=e._lctf.readLookupList(r,h+u,o),i},e._lctf.readLookupList=function(r,t,a){var n=e._bin,o=t,s=[],i=n.readUshort(r,t);t+=2;for(var h=0;h<i;h++){var f=n.readUshort(r,t);t+=2;var d=e._lctf.readLookupTable(r,o+f,a);s.push(d)}return s},e._lctf.readLookupTable=function(r,t,a){var n=e._bin,o=t,s={tabs:[]};s.ltype=n.readUshort(r,t),t+=2,s.flag=n.readUshort(r,t),t+=2;var i=n.readUshort(r,t);t+=2;for(var h=s.ltype,f=0;f<i;f++){var d=n.readUshort(r,t);t+=2;var u=a(r,h,o+d,s);s.tabs.push(u)}return s},e._lctf.numOfOnes=function(r){for(var e=0,t=0;t<32;t++)r>>>t&1&&e++;return e},e._lctf.readClassDef=function(r,t){var a=e._bin,n=[],o=a.readUshort(r,t);if(t+=2,1==o){var s=a.readUshort(r,t);t+=2;var i=a.readUshort(r,t);t+=2;for(var h=0;h<i;h++)n.push(s+h),n.push(s+h),n.push(a.readUshort(r,t)),t+=2}if(2==o){var f=a.readUshort(r,t);for(t+=2,h=0;h<f;h++)n.push(a.readUshort(r,t)),t+=2,n.push(a.readUshort(r,t)),t+=2,n.push(a.readUshort(r,t)),t+=2}return n},e._lctf.getInterval=function(r,e){for(var t=0;t<r.length;t+=3){var a=r[t],n=r[t+1];if(r[t+2],a<=e&&e<=n)return t}return-1},e._lctf.readCoverage=function(r,t){var a=e._bin,n={};n.fmt=a.readUshort(r,t),t+=2;var o=a.readUshort(r,t);return t+=2,1==n.fmt&&(n.tab=a.readUshorts(r,t,o)),2==n.fmt&&(n.tab=a.readUshorts(r,t,3*o)),n},e._lctf.coverageIndex=function(r,t){var a=r.tab;if(1==r.fmt)return a.indexOf(t);if(2==r.fmt){var n=e._lctf.getInterval(a,t);if(-1!=n)return a[n+2]+(t-a[n])}return-1},e._lctf.readFeatureList=function(r,t){var a=e._bin,n=t,o=[],s=a.readUshort(r,t);t+=2;for(var i=0;i<s;i++){var h=a.readASCII(r,t,4);t+=4;var f=a.readUshort(r,t);t+=2;var d=e._lctf.readFeatureTable(r,n+f);d.tag=h.trim(),o.push(d)}return o},e._lctf.readFeatureTable=function(r,t){var a=e._bin,n=t,o={},s=a.readUshort(r,t);t+=2,s>0&&(o.featureParams=n+s);var i=a.readUshort(r,t);t+=2,o.tab=[];for(var h=0;h<i;h++)o.tab.push(a.readUshort(r,t+2*h));return o},e._lctf.readScriptList=function(r,t){var a=e._bin,n=t,o={},s=a.readUshort(r,t);t+=2;for(var i=0;i<s;i++){var h=a.readASCII(r,t,4);t+=4;var f=a.readUshort(r,t);t+=2,o[h.trim()]=e._lctf.readScriptTable(r,n+f)}return o},e._lctf.readScriptTable=function(r,t){var a=e._bin,n=t,o={},s=a.readUshort(r,t);t+=2,s>0&&(o.default=e._lctf.readLangSysTable(r,n+s));var i=a.readUshort(r,t);t+=2;for(var h=0;h<i;h++){var f=a.readASCII(r,t,4);t+=4;var d=a.readUshort(r,t);t+=2,o[f.trim()]=e._lctf.readLangSysTable(r,n+d)}return o},e._lctf.readLangSysTable=function(r,t){var a=e._bin,n={};a.readUshort(r,t),t+=2,n.reqFeature=a.readUshort(r,t),t+=2;var o=a.readUshort(r,t);return t+=2,n.features=a.readUshorts(r,t,o),n},e.CFF={},e.CFF.parse=function(r,t,a){var n=e._bin;(r=new Uint8Array(r.buffer,t,a))[t=0],r[++t],r[++t],r[++t],t++;var o=[];t=e.CFF.readIndex(r,t,o);for(var s=[],i=0;i<o.length-1;i++)s.push(n.readASCII(r,t+o[i],o[i+1]-o[i]));t+=o[o.length-1];var h=[];t=e.CFF.readIndex(r,t,h);var f=[];for(i=0;i<h.length-1;i++)f.push(e.CFF.readDict(r,t+h[i],t+h[i+1]));t+=h[h.length-1];var d=f[0],u=[];t=e.CFF.readIndex(r,t,u);var l=[];for(i=0;i<u.length-1;i++)l.push(n.readASCII(r,t+u[i],u[i+1]-u[i]));if(t+=u[u.length-1],e.CFF.readSubrs(r,t,d),d.CharStrings){t=d.CharStrings,u=[],t=e.CFF.readIndex(r,t,u);var v=[];for(i=0;i<u.length-1;i++)v.push(n.readBytes(r,t+u[i],u[i+1]-u[i]));d.CharStrings=v}if(d.ROS){t=d.FDArray;var c=[];for(t=e.CFF.readIndex(r,t,c),d.FDArray=[],i=0;i<c.length-1;i++){var p=e.CFF.readDict(r,t+c[i],t+c[i+1]);e.CFF._readFDict(r,p,l),d.FDArray.push(p)}t+=c[c.length-1],t=d.FDSelect,d.FDSelect=[];var U=r[t];if(t++,3!=U)throw U;var g=n.readUshort(r,t);for(t+=2,i=0;i<g+1;i++)d.FDSelect.push(n.readUshort(r,t),r[t+2]),t+=3}return d.Encoding&&(d.Encoding=e.CFF.readEncoding(r,d.Encoding,d.CharStrings.length)),d.charset&&(d.charset=e.CFF.readCharset(r,d.charset,d.CharStrings.length)),e.CFF._readFDict(r,d,l),d},e.CFF._readFDict=function(r,t,a){var n;for(var o in t.Private&&(n=t.Private[1],t.Private=e.CFF.readDict(r,n,n+t.Private[0]),t.Private.Subrs&&e.CFF.readSubrs(r,n+t.Private.Subrs,t.Private)),t)-1!=["FamilyName","FontName","FullName","Notice","version","Copyright"].indexOf(o)&&(t[o]=a[t[o]-426+35])},e.CFF.readSubrs=function(r,t,a){var n=e._bin,o=[];t=e.CFF.readIndex(r,t,o);var s,i=o.length;s=i<1240?107:i<33900?1131:32768,a.Bias=s,a.Subrs=[];for(var h=0;h<o.length-1;h++)a.Subrs.push(n.readBytes(r,t+o[h],o[h+1]-o[h]))},e.CFF.tableSE=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,0,111,112,113,114,0,115,116,117,118,119,120,121,122,0,123,0,124,125,126,127,128,129,130,131,0,132,133,0,134,135,136,137,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,138,0,139,0,0,0,0,140,141,142,143,0,0,0,0,0,144,0,0,0,145,0,0,146,147,148,149,0,0,0,0],e.CFF.glyphByUnicode=function(r,e){for(var t=0;t<r.charset.length;t++)if(r.charset[t]==e)return t;return-1},e.CFF.glyphBySE=function(r,t){return t<0||t>255?-1:e.CFF.glyphByUnicode(r,e.CFF.tableSE[t])},e.CFF.readEncoding=function(r,t,a){e._bin;var n=[".notdef"],o=r[t];if(t++,0!=o)throw"error: unknown encoding format: "+o;var s=r[t];t++;for(var i=0;i<s;i++)n.push(r[t+i]);return n},e.CFF.readCharset=function(r,t,a){var n=e._bin,o=[".notdef"],s=r[t];if(t++,0==s)for(var i=0;i<a;i++){var h=n.readUshort(r,t);t+=2,o.push(h)}else{if(1!=s&&2!=s)throw"error: format: "+s;for(;o.length<a;){h=n.readUshort(r,t),t+=2;var f=0;for(1==s?(f=r[t],t++):(f=n.readUshort(r,t),t+=2),i=0;i<=f;i++)o.push(h),h++}}return o},e.CFF.readIndex=function(r,t,a){var n=e._bin,o=n.readUshort(r,t)+1,s=r[t+=2];if(t++,1==s)for(var i=0;i<o;i++)a.push(r[t+i]);else if(2==s)for(i=0;i<o;i++)a.push(n.readUshort(r,t+2*i));else if(3==s)for(i=0;i<o;i++)a.push(16777215&n.readUint(r,t+3*i-1));else if(1!=o)throw"unsupported offset size: "+s+", count: "+o;return(t+=o*s)-1},e.CFF.getCharString=function(r,t,a){var n=e._bin,o=r[t],s=r[t+1];r[t+2],r[t+3],r[t+4];var i=1,h=null,f=null;o<=20&&(h=o,i=1),12==o&&(h=100*o+s,i=2),21<=o&&o<=27&&(h=o,i=1),28==o&&(f=n.readShort(r,t+1),i=3),29<=o&&o<=31&&(h=o,i=1),32<=o&&o<=246&&(f=o-139,i=1),247<=o&&o<=250&&(f=256*(o-247)+s+108,i=2),251<=o&&o<=254&&(f=256*-(o-251)-s-108,i=2),255==o&&(f=n.readInt(r,t+1)/65535,i=5),a.val=null!=f?f:"o"+h,a.size=i},e.CFF.readCharString=function(r,t,a){for(var n=t+a,o=e._bin,s=[];t<n;){var i=r[t],h=r[t+1];r[t+2],r[t+3],r[t+4];var f=1,d=null,u=null;i<=20&&(d=i,f=1),12==i&&(d=100*i+h,f=2),19!=i&&20!=i||(d=i,f=2),21<=i&&i<=27&&(d=i,f=1),28==i&&(u=o.readShort(r,t+1),f=3),29<=i&&i<=31&&(d=i,f=1),32<=i&&i<=246&&(u=i-139,f=1),247<=i&&i<=250&&(u=256*(i-247)+h+108,f=2),251<=i&&i<=254&&(u=256*-(i-251)-h-108,f=2),255==i&&(u=o.readInt(r,t+1)/65535,f=5),s.push(null!=u?u:"o"+d),t+=f}return s},e.CFF.readDict=function(r,t,a){for(var n=e._bin,o={},s=[];t<a;){var i=r[t],h=r[t+1];r[t+2],r[t+3],r[t+4];var f=1,d=null,u=null;if(28==i&&(u=n.readShort(r,t+1),f=3),29==i&&(u=n.readInt(r,t+1),f=5),32<=i&&i<=246&&(u=i-139,f=1),247<=i&&i<=250&&(u=256*(i-247)+h+108,f=2),251<=i&&i<=254&&(u=256*-(i-251)-h-108,f=2),255==i)throw u=n.readInt(r,t+1)/65535,f=5,"unknown number";if(30==i){var l=[];for(f=1;;){var v=r[t+f];f++;var c=v>>4,p=15&v;if(15!=c&&l.push(c),15!=p&&l.push(p),15==p)break}for(var U="",g=[0,1,2,3,4,5,6,7,8,9,".","e","e-","reserved","-","endOfNumber"],S=0;S<l.length;S++)U+=g[l[S]];u=parseFloat(U)}i<=21&&(d=["version","Notice","FullName","FamilyName","Weight","FontBBox","BlueValues","OtherBlues","FamilyBlues","FamilyOtherBlues","StdHW","StdVW","escape","UniqueID","XUID","charset","Encoding","CharStrings","Private","Subrs","defaultWidthX","nominalWidthX"][i],f=1,12==i&&(d=["Copyright","isFixedPitch","ItalicAngle","UnderlinePosition","UnderlineThickness","PaintType","CharstringType","FontMatrix","StrokeWidth","BlueScale","BlueShift","BlueFuzz","StemSnapH","StemSnapV","ForceBold",0,0,"LanguageGroup","ExpansionFactor","initialRandomSeed","SyntheticBase","PostScript","BaseFontName","BaseFontBlend",0,0,0,0,0,0,"ROS","CIDFontVersion","CIDFontRevision","CIDFontType","CIDCount","UIDBase","FDArray","FDSelect","FontName"][h],f=2)),null!=d?(o[d]=1==s.length?s[0]:s,s=[]):s.push(u),t+=f}return o},e.cmap={},e.cmap.parse=function(r,t,a){r=new Uint8Array(r.buffer,t,a),t=0;var n=e._bin,o={};n.readUshort(r,t),t+=2;var s=n.readUshort(r,t);t+=2;var i=[];o.tables=[];for(var h=0;h<s;h++){var f=n.readUshort(r,t);t+=2;var d=n.readUshort(r,t);t+=2;var u=n.readUint(r,t);t+=4;var l="p"+f+"e"+d,v=i.indexOf(u);if(-1==v){var c;v=o.tables.length,i.push(u);var p=n.readUshort(r,u);0==p?c=e.cmap.parse0(r,u):4==p?c=e.cmap.parse4(r,u):6==p?c=e.cmap.parse6(r,u):12==p?c=e.cmap.parse12(r,u):console.debug("unknown format: "+p,f,d,u),o.tables.push(c)}if(null!=o[l])throw"multiple tables for one platform+encoding";o[l]=v}return o},e.cmap.parse0=function(r,t){var a=e._bin,n={};n.format=a.readUshort(r,t),t+=2;var o=a.readUshort(r,t);t+=2,a.readUshort(r,t),t+=2,n.map=[];for(var s=0;s<o-6;s++)n.map.push(r[t+s]);return n},e.cmap.parse4=function(r,t){var a=e._bin,n=t,o={};o.format=a.readUshort(r,t),t+=2;var s=a.readUshort(r,t);t+=2,a.readUshort(r,t),t+=2;var i=a.readUshort(r,t);t+=2;var h=i/2;o.searchRange=a.readUshort(r,t),t+=2,o.entrySelector=a.readUshort(r,t),t+=2,o.rangeShift=a.readUshort(r,t),t+=2,o.endCount=a.readUshorts(r,t,h),t+=2*h,t+=2,o.startCount=a.readUshorts(r,t,h),t+=2*h,o.idDelta=[];for(var f=0;f<h;f++)o.idDelta.push(a.readShort(r,t)),t+=2;for(o.idRangeOffset=a.readUshorts(r,t,h),t+=2*h,o.glyphIdArray=[];t<n+s;)o.glyphIdArray.push(a.readUshort(r,t)),t+=2;return o},e.cmap.parse6=function(r,t){var a=e._bin,n={};n.format=a.readUshort(r,t),t+=2,a.readUshort(r,t),t+=2,a.readUshort(r,t),t+=2,n.firstCode=a.readUshort(r,t),t+=2;var o=a.readUshort(r,t);t+=2,n.glyphIdArray=[];for(var s=0;s<o;s++)n.glyphIdArray.push(a.readUshort(r,t)),t+=2;return n},e.cmap.parse12=function(r,t){var a=e._bin,n={};n.format=a.readUshort(r,t),t+=2,t+=2,a.readUint(r,t),t+=4,a.readUint(r,t),t+=4;var o=a.readUint(r,t);t+=4,n.groups=[];for(var s=0;s<o;s++){var i=t+12*s,h=a.readUint(r,i+0),f=a.readUint(r,i+4),d=a.readUint(r,i+8);n.groups.push([h,f,d])}return n},e.glyf={},e.glyf.parse=function(r,e,t,a){for(var n=[],o=0;o<a.maxp.numGlyphs;o++)n.push(null);return n},e.glyf._parseGlyf=function(r,t){var a=e._bin,n=r._data,o=e._tabOffset(n,"glyf",r._offset)+r.loca[t];if(r.loca[t]==r.loca[t+1])return null;var s={};if(s.noc=a.readShort(n,o),o+=2,s.xMin=a.readShort(n,o),o+=2,s.yMin=a.readShort(n,o),o+=2,s.xMax=a.readShort(n,o),o+=2,s.yMax=a.readShort(n,o),o+=2,s.xMin>=s.xMax||s.yMin>=s.yMax)return null;if(s.noc>0){s.endPts=[];for(var i=0;i<s.noc;i++)s.endPts.push(a.readUshort(n,o)),o+=2;var h=a.readUshort(n,o);if(o+=2,n.length-o<h)return null;s.instructions=a.readBytes(n,o,h),o+=h;var f=s.endPts[s.noc-1]+1;for(s.flags=[],i=0;i<f;i++){var d=n[o];if(o++,s.flags.push(d),8&d){var u=n[o];o++;for(var l=0;l<u;l++)s.flags.push(d),i++}}for(s.xs=[],i=0;i<f;i++){var v=!!(2&s.flags[i]),c=!!(16&s.flags[i]);v?(s.xs.push(c?n[o]:-n[o]),o++):c?s.xs.push(0):(s.xs.push(a.readShort(n,o)),o+=2)}for(s.ys=[],i=0;i<f;i++)v=!!(4&s.flags[i]),c=!!(32&s.flags[i]),v?(s.ys.push(c?n[o]:-n[o]),o++):c?s.ys.push(0):(s.ys.push(a.readShort(n,o)),o+=2);var p=0,U=0;for(i=0;i<f;i++)p+=s.xs[i],U+=s.ys[i],s.xs[i]=p,s.ys[i]=U}else{var g;s.parts=[];do{g=a.readUshort(n,o),o+=2;var S={m:{a:1,b:0,c:0,d:1,tx:0,ty:0},p1:-1,p2:-1};if(s.parts.push(S),S.glyphIndex=a.readUshort(n,o),o+=2,1&g){var m=a.readShort(n,o);o+=2;var b=a.readShort(n,o);o+=2}else m=a.readInt8(n,o),o++,b=a.readInt8(n,o),o++;2&g?(S.m.tx=m,S.m.ty=b):(S.p1=m,S.p2=b),8&g?(S.m.a=S.m.d=a.readF2dot14(n,o),o+=2):64&g?(S.m.a=a.readF2dot14(n,o),o+=2,S.m.d=a.readF2dot14(n,o),o+=2):128&g&&(S.m.a=a.readF2dot14(n,o),o+=2,S.m.b=a.readF2dot14(n,o),o+=2,S.m.c=a.readF2dot14(n,o),o+=2,S.m.d=a.readF2dot14(n,o),o+=2)}while(32&g);if(256&g){var y=a.readUshort(n,o);for(o+=2,s.instr=[],i=0;i<y;i++)s.instr.push(n[o]),o++}}return s},e.GPOS={},e.GPOS.parse=function(r,t,a,n){return e._lctf.parse(r,t,a,n,e.GPOS.subt)},e.GPOS.subt=function(r,t,a,n){var o=e._bin,s=a,i={};if(i.fmt=o.readUshort(r,a),a+=2,1==t||2==t||3==t||7==t||8==t&&i.fmt<=2){var h=o.readUshort(r,a);a+=2,i.coverage=e._lctf.readCoverage(r,h+s)}if(1==t&&1==i.fmt){var f=o.readUshort(r,a);a+=2;var d=e._lctf.numOfOnes(f);0!=f&&(i.pos=e.GPOS.readValueRecord(r,a,f))}else if(2==t&&i.fmt>=1&&i.fmt<=2){f=o.readUshort(r,a),a+=2;var u=o.readUshort(r,a);a+=2,d=e._lctf.numOfOnes(f);var l=e._lctf.numOfOnes(u);if(1==i.fmt){i.pairsets=[];var v=o.readUshort(r,a);a+=2;for(var c=0;c<v;c++){var p=s+o.readUshort(r,a);a+=2;var U=o.readUshort(r,p);p+=2;for(var g=[],S=0;S<U;S++){var m=o.readUshort(r,p);p+=2,0!=f&&(x=e.GPOS.readValueRecord(r,p,f),p+=2*d),0!=u&&(P=e.GPOS.readValueRecord(r,p,u),p+=2*l),g.push({gid2:m,val1:x,val2:P})}i.pairsets.push(g)}}if(2==i.fmt){var b=o.readUshort(r,a);a+=2;var y=o.readUshort(r,a);a+=2;var F=o.readUshort(r,a);a+=2;var _=o.readUshort(r,a);for(a+=2,i.classDef1=e._lctf.readClassDef(r,s+b),i.classDef2=e._lctf.readClassDef(r,s+y),i.matrix=[],c=0;c<F;c++){var C=[];for(S=0;S<_;S++){var x=null,P=null;0!=f&&(x=e.GPOS.readValueRecord(r,a,f),a+=2*d),0!=u&&(P=e.GPOS.readValueRecord(r,a,u),a+=2*l),C.push({val1:x,val2:P})}i.matrix.push(C)}}}else{if(9==t&&1==i.fmt){var I=o.readUshort(r,a);a+=2;var w=o.readUint(r,a);if(a+=4,9==n.ltype)n.ltype=I;else if(n.ltype!=I)throw"invalid extension substitution";return e.GPOS.subt(r,n.ltype,s+w)}console.debug("unsupported GPOS table LookupType",t,"format",i.fmt)}return i},e.GPOS.readValueRecord=function(r,t,a){var n=e._bin,o=[];return o.push(1&a?n.readShort(r,t):0),t+=1&a?2:0,o.push(2&a?n.readShort(r,t):0),t+=2&a?2:0,o.push(4&a?n.readShort(r,t):0),t+=4&a?2:0,o.push(8&a?n.readShort(r,t):0),t+=8&a?2:0,o},e.GSUB={},e.GSUB.parse=function(r,t,a,n){return e._lctf.parse(r,t,a,n,e.GSUB.subt)},e.GSUB.subt=function(r,t,a,n){var o=e._bin,s=a,i={};if(i.fmt=o.readUshort(r,a),a+=2,1!=t&&4!=t&&5!=t&&6!=t)return null;if(1==t||4==t||5==t&&i.fmt<=2||6==t&&i.fmt<=2){var h=o.readUshort(r,a);a+=2,i.coverage=e._lctf.readCoverage(r,s+h)}if(1==t&&i.fmt>=1&&i.fmt<=2){if(1==i.fmt)i.delta=o.readShort(r,a),a+=2;else if(2==i.fmt){var f=o.readUshort(r,a);a+=2,i.newg=o.readUshorts(r,a,f),a+=2*i.newg.length}}else if(4==t){i.vals=[],f=o.readUshort(r,a),a+=2;for(var d=0;d<f;d++){var u=o.readUshort(r,a);a+=2,i.vals.push(e.GSUB.readLigatureSet(r,s+u))}}else if(5==t&&2==i.fmt){if(2==i.fmt){var l=o.readUshort(r,a);a+=2,i.cDef=e._lctf.readClassDef(r,s+l),i.scset=[];var v=o.readUshort(r,a);for(a+=2,d=0;d<v;d++){var c=o.readUshort(r,a);a+=2,i.scset.push(0==c?null:e.GSUB.readSubClassSet(r,s+c))}}}else if(6==t&&3==i.fmt){if(3==i.fmt){for(d=0;d<3;d++){f=o.readUshort(r,a),a+=2;for(var p=[],U=0;U<f;U++)p.push(e._lctf.readCoverage(r,s+o.readUshort(r,a+2*U)));a+=2*f,0==d&&(i.backCvg=p),1==d&&(i.inptCvg=p),2==d&&(i.ahedCvg=p)}f=o.readUshort(r,a),a+=2,i.lookupRec=e.GSUB.readSubstLookupRecords(r,a,f)}}else{if(7==t&&1==i.fmt){var g=o.readUshort(r,a);a+=2;var S=o.readUint(r,a);if(a+=4,9==n.ltype)n.ltype=g;else if(n.ltype!=g)throw"invalid extension substitution";return e.GSUB.subt(r,n.ltype,s+S)}console.debug("unsupported GSUB table LookupType",t,"format",i.fmt)}return i},e.GSUB.readSubClassSet=function(r,t){var a=e._bin.readUshort,n=t,o=[],s=a(r,t);t+=2;for(var i=0;i<s;i++){var h=a(r,t);t+=2,o.push(e.GSUB.readSubClassRule(r,n+h))}return o},e.GSUB.readSubClassRule=function(r,t){var a=e._bin.readUshort,n={},o=a(r,t),s=a(r,t+=2);t+=2,n.input=[];for(var i=0;i<o-1;i++)n.input.push(a(r,t)),t+=2;return n.substLookupRecords=e.GSUB.readSubstLookupRecords(r,t,s),n},e.GSUB.readSubstLookupRecords=function(r,t,a){for(var n=e._bin.readUshort,o=[],s=0;s<a;s++)o.push(n(r,t),n(r,t+2)),t+=4;return o},e.GSUB.readChainSubClassSet=function(r,t){var a=e._bin,n=t,o=[],s=a.readUshort(r,t);t+=2;for(var i=0;i<s;i++){var h=a.readUshort(r,t);t+=2,o.push(e.GSUB.readChainSubClassRule(r,n+h))}return o},e.GSUB.readChainSubClassRule=function(r,t){for(var a=e._bin,n={},o=["backtrack","input","lookahead"],s=0;s<o.length;s++){var i=a.readUshort(r,t);t+=2,1==s&&i--,n[o[s]]=a.readUshorts(r,t,i),t+=2*n[o[s]].length}return i=a.readUshort(r,t),t+=2,n.subst=a.readUshorts(r,t,2*i),t+=2*n.subst.length,n},e.GSUB.readLigatureSet=function(r,t){var a=e._bin,n=t,o=[],s=a.readUshort(r,t);t+=2;for(var i=0;i<s;i++){var h=a.readUshort(r,t);t+=2,o.push(e.GSUB.readLigature(r,n+h))}return o},e.GSUB.readLigature=function(r,t){var a=e._bin,n={chain:[]};n.nglyph=a.readUshort(r,t),t+=2;var o=a.readUshort(r,t);t+=2;for(var s=0;s<o-1;s++)n.chain.push(a.readUshort(r,t)),t+=2;return n},e.head={},e.head.parse=function(r,t,a){var n=e._bin,o={};return n.readFixed(r,t),t+=4,o.fontRevision=n.readFixed(r,t),t+=4,n.readUint(r,t),t+=4,n.readUint(r,t),t+=4,o.flags=n.readUshort(r,t),t+=2,o.unitsPerEm=n.readUshort(r,t),t+=2,o.created=n.readUint64(r,t),t+=8,o.modified=n.readUint64(r,t),t+=8,o.xMin=n.readShort(r,t),t+=2,o.yMin=n.readShort(r,t),t+=2,o.xMax=n.readShort(r,t),t+=2,o.yMax=n.readShort(r,t),t+=2,o.macStyle=n.readUshort(r,t),t+=2,o.lowestRecPPEM=n.readUshort(r,t),t+=2,o.fontDirectionHint=n.readShort(r,t),t+=2,o.indexToLocFormat=n.readShort(r,t),t+=2,o.glyphDataFormat=n.readShort(r,t),t+=2,o},e.hhea={},e.hhea.parse=function(r,t,a){var n=e._bin,o={};return n.readFixed(r,t),t+=4,o.ascender=n.readShort(r,t),t+=2,o.descender=n.readShort(r,t),t+=2,o.lineGap=n.readShort(r,t),t+=2,o.advanceWidthMax=n.readUshort(r,t),t+=2,o.minLeftSideBearing=n.readShort(r,t),t+=2,o.minRightSideBearing=n.readShort(r,t),t+=2,o.xMaxExtent=n.readShort(r,t),t+=2,o.caretSlopeRise=n.readShort(r,t),t+=2,o.caretSlopeRun=n.readShort(r,t),t+=2,o.caretOffset=n.readShort(r,t),t+=2,t+=8,o.metricDataFormat=n.readShort(r,t),t+=2,o.numberOfHMetrics=n.readUshort(r,t),t+=2,o},e.hmtx={},e.hmtx.parse=function(r,t,a,n){for(var o=e._bin,s={aWidth:[],lsBearing:[]},i=0,h=0,f=0;f<n.maxp.numGlyphs;f++)f<n.hhea.numberOfHMetrics&&(i=o.readUshort(r,t),t+=2,h=o.readShort(r,t),t+=2),s.aWidth.push(i),s.lsBearing.push(h);return s},e.kern={},e.kern.parse=function(r,t,a,n){var o=e._bin,s=o.readUshort(r,t);if(t+=2,1==s)return e.kern.parseV1(r,t-2,a,n);var i=o.readUshort(r,t);t+=2;for(var h={glyph1:[],rval:[]},f=0;f<i;f++){t+=2,a=o.readUshort(r,t),t+=2;var d=o.readUshort(r,t);t+=2;var u=d>>>8;if(0!=(u&=15))throw"unknown kern table format: "+u;t=e.kern.readFormat0(r,t,h)}return h},e.kern.parseV1=function(r,t,a,n){var o=e._bin;o.readFixed(r,t),t+=4;var s=o.readUint(r,t);t+=4;for(var i={glyph1:[],rval:[]},h=0;h<s;h++){o.readUint(r,t),t+=4;var f=o.readUshort(r,t);t+=2,o.readUshort(r,t),t+=2;var d=f>>>8;if(0!=(d&=15))throw"unknown kern table format: "+d;t=e.kern.readFormat0(r,t,i)}return i},e.kern.readFormat0=function(r,t,a){var n=e._bin,o=-1,s=n.readUshort(r,t);t+=2,n.readUshort(r,t),t+=2,n.readUshort(r,t),t+=2,n.readUshort(r,t),t+=2;for(var i=0;i<s;i++){var h=n.readUshort(r,t);t+=2;var f=n.readUshort(r,t);t+=2;var d=n.readShort(r,t);t+=2,h!=o&&(a.glyph1.push(h),a.rval.push({glyph2:[],vals:[]}));var u=a.rval[a.rval.length-1];u.glyph2.push(f),u.vals.push(d),o=h}return t},e.loca={},e.loca.parse=function(r,t,a,n){var o=e._bin,s=[],i=n.head.indexToLocFormat,h=n.maxp.numGlyphs+1;if(0==i)for(var f=0;f<h;f++)s.push(o.readUshort(r,t+(f<<1))<<1);if(1==i)for(f=0;f<h;f++)s.push(o.readUint(r,t+(f<<2)));return s},e.maxp={},e.maxp.parse=function(r,t,a){var n=e._bin,o={},s=n.readUint(r,t);return t+=4,o.numGlyphs=n.readUshort(r,t),t+=2,65536==s&&(o.maxPoints=n.readUshort(r,t),t+=2,o.maxContours=n.readUshort(r,t),t+=2,o.maxCompositePoints=n.readUshort(r,t),t+=2,o.maxCompositeContours=n.readUshort(r,t),t+=2,o.maxZones=n.readUshort(r,t),t+=2,o.maxTwilightPoints=n.readUshort(r,t),t+=2,o.maxStorage=n.readUshort(r,t),t+=2,o.maxFunctionDefs=n.readUshort(r,t),t+=2,o.maxInstructionDefs=n.readUshort(r,t),t+=2,o.maxStackElements=n.readUshort(r,t),t+=2,o.maxSizeOfInstructions=n.readUshort(r,t),t+=2,o.maxComponentElements=n.readUshort(r,t),t+=2,o.maxComponentDepth=n.readUshort(r,t),t+=2),o},e.name={},e.name.parse=function(r,t,a){var n=e._bin,o={};n.readUshort(r,t),t+=2;var s=n.readUshort(r,t);t+=2,n.readUshort(r,t);for(var i,h=["copyright","fontFamily","fontSubfamily","ID","fullName","version","postScriptName","trademark","manufacturer","designer","description","urlVendor","urlDesigner","licence","licenceURL","---","typoFamilyName","typoSubfamilyName","compatibleFull","sampleText","postScriptCID","wwsFamilyName","wwsSubfamilyName","lightPalette","darkPalette"],f=t+=2,d=0;d<s;d++){var u=n.readUshort(r,t);t+=2;var l=n.readUshort(r,t);t+=2;var v=n.readUshort(r,t);t+=2;var c=n.readUshort(r,t);t+=2;var p=n.readUshort(r,t);t+=2;var U=n.readUshort(r,t);t+=2;var g,S=h[c],m=f+12*s+U;if(0==u)g=n.readUnicode(r,m,p/2);else if(3==u&&0==l)g=n.readUnicode(r,m,p/2);else if(0==l)g=n.readASCII(r,m,p);else if(1==l)g=n.readUnicode(r,m,p/2);else if(3==l)g=n.readUnicode(r,m,p/2);else{if(1!=u)throw"unknown encoding "+l+", platformID: "+u;g=n.readASCII(r,m,p),console.debug("reading unknown MAC encoding "+l+" as ASCII")}var b="p"+u+","+v.toString(16);null==o[b]&&(o[b]={}),o[b][void 0!==S?S:c]=g,o[b]._lang=v}for(var y in o)if(null!=o[y].postScriptName&&1033==o[y]._lang)return o[y];for(var y in o)if(null!=o[y].postScriptName&&0==o[y]._lang)return o[y];for(var y in o)if(null!=o[y].postScriptName&&3084==o[y]._lang)return o[y];for(var y in o)if(null!=o[y].postScriptName)return o[y];for(var y in o){i=y;break}return console.debug("returning name table with languageID "+o[i]._lang),o[i]},e["OS/2"]={},e["OS/2"].parse=function(r,t,a){var n=e._bin.readUshort(r,t);t+=2;var o={};if(0==n)e["OS/2"].version0(r,t,o);else if(1==n)e["OS/2"].version1(r,t,o);else if(2==n||3==n||4==n)e["OS/2"].version2(r,t,o);else{if(5!=n)throw"unknown OS/2 table version: "+n;e["OS/2"].version5(r,t,o)}return o},e["OS/2"].version0=function(r,t,a){var n=e._bin;return a.xAvgCharWidth=n.readShort(r,t),t+=2,a.usWeightClass=n.readUshort(r,t),t+=2,a.usWidthClass=n.readUshort(r,t),t+=2,a.fsType=n.readUshort(r,t),t+=2,a.ySubscriptXSize=n.readShort(r,t),t+=2,a.ySubscriptYSize=n.readShort(r,t),t+=2,a.ySubscriptXOffset=n.readShort(r,t),t+=2,a.ySubscriptYOffset=n.readShort(r,t),t+=2,a.ySuperscriptXSize=n.readShort(r,t),t+=2,a.ySuperscriptYSize=n.readShort(r,t),t+=2,a.ySuperscriptXOffset=n.readShort(r,t),t+=2,a.ySuperscriptYOffset=n.readShort(r,t),t+=2,a.yStrikeoutSize=n.readShort(r,t),t+=2,a.yStrikeoutPosition=n.readShort(r,t),t+=2,a.sFamilyClass=n.readShort(r,t),t+=2,a.panose=n.readBytes(r,t,10),t+=10,a.ulUnicodeRange1=n.readUint(r,t),t+=4,a.ulUnicodeRange2=n.readUint(r,t),t+=4,a.ulUnicodeRange3=n.readUint(r,t),t+=4,a.ulUnicodeRange4=n.readUint(r,t),t+=4,a.achVendID=[n.readInt8(r,t),n.readInt8(r,t+1),n.readInt8(r,t+2),n.readInt8(r,t+3)],t+=4,a.fsSelection=n.readUshort(r,t),t+=2,a.usFirstCharIndex=n.readUshort(r,t),t+=2,a.usLastCharIndex=n.readUshort(r,t),t+=2,a.sTypoAscender=n.readShort(r,t),t+=2,a.sTypoDescender=n.readShort(r,t),t+=2,a.sTypoLineGap=n.readShort(r,t),t+=2,a.usWinAscent=n.readUshort(r,t),t+=2,a.usWinDescent=n.readUshort(r,t),t+2},e["OS/2"].version1=function(r,t,a){var n=e._bin;return t=e["OS/2"].version0(r,t,a),a.ulCodePageRange1=n.readUint(r,t),t+=4,a.ulCodePageRange2=n.readUint(r,t),t+4},e["OS/2"].version2=function(r,t,a){var n=e._bin;return t=e["OS/2"].version1(r,t,a),a.sxHeight=n.readShort(r,t),t+=2,a.sCapHeight=n.readShort(r,t),t+=2,a.usDefault=n.readUshort(r,t),t+=2,a.usBreak=n.readUshort(r,t),t+=2,a.usMaxContext=n.readUshort(r,t),t+2},e["OS/2"].version5=function(r,t,a){var n=e._bin;return t=e["OS/2"].version2(r,t,a),a.usLowerOpticalPointSize=n.readUshort(r,t),t+=2,a.usUpperOpticalPointSize=n.readUshort(r,t),t+2},e.post={},e.post.parse=function(r,t,a){var n=e._bin,o={};return o.version=n.readFixed(r,t),t+=4,o.italicAngle=n.readFixed(r,t),t+=4,o.underlinePosition=n.readShort(r,t),t+=2,o.underlineThickness=n.readShort(r,t),t+=2,o},null==e&&(e={}),null==e.U&&(e.U={}),e.U.codeToGlyph=function(r,e){var t=r.cmap,a=-1;if(null!=t.p0e4?a=t.p0e4:null!=t.p3e1?a=t.p3e1:null!=t.p1e0?a=t.p1e0:null!=t.p0e3&&(a=t.p0e3),-1==a)throw"no familiar platform and encoding!";var n=t.tables[a];if(0==n.format)return e>=n.map.length?0:n.map[e];if(4==n.format){for(var o=-1,s=0;s<n.endCount.length;s++)if(e<=n.endCount[s]){o=s;break}return-1==o||n.startCount[o]>e?0:65535&(0!=n.idRangeOffset[o]?n.glyphIdArray[e-n.startCount[o]+(n.idRangeOffset[o]>>1)-(n.idRangeOffset.length-o)]:e+n.idDelta[o])}if(12==n.format){if(e>n.groups[n.groups.length-1][1])return 0;for(s=0;s<n.groups.length;s++){var i=n.groups[s];if(i[0]<=e&&e<=i[1])return i[2]+(e-i[0])}return 0}throw"unknown cmap table format "+n.format},e.U.glyphToPath=function(r,t){var a={cmds:[],crds:[]};if(r.SVG&&r.SVG.entries[t]){var n=r.SVG.entries[t];return null==n?a:("string"==typeof n&&(n=e.SVG.toPath(n),r.SVG.entries[t]=n),n)}if(r.CFF){var o={x:0,y:0,stack:[],nStems:0,haveWidth:!1,width:r.CFF.Private?r.CFF.Private.defaultWidthX:0,open:!1},s=r.CFF,i=r.CFF.Private;if(s.ROS){for(var h=0;s.FDSelect[h+2]<=t;)h+=2;i=s.FDArray[s.FDSelect[h+1]].Private}e.U._drawCFF(r.CFF.CharStrings[t],o,s,i,a)}else r.glyf&&e.U._drawGlyf(t,r,a);return a},e.U._drawGlyf=function(r,t,a){var n=t.glyf[r];null==n&&(n=t.glyf[r]=e.glyf._parseGlyf(t,r)),null!=n&&(n.noc>-1?e.U._simpleGlyph(n,a):e.U._compoGlyph(n,t,a))},e.U._simpleGlyph=function(r,t){for(var a=0;a<r.noc;a++){for(var n=0==a?0:r.endPts[a-1]+1,o=r.endPts[a],s=n;s<=o;s++){var i=s==n?o:s-1,h=s==o?n:s+1,f=1&r.flags[s],d=1&r.flags[i],u=1&r.flags[h],l=r.xs[s],v=r.ys[s];if(s==n)if(f){if(!d){e.U.P.moveTo(t,l,v);continue}e.U.P.moveTo(t,r.xs[i],r.ys[i])}else d?e.U.P.moveTo(t,r.xs[i],r.ys[i]):e.U.P.moveTo(t,(r.xs[i]+l)/2,(r.ys[i]+v)/2);f?d&&e.U.P.lineTo(t,l,v):u?e.U.P.qcurveTo(t,l,v,r.xs[h],r.ys[h]):e.U.P.qcurveTo(t,l,v,(l+r.xs[h])/2,(v+r.ys[h])/2)}e.U.P.closePath(t)}},e.U._compoGlyph=function(r,t,a){for(var n=0;n<r.parts.length;n++){var o={cmds:[],crds:[]},s=r.parts[n];e.U._drawGlyf(s.glyphIndex,t,o);for(var i=s.m,h=0;h<o.crds.length;h+=2){var f=o.crds[h],d=o.crds[h+1];a.crds.push(f*i.a+d*i.b+i.tx),a.crds.push(f*i.c+d*i.d+i.ty)}for(h=0;h<o.cmds.length;h++)a.cmds.push(o.cmds[h])}},e.U._getGlyphClass=function(r,t){var a=e._lctf.getInterval(t,r);return-1==a?0:t[a+2]},e.U.getPairAdjustment=function(r,t,a){var n=!1;if(r.GPOS)for(var o=r.GPOS,s=o.lookupList,i=o.featureList,h=[],f=0;f<i.length;f++){var d=i[f];if("kern"==d.tag){n=!0;for(var u=0;u<d.tab.length;u++)if(!h[d.tab[u]]){h[d.tab[u]]=!0;for(var l=s[d.tab[u]],v=0;v<l.tabs.length;v++)if(null!=l.tabs[v]){var c,p=l.tabs[v];if(!p.coverage||-1!=(c=e._lctf.coverageIndex(p.coverage,t)))if(1==l.ltype);else if(2==l.ltype){var U=null;if(1==p.fmt){var g=p.pairsets[c];for(f=0;f<g.length;f++)g[f].gid2==a&&(U=g[f])}else if(2==p.fmt){var S=e.U._getGlyphClass(t,p.classDef1),m=e.U._getGlyphClass(a,p.classDef2);U=p.matrix[S][m]}if(U){var b=0;return U.val1&&U.val1[2]&&(b+=U.val1[2]),U.val2&&U.val2[0]&&(b+=U.val2[0]),b}}}}}}if(r.kern&&!n){var y=r.kern.glyph1.indexOf(t);if(-1!=y){var F=r.kern.rval[y].glyph2.indexOf(a);if(-1!=F)return r.kern.rval[y].vals[F]}}return 0},e.U._applySubs=function(r,t,a,n){for(var o=r.length-t-1,s=0;s<a.tabs.length;s++)if(null!=a.tabs[s]){var i,h=a.tabs[s];if(!h.coverage||-1!=(i=e._lctf.coverageIndex(h.coverage,r[t])))if(1==a.ltype)r[t],1==h.fmt?r[t]=r[t]+h.delta:r[t]=h.newg[i];else if(4==a.ltype)for(var f=h.vals[i],d=0;d<f.length;d++){var u=f[d],l=u.chain.length;if(!(l>o)){for(var v=!0,c=0,p=0;p<l;p++){for(;-1==r[t+c+(1+p)];)c++;u.chain[p]!=r[t+c+(1+p)]&&(v=!1)}if(v){for(r[t]=u.nglyph,p=0;p<l+c;p++)r[t+p+1]=-1;break}}}else if(5==a.ltype&&2==h.fmt)for(var U=e._lctf.getInterval(h.cDef,r[t]),g=h.cDef[U+2],S=h.scset[g],m=0;m<S.length;m++){var b=S[m],y=b.input;if(!(y.length>o)){for(v=!0,p=0;p<y.length;p++){var F=e._lctf.getInterval(h.cDef,r[t+1+p]);if(-1==U&&h.cDef[F+2]!=y[p]){v=!1;break}}if(v){var _=b.substLookupRecords;for(d=0;d<_.length;d+=2)_[d],_[d+1]}}}else if(6==a.ltype&&3==h.fmt){if(!e.U._glsCovered(r,h.backCvg,t-h.backCvg.length))continue;if(!e.U._glsCovered(r,h.inptCvg,t))continue;if(!e.U._glsCovered(r,h.ahedCvg,t+h.inptCvg.length))continue;var C=h.lookupRec;for(m=0;m<C.length;m+=2){U=C[m];var x=n[C[m+1]];e.U._applySubs(r,t+U,x,n)}}}},e.U._glsCovered=function(r,t,a){for(var n=0;n<t.length;n++)if(-1==e._lctf.coverageIndex(t[n],r[a+n]))return!1;return!0},e.U.glyphsToPath=function(r,t,a){for(var n={cmds:[],crds:[]},o=0,s=0;s<t.length;s++){var i=t[s];if(-1!=i){for(var h=s<t.length-1&&-1!=t[s+1]?t[s+1]:0,f=e.U.glyphToPath(r,i),d=0;d<f.crds.length;d+=2)n.crds.push(f.crds[d]+o),n.crds.push(f.crds[d+1]);for(a&&n.cmds.push(a),d=0;d<f.cmds.length;d++)n.cmds.push(f.cmds[d]);a&&n.cmds.push("X"),o+=r.hmtx.aWidth[i],s<t.length-1&&(o+=e.U.getPairAdjustment(r,i,h))}}return n},e.U.P={},e.U.P.moveTo=function(r,e,t){r.cmds.push("M"),r.crds.push(e,t)},e.U.P.lineTo=function(r,e,t){r.cmds.push("L"),r.crds.push(e,t)},e.U.P.curveTo=function(r,e,t,a,n,o,s){r.cmds.push("C"),r.crds.push(e,t,a,n,o,s)},e.U.P.qcurveTo=function(r,e,t,a,n){r.cmds.push("Q"),r.crds.push(e,t,a,n)},e.U.P.closePath=function(r){r.cmds.push("Z")},e.U._drawCFF=function(r,t,a,n,o){for(var s=t.stack,i=t.nStems,h=t.haveWidth,f=t.width,d=t.open,u=0,l=t.x,v=t.y,c=0,p=0,U=0,g=0,S=0,m=0,b=0,y=0,F=0,_=0,C={val:0,size:0};u<r.length;){e.CFF.getCharString(r,u,C);var x=C.val;if(u+=C.size,"o1"==x||"o18"==x)s.length%2!=0&&!h&&(f=s.shift()+n.nominalWidthX),i+=s.length>>1,s.length=0,h=!0;else if("o3"==x||"o23"==x)s.length%2!=0&&!h&&(f=s.shift()+n.nominalWidthX),i+=s.length>>1,s.length=0,h=!0;else if("o4"==x)s.length>1&&!h&&(f=s.shift()+n.nominalWidthX,h=!0),d&&e.U.P.closePath(o),v+=s.pop(),e.U.P.moveTo(o,l,v),d=!0;else if("o5"==x)for(;s.length>0;)l+=s.shift(),v+=s.shift(),e.U.P.lineTo(o,l,v);else if("o6"==x||"o7"==x)for(var P=s.length,I="o6"==x,w=0;w<P;w++){var O=s.shift();I?l+=O:v+=O,I=!I,e.U.P.lineTo(o,l,v)}else if("o8"==x||"o24"==x){P=s.length;for(var T=0;T+6<=P;)c=l+s.shift(),p=v+s.shift(),U=c+s.shift(),g=p+s.shift(),l=U+s.shift(),v=g+s.shift(),e.U.P.curveTo(o,c,p,U,g,l,v),T+=6;"o24"==x&&(l+=s.shift(),v+=s.shift(),e.U.P.lineTo(o,l,v))}else{if("o11"==x)break;if("o1234"==x||"o1235"==x||"o1236"==x||"o1237"==x)"o1234"==x&&(p=v,U=(c=l+s.shift())+s.shift(),_=g=p+s.shift(),m=g,y=v,l=(b=(S=(F=U+s.shift())+s.shift())+s.shift())+s.shift(),e.U.P.curveTo(o,c,p,U,g,F,_),e.U.P.curveTo(o,S,m,b,y,l,v)),"o1235"==x&&(c=l+s.shift(),p=v+s.shift(),U=c+s.shift(),g=p+s.shift(),F=U+s.shift(),_=g+s.shift(),S=F+s.shift(),m=_+s.shift(),b=S+s.shift(),y=m+s.shift(),l=b+s.shift(),v=y+s.shift(),s.shift(),e.U.P.curveTo(o,c,p,U,g,F,_),e.U.P.curveTo(o,S,m,b,y,l,v)),"o1236"==x&&(c=l+s.shift(),p=v+s.shift(),U=c+s.shift(),_=g=p+s.shift(),m=g,b=(S=(F=U+s.shift())+s.shift())+s.shift(),y=m+s.shift(),l=b+s.shift(),e.U.P.curveTo(o,c,p,U,g,F,_),e.U.P.curveTo(o,S,m,b,y,l,v)),"o1237"==x&&(c=l+s.shift(),p=v+s.shift(),U=c+s.shift(),g=p+s.shift(),F=U+s.shift(),_=g+s.shift(),S=F+s.shift(),m=_+s.shift(),b=S+s.shift(),y=m+s.shift(),Math.abs(b-l)>Math.abs(y-v)?l=b+s.shift():v=y+s.shift(),e.U.P.curveTo(o,c,p,U,g,F,_),e.U.P.curveTo(o,S,m,b,y,l,v));else if("o14"==x){if(s.length>0&&!h&&(f=s.shift()+a.nominalWidthX,h=!0),4==s.length){var k=s.shift(),G=s.shift(),D=s.shift(),B=s.shift(),L=e.CFF.glyphBySE(a,D),R=e.CFF.glyphBySE(a,B);e.U._drawCFF(a.CharStrings[L],t,a,n,o),t.x=k,t.y=G,e.U._drawCFF(a.CharStrings[R],t,a,n,o)}d&&(e.U.P.closePath(o),d=!1)}else if("o19"==x||"o20"==x)s.length%2!=0&&!h&&(f=s.shift()+n.nominalWidthX),i+=s.length>>1,s.length=0,h=!0,u+=i+7>>3;else if("o21"==x)s.length>2&&!h&&(f=s.shift()+n.nominalWidthX,h=!0),v+=s.pop(),l+=s.pop(),d&&e.U.P.closePath(o),e.U.P.moveTo(o,l,v),d=!0;else if("o22"==x)s.length>1&&!h&&(f=s.shift()+n.nominalWidthX,h=!0),l+=s.pop(),d&&e.U.P.closePath(o),e.U.P.moveTo(o,l,v),d=!0;else if("o25"==x){for(;s.length>6;)l+=s.shift(),v+=s.shift(),e.U.P.lineTo(o,l,v);c=l+s.shift(),p=v+s.shift(),U=c+s.shift(),g=p+s.shift(),l=U+s.shift(),v=g+s.shift(),e.U.P.curveTo(o,c,p,U,g,l,v)}else if("o26"==x)for(s.length%2&&(l+=s.shift());s.length>0;)c=l,p=v+s.shift(),l=U=c+s.shift(),v=(g=p+s.shift())+s.shift(),e.U.P.curveTo(o,c,p,U,g,l,v);else if("o27"==x)for(s.length%2&&(v+=s.shift());s.length>0;)p=v,U=(c=l+s.shift())+s.shift(),g=p+s.shift(),l=U+s.shift(),v=g,e.U.P.curveTo(o,c,p,U,g,l,v);else if("o10"==x||"o29"==x){var A="o10"==x?n:a;if(0==s.length)console.debug("error: empty stack");else{var W=s.pop(),M=A.Subrs[W+A.Bias];t.x=l,t.y=v,t.nStems=i,t.haveWidth=h,t.width=f,t.open=d,e.U._drawCFF(M,t,a,n,o),l=t.x,v=t.y,i=t.nStems,h=t.haveWidth,f=t.width,d=t.open}}else if("o30"==x||"o31"==x){var V=s.length,N=(T=0,"o31"==x);for(T+=V-(P=-3&V);T<P;)N?(p=v,U=(c=l+s.shift())+s.shift(),v=(g=p+s.shift())+s.shift(),P-T==5?(l=U+s.shift(),T++):l=U,N=!1):(c=l,p=v+s.shift(),U=c+s.shift(),g=p+s.shift(),l=U+s.shift(),P-T==5?(v=g+s.shift(),T++):v=g,N=!0),e.U.P.curveTo(o,c,p,U,g,l,v),T+=4}else{if("o"==(x+"").charAt(0))throw console.debug("Unknown operation: "+x,r),x;s.push(x)}}}t.x=l,t.y=v,t.nStems=i,t.haveWidth=h,t.width=f,t.open=d};var t=e,a={Typr:t};return r.Typr=t,r.default=a,Object.defineProperty(r,"__esModule",{value:!0}),r}({}).Typr},function woff2otfFactory(){return function(r){var e=Uint8Array,n=Uint16Array,t=Uint32Array,a=new e([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),i=new e([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),o=new e([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),f=function(r,e){for(var a=new n(31),i=0;i<31;++i)a[i]=e+=1<<r[i-1];var o=new t(a[30]);for(i=1;i<30;++i)for(var f=a[i];f<a[i+1];++f)o[f]=f-a[i]<<5|i;return[a,o]},u=f(a,2),v=u[0],s=u[1];v[28]=258,s[258]=28;for(var l=f(i,0)[0],c=new n(32768),g=0;g<32768;++g){var h=(43690&g)>>>1|(21845&g)<<1;h=(61680&(h=(52428&h)>>>2|(13107&h)<<2))>>>4|(3855&h)<<4,c[g]=((65280&h)>>>8|(255&h)<<8)>>>1}var w=function(r,e,t){for(var a=r.length,i=0,o=new n(e);i<a;++i)++o[r[i]-1];var f,u=new n(e);for(i=0;i<e;++i)u[i]=u[i-1]+o[i-1]<<1;if(t){f=new n(1<<e);var v=15-e;for(i=0;i<a;++i)if(r[i])for(var s=i<<4|r[i],l=e-r[i],g=u[r[i]-1]++<<l,h=g|(1<<l)-1;g<=h;++g)f[c[g]>>>v]=s}else for(f=new n(a),i=0;i<a;++i)r[i]&&(f[i]=c[u[r[i]-1]++]>>>15-r[i]);return f},d=new e(288);for(g=0;g<144;++g)d[g]=8;for(g=144;g<256;++g)d[g]=9;for(g=256;g<280;++g)d[g]=7;for(g=280;g<288;++g)d[g]=8;var m=new e(32);for(g=0;g<32;++g)m[g]=5;var b=w(d,9,1),p=w(m,5,1),y=function(r){for(var e=r[0],n=1;n<r.length;++n)r[n]>e&&(e=r[n]);return e},L=function(r,e,n){var t=e/8|0;return(r[t]|r[t+1]<<8)>>(7&e)&n},U=function(r,e){var n=e/8|0;return(r[n]|r[n+1]<<8|r[n+2]<<16)>>(7&e)},k=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],T=function(r,e,n){var t=new Error(e||k[r]);if(t.code=r,Error.captureStackTrace&&Error.captureStackTrace(t,T),!n)throw t;return t},O=function(r,f,u){var s=r.length;if(!s||u&&!u.l&&s<5)return f||new e(0);var c=!f||u,g=!u||u.i;u||(u={}),f||(f=new e(3*s));var h,d=function(r){var n=f.length;if(r>n){var t=new e(Math.max(2*n,r));t.set(f),f=t}},m=u.f||0,k=u.p||0,O=u.b||0,A=u.l,x=u.d,E=u.m,D=u.n,M=8*s;do{if(!A){u.f=m=L(r,k,1);var S=L(r,k+1,3);if(k+=3,!S){var V=r[(I=((h=k)/8|0)+(7&h&&1)+4)-4]|r[I-3]<<8,_=I+V;if(_>s){g&&T(0);break}c&&d(O+V),f.set(r.subarray(I,_),O),u.b=O+=V,u.p=k=8*_;continue}if(1==S)A=b,x=p,E=9,D=5;else if(2==S){var j=L(r,k,31)+257,z=L(r,k+10,15)+4,C=j+L(r,k+5,31)+1;k+=14;for(var F=new e(C),P=new e(19),q=0;q<z;++q)P[o[q]]=L(r,k+3*q,7);k+=3*z;var B=y(P),G=(1<<B)-1,H=w(P,B,1);for(q=0;q<C;){var I,J=H[L(r,k,G)];if(k+=15&J,(I=J>>>4)<16)F[q++]=I;else{var K=0,N=0;for(16==I?(N=3+L(r,k,3),k+=2,K=F[q-1]):17==I?(N=3+L(r,k,7),k+=3):18==I&&(N=11+L(r,k,127),k+=7);N--;)F[q++]=K}}var Q=F.subarray(0,j),R=F.subarray(j);E=y(Q),D=y(R),A=w(Q,E,1),x=w(R,D,1)}else T(1);if(k>M){g&&T(0);break}}c&&d(O+131072);for(var W=(1<<E)-1,X=(1<<D)-1,Y=k;;Y=k){var Z=(K=A[U(r,k)&W])>>>4;if((k+=15&K)>M){g&&T(0);break}if(K||T(2),Z<256)f[O++]=Z;else{if(256==Z){Y=k,A=null;break}var $=Z-254;if(Z>264){var rr=a[q=Z-257];$=L(r,k,(1<<rr)-1)+v[q],k+=rr}var er=x[U(r,k)&X],nr=er>>>4;if(er||T(3),k+=15&er,R=l[nr],nr>3&&(rr=i[nr],R+=U(r,k)&(1<<rr)-1,k+=rr),k>M){g&&T(0);break}c&&d(O+131072);for(var tr=O+$;O<tr;O+=4)f[O]=f[O-R],f[O+1]=f[O+1-R],f[O+2]=f[O+2-R],f[O+3]=f[O+3-R];O=tr}}u.l=A,u.p=Y,u.b=O,A&&(m=1,u.m=E,u.d=x,u.n=D)}while(!m);return O==f.length?f:function(r,a,i){(null==a||a<0)&&(a=0),(null==i||i>r.length)&&(i=r.length);var o=new(r instanceof n?n:r instanceof t?t:e)(i-a);return o.set(r.subarray(a,i)),o}(f,0,O)},A=new e(0),x="undefined"!=typeof TextDecoder&&new TextDecoder;try{x.decode(A,{stream:!0})}catch(r){}return r.convert_streams=function(r){var e=new DataView(r),n=0;function t(){var r=e.getUint16(n);return n+=2,r}function a(){var r=e.getUint32(n);return n+=4,r}function i(r){m.setUint16(b,r),b+=2}function o(r){m.setUint32(b,r),b+=4}for(var f={signature:a(),flavor:a(),length:a(),numTables:t(),reserved:t(),totalSfntSize:a(),majorVersion:t(),minorVersion:t(),metaOffset:a(),metaLength:a(),metaOrigLength:a(),privOffset:a(),privLength:a()},u=0;Math.pow(2,u)<=f.numTables;)u++;u--;for(var v=16*Math.pow(2,u),s=16*f.numTables-v,l=12,c=[],g=0;g<f.numTables;g++)c.push({tag:a(),offset:a(),compLength:a(),origLength:a(),origChecksum:a()}),l+=16;var h,w=new Uint8Array(12+16*c.length+c.reduce((function(r,e){return r+e.origLength+4}),0)),d=w.buffer,m=new DataView(d),b=0;return o(f.flavor),i(f.numTables),i(v),i(u),i(s),c.forEach((function(r){o(r.tag),o(r.origChecksum),o(l),o(r.origLength),r.outOffset=l,(l+=r.origLength)%4!=0&&(l+=4-l%4)})),c.forEach((function(e){var n,t=r.slice(e.offset,e.offset+e.compLength);if(e.compLength!=e.origLength){var a=new Uint8Array(e.origLength);n=new Uint8Array(t,2),O(n,a)}else a=new Uint8Array(t);w.set(a,e.outOffset);var i=0;(l=e.outOffset+e.origLength)%4!=0&&(i=4-l%4),w.set(new Uint8Array(i).buffer,e.outOffset+e.origLength),h=l+i})),d.slice(0,h)},Object.defineProperty(r,"__esModule",{value:!0}),r}({}).convert_streams},function parserFactory(Typr,woff2otf){const cmdArgLengths={M:2,L:2,Q:4,C:6,Z:0},joiningTypeRawData={C:"18g,ca,368,1kz",D:"17k,6,2,2+4,5+c,2+6,2+1,10+1,9+f,j+11,2+1,a,2,2+1,15+2,3,j+2,6+3,2+8,2,2,2+1,w+a,4+e,3+3,2,3+2,3+5,23+w,2f+4,3,2+9,2,b,2+3,3,1k+9,6+1,3+1,2+2,2+d,30g,p+y,1,1+1g,f+x,2,sd2+1d,jf3+4,f+3,2+4,2+2,b+3,42,2,4+2,2+1,2,3,t+1,9f+w,2,el+2,2+g,d+2,2l,2+1,5,3+1,2+1,2,3,6,16wm+1v",R:"17m+3,2,2,6+3,m,15+2,2+2,h+h,13,3+8,2,2,3+1,2,p+1,x,5+4,5,a,2,2,3,u,c+2,g+1,5,2+1,4+1,5j,6+1,2,b,2+2,f,2+1,1s+2,2,3+1,7,1ez0,2,2+1,4+4,b,4,3,b,42,2+2,4,3,2+1,2,o+3,ae,ep,x,2o+2,3+1,3,5+1,6",L:"x9u,jff,a,fd,jv",T:"4t,gj+33,7o+4,1+1,7c+18,2,2+1,2+1,2,21+a,2,1b+k,h,2u+6,3+5,3+1,2+3,y,2,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,3,7,6+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+d,1,1+1,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,ek,3+1,r+4,1e+4,6+5,2p+c,1+3,1,1+2,1+b,2db+2,3y,2p+v,ff+3,30+1,n9x,1+2,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,5s,6y+2,ea,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+9,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2,2b+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,470+8,at4+4,1o+6,t5,1s+3,2a,f5l+1,2+3,43o+2,a+7,1+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,1,gzau,v+2n,3l+6n"},JT_LEFT=1,JT_RIGHT=2,JT_DUAL=4,JT_TRANSPARENT=8,JT_JOIN_CAUSING=16,JT_NON_JOINING=32;let joiningTypeMap;function getCharJoiningType(ch){if(!joiningTypeMap){const m={R:JT_RIGHT,L:JT_LEFT,D:JT_DUAL,C:JT_JOIN_CAUSING,U:JT_NON_JOINING,T:JT_TRANSPARENT};joiningTypeMap=new Map;for(let type in joiningTypeRawData){let lastCode=0;joiningTypeRawData[type].split(",").forEach((range=>{let[skip,step]=range.split("+");skip=parseInt(skip,36),step=step?parseInt(step,36):0,joiningTypeMap.set(lastCode+=skip,m[type]);for(let i=step;i--;)joiningTypeMap.set(++lastCode,m[type])}))}}return joiningTypeMap.get(ch)||JT_NON_JOINING}const ISOL=1,INIT=2,FINA=3,MEDI=4,formsToFeatures=[null,"isol","init","fina","medi"];function detectJoiningForms(str){const joiningForms=new Uint8Array(str.length);let prevJoiningType=JT_NON_JOINING,prevForm=ISOL,prevIndex=-1;for(let i=0;i<str.length;i++){const code=str.codePointAt(i);let joiningType=0|getCharJoiningType(code),form=ISOL;joiningType&JT_TRANSPARENT||(prevJoiningType&(JT_LEFT|JT_DUAL|JT_JOIN_CAUSING)?joiningType&(JT_RIGHT|JT_DUAL|JT_JOIN_CAUSING)?(form=FINA,prevForm!==ISOL&&prevForm!==FINA||joiningForms[prevIndex]++):joiningType&(JT_LEFT|JT_NON_JOINING)&&(prevForm!==INIT&&prevForm!==MEDI||joiningForms[prevIndex]--):prevJoiningType&(JT_RIGHT|JT_NON_JOINING)&&(prevForm!==INIT&&prevForm!==MEDI||joiningForms[prevIndex]--),prevForm=joiningForms[i]=form,prevJoiningType=joiningType,prevIndex=i,code>65535&&i++)}return joiningForms}function firstNum(...args){for(let i=0;i<args.length;i++)if("number"==typeof args[i])return args[i]}function wrapFontObj(typrFont){const glyphMap=Object.create(null),os2=typrFont["OS/2"],hhea=typrFont.hhea,unitsPerEm=typrFont.head.unitsPerEm,ascender=firstNum(os2&&os2.sTypoAscender,hhea&&hhea.ascender,unitsPerEm),fontObj={unitsPerEm,ascender,descender:firstNum(os2&&os2.sTypoDescender,hhea&&hhea.descender,0),capHeight:firstNum(os2&&os2.sCapHeight,ascender),xHeight:firstNum(os2&&os2.sxHeight,ascender),lineGap:firstNum(os2&&os2.sTypoLineGap,hhea&&hhea.lineGap),supportsCodePoint:code=>Typr.U.codeToGlyph(typrFont,code)>0,forEachGlyph(text,fontSize,letterSpacing,callback){let glyphX=0;const fontScale=1/fontObj.unitsPerEm*fontSize,glyphIndices=function stringToGlyphs(font,str){const glyphIds=[];for(let i=0;i<str.length;i++){const cc=str.codePointAt(i);cc>65535&&i++,glyphIds.push(Typr.U.codeToGlyph(font,cc))}const gsub=font.GSUB;if(gsub){const{lookupList,featureList}=gsub;let joiningForms;const supportedFeatures=/^(rlig|liga|mset|isol|init|fina|medi|half|pres|blws)$/,usedLookups=[];featureList.forEach((feature=>{if(supportedFeatures.test(feature.tag))for(let ti=0;ti<feature.tab.length;ti++){if(usedLookups[feature.tab[ti]])continue;usedLookups[feature.tab[ti]]=!0;const tab=lookupList[feature.tab[ti]],isJoiningFeature=/^(isol|init|fina|medi)$/.test(feature.tag);isJoiningFeature&&!joiningForms&&(joiningForms=detectJoiningForms(str));for(let ci=0;ci<glyphIds.length;ci++)joiningForms&&isJoiningFeature&&formsToFeatures[joiningForms[ci]]!==feature.tag||Typr.U._applySubs(glyphIds,ci,tab,lookupList)}}))}return glyphIds}(typrFont,text);let charIndex=0,prevGlyphIndex=-1;return glyphIndices.forEach(((glyphIndex,i)=>{if(-1!==glyphIndex){let glyphObj=glyphMap[glyphIndex];if(!glyphObj){const{cmds,crds}=Typr.U.glyphToPath(typrFont,glyphIndex);let xMin,yMin,xMax,yMax,path="",crdsIdx=0;for(let i=0,len=cmds.length;i<len;i++){const numArgs=cmdArgLengths[cmds[i]];path+=cmds[i];for(let j=1;j<=numArgs;j++)path+=(j>1?",":"")+crds[crdsIdx++]}if(crds.length){xMin=yMin=1/0,xMax=yMax=-1/0;for(let i=0,len=crds.length;i<len;i+=2){let x=crds[i],y=crds[i+1];x<xMin&&(xMin=x),y<yMin&&(yMin=y),x>xMax&&(xMax=x),y>yMax&&(yMax=y)}}else xMin=xMax=yMin=yMax=0;glyphObj=glyphMap[glyphIndex]={index:glyphIndex,advanceWidth:typrFont.hmtx.aWidth[glyphIndex],xMin,yMin,xMax,yMax,path,pathCommandCount:cmds.length}}-1!==prevGlyphIndex&&(glyphX+=Typr.U.getPairAdjustment(typrFont,prevGlyphIndex,glyphIndex)*fontScale),callback.call(null,glyphObj,glyphX,charIndex),glyphObj.advanceWidth&&(glyphX+=glyphObj.advanceWidth*fontScale),letterSpacing&&(glyphX+=letterSpacing*fontSize),prevGlyphIndex=glyphIndex}charIndex+=text.codePointAt(charIndex)>65535?2:1})),glyphX}};return fontObj}return function parse(buffer){const peek=new Uint8Array(buffer,0,4),tag=Typr._bin.readASCII(peek,0,4);if("wOFF"===tag)buffer=woff2otf(buffer);else if("wOF2"===tag)throw new Error("woff2 fonts not supported");return wrapFontObj(Typr.parse(buffer)[0])}}],init:(typrFactory,woff2otfFactory,parserFactory)=>parserFactory(typrFactory(),woff2otfFactory())});const fontResolverWorkerModule=defineWorkerModule({name:"FontResolver",dependencies:[function createFontResolver(fontParser,unicodeFontResolverClient){const parsedFonts=Object.create(null),loadingFonts=Object.create(null);function loadFont(fontUrl,callback){let font=parsedFonts[fontUrl];font?callback(font):loadingFonts[fontUrl]?loadingFonts[fontUrl].push(callback):(loadingFonts[fontUrl]=[callback],function doLoadFont(url,callback){const onError=err=>{console.error(`Failure loading font ${url}`,err)};try{const request=new XMLHttpRequest;request.open("get",url,!0),request.responseType="arraybuffer",request.onload=function(){if(request.status>=400)onError(new Error(request.statusText));else if(request.status>0)try{const fontObj=fontParser(request.response);fontObj.src=url,callback(fontObj)}catch(e){onError(e)}},request.onerror=onError,request.send()}catch(err){onError(err)}}(fontUrl,(fontObj=>{fontObj.src=fontUrl,parsedFonts[fontUrl]=fontObj,loadingFonts[fontUrl].forEach((cb=>cb(fontObj))),delete loadingFonts[fontUrl]})))}return function(text,callback,{lang,fonts:userFonts=[],style="normal",weight="normal",unicodeFontsURL}={}){const charResolutions=new Uint8Array(text.length),fontResolutions=[];text.length||allDone();const fontIndices=new Map,fallbackRanges=[];if("italic"!==style&&(style="normal"),"number"!=typeof weight&&(weight="bold"===weight?700:400),userFonts&&!Array.isArray(userFonts)&&(userFonts=[userFonts]),(userFonts=userFonts.slice().filter((def=>!def.lang||def.lang.test(lang))).reverse()).length){const RESOLVED=1,NEEDS_FALLBACK=2;let prevCharResult=0;!function resolveUserFonts(startIndex=0){for(let i=startIndex,iLen=text.length;i<iLen;i++){const codePoint=text.codePointAt(i);if(prevCharResult===RESOLVED&&fontResolutions[charResolutions[i-1]].supportsCodePoint(codePoint)||/\s/.test(text[i]))charResolutions[i]=charResolutions[i-1],prevCharResult===NEEDS_FALLBACK&&(fallbackRanges[fallbackRanges.length-1][1]=i);else for(let j=charResolutions[i],jLen=userFonts.length;j<=jLen;j++)if(j===jLen){(prevCharResult===NEEDS_FALLBACK?fallbackRanges[fallbackRanges.length-1]:fallbackRanges[fallbackRanges.length]=[i,i])[1]=i,prevCharResult=NEEDS_FALLBACK}else{charResolutions[i]=j;const{src,unicodeRange}=userFonts[j];if(!unicodeRange||isCodeInRanges(codePoint,unicodeRange)){const fontObj=parsedFonts[src];if(!fontObj)return void loadFont(src,(()=>{resolveUserFonts(i)}));if(fontObj.supportsCodePoint(codePoint)){let fontIndex=fontIndices.get(fontObj);"number"!=typeof fontIndex&&(fontIndex=fontResolutions.length,fontResolutions.push(fontObj),fontIndices.set(fontObj,fontIndex)),charResolutions[i]=fontIndex,prevCharResult=RESOLVED;break}}}codePoint>65535&&i+1<iLen&&(charResolutions[i+1]=charResolutions[i],i++,prevCharResult===NEEDS_FALLBACK&&(fallbackRanges[fallbackRanges.length-1][1]=i))}resolveFallbacks()}()}else fallbackRanges.push([0,text.length-1]),resolveFallbacks();function resolveFallbacks(){if(fallbackRanges.length){const fallbackString=fallbackRanges.map((range=>text.substring(range[0],range[1]+1))).join("\n");unicodeFontResolverClient.getFontsForString(fallbackString,{lang:lang||void 0,style,weight,dataUrl:unicodeFontsURL}).then((({fontUrls,chars})=>{const fontIndexOffset=fontResolutions.length;let charIdx=0;fallbackRanges.forEach((range=>{for(let i=0,endIdx=range[1]-range[0];i<=endIdx;i++)charResolutions[range[0]+i]=chars[charIdx++]+fontIndexOffset;charIdx++}));let loadedCount=0;fontUrls.forEach(((url,i)=>{loadFont(url,(fontObj=>{fontResolutions[i+fontIndexOffset]=fontObj,++loadedCount===fontUrls.length&&allDone()}))}))}))}else allDone()}function allDone(){callback({chars:charResolutions,fonts:fontResolutions})}function isCodeInRanges(code,ranges){for(let k=0;k<ranges.length;k++){const[start,end=start]=ranges[k];if(start<=code&&code<=end)return!0}return!1}}},workerModule,function unicodeFontResolverClientFactory(){return function(t){var n=function(){this.buckets=new Map};n.prototype.add=function(t){var n=t>>5;this.buckets.set(n,(this.buckets.get(n)||0)|1<<(31&t))},n.prototype.has=function(t){var n=this.buckets.get(t>>5);return void 0!==n&&!!(n&1<<(31&t))},n.prototype.serialize=function(){var t=[];return this.buckets.forEach((function(n,r){t.push((+r).toString(36)+":"+n.toString(36))})),t.join(",")},n.prototype.deserialize=function(t){var n=this;this.buckets.clear(),t.split(",").forEach((function(t){var r=t.split(":");n.buckets.set(parseInt(r[0],36),parseInt(r[1],36))}))};var r=Math.pow(2,8),e=r-1,o=~e;function a(t){var n=function(t){return t&o}(t).toString(16),e=function(t){return(t&o)+r-1}(t).toString(16);return"codepoint-index/plane"+(t>>16)+"/"+n+"-"+e+".json"}function i(t,n){var r=t&e,o=n.codePointAt(r/6|0);return!!((o=(o||48)-48)&1<<r%6)}function c(t,n){!function u(t,n){var r;(r=t,r.replace(/U\+/gi,"").replace(/^,+|,+$/g,"").split(/,+/).map((function(t){return t.split("-").map((function(t){return parseInt(t.trim(),16)}))}))).forEach((function(t){var r=t[0],e=t[1];void 0===e&&(e=r),n(r,e)}))}(t,(function(t,r){for(var e=t;e<=r;e++)n(e)}))}var s={},f={},l=new WeakMap,v="https://cdn.jsdelivr.net/gh/lojjic/unicode-font-resolver@v1.0.1/packages/data";function d(t){var r=l.get(t);return r||(r=new n,c(t.ranges,(function(t){return r.add(t)})),l.set(t,r)),r}var h,p=new Map;function g(t,n,r){return t[n]?n:t[r]?r:function(t){for(var n in t)return n}(t)}function w(t,n){var r=n;if(!t.includes(r)){r=1/0;for(var e=0;e<t.length;e++)Math.abs(t[e]-n)<Math.abs(r-n)&&(r=t[e])}return r}function k(t){return h||(h=new Set,c("9-D,20,85,A0,1680,2000-200A,2028-202F,205F,3000",(function(t){h.add(t)}))),h.has(t)}return t.CodePointSet=n,t.clearCache=function(){s={},f={}},t.getFontsForString=function(t,n){void 0===n&&(n={});var r,e=n.lang;void 0===e&&(e=/\p{Script=Hangul}/u.test(r=t)?"ko":/\p{Script=Hiragana}|\p{Script=Katakana}/u.test(r)?"ja":"en");var o=n.category;void 0===o&&(o="sans-serif");var u=n.style;void 0===u&&(u="normal");var c=n.weight;void 0===c&&(c=400);var l=(n.dataUrl||v).replace(/\/$/g,""),h=new Map,y=new Uint8Array(t.length),b={},m={},A=new Array(t.length),S=new Map,j=!1;function M(t){var n=p.get(t);return n||(n=fetch(l+"/"+t).then((function(t){if(!t.ok)throw new Error(t.statusText);return t.json().then((function(t){if(!Array.isArray(t)||1!==t[0])throw new Error("Incorrect schema version; need 1, got "+t[0]);return t[1]}))})).catch((function(n){if(l!==v)return j||(console.error('unicode-font-resolver: Failed loading from dataUrl "'+l+'", trying default CDN. '+n.message),j=!0),l=v,p.delete(t),M(t);throw n})),p.set(t,n)),n}for(var P=function(n){var r=t.codePointAt(n),e=a(r);A[n]=e,s[e]||S.has(e)||S.set(e,M(e).then((function(t){s[e]=t}))),r>65535&&(n++,E=n)},E=0;E<t.length;E++)P(E);return Promise.all(S.values()).then((function(){S.clear();for(var n=function(n){var o=t.codePointAt(n),a=null,u=s[A[n]],c=void 0;for(var l in u){var v=m[l];if(void 0===v&&(v=m[l]=new RegExp(l).test(e||"en")),v){for(var d in c=l,u[l])if(i(o,u[l][d])){a=d;break}break}}if(!a)t:for(var h in u)if(h!==c)for(var p in u[h])if(i(o,u[h][p])){a=p;break t}a||(console.debug("No font coverage for U+"+o.toString(16)),a="latin"),A[n]=a,f[a]||S.has(a)||S.set(a,M("font-meta/"+a+".json").then((function(t){f[a]=t}))),o>65535&&(n++,r=n)},r=0;r<t.length;r++)n(r);return Promise.all(S.values())})).then((function(){for(var n,r=null,e=0;e<t.length;e++){var a=t.codePointAt(e);if(r&&(k(a)||d(r).has(a)))y[e]=y[e-1];else{r=f[A[e]];var i=b[r.id];if(!i){var s=r.typeforms,v=g(s,o,"sans-serif"),p=g(s[v],u,"normal"),m=w(null===(n=s[v])||void 0===n?void 0:n[p],c);i=b[r.id]=l+"/font-files/"+r.id+"/"+v+"."+p+"."+m+".woff"}var S=h.get(i);null==S&&(S=h.size,h.set(i,S)),y[e]=S}a>65535&&(e++,y[e]=y[e-1])}return{fontUrls:Array.from(h.keys()),chars:y}}))},Object.defineProperty(t,"__esModule",{value:!0}),t}({})}],init:(createFontResolver,fontParser,unicodeFontResolverClientFactory)=>createFontResolver(fontParser,unicodeFontResolverClientFactory())});const now=()=>(self.performance||Date).now(),mainThreadGenerator=SDFGenerator();let warned;const queue=[];let timer=0;function nextChunk(){const start=now();for(;queue.length&&now()-start<5;)queue.shift()();timer=queue.length?setTimeout(nextChunk,0):0}const generateSDF_GL=(...args)=>new Promise(((resolve,reject)=>{queue.push((()=>{const start=now();try{mainThreadGenerator.webgl.generateIntoCanvas(...args),resolve({timing:now()-start})}catch(err){reject(err)}})),timer||(timer=setTimeout(nextChunk,0))})),threadCount=4,idleTimeout=2e3,threads={};let callNum=0;function generateSDF_JS_Worker(width,height,path,viewBox,distance,exponent,canvas,x,y,channel){const workerId="TroikaTextSDFGenerator_JS_"+callNum++%threadCount;let thread=threads[workerId];return thread||(thread=threads[workerId]={workerModule:defineWorkerModule({name:workerId,workerId,dependencies:[SDFGenerator,now],init(_createSDFGenerator,now){const generate=_createSDFGenerator().javascript.generate;return function(...args){const start=now();return{textureData:generate(...args),timing:now()-start}}},getTransferables:result=>[result.textureData.buffer]}),requests:0,idleTimer:null}),thread.requests++,clearTimeout(thread.idleTimer),thread.workerModule(width,height,path,viewBox,distance,exponent).then((({textureData,timing})=>{const start=now(),imageData=new Uint8Array(4*textureData.length);for(let i=0;i<textureData.length;i++)imageData[4*i+channel]=textureData[i];return mainThreadGenerator.webglUtils.renderImageData(canvas,imageData,x,y,width,height,1<<3-channel),timing+=now()-start,0==--thread.requests&&(thread.idleTimer=setTimeout((()=>{!function terminateWorker(workerId){registeredModules[workerId]&&registeredModules[workerId].forEach((function(unregister){unregister()})),workers[workerId]&&(workers[workerId].terminate(),delete workers[workerId])}(workerId)}),idleTimeout)),{timing}}))}const resizeWebGLCanvasWithoutClearing=mainThreadGenerator.webglUtils.resizeWebGLCanvasWithoutClearing,CONFIG={defaultFontURL:null,unicodeFontsURL:null,sdfGlyphSize:64,sdfMargin:1/16,sdfExponent:9,textureWidth:2048},tempColor=new three_module.Color;let hasRequested=!1;function now$1(){return(self.performance||Date).now()}const atlases=Object.create(null);function getTextRenderInfo(args,callback){hasRequested=!0,args=troika_three_text_esm_assign({},args);const totalStart=now$1(),{defaultFontURL}=CONFIG,fonts=[];if(defaultFontURL&&fonts.push({label:"default",src:toAbsoluteURL(defaultFontURL)}),args.font&&fonts.push({label:"user",src:toAbsoluteURL(args.font)}),args.font=fonts,args.text=""+args.text,args.sdfGlyphSize=args.sdfGlyphSize||CONFIG.sdfGlyphSize,args.unicodeFontsURL=args.unicodeFontsURL||CONFIG.unicodeFontsURL,null!=args.colorRanges){let colors={};for(let key in args.colorRanges)if(args.colorRanges.hasOwnProperty(key)){let val=args.colorRanges[key];"number"!=typeof val&&(val=tempColor.set(val).getHex()),colors[key]=val}args.colorRanges=colors}Object.freeze(args);const{textureWidth,sdfExponent}=CONFIG,{sdfGlyphSize}=args,glyphsPerRow=textureWidth/sdfGlyphSize*4;let atlas=atlases[sdfGlyphSize];if(!atlas){const canvas=document.createElement("canvas");canvas.width=textureWidth,canvas.height=256*sdfGlyphSize/glyphsPerRow,atlas=atlases[sdfGlyphSize]={glyphCount:0,sdfGlyphSize,sdfCanvas:canvas,sdfTexture:new three_module.Texture(canvas,void 0,void 0,void 0,three_module.LinearFilter,three_module.LinearFilter),contextLost:!1,glyphsByFont:new Map},atlas.sdfTexture.generateMipmaps=!1,function initContextLossHandling(atlas){const canvas=atlas.sdfCanvas;canvas.addEventListener("webglcontextlost",(event=>{console.log("Context Lost",event),event.preventDefault(),atlas.contextLost=!0})),canvas.addEventListener("webglcontextrestored",(event=>{console.log("Context Restored",event),atlas.contextLost=!1;const promises=[];atlas.glyphsByFont.forEach((glyphMap=>{glyphMap.forEach((glyph=>{promises.push(generateGlyphSDF(glyph,atlas,!0))}))})),Promise.all(promises).then((()=>{safariPre15Workaround(atlas),atlas.sdfTexture.needsUpdate=!0}))}))}(atlas)}const{sdfTexture,sdfCanvas}=atlas;typesetInWorker(args).then((result=>{const{glyphIds,glyphFontIndices,fontData,glyphPositions,fontSize,timings}=result,neededSDFs=[],glyphBounds=new Float32Array(4*glyphIds.length);let boundsIdx=0,positionsIdx=0;const quadsStart=now$1(),fontGlyphMaps=fontData.map((font=>{let map=atlas.glyphsByFont.get(font.src);return map||atlas.glyphsByFont.set(font.src,map=new Map),map}));glyphIds.forEach(((glyphId,i)=>{const fontIndex=glyphFontIndices[i],{src:fontSrc,unitsPerEm}=fontData[fontIndex];let glyphInfo=fontGlyphMaps[fontIndex].get(glyphId);if(!glyphInfo){const{path,pathBounds}=result.glyphData[fontSrc][glyphId],fontUnitsMargin=Math.max(pathBounds[2]-pathBounds[0],pathBounds[3]-pathBounds[1])/sdfGlyphSize*(CONFIG.sdfMargin*sdfGlyphSize+.5),atlasIndex=atlas.glyphCount++,sdfViewBox=[pathBounds[0]-fontUnitsMargin,pathBounds[1]-fontUnitsMargin,pathBounds[2]+fontUnitsMargin,pathBounds[3]+fontUnitsMargin];fontGlyphMaps[fontIndex].set(glyphId,glyphInfo={path,atlasIndex,sdfViewBox}),neededSDFs.push(glyphInfo)}const{sdfViewBox}=glyphInfo,posX=glyphPositions[positionsIdx++],posY=glyphPositions[positionsIdx++],fontSizeMult=fontSize/unitsPerEm;glyphBounds[boundsIdx++]=posX+sdfViewBox[0]*fontSizeMult,glyphBounds[boundsIdx++]=posY+sdfViewBox[1]*fontSizeMult,glyphBounds[boundsIdx++]=posX+sdfViewBox[2]*fontSizeMult,glyphBounds[boundsIdx++]=posY+sdfViewBox[3]*fontSizeMult,glyphIds[i]=glyphInfo.atlasIndex})),timings.quads=(timings.quads||0)+(now$1()-quadsStart);const sdfStart=now$1();timings.sdf={};const currentHeight=sdfCanvas.height,neededRows=Math.ceil(atlas.glyphCount/glyphsPerRow),neededHeight=Math.pow(2,Math.ceil(Math.log2(neededRows*sdfGlyphSize)));neededHeight>currentHeight&&(console.info(`Increasing SDF texture size ${currentHeight}->${neededHeight}`),resizeWebGLCanvasWithoutClearing(sdfCanvas,textureWidth,neededHeight),sdfTexture.dispose()),Promise.all(neededSDFs.map((glyphInfo=>generateGlyphSDF(glyphInfo,atlas,args.gpuAccelerateSDF).then((({timing})=>{timings.sdf[glyphInfo.atlasIndex]=timing}))))).then((()=>{neededSDFs.length&&!atlas.contextLost&&(safariPre15Workaround(atlas),sdfTexture.needsUpdate=!0),timings.sdfTotal=now$1()-sdfStart,timings.total=now$1()-totalStart,callback(Object.freeze({parameters:args,sdfTexture,sdfGlyphSize,sdfExponent,glyphBounds,glyphAtlasIndices:glyphIds,glyphColors:result.glyphColors,caretPositions:result.caretPositions,chunkedBounds:result.chunkedBounds,ascender:result.ascender,descender:result.descender,lineHeight:result.lineHeight,capHeight:result.capHeight,xHeight:result.xHeight,topBaseline:result.topBaseline,blockBounds:result.blockBounds,visibleBounds:result.visibleBounds,timings:result.timings}))}))})),Promise.resolve().then((()=>{atlas.contextLost||function warmUpSDFCanvas(canvas){canvas._warm||(mainThreadGenerator.webgl.isSupported(canvas),canvas._warm=!0)}(sdfCanvas)}))}function generateGlyphSDF({path,atlasIndex,sdfViewBox},{sdfGlyphSize,sdfCanvas,contextLost},useGPU){if(contextLost)return Promise.resolve({timing:-1});const{textureWidth,sdfExponent}=CONFIG,maxDist=Math.max(sdfViewBox[2]-sdfViewBox[0],sdfViewBox[3]-sdfViewBox[1]),squareIndex=Math.floor(atlasIndex/4);return function generateSDF(width,height,path,viewBox,distance,exponent,canvas,x,y,channel,useWebGL=!0){return useWebGL?generateSDF_GL(width,height,path,viewBox,distance,exponent,canvas,x,y,channel).then(null,(err=>(warned||(console.warn("WebGL SDF generation failed, falling back to JS",err),warned=!0),generateSDF_JS_Worker(width,height,path,viewBox,distance,exponent,canvas,x,y,channel)))):generateSDF_JS_Worker(width,height,path,viewBox,distance,exponent,canvas,x,y,channel)}(sdfGlyphSize,sdfGlyphSize,path,sdfViewBox,maxDist,sdfExponent,sdfCanvas,squareIndex%(textureWidth/sdfGlyphSize)*sdfGlyphSize,Math.floor(squareIndex/(textureWidth/sdfGlyphSize))*sdfGlyphSize,atlasIndex%4,useGPU)}function troika_three_text_esm_assign(toObj,fromObj){for(let key in fromObj)fromObj.hasOwnProperty(key)&&(toObj[key]=fromObj[key]);return toObj}let linkEl;function toAbsoluteURL(path){return linkEl||(linkEl="undefined"==typeof document?{}:document.createElement("a")),linkEl.href=path,linkEl.href}function safariPre15Workaround(atlas){if("function"!=typeof createImageBitmap){console.info("Safari<15: applying SDF canvas workaround");const{sdfCanvas,sdfTexture}=atlas,{width,height}=sdfCanvas,gl=atlas.sdfCanvas.getContext("webgl");let pixels=sdfTexture.image.data;pixels&&pixels.length===width*height*4||(pixels=new Uint8Array(width*height*4),sdfTexture.image={width,height,data:pixels},sdfTexture.flipY=!1,sdfTexture.isDataTexture=!0),gl.readPixels(0,0,width,height,gl.RGBA,gl.UNSIGNED_BYTE,pixels)}}const typesetterWorkerModule=defineWorkerModule({name:"Typesetter",dependencies:[function createTypesetter(resolveFonts,bidi){const INF=1/0,DEFAULT_IGNORABLE_CHARS=/[\u00AD\u034F\u061C\u115F-\u1160\u17B4-\u17B5\u180B-\u180E\u200B-\u200F\u202A-\u202E\u2060-\u206F\u3164\uFE00-\uFE0F\uFEFF\uFFA0\uFFF0-\uFFF8]/,lineBreakingWhiteSpace="[^\\S\\u00A0]",BREAK_AFTER_CHARS=new RegExp(`${lineBreakingWhiteSpace}|[\\-\\u007C\\u00AD\\u2010\\u2012-\\u2014\\u2027\\u2056\\u2E17\\u2E40]`);function typeset({text="",font,lang,sdfGlyphSize=64,fontSize=400,fontWeight=1,fontStyle="normal",letterSpacing=0,lineHeight="normal",maxWidth=INF,direction,textAlign="left",textIndent=0,whiteSpace="normal",overflowWrap="normal",anchorX=0,anchorY=0,metricsOnly=!1,unicodeFontsURL,preResolvedFonts=null,includeCaretPositions=!1,chunkedBoundsSize=8192,colorRanges=null},callback){const mainStart=now(),timings={fontLoad:0,typesetting:0};text.indexOf("\r")>-1&&(console.info("Typesetter: got text with \\r chars; normalizing to \\n"),text=text.replace(/\r\n/g,"\n").replace(/\r/g,"\n")),fontSize=+fontSize,letterSpacing=+letterSpacing,maxWidth=+maxWidth,lineHeight=lineHeight||"normal",textIndent=+textIndent,function calculateFontRuns({text,lang,fonts,style,weight,preResolvedFonts,unicodeFontsURL},onDone){const onResolved=({chars,fonts:parsedFonts})=>{let curRun,prevVal;const runs=[];for(let i=0;i<chars.length;i++)chars[i]!==prevVal?(prevVal=chars[i],runs.push(curRun={start:i,end:i,fontObj:parsedFonts[chars[i]]})):curRun.end=i;onDone(runs)};preResolvedFonts?onResolved(preResolvedFonts):resolveFonts(text,onResolved,{lang,fonts,style,weight,unicodeFontsURL})}({text,lang,style:fontStyle,weight:fontWeight,fonts:"string"==typeof font?[{src:font}]:font,unicodeFontsURL,preResolvedFonts},(runs=>{timings.fontLoad=now()-mainStart;const hasMaxWidth=isFinite(maxWidth);let glyphIds=null,glyphFontIndices=null,glyphPositions=null,glyphData=null,glyphColors=null,caretPositions=null,visibleBounds=null,chunkedBounds=null,maxLineWidth=0,renderableGlyphCount=0,canWrap="nowrap"!==whiteSpace;const metricsByFont=new Map,typesetStart=now();let lineXOffset=textIndent,prevRunEndX=0,currentLine=new TextLine;const lines=[currentLine];runs.forEach((run=>{const{fontObj}=run,{ascender,descender,unitsPerEm,lineGap,capHeight,xHeight}=fontObj;let fontData=metricsByFont.get(fontObj);if(!fontData){const fontSizeMult=fontSize/unitsPerEm,calcLineHeight="normal"===lineHeight?(ascender-descender+lineGap)*fontSizeMult:lineHeight*fontSize,halfLeading=(calcLineHeight-(ascender-descender)*fontSizeMult)/2,caretHeight=Math.min(calcLineHeight,(ascender-descender)*fontSizeMult),caretTop=(ascender+descender)/2*fontSizeMult+caretHeight/2;fontData={index:metricsByFont.size,src:fontObj.src,fontObj,fontSizeMult,unitsPerEm,ascender:ascender*fontSizeMult,descender:descender*fontSizeMult,capHeight:capHeight*fontSizeMult,xHeight:xHeight*fontSizeMult,lineHeight:calcLineHeight,baseline:-halfLeading-ascender*fontSizeMult,caretTop:(ascender+descender)/2*fontSizeMult+caretHeight/2,caretBottom:caretTop-caretHeight},metricsByFont.set(fontObj,fontData)}const{fontSizeMult}=fontData,runText=text.slice(run.start,run.end+1);let prevGlyphX,prevGlyphObj;fontObj.forEachGlyph(runText,fontSize,letterSpacing,((glyphObj,glyphX,charIndex)=>{glyphX+=prevRunEndX,charIndex+=run.start,prevGlyphX=glyphX,prevGlyphObj=glyphObj;const char=text.charAt(charIndex),glyphWidth=glyphObj.advanceWidth*fontSizeMult,curLineCount=currentLine.count;let nextLine;if("isEmpty"in glyphObj||(glyphObj.isWhitespace=!!char&&new RegExp(lineBreakingWhiteSpace).test(char),glyphObj.canBreakAfter=!!char&&BREAK_AFTER_CHARS.test(char),glyphObj.isEmpty=glyphObj.xMin===glyphObj.xMax||glyphObj.yMin===glyphObj.yMax||DEFAULT_IGNORABLE_CHARS.test(char)),glyphObj.isWhitespace||glyphObj.isEmpty||renderableGlyphCount++,canWrap&&hasMaxWidth&&!glyphObj.isWhitespace&&glyphX+glyphWidth+lineXOffset>maxWidth&&curLineCount){if(currentLine.glyphAt(curLineCount-1).glyphObj.canBreakAfter)nextLine=new TextLine,lineXOffset=-glyphX;else for(let i=curLineCount;i--;){if(0===i&&"break-word"===overflowWrap){nextLine=new TextLine,lineXOffset=-glyphX;break}if(currentLine.glyphAt(i).glyphObj.canBreakAfter){nextLine=currentLine.splitAt(i+1);const adjustX=nextLine.glyphAt(0).x;lineXOffset-=adjustX;for(let j=nextLine.count;j--;)nextLine.glyphAt(j).x-=adjustX;break}}nextLine&&(currentLine.isSoftWrapped=!0,currentLine=nextLine,lines.push(currentLine),maxLineWidth=maxWidth)}let fly=currentLine.glyphAt(currentLine.count);fly.glyphObj=glyphObj,fly.x=glyphX+lineXOffset,fly.width=glyphWidth,fly.charIndex=charIndex,fly.fontData=fontData,"\n"===char&&(currentLine=new TextLine,lines.push(currentLine),lineXOffset=-(glyphX+glyphWidth+letterSpacing*fontSize)+textIndent)})),prevRunEndX=prevGlyphX+prevGlyphObj.advanceWidth*fontSizeMult+letterSpacing*fontSize}));let totalHeight=0;lines.forEach((line=>{let isTrailingWhitespace=!0;for(let i=line.count;i--;){const glyphInfo=line.glyphAt(i);isTrailingWhitespace&&!glyphInfo.glyphObj.isWhitespace&&(line.width=glyphInfo.x+glyphInfo.width,line.width>maxLineWidth&&(maxLineWidth=line.width),isTrailingWhitespace=!1);let{lineHeight,capHeight,xHeight,baseline}=glyphInfo.fontData;lineHeight>line.lineHeight&&(line.lineHeight=lineHeight);const baselineDiff=baseline-line.baseline;baselineDiff<0&&(line.baseline+=baselineDiff,line.cap+=baselineDiff,line.ex+=baselineDiff),line.cap=Math.max(line.cap,line.baseline+capHeight),line.ex=Math.max(line.ex,line.baseline+xHeight)}line.baseline-=totalHeight,line.cap-=totalHeight,line.ex-=totalHeight,totalHeight+=line.lineHeight}));let anchorXOffset=0,anchorYOffset=0;if(anchorX&&("number"==typeof anchorX?anchorXOffset=-anchorX:"string"==typeof anchorX&&(anchorXOffset=-maxLineWidth*("left"===anchorX?0:"center"===anchorX?.5:"right"===anchorX?1:parsePercent(anchorX)))),anchorY&&("number"==typeof anchorY?anchorYOffset=-anchorY:"string"==typeof anchorY&&(anchorYOffset="top"===anchorY?0:"top-baseline"===anchorY?-lines[0].baseline:"top-cap"===anchorY?-lines[0].cap:"top-ex"===anchorY?-lines[0].ex:"middle"===anchorY?totalHeight/2:"bottom"===anchorY?totalHeight:"bottom-baseline"===anchorY?lines[lines.length-1].baseline:parsePercent(anchorY)*totalHeight)),!metricsOnly){const bidiLevelsResult=bidi.getEmbeddingLevels(text,direction);glyphIds=new Uint16Array(renderableGlyphCount),glyphFontIndices=new Uint8Array(renderableGlyphCount),glyphPositions=new Float32Array(2*renderableGlyphCount),glyphData={},visibleBounds=[INF,INF,-INF,-INF],chunkedBounds=[],includeCaretPositions&&(caretPositions=new Float32Array(4*text.length)),colorRanges&&(glyphColors=new Uint8Array(3*renderableGlyphCount));let chunk,currentColor,renderableGlyphIndex=0,prevCharIndex=-1,colorCharIndex=-1;if(lines.forEach(((line,lineIndex)=>{let{count:lineGlyphCount,width:lineWidth}=line;if(lineGlyphCount>0){let trailingWhitespaceCount=0;for(let i=lineGlyphCount;i--&&line.glyphAt(i).glyphObj.isWhitespace;)trailingWhitespaceCount++;let lineXOffset=0,justifyAdjust=0;if("center"===textAlign)lineXOffset=(maxLineWidth-lineWidth)/2;else if("right"===textAlign)lineXOffset=maxLineWidth-lineWidth;else if("justify"===textAlign&&line.isSoftWrapped){let whitespaceCount=0;for(let i=lineGlyphCount-trailingWhitespaceCount;i--;)line.glyphAt(i).glyphObj.isWhitespace&&whitespaceCount++;justifyAdjust=(maxLineWidth-lineWidth)/whitespaceCount}if(justifyAdjust||lineXOffset){let justifyOffset=0;for(let i=0;i<lineGlyphCount;i++){let glyphInfo=line.glyphAt(i);const glyphObj=glyphInfo.glyphObj;glyphInfo.x+=lineXOffset+justifyOffset,0!==justifyAdjust&&glyphObj.isWhitespace&&i<lineGlyphCount-trailingWhitespaceCount&&(justifyOffset+=justifyAdjust,glyphInfo.width+=justifyAdjust)}}const flips=bidi.getReorderSegments(text,bidiLevelsResult,line.glyphAt(0).charIndex,line.glyphAt(line.count-1).charIndex);for(let fi=0;fi<flips.length;fi++){const[start,end]=flips[fi];let left=1/0,right=-1/0;for(let i=0;i<lineGlyphCount;i++)if(line.glyphAt(i).charIndex>=start){let startInLine=i,endInLine=i;for(;endInLine<lineGlyphCount;endInLine++){let info=line.glyphAt(endInLine);if(info.charIndex>end)break;endInLine<lineGlyphCount-trailingWhitespaceCount&&(left=Math.min(left,info.x),right=Math.max(right,info.x+info.width))}for(let j=startInLine;j<endInLine;j++){const glyphInfo=line.glyphAt(j);glyphInfo.x=right-(glyphInfo.x+glyphInfo.width-left)}break}}let glyphObj;const setGlyphObj=g=>glyphObj=g;for(let i=0;i<lineGlyphCount;i++){const glyphInfo=line.glyphAt(i);glyphObj=glyphInfo.glyphObj;const glyphId=glyphObj.index,rtl=1&bidiLevelsResult.levels[glyphInfo.charIndex];if(rtl){const mirrored=bidi.getMirroredCharacter(text[glyphInfo.charIndex]);mirrored&&glyphInfo.fontData.fontObj.forEachGlyph(mirrored,0,0,setGlyphObj)}if(includeCaretPositions){const{charIndex,fontData}=glyphInfo,caretLeft=glyphInfo.x+anchorXOffset,caretRight=glyphInfo.x+glyphInfo.width+anchorXOffset;caretPositions[4*charIndex]=rtl?caretRight:caretLeft,caretPositions[4*charIndex+1]=rtl?caretLeft:caretRight,caretPositions[4*charIndex+2]=line.baseline+fontData.caretBottom+anchorYOffset,caretPositions[4*charIndex+3]=line.baseline+fontData.caretTop+anchorYOffset;const ligCount=charIndex-prevCharIndex;ligCount>1&&fillLigatureCaretPositions(caretPositions,prevCharIndex,ligCount),prevCharIndex=charIndex}if(colorRanges){const{charIndex}=glyphInfo;for(;charIndex>colorCharIndex;)colorCharIndex++,colorRanges.hasOwnProperty(colorCharIndex)&&(currentColor=colorRanges[colorCharIndex])}if(!glyphObj.isWhitespace&&!glyphObj.isEmpty){const idx=renderableGlyphIndex++,{fontSizeMult,src:fontSrc,index:fontIndex}=glyphInfo.fontData,fontGlyphData=glyphData[fontSrc]||(glyphData[fontSrc]={});fontGlyphData[glyphId]||(fontGlyphData[glyphId]={path:glyphObj.path,pathBounds:[glyphObj.xMin,glyphObj.yMin,glyphObj.xMax,glyphObj.yMax]});const glyphX=glyphInfo.x+anchorXOffset,glyphY=line.baseline+anchorYOffset;glyphPositions[2*idx]=glyphX,glyphPositions[2*idx+1]=glyphY;const visX0=glyphX+glyphObj.xMin*fontSizeMult,visY0=glyphY+glyphObj.yMin*fontSizeMult,visX1=glyphX+glyphObj.xMax*fontSizeMult,visY1=glyphY+glyphObj.yMax*fontSizeMult;visX0<visibleBounds[0]&&(visibleBounds[0]=visX0),visY0<visibleBounds[1]&&(visibleBounds[1]=visY0),visX1>visibleBounds[2]&&(visibleBounds[2]=visX1),visY1>visibleBounds[3]&&(visibleBounds[3]=visY1),idx%chunkedBoundsSize==0&&(chunk={start:idx,end:idx,rect:[INF,INF,-INF,-INF]},chunkedBounds.push(chunk)),chunk.end++;const chunkRect=chunk.rect;if(visX0<chunkRect[0]&&(chunkRect[0]=visX0),visY0<chunkRect[1]&&(chunkRect[1]=visY0),visX1>chunkRect[2]&&(chunkRect[2]=visX1),visY1>chunkRect[3]&&(chunkRect[3]=visY1),glyphIds[idx]=glyphId,glyphFontIndices[idx]=fontIndex,colorRanges){const start=3*idx;glyphColors[start]=currentColor>>16&255,glyphColors[start+1]=currentColor>>8&255,glyphColors[start+2]=255&currentColor}}}}})),caretPositions){const ligCount=text.length-prevCharIndex;ligCount>1&&fillLigatureCaretPositions(caretPositions,prevCharIndex,ligCount)}}const fontData=[];metricsByFont.forEach((({index,src,unitsPerEm,ascender,descender,lineHeight,capHeight,xHeight})=>{fontData[index]={src,unitsPerEm,ascender,descender,lineHeight,capHeight,xHeight}})),timings.typesetting=now()-typesetStart,callback({glyphIds,glyphFontIndices,glyphPositions,glyphData,fontData,caretPositions,glyphColors,chunkedBounds,fontSize,topBaseline:anchorYOffset+lines[0].baseline,blockBounds:[anchorXOffset,anchorYOffset-totalHeight,anchorXOffset+maxLineWidth,anchorYOffset],visibleBounds,timings})}))}function parsePercent(str){let match=str.match(/^([\d.]+)%$/),pct=match?parseFloat(match[1]):NaN;return isNaN(pct)?0:pct/100}function fillLigatureCaretPositions(caretPositions,ligStartIndex,ligCount){const ligStartX=caretPositions[4*ligStartIndex],ligEndX=caretPositions[4*ligStartIndex+1],ligBottom=caretPositions[4*ligStartIndex+2],ligTop=caretPositions[4*ligStartIndex+3],guessedAdvanceX=(ligEndX-ligStartX)/ligCount;for(let i=0;i<ligCount;i++){const startIndex=4*(ligStartIndex+i);caretPositions[startIndex]=ligStartX+guessedAdvanceX*i,caretPositions[startIndex+1]=ligStartX+guessedAdvanceX*(i+1),caretPositions[startIndex+2]=ligBottom,caretPositions[startIndex+3]=ligTop}}function now(){return(self.performance||Date).now()}function TextLine(){this.data=[]}const textLineProps=["glyphObj","x","width","charIndex","fontData"];return TextLine.prototype={width:0,lineHeight:0,baseline:0,cap:0,ex:0,isSoftWrapped:!1,get count(){return Math.ceil(this.data.length/textLineProps.length)},glyphAt(i){let fly=TextLine.flyweight;return fly.data=this.data,fly.index=i,fly},splitAt(i){let newLine=new TextLine;return newLine.data=this.data.splice(i*textLineProps.length),newLine}},TextLine.flyweight=textLineProps.reduce(((obj,prop,i,all)=>(Object.defineProperty(obj,prop,{get(){return this.data[this.index*textLineProps.length+i]},set(val){this.data[this.index*textLineProps.length+i]=val}}),obj)),{data:null,index:0}),{typeset,measure:function measure(args,callback){typeset({...args,metricsOnly:!0},(result=>{const[x0,y0,x1,y1]=result.blockBounds;callback({width:x1-x0,height:y1-y0})}))}}},fontResolverWorkerModule,bidi],init:(createTypesetter,fontResolver,bidiFactory)=>createTypesetter(fontResolver,bidiFactory())}),typesetInWorker=defineWorkerModule({name:"Typesetter",dependencies:[typesetterWorkerModule],init:typesetter=>function(args){return new Promise((resolve=>{typesetter.typeset(args,resolve)}))},getTransferables(result){const transferables=[];for(let p in result)result[p]&&result[p].buffer&&transferables.push(result[p].buffer);return transferables}});const templateGeometries={};class GlyphsGeometry extends three_module.InstancedBufferGeometry{constructor(){super(),this.detail=1,this.curveRadius=0,this.groups=[{start:0,count:1/0,materialIndex:0},{start:0,count:1/0,materialIndex:1}],this.boundingSphere=new three_module.Sphere,this.boundingBox=new three_module.Box3}computeBoundingSphere(){}computeBoundingBox(){}setSide(side){const verts=this.getIndex().count;this.setDrawRange(side===three_module.BackSide?verts/2:0,side===three_module.DoubleSide?verts:verts/2)}set detail(detail){if(detail!==this._detail){this._detail=detail,("number"!=typeof detail||detail<1)&&(detail=1);let tpl=function getTemplateGeometry(detail){let geom=templateGeometries[detail];if(!geom){const front=new three_module.PlaneGeometry(1,1,detail,detail),back=front.clone(),frontAttrs=front.attributes,backAttrs=back.attributes,combined=new three_module.BufferGeometry,vertCount=frontAttrs.uv.count;for(let i=0;i<vertCount;i++)backAttrs.position.array[3*i]*=-1,backAttrs.normal.array[3*i+2]*=-1;["position","normal","uv"].forEach((name=>{combined.setAttribute(name,new three_module.Float32BufferAttribute([...frontAttrs[name].array,...backAttrs[name].array],frontAttrs[name].itemSize))})),combined.setIndex([...front.index.array,...back.index.array.map((n=>n+vertCount))]),combined.translate(.5,.5,0),geom=templateGeometries[detail]=combined}return geom}(detail);["position","normal","uv"].forEach((attr=>{this.attributes[attr]=tpl.attributes[attr].clone()})),this.setIndex(tpl.getIndex().clone())}}get detail(){return this._detail}set curveRadius(r){r!==this._curveRadius&&(this._curveRadius=r,this._updateBounds())}get curveRadius(){return this._curveRadius}updateGlyphs(glyphBounds,glyphAtlasIndices,blockBounds,chunkedBounds,glyphColors){updateBufferAttr(this,"aTroikaGlyphBounds",glyphBounds,4),updateBufferAttr(this,"aTroikaGlyphIndex",glyphAtlasIndices,1),updateBufferAttr(this,"aTroikaGlyphColor",glyphColors,3),this._blockBounds=blockBounds,this._chunkedBounds=chunkedBounds,this.instanceCount=glyphAtlasIndices.length,this._updateBounds()}_updateBounds(){const bounds=this._blockBounds;if(bounds){const{curveRadius,boundingBox:bbox}=this;if(curveRadius){const{PI,floor,min,max,sin,cos}=Math,halfPi=PI/2,twoPi=2*PI,absR=Math.abs(curveRadius),leftAngle=bounds[0]/absR,rightAngle=bounds[2]/absR,minX=floor((leftAngle+halfPi)/twoPi)!==floor((rightAngle+halfPi)/twoPi)?-absR:min(sin(leftAngle)*absR,sin(rightAngle)*absR),maxX=floor((leftAngle-halfPi)/twoPi)!==floor((rightAngle-halfPi)/twoPi)?absR:max(sin(leftAngle)*absR,sin(rightAngle)*absR),maxZ=floor((leftAngle+PI)/twoPi)!==floor((rightAngle+PI)/twoPi)?2*absR:max(absR-cos(leftAngle)*absR,absR-cos(rightAngle)*absR);bbox.min.set(minX,bounds[1],curveRadius<0?-maxZ:0),bbox.max.set(maxX,bounds[3],curveRadius<0?0:maxZ)}else bbox.min.set(bounds[0],bounds[1],0),bbox.max.set(bounds[2],bounds[3],0);bbox.getBoundingSphere(this.boundingSphere)}}applyClipRect(clipRect){let count=this.getAttribute("aTroikaGlyphIndex").count,chunks=this._chunkedBounds;if(chunks)for(let i=chunks.length;i--;){count=chunks[i].end;let rect=chunks[i].rect;if(rect[1]<clipRect.w&&rect[3]>clipRect.y&&rect[0]<clipRect.z&&rect[2]>clipRect.x)break}this.instanceCount=count}}function updateBufferAttr(geom,attrName,newArray,itemSize){const attr=geom.getAttribute(attrName);newArray?attr&&attr.array.length===newArray.length?(attr.array.set(newArray),attr.needsUpdate=!0):(geom.setAttribute(attrName,new three_module.InstancedBufferAttribute(newArray,itemSize)),delete geom._maxInstanceCount,geom.dispose()):attr&&geom.deleteAttribute(attrName)}const defaultMaterial=new three_module.MeshBasicMaterial({color:16777215,side:three_module.DoubleSide,transparent:!0}),tempMat4=new three_module.Matrix4,tempVec3a=new three_module.Vector3,tempVec3b=new three_module.Vector3,tempArray=[],origin=new three_module.Vector3;function first(o){return Array.isArray(o)?o[0]:o}let getFlatRaycastMesh=()=>{const mesh=new three_module.Mesh(new three_module.PlaneGeometry(1,1),defaultMaterial);return getFlatRaycastMesh=()=>mesh,mesh},getCurvedRaycastMesh=()=>{const mesh=new three_module.Mesh(new three_module.PlaneGeometry(1,1,32,1),defaultMaterial);return getCurvedRaycastMesh=()=>mesh,mesh};const syncStartEvent={type:"syncstart"},syncCompleteEvent={type:"synccomplete"},SYNCABLE_PROPS=["font","fontSize","fontStyle","fontWeight","lang","letterSpacing","lineHeight","maxWidth","overflowWrap","text","direction","textAlign","textIndent","whiteSpace","anchorX","anchorY","colorRanges","sdfGlyphSize"],COPYABLE_PROPS=SYNCABLE_PROPS.concat("material","color","depthOffset","clipRect","curveRadius","orientation","glyphGeometryDetail");class Text extends three_module.Mesh{constructor(){super(new GlyphsGeometry,null),this.text="",this.anchorX=0,this.anchorY=0,this.curveRadius=0,this.direction="auto",this.font=null,this.unicodeFontsURL=null,this.fontSize=.1,this.fontWeight="normal",this.fontStyle="normal",this.lang=null,this.letterSpacing=0,this.lineHeight="normal",this.maxWidth=1/0,this.overflowWrap="normal",this.textAlign="left",this.textIndent=0,this.whiteSpace="normal",this.material=null,this.color=null,this.colorRanges=null,this.outlineWidth=0,this.outlineColor=0,this.outlineOpacity=1,this.outlineBlur=0,this.outlineOffsetX=0,this.outlineOffsetY=0,this.strokeWidth=0,this.strokeColor=8421504,this.strokeOpacity=1,this.fillOpacity=1,this.depthOffset=0,this.clipRect=null,this.orientation="+x+y",this.glyphGeometryDetail=1,this.sdfGlyphSize=null,this.gpuAccelerateSDF=!0,this.debugSDF=!1}sync(callback){this._needsSync&&(this._needsSync=!1,this._isSyncing?(this._queuedSyncs||(this._queuedSyncs=[])).push(callback):(this._isSyncing=!0,this.dispatchEvent(syncStartEvent),getTextRenderInfo({text:this.text,font:this.font,lang:this.lang,fontSize:this.fontSize||.1,fontWeight:this.fontWeight||"normal",fontStyle:this.fontStyle||"normal",letterSpacing:this.letterSpacing||0,lineHeight:this.lineHeight||"normal",maxWidth:this.maxWidth,direction:this.direction||"auto",textAlign:this.textAlign,textIndent:this.textIndent,whiteSpace:this.whiteSpace,overflowWrap:this.overflowWrap,anchorX:this.anchorX,anchorY:this.anchorY,colorRanges:this.colorRanges,includeCaretPositions:!0,sdfGlyphSize:this.sdfGlyphSize,gpuAccelerateSDF:this.gpuAccelerateSDF,unicodeFontsURL:this.unicodeFontsURL},(textRenderInfo=>{this._isSyncing=!1,this._textRenderInfo=textRenderInfo,this.geometry.updateGlyphs(textRenderInfo.glyphBounds,textRenderInfo.glyphAtlasIndices,textRenderInfo.blockBounds,textRenderInfo.chunkedBounds,textRenderInfo.glyphColors);const queued=this._queuedSyncs;queued&&(this._queuedSyncs=null,this._needsSync=!0,this.sync((()=>{queued.forEach((fn=>fn&&fn()))}))),this.dispatchEvent(syncCompleteEvent),callback&&callback()}))))}onBeforeRender(renderer,scene,camera,geometry,material,group){this.sync(),material.isTroikaTextMaterial&&this._prepareForRender(material),material._hadOwnSide=material.hasOwnProperty("side"),this.geometry.setSide(material._actualSide=material.side),material.side=three_module.FrontSide}onAfterRender(renderer,scene,camera,geometry,material,group){material._hadOwnSide?material.side=material._actualSide:delete material.side}dispose(){this.geometry.dispose()}get textRenderInfo(){return this._textRenderInfo||null}get material(){let derivedMaterial=this._derivedMaterial;const baseMaterial=this._baseMaterial||this._defaultMaterial||(this._defaultMaterial=defaultMaterial.clone());if(derivedMaterial&&derivedMaterial.baseMaterial===baseMaterial||(derivedMaterial=this._derivedMaterial=function createTextDerivedMaterial(baseMaterial){const textMaterial=createDerivedMaterial(baseMaterial,{chained:!0,extensions:{derivatives:!0},uniforms:{uTroikaSDFTexture:{value:null},uTroikaSDFTextureSize:{value:new three_module.Vector2},uTroikaSDFGlyphSize:{value:0},uTroikaSDFExponent:{value:0},uTroikaTotalBounds:{value:new three_module.Vector4(0,0,0,0)},uTroikaClipRect:{value:new three_module.Vector4(0,0,0,0)},uTroikaDistanceOffset:{value:0},uTroikaOutlineOpacity:{value:0},uTroikaFillOpacity:{value:1},uTroikaPositionOffset:{value:new three_module.Vector2},uTroikaCurveRadius:{value:0},uTroikaBlurRadius:{value:0},uTroikaStrokeWidth:{value:0},uTroikaStrokeColor:{value:new three_module.Color},uTroikaStrokeOpacity:{value:1},uTroikaOrient:{value:new three_module.Matrix3},uTroikaUseGlyphColors:{value:!0},uTroikaSDFDebug:{value:!1}},vertexDefs:"\nuniform vec2 uTroikaSDFTextureSize;\nuniform float uTroikaSDFGlyphSize;\nuniform vec4 uTroikaTotalBounds;\nuniform vec4 uTroikaClipRect;\nuniform mat3 uTroikaOrient;\nuniform bool uTroikaUseGlyphColors;\nuniform float uTroikaDistanceOffset;\nuniform float uTroikaBlurRadius;\nuniform vec2 uTroikaPositionOffset;\nuniform float uTroikaCurveRadius;\nattribute vec4 aTroikaGlyphBounds;\nattribute float aTroikaGlyphIndex;\nattribute vec3 aTroikaGlyphColor;\nvarying vec2 vTroikaGlyphUV;\nvarying vec4 vTroikaTextureUVBounds;\nvarying float vTroikaTextureChannel;\nvarying vec3 vTroikaGlyphColor;\nvarying vec2 vTroikaGlyphDimensions;\n",vertexTransform:"\nvec4 bounds = aTroikaGlyphBounds;\nbounds.xz += uTroikaPositionOffset.x;\nbounds.yw -= uTroikaPositionOffset.y;\n\nvec4 outlineBounds = vec4(\n  bounds.xy - uTroikaDistanceOffset - uTroikaBlurRadius,\n  bounds.zw + uTroikaDistanceOffset + uTroikaBlurRadius\n);\nvec4 clippedBounds = vec4(\n  clamp(outlineBounds.xy, uTroikaClipRect.xy, uTroikaClipRect.zw),\n  clamp(outlineBounds.zw, uTroikaClipRect.xy, uTroikaClipRect.zw)\n);\n\nvec2 clippedXY = (mix(clippedBounds.xy, clippedBounds.zw, position.xy) - bounds.xy) / (bounds.zw - bounds.xy);\n\nposition.xy = mix(bounds.xy, bounds.zw, clippedXY);\n\nuv = (position.xy - uTroikaTotalBounds.xy) / (uTroikaTotalBounds.zw - uTroikaTotalBounds.xy);\n\nfloat rad = uTroikaCurveRadius;\nif (rad != 0.0) {\n  float angle = position.x / rad;\n  position.xz = vec2(sin(angle) * rad, rad - cos(angle) * rad);\n  normal.xz = vec2(sin(angle), cos(angle));\n}\n  \nposition = uTroikaOrient * position;\nnormal = uTroikaOrient * normal;\n\nvTroikaGlyphUV = clippedXY.xy;\nvTroikaGlyphDimensions = vec2(bounds[2] - bounds[0], bounds[3] - bounds[1]);\n\n\nfloat txCols = uTroikaSDFTextureSize.x / uTroikaSDFGlyphSize;\nvec2 txUvPerSquare = uTroikaSDFGlyphSize / uTroikaSDFTextureSize;\nvec2 txStartUV = txUvPerSquare * vec2(\n  mod(floor(aTroikaGlyphIndex / 4.0), txCols),\n  floor(floor(aTroikaGlyphIndex / 4.0) / txCols)\n);\nvTroikaTextureUVBounds = vec4(txStartUV, vec2(txStartUV) + txUvPerSquare);\nvTroikaTextureChannel = mod(aTroikaGlyphIndex, 4.0);\n",fragmentDefs:"\nuniform sampler2D uTroikaSDFTexture;\nuniform vec2 uTroikaSDFTextureSize;\nuniform float uTroikaSDFGlyphSize;\nuniform float uTroikaSDFExponent;\nuniform float uTroikaDistanceOffset;\nuniform float uTroikaFillOpacity;\nuniform float uTroikaOutlineOpacity;\nuniform float uTroikaBlurRadius;\nuniform vec3 uTroikaStrokeColor;\nuniform float uTroikaStrokeWidth;\nuniform float uTroikaStrokeOpacity;\nuniform bool uTroikaSDFDebug;\nvarying vec2 vTroikaGlyphUV;\nvarying vec4 vTroikaTextureUVBounds;\nvarying float vTroikaTextureChannel;\nvarying vec2 vTroikaGlyphDimensions;\n\nfloat troikaSdfValueToSignedDistance(float alpha) {\n  // Inverse of exponential encoding in webgl-sdf-generator\n  \n  float maxDimension = max(vTroikaGlyphDimensions.x, vTroikaGlyphDimensions.y);\n  float absDist = (1.0 - pow(2.0 * (alpha > 0.5 ? 1.0 - alpha : alpha), 1.0 / uTroikaSDFExponent)) * maxDimension;\n  float signedDist = absDist * (alpha > 0.5 ? -1.0 : 1.0);\n  return signedDist;\n}\n\nfloat troikaGlyphUvToSdfValue(vec2 glyphUV) {\n  vec2 textureUV = mix(vTroikaTextureUVBounds.xy, vTroikaTextureUVBounds.zw, glyphUV);\n  vec4 rgba = texture2D(uTroikaSDFTexture, textureUV);\n  float ch = floor(vTroikaTextureChannel + 0.5); //NOTE: can't use round() in WebGL1\n  return ch == 0.0 ? rgba.r : ch == 1.0 ? rgba.g : ch == 2.0 ? rgba.b : rgba.a;\n}\n\nfloat troikaGlyphUvToDistance(vec2 uv) {\n  return troikaSdfValueToSignedDistance(troikaGlyphUvToSdfValue(uv));\n}\n\nfloat troikaGetAADist() {\n  \n  #if defined(GL_OES_standard_derivatives) || __VERSION__ >= 300\n  return length(fwidth(vTroikaGlyphUV * vTroikaGlyphDimensions)) * 0.5;\n  #else\n  return vTroikaGlyphDimensions.x / 64.0;\n  #endif\n}\n\nfloat troikaGetFragDistValue() {\n  vec2 clampedGlyphUV = clamp(vTroikaGlyphUV, 0.5 / uTroikaSDFGlyphSize, 1.0 - 0.5 / uTroikaSDFGlyphSize);\n  float distance = troikaGlyphUvToDistance(clampedGlyphUV);\n \n  // Extrapolate distance when outside bounds:\n  distance += clampedGlyphUV == vTroikaGlyphUV ? 0.0 : \n    length((vTroikaGlyphUV - clampedGlyphUV) * vTroikaGlyphDimensions);\n\n  \n\n  return distance;\n}\n\nfloat troikaGetEdgeAlpha(float distance, float distanceOffset, float aaDist) {\n  #if defined(IS_DEPTH_MATERIAL) || defined(IS_DISTANCE_MATERIAL)\n  float alpha = step(-distanceOffset, -distance);\n  #else\n\n  float alpha = smoothstep(\n    distanceOffset + aaDist,\n    distanceOffset - aaDist,\n    distance\n  );\n  #endif\n\n  return alpha;\n}\n",fragmentColorTransform:"\nfloat aaDist = troikaGetAADist();\nfloat fragDistance = troikaGetFragDistValue();\nfloat edgeAlpha = uTroikaSDFDebug ?\n  troikaGlyphUvToSdfValue(vTroikaGlyphUV) :\n  troikaGetEdgeAlpha(fragDistance, uTroikaDistanceOffset, max(aaDist, uTroikaBlurRadius));\n\n#if !defined(IS_DEPTH_MATERIAL) && !defined(IS_DISTANCE_MATERIAL)\nvec4 fillRGBA = gl_FragColor;\nfillRGBA.a *= uTroikaFillOpacity;\nvec4 strokeRGBA = uTroikaStrokeWidth == 0.0 ? fillRGBA : vec4(uTroikaStrokeColor, uTroikaStrokeOpacity);\nif (fillRGBA.a == 0.0) fillRGBA.rgb = strokeRGBA.rgb;\ngl_FragColor = mix(fillRGBA, strokeRGBA, smoothstep(\n  -uTroikaStrokeWidth - aaDist,\n  -uTroikaStrokeWidth + aaDist,\n  fragDistance\n));\ngl_FragColor.a *= edgeAlpha;\n#endif\n\nif (edgeAlpha == 0.0) {\n  discard;\n}\n",customRewriter({vertexShader,fragmentShader}){let uDiffuseRE=/\buniform\s+vec3\s+diffuse\b/;return uDiffuseRE.test(fragmentShader)&&(fragmentShader=fragmentShader.replace(uDiffuseRE,"varying vec3 vTroikaGlyphColor").replace(/\bdiffuse\b/g,"vTroikaGlyphColor"),uDiffuseRE.test(vertexShader)||(vertexShader=vertexShader.replace(voidMainRegExp,"uniform vec3 diffuse;\n$&\nvTroikaGlyphColor = uTroikaUseGlyphColors ? aTroikaGlyphColor / 255.0 : diffuse;\n"))),{vertexShader,fragmentShader}}});return textMaterial.transparent=!0,Object.defineProperties(textMaterial,{isTroikaTextMaterial:{value:!0},shadowSide:{get(){return this.side},set(){}}}),textMaterial}(baseMaterial),baseMaterial.addEventListener("dispose",(function onDispose(){baseMaterial.removeEventListener("dispose",onDispose),derivedMaterial.dispose()}))),this.outlineWidth||this.outlineBlur||this.outlineOffsetX||this.outlineOffsetY){let outlineMaterial=derivedMaterial._outlineMtl;return outlineMaterial||(outlineMaterial=derivedMaterial._outlineMtl=Object.create(derivedMaterial,{id:{value:derivedMaterial.id+.1}}),outlineMaterial.isTextOutlineMaterial=!0,outlineMaterial.depthWrite=!1,outlineMaterial.map=null,derivedMaterial.addEventListener("dispose",(function onDispose(){derivedMaterial.removeEventListener("dispose",onDispose),outlineMaterial.dispose()}))),[outlineMaterial,derivedMaterial]}return derivedMaterial}set material(baseMaterial){baseMaterial&&baseMaterial.isTroikaTextMaterial?(this._derivedMaterial=baseMaterial,this._baseMaterial=baseMaterial.baseMaterial):this._baseMaterial=baseMaterial}get glyphGeometryDetail(){return this.geometry.detail}set glyphGeometryDetail(detail){this.geometry.detail=detail}get curveRadius(){return this.geometry.curveRadius}set curveRadius(r){this.geometry.curveRadius=r}get customDepthMaterial(){return first(this.material).getDepthMaterial()}get customDistanceMaterial(){return first(this.material).getDistanceMaterial()}_prepareForRender(material){const isOutline=material.isTextOutlineMaterial,uniforms=material.uniforms,textInfo=this.textRenderInfo;if(textInfo){const{sdfTexture,blockBounds}=textInfo;uniforms.uTroikaSDFTexture.value=sdfTexture,uniforms.uTroikaSDFTextureSize.value.set(sdfTexture.image.width,sdfTexture.image.height),uniforms.uTroikaSDFGlyphSize.value=textInfo.sdfGlyphSize,uniforms.uTroikaSDFExponent.value=textInfo.sdfExponent,uniforms.uTroikaTotalBounds.value.fromArray(blockBounds),uniforms.uTroikaUseGlyphColors.value=!isOutline&&!!textInfo.glyphColors;let fillOpacity,strokeOpacity,strokeColor,distanceOffset=0,blurRadius=0,strokeWidth=0,offsetX=0,offsetY=0;if(isOutline){let{outlineWidth,outlineOffsetX,outlineOffsetY,outlineBlur,outlineOpacity}=this;distanceOffset=this._parsePercent(outlineWidth)||0,blurRadius=Math.max(0,this._parsePercent(outlineBlur)||0),fillOpacity=outlineOpacity,offsetX=this._parsePercent(outlineOffsetX)||0,offsetY=this._parsePercent(outlineOffsetY)||0}else strokeWidth=Math.max(0,this._parsePercent(this.strokeWidth)||0),strokeWidth&&(strokeColor=this.strokeColor,uniforms.uTroikaStrokeColor.value.set(null==strokeColor?8421504:strokeColor),strokeOpacity=this.strokeOpacity,null==strokeOpacity&&(strokeOpacity=1)),fillOpacity=this.fillOpacity;uniforms.uTroikaDistanceOffset.value=distanceOffset,uniforms.uTroikaPositionOffset.value.set(offsetX,offsetY),uniforms.uTroikaBlurRadius.value=blurRadius,uniforms.uTroikaStrokeWidth.value=strokeWidth,uniforms.uTroikaStrokeOpacity.value=strokeOpacity,uniforms.uTroikaFillOpacity.value=null==fillOpacity?1:fillOpacity,uniforms.uTroikaCurveRadius.value=this.curveRadius||0;let clipRect=this.clipRect;if(clipRect&&Array.isArray(clipRect)&&4===clipRect.length)uniforms.uTroikaClipRect.value.fromArray(clipRect);else{const pad=100*(this.fontSize||.1);uniforms.uTroikaClipRect.value.set(blockBounds[0]-pad,blockBounds[1]-pad,blockBounds[2]+pad,blockBounds[3]+pad)}this.geometry.applyClipRect(uniforms.uTroikaClipRect.value)}uniforms.uTroikaSDFDebug.value=!!this.debugSDF,material.polygonOffset=!!this.depthOffset,material.polygonOffsetFactor=material.polygonOffsetUnits=this.depthOffset||0;const color=isOutline?this.outlineColor||0:this.color;if(null==color)delete material.color;else{const colorObj=material.hasOwnProperty("color")?material.color:material.color=new three_module.Color;color===colorObj._input&&"object"!=typeof color||colorObj.set(colorObj._input=color)}let orient=this.orientation||"+x+y";if(orient!==material._orientation){let rotMat=uniforms.uTroikaOrient.value;orient=orient.replace(/[^-+xyz]/g,"");let match="+x+y"!==orient&&orient.match(/^([-+])([xyz])([-+])([xyz])$/);if(match){let[,hSign,hAxis,vSign,vAxis]=match;tempVec3a.set(0,0,0)[hAxis]="-"===hSign?1:-1,tempVec3b.set(0,0,0)[vAxis]="-"===vSign?-1:1,tempMat4.lookAt(origin,tempVec3a.cross(tempVec3b),tempVec3b),rotMat.setFromMatrix4(tempMat4)}else rotMat.identity();material._orientation=orient}}_parsePercent(value){if("string"==typeof value){let match=value.match(/^(-?[\d.]+)%$/),pct=match?parseFloat(match[1]):NaN;value=(isNaN(pct)?0:pct/100)*this.fontSize}return value}localPositionToTextCoords(position,target=new three_module.Vector2){target.copy(position);const r=this.curveRadius;return r&&(target.x=Math.atan2(position.x,Math.abs(r)-Math.abs(position.z))*Math.abs(r)),target}worldPositionToTextCoords(position,target=new three_module.Vector2){return tempVec3a.copy(position),this.localPositionToTextCoords(this.worldToLocal(tempVec3a),target)}raycast(raycaster,intersects){const{textRenderInfo,curveRadius}=this;if(textRenderInfo){const bounds=textRenderInfo.blockBounds,raycastMesh=curveRadius?getCurvedRaycastMesh():getFlatRaycastMesh(),geom=raycastMesh.geometry,{position,uv}=geom.attributes;for(let i=0;i<uv.count;i++){let x=bounds[0]+uv.getX(i)*(bounds[2]-bounds[0]);const y=bounds[1]+uv.getY(i)*(bounds[3]-bounds[1]);let z=0;curveRadius&&(z=curveRadius-Math.cos(x/curveRadius)*curveRadius,x=Math.sin(x/curveRadius)*curveRadius),position.setXYZ(i,x,y,z)}geom.boundingSphere=this.geometry.boundingSphere,geom.boundingBox=this.geometry.boundingBox,raycastMesh.matrixWorld=this.matrixWorld,raycastMesh.material.side=this.material.side,tempArray.length=0,raycastMesh.raycast(raycaster,tempArray);for(let i=0;i<tempArray.length;i++)tempArray[i].object=this,intersects.push(tempArray[i])}}copy(source){const geom=this.geometry;return super.copy(source),this.geometry=geom,COPYABLE_PROPS.forEach((prop=>{this[prop]=source[prop]})),this}clone(){return(new this.constructor).copy(this)}}SYNCABLE_PROPS.forEach((prop=>{const privateKey="_private_"+prop;Object.defineProperty(Text.prototype,prop,{get(){return this[privateKey]},set(value){value!==this[privateKey]&&(this[privateKey]=value,this._needsSync=!0)}})}));new WeakMap;new WeakMap;const angular_three_soba_abstractions_c0=["*"],angular_three_soba_abstractions_c1=["points",""],_c2=a0=>[a0];function NgtsLine_ngt_primitive_0_ngt_primitive_1_Template(rf,ctx){if(1&rf){const _r1=core["ɵɵgetCurrentView"]();core["ɵɵelementStart"](0,"ngt-primitive",4),core["ɵɵlistener"]("afterAttach",(function NgtsLine_ngt_primitive_0_ngt_primitive_1_Template_ngt_primitive_afterAttach_0_listener($event){core["ɵɵrestoreView"](_r1);const ctx_r1=core["ɵɵnextContext"](2);return core["ɵɵresetView"](ctx_r1.onAfterAttach($event))})),core["ɵɵelementEnd"]()}}function NgtsLine_ngt_primitive_0_ngt_primitive_2_Template(rf,ctx){if(1&rf&&core["ɵɵelement"](0,"ngt-primitive",5),2&rf){let tmp_8_0,tmp_9_0,tmp_10_0,tmp_11_0,tmp_12_0;const ctx_r1=core["ɵɵnextContext"](2);core["ɵɵproperty"]("color",ctx_r1.get("color"))("vertexColors",ctx_r1.Boolean(ctx_r1.get("vertexColors")))("resolution",ctx_r1.get("materialResolution"))("linewidth",ctx_r1.get("lineWidth"))("alphaToCoverage",ctx_r1.get("alphaToCoverage"))("dashed",ctx_r1.get("dashed"))("dashScale",null!==(tmp_8_0=ctx_r1.get("dashScale"))&&void 0!==tmp_8_0?tmp_8_0:ctx_r1.lineMaterial.dashScale)("dashSize",null!==(tmp_9_0=ctx_r1.get("dashSize"))&&void 0!==tmp_9_0?tmp_9_0:ctx_r1.lineMaterial.dashSize)("dashOffset",null!==(tmp_10_0=ctx_r1.get("dashOffset"))&&void 0!==tmp_10_0?tmp_10_0:ctx_r1.lineMaterial.dashOffset)("gapSize",null!==(tmp_11_0=ctx_r1.get("gapSize"))&&void 0!==tmp_11_0?tmp_11_0:ctx_r1.lineMaterial.gapSize)("wireframe",null!==(tmp_12_0=ctx_r1.get("wireframe"))&&void 0!==tmp_12_0?tmp_12_0:ctx_r1.lineMaterial.wireframe)("worldUnits",ctx_r1.get("worldUnits"))}}function NgtsLine_ngt_primitive_0_Template(rf,ctx){if(1&rf&&(core["ɵɵelementStart"](0,"ngt-primitive",1),core["ɵɵtemplate"](1,NgtsLine_ngt_primitive_0_ngt_primitive_1_Template,1,0,"ngt-primitive",2)(2,NgtsLine_ngt_primitive_0_ngt_primitive_2_Template,1,12,"ngt-primitive",3),core["ɵɵelementEnd"]()),2&rf){const ctx_r1=core["ɵɵnextContext"]();core["ɵɵproperty"]("ref",ctx_r1.lineRef),core["ɵɵadvance"](),core["ɵɵproperty"]("args",core["ɵɵpureFunction1"](3,_c2,ctx_r1.get("lineGeometry"))),core["ɵɵadvance"](),core["ɵɵproperty"]("args",core["ɵɵpureFunction1"](5,_c2,ctx_r1.lineMaterial))}}const _c3=["start","","end","","midA","","midB",""];function NgtsEdges_ng_container_1_Template(rf,ctx){1&rf&&(core["ɵɵelementContainerStart"](0),core["ɵɵprojection"](1),core["ɵɵelementContainerEnd"]())}function NgtsEdges_ng_template_2_Template(rf,ctx){if(1&rf&&core["ɵɵelement"](0,"ngt-line-basic-material",3),2&rf){const ctx_r0=core["ɵɵnextContext"]();core["ɵɵproperty"]("color",ctx_r0.color)}}const _c4=()=>[0,0,200];function NgtsGizmoHelper_ng_template_1_ng_container_2_Template(rf,ctx){1&rf&&core["ɵɵelementContainer"](0)}function NgtsGizmoHelper_ng_template_1_Template(rf,ctx){if(1&rf){const _r1=core["ɵɵgetCurrentView"]();core["ɵɵelement"](0,"ngts-orthographic-camera",2),core["ɵɵelementStart"](1,"ngt-group",3),core["ɵɵlistener"]("beforeRender",(function NgtsGizmoHelper_ng_template_1_Template_ngt_group_beforeRender_1_listener($event){core["ɵɵrestoreView"](_r1);const ctx_r1=core["ɵɵnextContext"]();return core["ɵɵresetView"](ctx_r1.onBeforeRender($event.state.delta))})),core["ɵɵtemplate"](2,NgtsGizmoHelper_ng_template_1_ng_container_2_Template,1,0,"ng-container",4),core["ɵɵelementEnd"]()}if(2&rf){const ctx_r1=core["ɵɵnextContext"]();core["ɵɵproperty"]("cameraRef",ctx_r1.virtualCameraRef)("makeDefault",!0)("position",core["ɵɵpureFunction0"](6,_c4)),core["ɵɵadvance"](),core["ɵɵproperty"]("ref",ctx_r1.gizmoRef)("position",ctx_r1.get("gizmoPosition")),core["ɵɵadvance"](),core["ɵɵproperty"]("ngTemplateOutlet",ctx_r1.gizmoHelperContent)}}const _c5=["dimensions","","position",""];function NgtsGizmoViewcubeEdgeCube_ngt_box_geometry_1_Template(rf,ctx){1&rf&&core["ɵɵelement"](0,"ngt-box-geometry")}const _c6=["hover","","index",""],_c7=a0=>["material",a0];function NgtsGizmoViewcubeFaceCube_ngts_gizmo_viewcube_face_material_2_Template(rf,ctx){if(1&rf&&core["ɵɵelement"](0,"ngts-gizmo-viewcube-face-material",2),2&rf){const i_r1=ctx.$implicit,ctx_r1=core["ɵɵnextContext"]();core["ɵɵproperty"]("hover",ctx_r1.hover===i_r1)("index",i_r1)("font",ctx_r1.get("font"))("color",ctx_r1.get("color"))("opacity",ctx_r1.get("opacity"))("hoverColor",ctx_r1.get("hoverColor"))("textColor",ctx_r1.get("textColor"))("strokeColor",ctx_r1.get("strokeColor"))("faces",ctx_r1.get("faces"))}}function NgtsGizmoViewcube_ngts_gizmo_viewcube_edge_cube_2_Template(rf,ctx){if(1&rf&&core["ɵɵelement"](0,"ngts-gizmo-viewcube-edge-cube",5),2&rf){const edge_r1=ctx.$implicit,i_r2=ctx.index,ctx_r2=core["ɵɵnextContext"]();core["ɵɵproperty"]("position",edge_r1)("dimensions",ctx_r2.edgeDimensions[i_r2])("font",ctx_r2.get("font"))("color",ctx_r2.get("color"))("opacity",ctx_r2.get("opacity"))("hoverColor",ctx_r2.get("hoverColor"))("textColor",ctx_r2.get("textColor"))("strokeColor",ctx_r2.get("strokeColor"))("faces",ctx_r2.get("faces"))("clickEmitter",ctx_r2.clicked)}}function NgtsGizmoViewcube_ngts_gizmo_viewcube_edge_cube_3_Template(rf,ctx){if(1&rf&&core["ɵɵelement"](0,"ngts-gizmo-viewcube-edge-cube",5),2&rf){const corner_r4=ctx.$implicit,ctx_r2=core["ɵɵnextContext"]();core["ɵɵproperty"]("position",corner_r4)("dimensions",ctx_r2.cornerDimensions)("font",ctx_r2.get("font"))("color",ctx_r2.get("color"))("opacity",ctx_r2.get("opacity"))("hoverColor",ctx_r2.get("hoverColor"))("textColor",ctx_r2.get("textColor"))("strokeColor",ctx_r2.get("strokeColor"))("faces",ctx_r2.get("faces"))("clickEmitter",ctx_r2.clicked)}}const _c8=["color","","rotation",""],_c9=()=>[.4,0,0];function NgtsGizmoViewportAxis_ngt_box_geometry_2_Template(rf,ctx){1&rf&&core["ɵɵelement"](0,"ngt-box-geometry")}const _c10=()=>[0,0,0],_c11=a0=>[0,0,a0],_c12=a0=>[0,a0,0],_c13=()=>[1,0,0],_c14=()=>[0,1,0],_c15=()=>[0,0,1],_c16=a0=>[a0,0,0];function NgtsGizmoViewport_ng_container_4_ng_container_4_Template(rf,ctx){if(1&rf){const _r3=core["ɵɵgetCurrentView"]();core["ɵɵelementContainerStart"](0),core["ɵɵelementStart"](1,"ngts-gizmo-viewport-axis-head",6),core["ɵɵlistener"]("pointerdown",(function NgtsGizmoViewport_ng_container_4_ng_container_4_Template_ngts_gizmo_viewport_axis_head_pointerdown_1_listener($event){core["ɵɵrestoreView"](_r3);const ctx_r1=core["ɵɵnextContext"](2);return core["ɵɵresetView"](ctx_r1.onPointerDown($event))})),core["ɵɵelementEnd"](),core["ɵɵelementStart"](2,"ngts-gizmo-viewport-axis-head",6),core["ɵɵlistener"]("pointerdown",(function NgtsGizmoViewport_ng_container_4_ng_container_4_Template_ngts_gizmo_viewport_axis_head_pointerdown_2_listener($event){core["ɵɵrestoreView"](_r3);const ctx_r1=core["ɵɵnextContext"](2);return core["ɵɵresetView"](ctx_r1.onPointerDown($event))})),core["ɵɵelementEnd"](),core["ɵɵelementStart"](3,"ngts-gizmo-viewport-axis-head",6),core["ɵɵlistener"]("pointerdown",(function NgtsGizmoViewport_ng_container_4_ng_container_4_Template_ngts_gizmo_viewport_axis_head_pointerdown_3_listener($event){core["ɵɵrestoreView"](_r3);const ctx_r1=core["ɵɵnextContext"](2);return core["ɵɵresetView"](ctx_r1.onPointerDown($event))})),core["ɵɵelementEnd"](),core["ɵɵelementContainerEnd"]()}if(2&rf){const ctx_r1=core["ɵɵnextContext"](2);core["ɵɵadvance"](),core["ɵɵproperty"]("arcStyle",ctx_r1.get("axisColors")[0])("position",core["ɵɵpureFunction1"](21,_c16,-1))("font",ctx_r1.get("font"))("disabled",ctx_r1.get("disabled"))("labelColor",ctx_r1.get("labelColor"))("clickEmitter",ctx_r1.clicked)("axisHeadScale",ctx_r1.get("axisHeadScale")),core["ɵɵadvance"](),core["ɵɵproperty"]("arcStyle",ctx_r1.get("axisColors")[1])("position",core["ɵɵpureFunction1"](23,_c12,-1))("font",ctx_r1.get("font"))("disabled",ctx_r1.get("disabled"))("labelColor",ctx_r1.get("labelColor"))("clickEmitter",ctx_r1.clicked)("axisHeadScale",ctx_r1.get("axisHeadScale")),core["ɵɵadvance"](),core["ɵɵproperty"]("arcStyle",ctx_r1.get("axisColors")[2])("position",core["ɵɵpureFunction1"](25,_c11,-1))("font",ctx_r1.get("font"))("disabled",ctx_r1.get("disabled"))("labelColor",ctx_r1.get("labelColor"))("clickEmitter",ctx_r1.clicked)("axisHeadScale",ctx_r1.get("axisHeadScale"))}}function NgtsGizmoViewport_ng_container_4_Template(rf,ctx){if(1&rf){const _r1=core["ɵɵgetCurrentView"]();core["ɵɵelementContainerStart"](0),core["ɵɵelementStart"](1,"ngts-gizmo-viewport-axis-head",5),core["ɵɵlistener"]("pointerdown",(function NgtsGizmoViewport_ng_container_4_Template_ngts_gizmo_viewport_axis_head_pointerdown_1_listener($event){core["ɵɵrestoreView"](_r1);const ctx_r1=core["ɵɵnextContext"]();return core["ɵɵresetView"](ctx_r1.onPointerDown($event))})),core["ɵɵelementEnd"](),core["ɵɵelementStart"](2,"ngts-gizmo-viewport-axis-head",5),core["ɵɵlistener"]("pointerdown",(function NgtsGizmoViewport_ng_container_4_Template_ngts_gizmo_viewport_axis_head_pointerdown_2_listener($event){core["ɵɵrestoreView"](_r1);const ctx_r1=core["ɵɵnextContext"]();return core["ɵɵresetView"](ctx_r1.onPointerDown($event))})),core["ɵɵelementEnd"](),core["ɵɵelementStart"](3,"ngts-gizmo-viewport-axis-head",5),core["ɵɵlistener"]("pointerdown",(function NgtsGizmoViewport_ng_container_4_Template_ngts_gizmo_viewport_axis_head_pointerdown_3_listener($event){core["ɵɵrestoreView"](_r1);const ctx_r1=core["ɵɵnextContext"]();return core["ɵɵresetView"](ctx_r1.onPointerDown($event))})),core["ɵɵelementEnd"](),core["ɵɵtemplate"](4,NgtsGizmoViewport_ng_container_4_ng_container_4_Template,4,27,"ng-container",2),core["ɵɵelementContainerEnd"]()}if(2&rf){const ctx_r1=core["ɵɵnextContext"]();core["ɵɵadvance"](),core["ɵɵproperty"]("arcStyle",ctx_r1.get("axisColors")[0])("position",core["ɵɵpureFunction0"](25,_c13))("label",ctx_r1.get("labels")[0])("font",ctx_r1.get("font"))("disabled",ctx_r1.get("disabled"))("labelColor",ctx_r1.get("labelColor"))("clickEmitter",ctx_r1.clicked)("axisHeadScale",ctx_r1.get("axisHeadScale")),core["ɵɵadvance"](),core["ɵɵproperty"]("arcStyle",ctx_r1.get("axisColors")[1])("position",core["ɵɵpureFunction0"](26,_c14))("label",ctx_r1.get("labels")[1])("font",ctx_r1.get("font"))("disabled",ctx_r1.get("disabled"))("labelColor",ctx_r1.get("labelColor"))("clickEmitter",ctx_r1.clicked)("axisHeadScale",ctx_r1.get("axisHeadScale")),core["ɵɵadvance"](),core["ɵɵproperty"]("arcStyle",ctx_r1.get("axisColors")[2])("position",core["ɵɵpureFunction0"](27,_c15))("label",ctx_r1.get("labels")[2])("font",ctx_r1.get("font"))("disabled",ctx_r1.get("disabled"))("labelColor",ctx_r1.get("labelColor"))("clickEmitter",ctx_r1.clicked)("axisHeadScale",ctx_r1.get("axisHeadScale")),core["ɵɵadvance"](),core["ɵɵproperty"]("ngIf",!ctx_r1.get("hideNegativeAxes"))}}const _c17=["font",""];function NgtsText3D_ngt_text_geometry_1_Template(rf,ctx){1&rf&&core["ɵɵelement"](0,"ngt-text-geometry")}const _c18=["text",""];function NgtsText_ngt_primitive_1_Template(rf,ctx){if(1&rf&&(core["ɵɵelementStart"](0,"ngt-primitive",1),core["ɵɵprojection"](1),core["ɵɵelementEnd"]()),2&rf){const ctx_r0=core["ɵɵnextContext"]();core["ɵɵproperty"]("ref",ctx_r0.textRef)("text",ctx_r0.get("text"))("anchorX",ctx_r0.get("anchorX"))("anchorY",ctx_r0.get("anchorY"))("font",ctx_r0.get("font"))}}(0,angular_three.X$)({Group:three_module.Group});class NgtsBillboard extends angular_three.fj{constructor(){super(...arguments),this.billboardRef=(0,angular_three.sY)()}set follow(follow){this.set({follow})}set lockX(lockX){this.set({lockX})}set lockY(lockY){this.set({lockY})}set lockZ(lockZ){this.set({lockZ})}initialize(){super.initialize(),this.set({follow:!0,lockX:!1,lockY:!1,lockZ:!1})}onBeforeRender({state,object}){const{follow,lockX,lockY,lockZ}=this.get();if(!follow)return;const prevRotation=object.rotation.clone();state.camera.getWorldQuaternion(object.quaternion),lockX&&(object.rotation.x=prevRotation.x),lockY&&(object.rotation.y=prevRotation.y),lockZ&&(object.rotation.z=prevRotation.z)}static#_=this.ɵfac=(()=>{let ɵNgtsBillboard_BaseFactory;return function NgtsBillboard_Factory(__ngFactoryType__){return(ɵNgtsBillboard_BaseFactory||(ɵNgtsBillboard_BaseFactory=core["ɵɵgetInheritedFactory"](NgtsBillboard)))(__ngFactoryType__||NgtsBillboard)}})();static#_2=this.ɵcmp=core["ɵɵdefineComponent"]({type:NgtsBillboard,selectors:[["ngts-billboard"]],inputs:{billboardRef:"billboardRef",follow:"follow",lockX:"lockX",lockY:"lockY",lockZ:"lockZ"},standalone:!0,features:[core["ɵɵInheritDefinitionFeature"],core["ɵɵStandaloneFeature"]],ngContentSelectors:angular_three_soba_abstractions_c0,decls:2,vars:1,consts:[["ngtCompound","",3,"beforeRender","ref"]],template:function NgtsBillboard_Template(rf,ctx){1&rf&&(core["ɵɵprojectionDef"](),core["ɵɵelementStart"](0,"ngt-group",0),core["ɵɵlistener"]("beforeRender",(function NgtsBillboard_Template_ngt_group_beforeRender_0_listener($event){return ctx.onBeforeRender($event)})),core["ɵɵprojection"](1),core["ɵɵelementEnd"]()),2&rf&&core["ɵɵproperty"]("ref",ctx.billboardRef)},encapsulation:2})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtsBillboard,[{type:core.Component,args:[{selector:"ngts-billboard",standalone:!0,template:'\n        <ngt-group ngtCompound [ref]="billboardRef" (beforeRender)="onBeforeRender($any($event))">\n            <ng-content />\n        </ngt-group>\n    ',schemas:[core.CUSTOM_ELEMENTS_SCHEMA]}]}],null,{billboardRef:[{type:core.Input}],follow:[{type:core.Input}],lockX:[{type:core.Input}],lockY:[{type:core.Input}],lockZ:[{type:core.Input}]});class NgtsLineInput extends angular_three.fj{set vertexColors(vertexColors){this.set({vertexColors})}set lineWidth(lineWidth){this.set({lineWidth})}set alphaToCoverage(alphaToCoverage){this.set({alphaToCoverage})}set color(color){this.set({color})}set dashed(dashed){this.set({dashed})}set dashScale(dashScale){this.set({dashScale})}set dashSize(dashSize){this.set({dashSize})}set dashOffset(dashOffset){this.set({dashOffset})}set gapSize(gapSize){this.set({gapSize})}set resolution(resolution){this.set({resolution})}set wireframe(wireframe){this.set({wireframe})}set worldUnits(worldUnits){this.set({worldUnits})}initialize(){super.initialize(),this.set({color:"black"})}static#_=this.ɵfac=(()=>{let ɵNgtsLineInput_BaseFactory;return function NgtsLineInput_Factory(__ngFactoryType__){return(ɵNgtsLineInput_BaseFactory||(ɵNgtsLineInput_BaseFactory=core["ɵɵgetInheritedFactory"](NgtsLineInput)))(__ngFactoryType__||NgtsLineInput)}})();static#_2=this.ɵdir=core["ɵɵdefineDirective"]({type:NgtsLineInput,inputs:{vertexColors:"vertexColors",lineWidth:"lineWidth",alphaToCoverage:"alphaToCoverage",color:"color",dashed:"dashed",dashScale:"dashScale",dashSize:"dashSize",dashOffset:"dashOffset",gapSize:"gapSize",resolution:"resolution",wireframe:"wireframe",worldUnits:"worldUnits"},features:[core["ɵɵInheritDefinitionFeature"]]})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtsLineInput,[{type:core.Directive}],null,{vertexColors:[{type:core.Input}],lineWidth:[{type:core.Input}],alphaToCoverage:[{type:core.Input}],color:[{type:core.Input}],dashed:[{type:core.Input}],dashScale:[{type:core.Input}],dashSize:[{type:core.Input}],dashOffset:[{type:core.Input}],gapSize:[{type:core.Input}],resolution:[{type:core.Input}],wireframe:[{type:core.Input}],worldUnits:[{type:core.Input}]});class NgtsLine extends NgtsLineInput{constructor(){super(...arguments),this.Boolean=Boolean,this.lineMaterial=new LineMaterial,this.store=(0,core.inject)(angular_three.PW),this.line=null,this.lineRef=(0,angular_three.sY)()}set points(points){this.set({points})}set segments(segments){this.set({segments})}onAfterAttach({parent}){parent.computeLineDistances()}initialize(){super.initialize(),this.set({segments:!1}),this.connect("lineGeometry",(0,observable_combineLatest.z)([this.select("points"),this.select("segments"),this.select("vertexColors").pipe((0,angular_three.pG)())]).pipe((0,operators_map.T)((([points,segments,vertexColors])=>{const geometry=segments?new LineSegmentsGeometry:new LineGeometry,pValues=points.map((p=>{const isArray=Array.isArray(p);return p instanceof three_module.Vector3?[p.x,p.y,p.z]:p instanceof three_module.Vector2?[p.x,p.y,0]:isArray&&3===p.length?[p[0],p[1],p[2]]:isArray&&2===p.length?[p[0],p[1],0]:p}));if(geometry.setPositions(pValues.flat()),vertexColors){const cValues=vertexColors.map((c=>c instanceof three_module.Color?c.toArray():c));geometry.setColors(cValues.flat())}return geometry}))))}ngOnInit(){this.connect("materialResolution",(0,observable_combineLatest.z)([this.store.select("size"),this.select("resolution").pipe((0,angular_three.pG)())]).pipe((0,operators_map.T)((([size,resolution])=>resolution??[size.width,size.height])))),this.line=this.get("segments")?new LineSegments2:new Line2,this.disposeGeometry()}disposeGeometry(){this.effect(this.select("lineGeometry"),(lineGeometry=>()=>lineGeometry.dispose()))}static#_=this.ɵfac=(()=>{let ɵNgtsLine_BaseFactory;return function NgtsLine_Factory(__ngFactoryType__){return(ɵNgtsLine_BaseFactory||(ɵNgtsLine_BaseFactory=core["ɵɵgetInheritedFactory"](NgtsLine)))(__ngFactoryType__||NgtsLine)}})();static#_2=this.ɵcmp=core["ɵɵdefineComponent"]({type:NgtsLine,selectors:[["ngts-line","points",""]],inputs:{lineRef:"lineRef",points:"points",segments:"segments"},standalone:!0,features:[core["ɵɵInheritDefinitionFeature"],core["ɵɵStandaloneFeature"]],attrs:angular_three_soba_abstractions_c1,decls:1,vars:3,consts:[["ngtCompound","",3,"ref",4,"args"],["ngtCompound","",3,"ref"],["attach","geometry",3,"afterAttach",4,"args"],["attach","material",3,"color","vertexColors","resolution","linewidth","alphaToCoverage","dashed","dashScale","dashSize","dashOffset","gapSize","wireframe","worldUnits",4,"args"],["attach","geometry",3,"afterAttach"],["attach","material",3,"color","vertexColors","resolution","linewidth","alphaToCoverage","dashed","dashScale","dashSize","dashOffset","gapSize","wireframe","worldUnits"]],template:function NgtsLine_Template(rf,ctx){1&rf&&core["ɵɵtemplate"](0,NgtsLine_ngt_primitive_0_Template,3,7,"ngt-primitive",0),2&rf&&core["ɵɵproperty"]("args",core["ɵɵpureFunction1"](1,_c2,ctx.line))},dependencies:[angular_three.nQ],encapsulation:2})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtsLine,[{type:core.Component,args:[{selector:"ngts-line[points]",standalone:!0,template:'\n        <ngt-primitive *args="[line]" [ref]="lineRef" ngtCompound>\n            <ngt-primitive\n                *args="[get(\'lineGeometry\')]"\n                attach="geometry"\n                (afterAttach)="onAfterAttach($any($event))"\n            />\n            <ngt-primitive\n                *args="[lineMaterial]"\n                attach="material"\n                [color]="get(\'color\')"\n                [vertexColors]="Boolean(get(\'vertexColors\'))"\n                [resolution]="get(\'materialResolution\')"\n                [linewidth]="get(\'lineWidth\')"\n                [alphaToCoverage]="get(\'alphaToCoverage\')"\n                [dashed]="get(\'dashed\')"\n                [dashScale]="get(\'dashScale\') ?? lineMaterial.dashScale"\n                [dashSize]="get(\'dashSize\') ?? lineMaterial.dashSize"\n                [dashOffset]="get(\'dashOffset\') ?? lineMaterial.dashOffset"\n                [gapSize]="get(\'gapSize\') ?? lineMaterial.gapSize"\n                [wireframe]="get(\'wireframe\') ?? lineMaterial.wireframe"\n                [worldUnits]="get(\'worldUnits\')"\n            />\n        </ngt-primitive>\n    ',imports:[angular_three.nQ],schemas:[core.CUSTOM_ELEMENTS_SCHEMA]}]}],null,{lineRef:[{type:core.Input}],points:[{type:core.Input}],segments:[{type:core.Input}]});class NgtsCatmullRomLine extends NgtsLineInput{constructor(){super(...arguments),this.lineRef=(0,angular_three.sY)()}set points(points){this.set({points})}set closed(closed){this.set({closed})}set curveType(curveType){this.set({curveType})}set tension(tension){this.set({tension})}set segments(segments){this.set({segments})}initialize(){super.initialize(),this.set({closed:!1,curveType:"centripetal",tension:.5,segments:64}),this.connect("curve",(0,observable_combineLatest.z)([this.select("points"),this.select("closed"),this.select("curveType"),this.select("tension")]).pipe((0,operators_map.T)((([points,closed,curveType,tension])=>{const mappedPoints=points.map((p=>p instanceof three_module.Vector3?p:new three_module.Vector3(...p)));return new three_module.CatmullRomCurve3(mappedPoints,closed,curveType,tension)})))),this.connect("segmentedPoints",(0,observable_combineLatest.z)([this.select("curve"),this.select("segments")]).pipe((0,operators_map.T)((([curve,segments])=>curve.getPoints(segments))))),this.connect("interpolatedVertexColors",(0,observable_combineLatest.z)([this.select("vertexColors").pipe((0,angular_three.pG)()),this.select("segments")]).pipe((0,operators_map.T)((([vertexColors,segments])=>{if(!vertexColors||vertexColors.length<2)return;if(vertexColors.length===segments+1)return vertexColors;const mappedColors=vertexColors.map((color=>color instanceof three_module.Color?color:new three_module.Color(...color)));this.get("closed")&&mappedColors.push(mappedColors[0].clone());const iColors=[mappedColors[0]],divisions=segments/(mappedColors.length-1);for(let i=0;i<segments;i++){const alpha=i%divisions/divisions,colorIndex=Math.floor(i/divisions);iColors.push(mappedColors[colorIndex].clone().lerp(mappedColors[colorIndex+1],alpha))}iColors.push(mappedColors[mappedColors.length-1])}))))}static#_=this.ɵfac=(()=>{let ɵNgtsCatmullRomLine_BaseFactory;return function NgtsCatmullRomLine_Factory(__ngFactoryType__){return(ɵNgtsCatmullRomLine_BaseFactory||(ɵNgtsCatmullRomLine_BaseFactory=core["ɵɵgetInheritedFactory"](NgtsCatmullRomLine)))(__ngFactoryType__||NgtsCatmullRomLine)}})();static#_2=this.ɵcmp=core["ɵɵdefineComponent"]({type:NgtsCatmullRomLine,selectors:[["ngts-catmull-rom-line","points",""]],inputs:{lineRef:"lineRef",points:"points",closed:"closed",curveType:"curveType",tension:"tension",segments:"segments"},standalone:!0,features:[core["ɵɵInheritDefinitionFeature"],core["ɵɵStandaloneFeature"]],attrs:angular_three_soba_abstractions_c1,decls:1,vars:14,consts:[[3,"lineRef","points","color","vertexColors","resolution","lineWidth","alphaToCoverage","dashed","dashScale","dashOffset","dashSize","gapSize","wireframe","worldUnits"]],template:function NgtsCatmullRomLine_Template(rf,ctx){1&rf&&core["ɵɵelement"](0,"ngts-line",0),2&rf&&core["ɵɵproperty"]("lineRef",ctx.lineRef)("points",ctx.get("segmentedPoints"))("color",ctx.get("color"))("vertexColors",ctx.get("interpolatedVertexColors"))("resolution",ctx.get("resolution"))("lineWidth",ctx.get("lineWidth"))("alphaToCoverage",ctx.get("alphaToCoverage"))("dashed",ctx.get("dashed"))("dashScale",ctx.get("dashScale"))("dashOffset",ctx.get("dashOffset"))("dashSize",ctx.get("dashSize"))("gapSize",ctx.get("gapSize"))("wireframe",ctx.get("wireframe"))("worldUnits",ctx.get("worldUnits"))},dependencies:[NgtsLine],encapsulation:2})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtsCatmullRomLine,[{type:core.Component,args:[{selector:"ngts-catmull-rom-line[points]",standalone:!0,template:'\n        <ngts-line\n            [lineRef]="lineRef"\n            [points]="get(\'segmentedPoints\')"\n            [color]="get(\'color\')"\n            [vertexColors]="get(\'interpolatedVertexColors\')"\n            [resolution]="get(\'resolution\')"\n            [lineWidth]="get(\'lineWidth\')"\n            [alphaToCoverage]="get(\'alphaToCoverage\')"\n            [dashed]="get(\'dashed\')"\n            [dashScale]="get(\'dashScale\')"\n            [dashOffset]="get(\'dashOffset\')"\n            [dashSize]="get(\'dashSize\')"\n            [gapSize]="get(\'gapSize\')"\n            [wireframe]="get(\'wireframe\')"\n            [worldUnits]="get(\'worldUnits\')"\n        />\n    ',imports:[NgtsLine],schemas:[core.CUSTOM_ELEMENTS_SCHEMA]}]}],null,{lineRef:[{type:core.Input}],points:[{type:core.Input}],closed:[{type:core.Input}],curveType:[{type:core.Input}],tension:[{type:core.Input}],segments:[{type:core.Input}]});class NgtsCubicBezierLine extends NgtsLineInput{constructor(){super(...arguments),this.lineRef=(0,angular_three.sY)()}set start(start){this.set({start})}set end(end){this.set({end})}set midA(midA){this.set({midA})}set midB(midB){this.set({midB})}set segments(segments){this.set({segments})}initialize(){super.initialize(),this.set({segments:10}),this.connect("points",this.select(["start","end","midA","midB","segments"],(({start,end,midA,midB,segments})=>{const startV=start instanceof three_module.Vector3?start:new three_module.Vector3(...start),endV=end instanceof three_module.Vector3?end:new three_module.Vector3(...end),midAV=midA instanceof three_module.Vector3?midA:new three_module.Vector3(...midA),midBV=midB instanceof three_module.Vector3?midB:new three_module.Vector3(...midB);return new three_module.CubicBezierCurve3(startV,midAV,midBV,endV).getPoints(segments)})))}static#_=this.ɵfac=(()=>{let ɵNgtsCubicBezierLine_BaseFactory;return function NgtsCubicBezierLine_Factory(__ngFactoryType__){return(ɵNgtsCubicBezierLine_BaseFactory||(ɵNgtsCubicBezierLine_BaseFactory=core["ɵɵgetInheritedFactory"](NgtsCubicBezierLine)))(__ngFactoryType__||NgtsCubicBezierLine)}})();static#_2=this.ɵcmp=core["ɵɵdefineComponent"]({type:NgtsCubicBezierLine,selectors:[["ngts-cubic-bezier-line","start","","end","","midA","","midB",""]],inputs:{lineRef:"lineRef",start:"start",end:"end",midA:"midA",midB:"midB",segments:"segments"},standalone:!0,features:[core["ɵɵInheritDefinitionFeature"],core["ɵɵStandaloneFeature"]],attrs:_c3,decls:1,vars:14,consts:[[3,"lineRef","points","color","vertexColors","resolution","lineWidth","alphaToCoverage","dashed","dashScale","dashSize","dashOffset","gapSize","wireframe","worldUnits"]],template:function NgtsCubicBezierLine_Template(rf,ctx){1&rf&&core["ɵɵelement"](0,"ngts-line",0),2&rf&&core["ɵɵproperty"]("lineRef",ctx.lineRef)("points",ctx.get("points"))("color",ctx.get("color"))("vertexColors",ctx.get("vertexColors"))("resolution",ctx.get("resolution"))("lineWidth",ctx.get("lineWidth"))("alphaToCoverage",ctx.get("alphaToCoverage"))("dashed",ctx.get("dashed"))("dashScale",ctx.get("dashScale"))("dashSize",ctx.get("dashSize"))("dashOffset",ctx.get("dashOffset"))("gapSize",ctx.get("gapSize"))("wireframe",ctx.get("wireframe"))("worldUnits",ctx.get("worldUnits"))},dependencies:[NgtsLine],encapsulation:2})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtsCubicBezierLine,[{type:core.Component,args:[{selector:"ngts-cubic-bezier-line[start][end][midA][midB]",standalone:!0,template:'\n        <ngts-line\n            [lineRef]="lineRef"\n            [points]="get(\'points\')"\n            [color]="get(\'color\')"\n            [vertexColors]="get(\'vertexColors\')"\n            [resolution]="get(\'resolution\')"\n            [lineWidth]="get(\'lineWidth\')"\n            [alphaToCoverage]="get(\'alphaToCoverage\')"\n            [dashed]="get(\'dashed\')"\n            [dashScale]="get(\'dashScale\')"\n            [dashSize]="get(\'dashSize\')"\n            [dashOffset]="get(\'dashOffset\')"\n            [gapSize]="get(\'gapSize\')"\n            [wireframe]="get(\'wireframe\')"\n            [worldUnits]="get(\'worldUnits\')"\n        />\n    ',imports:[NgtsLine,common.NgIf],schemas:[core.CUSTOM_ELEMENTS_SCHEMA]}]}],null,{lineRef:[{type:core.Input}],start:[{type:core.Input}],end:[{type:core.Input}],midA:[{type:core.Input}],midB:[{type:core.Input}],segments:[{type:core.Input}]}),(0,angular_three.X$)({LineSegments:three_module.LineSegments,LineBasicMaterial:three_module.LineBasicMaterial});class NgtsEdges extends angular_three.fj{constructor(){super(...arguments),this.edgesRef=(0,angular_three.sY)(),this.withChildren=!1,this.noop=()=>null}set threshold(threshold){this.set({threshold})}set color(color){this.set({color})}set geometry(geometry){this.set({geometry})}set userData(userData){this.set({userData})}initialize(){super.initialize(),this.set({threshold:15,color:"black",userData:{}})}ngOnInit(){this.setupGeometry()}setupGeometry(){this.hold(this.edgesRef.$,(segments=>{const parent=segments.parent;if(parent){const geom=this.get("geometry")||parent.geometry,threshold=this.get("threshold");geom===segments.userData.currentGeom&&threshold===segments.userData.currentThreshold||(segments.userData.currentGeom=geom,segments.userData.currentThreshold=threshold,segments.geometry=new three_module.EdgesGeometry(geom,threshold))}}))}static#_=this.ɵfac=(()=>{let ɵNgtsEdges_BaseFactory;return function NgtsEdges_Factory(__ngFactoryType__){return(ɵNgtsEdges_BaseFactory||(ɵNgtsEdges_BaseFactory=core["ɵɵgetInheritedFactory"](NgtsEdges)))(__ngFactoryType__||NgtsEdges)}})();static#_2=this.ɵcmp=core["ɵɵdefineComponent"]({type:NgtsEdges,selectors:[["ngts-edges"]],inputs:{edgesRef:"edgesRef",threshold:"threshold",color:"color",geometry:"geometry",userData:"userData",withChildren:"withChildren"},standalone:!0,features:[core["ɵɵInheritDefinitionFeature"],core["ɵɵStandaloneFeature"]],ngContentSelectors:angular_three_soba_abstractions_c0,decls:4,vars:4,consts:[["noChildren",""],["ngtCompound","",3,"ref","raycast"],[4,"ngIf","ngIfElse"],[3,"color"]],template:function NgtsEdges_Template(rf,ctx){if(1&rf&&(core["ɵɵprojectionDef"](),core["ɵɵelementStart"](0,"ngt-line-segments",1),core["ɵɵtemplate"](1,NgtsEdges_ng_container_1_Template,2,0,"ng-container",2)(2,NgtsEdges_ng_template_2_Template,1,1,"ng-template",null,0,core["ɵɵtemplateRefExtractor"]),core["ɵɵelementEnd"]()),2&rf){const noChildren_r2=core["ɵɵreference"](3);core["ɵɵproperty"]("ref",ctx.edgesRef)("raycast",ctx.noop),core["ɵɵadvance"](),core["ɵɵproperty"]("ngIf",ctx.withChildren)("ngIfElse",noChildren_r2)}},dependencies:[common.NgIf],encapsulation:2})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtsEdges,[{type:core.Component,args:[{selector:"ngts-edges",standalone:!0,template:'\n        <ngt-line-segments [ref]="edgesRef" [raycast]="noop" ngtCompound>\n            <ng-container *ngIf="withChildren; else noChildren">\n                <ng-content />\n            </ng-container>\n            <ng-template #noChildren>\n                <ngt-line-basic-material [color]="color" />\n            </ng-template>\n        </ngt-line-segments>\n    ',imports:[common.NgIf],schemas:[core.CUSTOM_ELEMENTS_SCHEMA]}]}],null,{edgesRef:[{type:core.Input}],threshold:[{type:core.Input}],color:[{type:core.Input}],geometry:[{type:core.Input}],userData:[{type:core.Input}],withChildren:[{type:core.Input}]});const NGTS_GIZMO_HELPER_API=new core.InjectionToken("NgtsGizmoHelper API");function gizmoHelperApiFactory(gizmo){const store=(0,core.inject)(angular_three.PW);return{tweenCamera:direction=>{const{controls,camera,invalidate}=store.get(),defaultControls=controls;gizmo.animating=!0,defaultControls&&(gizmo.focusPoint=defaultControls.target),gizmo.radius=camera.position.distanceTo(gizmo.target),gizmo.q1.copy(camera.quaternion),gizmo.targetPosition.copy(direction).multiplyScalar(gizmo.radius).add(gizmo.target),gizmo.dummy.lookAt(gizmo.targetPosition),gizmo.q2.copy(gizmo.dummy.quaternion),invalidate()}}}(0,angular_three.X$)({Group:three_module.Group});class NgtsGizmoHelperContent{static#_=this.ɵfac=function NgtsGizmoHelperContent_Factory(__ngFactoryType__){return new(__ngFactoryType__||NgtsGizmoHelperContent)};static#_2=this.ɵdir=core["ɵɵdefineDirective"]({type:NgtsGizmoHelperContent,selectors:[["ng-template","ngtsGizmoHelperContent",""]],standalone:!0})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtsGizmoHelperContent,[{type:core.Directive,args:[{selector:"ng-template[ngtsGizmoHelperContent]",standalone:!0}]}],null,null);class NgtsGizmoHelper extends angular_three.fj{constructor(){super(...arguments),this.store=(0,core.inject)(angular_three.PW),this.gizmoRef=(0,angular_three.sY)(),this.virtualCameraRef=(0,angular_three.sY)(),this.animating=!1,this.radius=0,this.focusPoint=new three_module.Vector3(0,0,0),this.q1=new three_module.Quaternion,this.q2=new three_module.Quaternion,this.target=new three_module.Vector3,this.targetPosition=new three_module.Vector3,this.dummy=new three_module.Object3D,this.defaultUp=new three_module.Vector3(0,0,0),this.turnRate=2*Math.PI,this.matrix=new three_module.Matrix4,this.updated=new core.EventEmitter}set alignment(alignment){this.set({alignment})}set margin(margin){this.set({margin})}set renderPriority(renderPriority){this.set({renderPriority})}set autoClear(autoClear){this.set({autoClear})}initialize(){super.initialize(),this.set({alignment:"bottom-right",margin:[80,80],renderPriority:1})}ngOnInit(){this.updateDefaultUp(),this.setGizmoPosition()}onBeforeRender(delta){if(this.virtualCameraRef.nativeElement&&this.gizmoRef.nativeElement){const{controls,camera:mainCamera,invalidate}=this.store.get(),defaultControls=controls;if(this.animating)if(this.q1.angleTo(this.q2)<.01)this.animating=!1,(controls=>"minPolarAngle"in controls)(defaultControls)&&mainCamera.up.copy(this.defaultUp);else{const step=delta*this.turnRate;this.q1.rotateTowards(this.q2,step),mainCamera.position.set(0,0,1).applyQuaternion(this.q1).multiplyScalar(this.radius).add(this.focusPoint),mainCamera.up.set(0,1,0).applyQuaternion(this.q1).normalize(),mainCamera.quaternion.copy(this.q1),this.updated.observed?this.updated.emit():defaultControls&&defaultControls.update(),invalidate()}this.matrix.copy(mainCamera.matrix).invert(),this.gizmoRef.nativeElement.quaternion.setFromRotationMatrix(this.matrix)}}setGizmoPosition(){this.connect("gizmoPosition",(0,observable_combineLatest.z)([this.store.select("size"),(0,observable_combineLatest.z)({alignment:this.select("alignment"),margin:this.select("margin")})]).pipe((0,operators_map.T)((([size,{alignment,margin}])=>{const[marginX,marginY]=margin;return[alignment.endsWith("-center")?0:alignment.endsWith("-left")?-size.width/2+marginX:size.width/2-marginX,alignment.startsWith("center-")?0:alignment.startsWith("top-")?size.height/2-marginY:-size.height/2+marginY,0]}))))}updateDefaultUp(){this.hold(this.store.select("camera"),(camera=>{this.defaultUp.copy(camera.up)}))}static#_=this.ɵfac=(()=>{let ɵNgtsGizmoHelper_BaseFactory;return function NgtsGizmoHelper_Factory(__ngFactoryType__){return(ɵNgtsGizmoHelper_BaseFactory||(ɵNgtsGizmoHelper_BaseFactory=core["ɵɵgetInheritedFactory"](NgtsGizmoHelper)))(__ngFactoryType__||NgtsGizmoHelper)}})();static#_2=this.ɵcmp=core["ɵɵdefineComponent"]({type:NgtsGizmoHelper,selectors:[["ngts-gizmo-helper"]],contentQueries:function NgtsGizmoHelper_ContentQueries(rf,ctx,dirIndex){if(1&rf&&core["ɵɵcontentQuery"](dirIndex,NgtsGizmoHelperContent,7,core.TemplateRef),2&rf){let _t;core["ɵɵqueryRefresh"](_t=core["ɵɵloadQuery"]())&&(ctx.gizmoHelperContent=_t.first)}},inputs:{alignment:"alignment",margin:"margin",renderPriority:"renderPriority",autoClear:"autoClear"},outputs:{updated:"updated"},standalone:!0,features:[core["ɵɵProvidersFeature"]([{provide:NGTS_GIZMO_HELPER_API,useFactory:gizmoHelperApiFactory,deps:[NgtsGizmoHelper]}]),core["ɵɵInheritDefinitionFeature"],core["ɵɵStandaloneFeature"]],decls:2,vars:1,consts:[[3,"renderPriority"],["ngtPortalContent",""],[3,"cameraRef","makeDefault","position"],[3,"beforeRender","ref","position"],[4,"ngTemplateOutlet"]],template:function NgtsGizmoHelper_Template(rf,ctx){1&rf&&(core["ɵɵelementStart"](0,"ngt-portal",0),core["ɵɵtemplate"](1,NgtsGizmoHelper_ng_template_1_Template,3,7,"ng-template",1),core["ɵɵelementEnd"]()),2&rf&&core["ɵɵproperty"]("renderPriority",ctx.get("renderPriority"))},dependencies:[angular_three.Up,angular_three.tM,NgtsOrthographicCamera,common.NgTemplateOutlet],encapsulation:2})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtsGizmoHelper,[{type:core.Component,args:[{selector:"ngts-gizmo-helper",standalone:!0,template:'\n        <ngt-portal [renderPriority]="get(\'renderPriority\')">\n            <ng-template ngtPortalContent>\n                <ngts-orthographic-camera\n                    [cameraRef]="virtualCameraRef"\n                    [makeDefault]="true"\n                    [position]="[0, 0, 200]"\n                />\n                <ngt-group\n                    [ref]="gizmoRef"\n                    [position]="get(\'gizmoPosition\')"\n                    (beforeRender)="onBeforeRender($any($event).state.delta)"\n                >\n                    <ng-container *ngTemplateOutlet="gizmoHelperContent" />\n                </ngt-group>\n            </ng-template>\n        </ngt-portal>\n    ',imports:[angular_three.Up,angular_three.tM,NgtsOrthographicCamera,common.NgTemplateOutlet],providers:[{provide:NGTS_GIZMO_HELPER_API,useFactory:gizmoHelperApiFactory,deps:[NgtsGizmoHelper]}],schemas:[core.CUSTOM_ELEMENTS_SCHEMA]}]}],null,{alignment:[{type:core.Input}],margin:[{type:core.Input}],renderPriority:[{type:core.Input}],autoClear:[{type:core.Input}],updated:[{type:core.Output}],gizmoHelperContent:[{type:core.ContentChild,args:[NgtsGizmoHelperContent,{static:!0,read:core.TemplateRef}]}]});const colors_bg="#f0f0f0",colors_hover="#999",colors_text="black",colors_stroke="black",defaultFaces=["Right","Left","Top","Bottom","Front","Back"],makePositionVector=xyz=>new three_module.Vector3(...xyz).multiplyScalar(.38),corners=[[1,1,1],[1,1,-1],[1,-1,1],[1,-1,-1],[-1,1,1],[-1,1,-1],[-1,-1,1],[-1,-1,-1]].map(makePositionVector),cornerDimensions=[.25,.25,.25],edges=[[1,1,0],[1,0,1],[1,0,-1],[1,-1,0],[0,1,1],[0,1,-1],[0,-1,1],[0,-1,-1],[-1,1,0],[-1,0,1],[-1,0,-1],[-1,-1,0]].map(makePositionVector),edgeDimensions=edges.map((edge=>edge.toArray().map((axis=>0==axis?.5:.25))));class NgtsGizmoViewcubeInputs extends angular_three.fj{constructor(){super(...arguments),this.store=(0,core.inject)(angular_three.PW)}set opacity(opacity){this.set({opacity})}set hoverColor(hoverColor){this.set({hoverColor})}set textColor(textColor){this.set({textColor})}set strokeColor(strokeColor){this.set({strokeColor})}set faces(faces){this.set({faces})}set clickEmitter(clickEmitter){this.set({clickEmitter})}static#_=this.ɵfac=(()=>{let ɵNgtsGizmoViewcubeInputs_BaseFactory;return function NgtsGizmoViewcubeInputs_Factory(__ngFactoryType__){return(ɵNgtsGizmoViewcubeInputs_BaseFactory||(ɵNgtsGizmoViewcubeInputs_BaseFactory=core["ɵɵgetInheritedFactory"](NgtsGizmoViewcubeInputs)))(__ngFactoryType__||NgtsGizmoViewcubeInputs)}})();static#_2=this.ɵdir=core["ɵɵdefineDirective"]({type:NgtsGizmoViewcubeInputs,inputs:{opacity:"opacity",hoverColor:"hoverColor",textColor:"textColor",strokeColor:"strokeColor",faces:"faces",clickEmitter:"clickEmitter"},features:[core["ɵɵInheritDefinitionFeature"]]})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtsGizmoViewcubeInputs,[{type:core.Directive}],null,{opacity:[{type:core.Input}],hoverColor:[{type:core.Input}],textColor:[{type:core.Input}],strokeColor:[{type:core.Input}],faces:[{type:core.Input}],clickEmitter:[{type:core.Input}]}),(0,angular_three.X$)({Mesh:three_module.Mesh,BoxGeometry:three_module.BoxGeometry,MeshBasicMaterial:three_module.MeshBasicMaterial});class NgtsGizmoViewcubeEdgeCube extends NgtsGizmoViewcubeInputs{constructor(){super(...arguments),this.gizmoHelperApi=(0,core.inject)(NGTS_GIZMO_HELPER_API),this.hover=!1}set dimensions(dimensions){this.set({dimensions})}set position(position){this.set({position})}initialize(){super.initialize(),this.set({hoverColor:colors_hover})}onPointerMove(event){event.stopPropagation(),this.hover=!0}onPointerOut(event){event.stopPropagation(),this.hover=!1}onClick(event){this.get("clickEmitter")?.observed?this.get("clickEmitter").emit(event):(event.stopPropagation(),this.gizmoHelperApi.tweenCamera(this.get("position")))}static#_=this.ɵfac=(()=>{let ɵNgtsGizmoViewcubeEdgeCube_BaseFactory;return function NgtsGizmoViewcubeEdgeCube_Factory(__ngFactoryType__){return(ɵNgtsGizmoViewcubeEdgeCube_BaseFactory||(ɵNgtsGizmoViewcubeEdgeCube_BaseFactory=core["ɵɵgetInheritedFactory"](NgtsGizmoViewcubeEdgeCube)))(__ngFactoryType__||NgtsGizmoViewcubeEdgeCube)}})();static#_2=this.ɵcmp=core["ɵɵdefineComponent"]({type:NgtsGizmoViewcubeEdgeCube,selectors:[["ngts-gizmo-viewcube-edge-cube","dimensions","","position",""]],inputs:{dimensions:"dimensions",position:"position"},standalone:!0,features:[core["ɵɵInheritDefinitionFeature"],core["ɵɵStandaloneFeature"]],attrs:_c5,decls:3,vars:7,consts:[[3,"pointermove","pointerout","click","scale","position"],[4,"args"],[3,"color","transparent","opacity","visible"]],template:function NgtsGizmoViewcubeEdgeCube_Template(rf,ctx){1&rf&&(core["ɵɵelementStart"](0,"ngt-mesh",0),core["ɵɵlistener"]("pointermove",(function NgtsGizmoViewcubeEdgeCube_Template_ngt_mesh_pointermove_0_listener($event){return ctx.onPointerMove($event)}))("pointerout",(function NgtsGizmoViewcubeEdgeCube_Template_ngt_mesh_pointerout_0_listener($event){return ctx.onPointerOut($event)}))("click",(function NgtsGizmoViewcubeEdgeCube_Template_ngt_mesh_click_0_listener($event){return ctx.onClick($event)})),core["ɵɵtemplate"](1,NgtsGizmoViewcubeEdgeCube_ngt_box_geometry_1_Template,1,0,"ngt-box-geometry",1),core["ɵɵelement"](2,"ngt-mesh-basic-material",2),core["ɵɵelementEnd"]()),2&rf&&(core["ɵɵproperty"]("scale",1.01)("position",ctx.get("position")),core["ɵɵadvance"](),core["ɵɵproperty"]("args",ctx.get("dimensions")),core["ɵɵadvance"](),core["ɵɵproperty"]("color",ctx.hover?ctx.get("hoverColor"):"white")("transparent",!0)("opacity",.6)("visible",ctx.hover))},dependencies:[angular_three.nQ],encapsulation:2})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtsGizmoViewcubeEdgeCube,[{type:core.Component,args:[{selector:"ngts-gizmo-viewcube-edge-cube[dimensions][position]",standalone:!0,template:'\n        <ngt-mesh\n            [scale]="1.01"\n            [position]="get(\'position\')"\n            (pointermove)="onPointerMove($any($event))"\n            (pointerout)="onPointerOut($any($event))"\n            (click)="onClick($any($event))"\n        >\n            <ngt-box-geometry *args="get(\'dimensions\')" />\n            <ngt-mesh-basic-material\n                [color]="hover ? get(\'hoverColor\') : \'white\'"\n                [transparent]="true"\n                [opacity]="0.6"\n                [visible]="hover"\n            />\n        </ngt-mesh>\n    ',imports:[angular_three.nQ],schemas:[core.CUSTOM_ELEMENTS_SCHEMA]}]}],null,{dimensions:[{type:core.Input}],position:[{type:core.Input}]}),(0,angular_three.X$)({MeshLambertMaterial:three_module.MeshLambertMaterial,Mesh:three_module.Mesh,BoxGeometry:three_module.BoxGeometry});class NgtsGizmoViewcubeFaceMaterial extends NgtsGizmoViewcubeInputs{constructor(){super(...arguments),this.document=(0,core.inject)(common.DOCUMENT)}set index(index){this.set({index})}set hover(hover){this.set({hover})}set font(font){this.set({font})}set color(color){this.set({color})}initialize(){super.initialize(),this.set({font:"20px Inter var, Arial, sans-serif",faces:defaultFaces,color:colors_bg,hoverColor:colors_hover,textColor:colors_text,strokeColor:colors_stroke,opacity:1}),this.connect("texture",this.select(["index","faces","color","font","textColor","strokeColor"],(({index,faces,color,font,textColor,strokeColor})=>{const canvas=this.document.createElement("canvas");canvas.width=128,canvas.height=128;const context=canvas.getContext("2d");return context.fillStyle=color,context.fillRect(0,0,canvas.width,canvas.height),context.strokeStyle=strokeColor,context.strokeRect(0,0,canvas.width,canvas.height),context.font=font,context.textAlign="center",context.fillStyle=textColor,context.fillText(faces[index].toUpperCase(),64,76),new three_module.CanvasTexture(canvas)})))}static#_=this.ɵfac=(()=>{let ɵNgtsGizmoViewcubeFaceMaterial_BaseFactory;return function NgtsGizmoViewcubeFaceMaterial_Factory(__ngFactoryType__){return(ɵNgtsGizmoViewcubeFaceMaterial_BaseFactory||(ɵNgtsGizmoViewcubeFaceMaterial_BaseFactory=core["ɵɵgetInheritedFactory"](NgtsGizmoViewcubeFaceMaterial)))(__ngFactoryType__||NgtsGizmoViewcubeFaceMaterial)}})();static#_2=this.ɵcmp=core["ɵɵdefineComponent"]({type:NgtsGizmoViewcubeFaceMaterial,selectors:[["ngts-gizmo-viewcube-face-material","hover","","index",""]],inputs:{index:"index",hover:"hover",font:"font",color:"color"},standalone:!0,features:[core["ɵɵInheritDefinitionFeature"],core["ɵɵStandaloneFeature"]],attrs:_c6,decls:3,vars:9,consts:[[3,"attach","map","color","opacity","transparent"],["attach","map.encoding",3,"rawValue"],["attach","map.anisotrophy",3,"rawValue"]],template:function NgtsGizmoViewcubeFaceMaterial_Template(rf,ctx){1&rf&&(core["ɵɵelementStart"](0,"ngt-mesh-lambert-material",0),core["ɵɵelement"](1,"ngt-value",1)(2,"ngt-value",2),core["ɵɵelementEnd"]()),2&rf&&(core["ɵɵproperty"]("attach",core["ɵɵpureFunction1"](7,_c7,ctx.get("index")))("map",ctx.get("texture"))("color",ctx.get("hover")?ctx.get("hoverColor"):ctx.get("color"))("opacity",ctx.get("opacity"))("transparent",!0),core["ɵɵadvance"](),core["ɵɵproperty"]("rawValue",ctx.store.get("gl").outputEncoding),core["ɵɵadvance"](),core["ɵɵproperty"]("rawValue",ctx.store.get("gl").capabilities.getMaxAnisotropy()||1))},encapsulation:2})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtsGizmoViewcubeFaceMaterial,[{type:core.Component,args:[{selector:"ngts-gizmo-viewcube-face-material[hover][index]",standalone:!0,template:"\n        <ngt-mesh-lambert-material\n            [attach]=\"['material', get('index')]\"\n            [map]=\"get('texture')\"\n            [color]=\"get('hover') ? get('hoverColor') : get('color')\"\n            [opacity]=\"get('opacity')\"\n            [transparent]=\"true\"\n        >\n            <ngt-value [rawValue]=\"store.get('gl').outputEncoding\" attach=\"map.encoding\" />\n            <ngt-value [rawValue]=\"store.get('gl').capabilities.getMaxAnisotropy() || 1\" attach=\"map.anisotrophy\" />\n        </ngt-mesh-lambert-material>\n    ",schemas:[core.CUSTOM_ELEMENTS_SCHEMA]}]}],null,{index:[{type:core.Input}],hover:[{type:core.Input}],font:[{type:core.Input}],color:[{type:core.Input}]});class NgtsGizmoViewcubeFaceCube extends NgtsGizmoViewcubeInputs{constructor(){super(...arguments),this.gizmoHelperApi=(0,core.inject)(NGTS_GIZMO_HELPER_API),this.hover=-1}set font(font){this.set({font})}set color(color){this.set({color})}onPointerMove(event){event.stopPropagation(),this.hover=Math.floor(event.faceIndex/2)}onPointerOut(event){event.stopPropagation(),this.hover=-1}onClick(event){this.get("clickEmitter")?.observed?this.get("clickEmitter").emit(event):(event.stopPropagation(),this.gizmoHelperApi.tweenCamera(event.face.normal))}static#_=this.ɵfac=(()=>{let ɵNgtsGizmoViewcubeFaceCube_BaseFactory;return function NgtsGizmoViewcubeFaceCube_Factory(__ngFactoryType__){return(ɵNgtsGizmoViewcubeFaceCube_BaseFactory||(ɵNgtsGizmoViewcubeFaceCube_BaseFactory=core["ɵɵgetInheritedFactory"](NgtsGizmoViewcubeFaceCube)))(__ngFactoryType__||NgtsGizmoViewcubeFaceCube)}})();static#_2=this.ɵcmp=core["ɵɵdefineComponent"]({type:NgtsGizmoViewcubeFaceCube,selectors:[["ngts-gizmo-viewcube-face-cube"]],inputs:{font:"font",color:"color"},standalone:!0,features:[core["ɵɵInheritDefinitionFeature"],core["ɵɵStandaloneFeature"]],decls:3,vars:1,consts:[[3,"pointermove","pointerout","click"],[3,"hover","index","font","color","opacity","hoverColor","textColor","strokeColor","faces",4,"ngFor","ngForRepeat"],[3,"hover","index","font","color","opacity","hoverColor","textColor","strokeColor","faces"]],template:function NgtsGizmoViewcubeFaceCube_Template(rf,ctx){1&rf&&(core["ɵɵelementStart"](0,"ngt-mesh",0),core["ɵɵlistener"]("pointermove",(function NgtsGizmoViewcubeFaceCube_Template_ngt_mesh_pointermove_0_listener($event){return ctx.onPointerMove($event)}))("pointerout",(function NgtsGizmoViewcubeFaceCube_Template_ngt_mesh_pointerout_0_listener($event){return ctx.onPointerOut($event)}))("click",(function NgtsGizmoViewcubeFaceCube_Template_ngt_mesh_click_0_listener($event){return ctx.onClick($event)})),core["ɵɵelement"](1,"ngt-box-geometry"),core["ɵɵtemplate"](2,NgtsGizmoViewcubeFaceCube_ngts_gizmo_viewcube_face_material_2_Template,1,9,"ngts-gizmo-viewcube-face-material",1),core["ɵɵelementEnd"]()),2&rf&&(core["ɵɵadvance"](2),core["ɵɵproperty"]("ngForRepeat",6))},dependencies:[NgtsGizmoViewcubeFaceMaterial,angular_three.L7],encapsulation:2})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtsGizmoViewcubeFaceCube,[{type:core.Component,args:[{selector:"ngts-gizmo-viewcube-face-cube",standalone:!0,template:'\n        <ngt-mesh\n            (pointermove)="onPointerMove($any($event))"\n            (pointerout)="onPointerOut($any($event))"\n            (click)="onClick($any($event))"\n        >\n            <ngt-box-geometry />\n            <ngts-gizmo-viewcube-face-material\n                *ngFor="let i; repeat: 6"\n                [hover]="hover === i"\n                [index]="i"\n                [font]="get(\'font\')"\n                [color]="get(\'color\')"\n                [opacity]="get(\'opacity\')"\n                [hoverColor]="get(\'hoverColor\')"\n                [textColor]="get(\'textColor\')"\n                [strokeColor]="get(\'strokeColor\')"\n                [faces]="get(\'faces\')"\n            />\n        </ngt-mesh>\n    ',imports:[NgtsGizmoViewcubeFaceMaterial,angular_three.L7],schemas:[core.CUSTOM_ELEMENTS_SCHEMA]}]}],null,{font:[{type:core.Input}],color:[{type:core.Input}]}),(0,angular_three.X$)({Group:three_module.Group,AmbientLight:three_module.AmbientLight,PointLight:three_module.PointLight});class NgtsGizmoViewcube extends NgtsGizmoViewcubeInputs{constructor(){super(...arguments),this.edges=edges,this.edgeDimensions=edgeDimensions,this.corners=corners,this.cornerDimensions=cornerDimensions,this.clicked=new core.EventEmitter}set font(font){this.set({font})}set color(color){this.set({color})}static#_=this.ɵfac=(()=>{let ɵNgtsGizmoViewcube_BaseFactory;return function NgtsGizmoViewcube_Factory(__ngFactoryType__){return(ɵNgtsGizmoViewcube_BaseFactory||(ɵNgtsGizmoViewcube_BaseFactory=core["ɵɵgetInheritedFactory"](NgtsGizmoViewcube)))(__ngFactoryType__||NgtsGizmoViewcube)}})();static#_2=this.ɵcmp=core["ɵɵdefineComponent"]({type:NgtsGizmoViewcube,selectors:[["ngts-gizmo-viewcube"]],inputs:{font:"font",color:"color"},outputs:{clicked:"clicked"},standalone:!0,features:[core["ɵɵInheritDefinitionFeature"],core["ɵɵStandaloneFeature"]],decls:6,vars:14,consts:[[3,"scale"],[3,"font","color","opacity","hoverColor","textColor","strokeColor","faces","clickEmitter"],[3,"position","dimensions","font","color","opacity","hoverColor","textColor","strokeColor","faces","clickEmitter",4,"ngFor","ngForOf"],[3,"intensity"],[3,"position","intensity"],[3,"position","dimensions","font","color","opacity","hoverColor","textColor","strokeColor","faces","clickEmitter"]],template:function NgtsGizmoViewcube_Template(rf,ctx){1&rf&&(core["ɵɵelementStart"](0,"ngt-group",0),core["ɵɵelement"](1,"ngts-gizmo-viewcube-face-cube",1),core["ɵɵtemplate"](2,NgtsGizmoViewcube_ngts_gizmo_viewcube_edge_cube_2_Template,1,10,"ngts-gizmo-viewcube-edge-cube",2)(3,NgtsGizmoViewcube_ngts_gizmo_viewcube_edge_cube_3_Template,1,10,"ngts-gizmo-viewcube-edge-cube",2),core["ɵɵelement"](4,"ngt-ambient-light",3)(5,"ngt-point-light",4),core["ɵɵelementEnd"]()),2&rf&&(core["ɵɵproperty"]("scale",60),core["ɵɵadvance"](),core["ɵɵproperty"]("font",ctx.get("font"))("color",ctx.get("color"))("opacity",ctx.get("opacity"))("hoverColor",ctx.get("hoverColor"))("textColor",ctx.get("textColor"))("strokeColor",ctx.get("strokeColor"))("faces",ctx.get("faces"))("clickEmitter",ctx.clicked),core["ɵɵadvance"](),core["ɵɵproperty"]("ngForOf",ctx.edges),core["ɵɵadvance"](),core["ɵɵproperty"]("ngForOf",ctx.corners),core["ɵɵadvance"](),core["ɵɵproperty"]("intensity",.5),core["ɵɵadvance"](),core["ɵɵproperty"]("position",10)("intensity",.5))},dependencies:[NgtsGizmoViewcubeEdgeCube,NgtsGizmoViewcubeFaceCube,common.NgFor],encapsulation:2})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtsGizmoViewcube,[{type:core.Component,args:[{selector:"ngts-gizmo-viewcube",standalone:!0,template:'\n        <ngt-group [scale]="60">\n            <ngts-gizmo-viewcube-face-cube\n                [font]="get(\'font\')"\n                [color]="get(\'color\')"\n                [opacity]="get(\'opacity\')"\n                [hoverColor]="get(\'hoverColor\')"\n                [textColor]="get(\'textColor\')"\n                [strokeColor]="get(\'strokeColor\')"\n                [faces]="get(\'faces\')"\n                [clickEmitter]="clicked"\n            />\n\n            <ngts-gizmo-viewcube-edge-cube\n                *ngFor="let edge of edges; let i = index"\n                [position]="edge"\n                [dimensions]="edgeDimensions[i]"\n                [font]="get(\'font\')"\n                [color]="get(\'color\')"\n                [opacity]="get(\'opacity\')"\n                [hoverColor]="get(\'hoverColor\')"\n                [textColor]="get(\'textColor\')"\n                [strokeColor]="get(\'strokeColor\')"\n                [faces]="get(\'faces\')"\n                [clickEmitter]="clicked"\n            />\n\n            <ngts-gizmo-viewcube-edge-cube\n                *ngFor="let corner of corners"\n                [position]="corner"\n                [dimensions]="cornerDimensions"\n                [font]="get(\'font\')"\n                [color]="get(\'color\')"\n                [opacity]="get(\'opacity\')"\n                [hoverColor]="get(\'hoverColor\')"\n                [textColor]="get(\'textColor\')"\n                [strokeColor]="get(\'strokeColor\')"\n                [faces]="get(\'faces\')"\n                [clickEmitter]="clicked"\n            />\n\n            <ngt-ambient-light [intensity]="0.5" />\n            <ngt-point-light [position]="10" [intensity]="0.5" />\n        </ngt-group>\n    ',imports:[NgtsGizmoViewcubeEdgeCube,NgtsGizmoViewcubeFaceCube,common.NgFor],schemas:[core.CUSTOM_ELEMENTS_SCHEMA]}]}],null,{font:[{type:core.Input}],color:[{type:core.Input}],clicked:[{type:core.Output}]}),(0,angular_three.X$)({Group:three_module.Group,Mesh:three_module.Mesh,BoxGeometry:three_module.BoxGeometry,MeshBasicMaterial:three_module.MeshBasicMaterial,Sprite:three_module.Sprite,SpriteMaterial:three_module.SpriteMaterial});class NgtsGizmoViewportAxis extends angular_three.fj{set color(color){this.set({color})}set rotation(rotation){this.set({rotation})}set scale(scale){this.set({scale:void 0===scale?this.get("scale"):scale})}initialize(){super.initialize(),this.set({scale:[.8,.05,.05]})}static#_=this.ɵfac=(()=>{let ɵNgtsGizmoViewportAxis_BaseFactory;return function NgtsGizmoViewportAxis_Factory(__ngFactoryType__){return(ɵNgtsGizmoViewportAxis_BaseFactory||(ɵNgtsGizmoViewportAxis_BaseFactory=core["ɵɵgetInheritedFactory"](NgtsGizmoViewportAxis)))(__ngFactoryType__||NgtsGizmoViewportAxis)}})();static#_2=this.ɵcmp=core["ɵɵdefineComponent"]({type:NgtsGizmoViewportAxis,selectors:[["ngts-gizmo-viewport-axis","color","","rotation",""]],inputs:{color:"color",rotation:"rotation",scale:"scale"},standalone:!0,features:[core["ɵɵInheritDefinitionFeature"],core["ɵɵStandaloneFeature"]],attrs:_c8,decls:4,vars:6,consts:[[3,"rotation"],[3,"position"],[4,"args"],[3,"color","toneMapped"]],template:function NgtsGizmoViewportAxis_Template(rf,ctx){1&rf&&(core["ɵɵelementStart"](0,"ngt-group",0)(1,"ngt-mesh",1),core["ɵɵtemplate"](2,NgtsGizmoViewportAxis_ngt_box_geometry_2_Template,1,0,"ngt-box-geometry",2),core["ɵɵelement"](3,"ngt-mesh-basic-material",3),core["ɵɵelementEnd"]()()),2&rf&&(core["ɵɵproperty"]("rotation",ctx.get("rotation")),core["ɵɵadvance"](),core["ɵɵproperty"]("position",core["ɵɵpureFunction0"](5,_c9)),core["ɵɵadvance"](),core["ɵɵproperty"]("args",ctx.get("scale")),core["ɵɵadvance"](),core["ɵɵproperty"]("color",ctx.get("color"))("toneMapped",!1))},dependencies:[angular_three.nQ],encapsulation:2})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtsGizmoViewportAxis,[{type:core.Component,args:[{selector:"ngts-gizmo-viewport-axis[color][rotation]",standalone:!0,template:'\n        <ngt-group [rotation]="get(\'rotation\')">\n            <ngt-mesh [position]="[0.4, 0, 0]">\n                <ngt-box-geometry *args="get(\'scale\')" />\n                <ngt-mesh-basic-material [color]="get(\'color\')" [toneMapped]="false" />\n            </ngt-mesh>\n        </ngt-group>\n    ',imports:[angular_three.nQ],schemas:[core.CUSTOM_ELEMENTS_SCHEMA]}]}],null,{color:[{type:core.Input}],rotation:[{type:core.Input}],scale:[{type:core.Input}]});class NgtsGizmoViewportAxisHead extends angular_three.fj{constructor(){super(...arguments),this.document=(0,core.inject)(common.DOCUMENT),this.store=(0,core.inject)(angular_three.PW),this.gl=this.store.get("gl")}set arcStyle(arcStyle){this.set({arcStyle})}set label(label){this.set({label})}set labelColor(labelColor){this.set({labelColor})}set axisHeadScale(axisHeadScale){this.set({axisHeadScale})}set disabled(disabled){this.set({disabled})}set font(font){this.set({font})}set clickEmitter(clickEmitter){this.set({clickEmitter})}initialize(){super.initialize(),this.set({axisHeadScale:1,active:!1}),this.connect("texture",(0,observable_combineLatest.z)([this.select("arcStyle"),this.select("labelColor"),this.select("font"),this.select("label").pipe((0,angular_three.pG)())]).pipe((0,operators_map.T)((([arcStyle,labelColor,font,label])=>{const canvas=this.document.createElement("canvas");canvas.width=64,canvas.height=64;const context=canvas.getContext("2d");return context.beginPath(),context.arc(32,32,16,0,2*Math.PI),context.closePath(),context.fillStyle=arcStyle,context.fill(),label&&(context.font=font,context.textAlign="center",context.fillStyle=labelColor,context.fillText(label,32,41)),new three_module.CanvasTexture(canvas)})))),this.connect("scale",(0,observable_combineLatest.z)([this.select("active"),this.select("axisHeadScale"),this.select("label").pipe((0,angular_three.pG)())]).pipe((0,operators_map.T)((([active,axisHeadScale,label])=>(label?1:.75)*(active?1.2:1)*axisHeadScale))))}onPointerOver(event){this.get("disabled")||(event.stopPropagation(),this.set({active:!0}))}onPointerOut(event){this.get("disabled")||(this.get("clickEmitter")?.observed?this.get("clickEmitter").emit(event):(event.stopPropagation(),this.set({active:!1})))}static#_=this.ɵfac=(()=>{let ɵNgtsGizmoViewportAxisHead_BaseFactory;return function NgtsGizmoViewportAxisHead_Factory(__ngFactoryType__){return(ɵNgtsGizmoViewportAxisHead_BaseFactory||(ɵNgtsGizmoViewportAxisHead_BaseFactory=core["ɵɵgetInheritedFactory"](NgtsGizmoViewportAxisHead)))(__ngFactoryType__||NgtsGizmoViewportAxisHead)}})();static#_2=this.ɵcmp=core["ɵɵdefineComponent"]({type:NgtsGizmoViewportAxisHead,selectors:[["ngts-gizmo-viewport-axis-head"]],inputs:{arcStyle:"arcStyle",label:"label",labelColor:"labelColor",axisHeadScale:"axisHeadScale",disabled:"disabled",font:"font",clickEmitter:"clickEmitter"},standalone:!0,features:[core["ɵɵInheritDefinitionFeature"],core["ɵɵStandaloneFeature"]],decls:4,vars:7,consts:[["ngtCompound","",3,"pointerover","pointerout","scale"],[3,"map","opacity","alphaTest","toneMapped"],["attach","map.encoding",3,"rawValue"],["attach","map.anisotropy",3,"rawValue"]],template:function NgtsGizmoViewportAxisHead_Template(rf,ctx){1&rf&&(core["ɵɵelementStart"](0,"ngt-sprite",0),core["ɵɵlistener"]("pointerover",(function NgtsGizmoViewportAxisHead_Template_ngt_sprite_pointerover_0_listener($event){return ctx.onPointerOver($event)}))("pointerout",(function NgtsGizmoViewportAxisHead_Template_ngt_sprite_pointerout_0_listener($event){return ctx.onPointerOut($event)})),core["ɵɵelementStart"](1,"ngt-sprite-material",1),core["ɵɵelement"](2,"ngt-value",2)(3,"ngt-value",3),core["ɵɵelementEnd"]()()),2&rf&&(core["ɵɵproperty"]("scale",ctx.get("scale")),core["ɵɵadvance"](),core["ɵɵproperty"]("map",ctx.get("texture"))("opacity",ctx.get("label")?1:.75)("alphaTest",.3)("toneMapped",!1),core["ɵɵadvance"](),core["ɵɵproperty"]("rawValue",ctx.gl.outputEncoding),core["ɵɵadvance"](),core["ɵɵproperty"]("rawValue",ctx.gl.capabilities.getMaxAnisotropy()||1))},encapsulation:2})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtsGizmoViewportAxisHead,[{type:core.Component,args:[{selector:"ngts-gizmo-viewport-axis-head",standalone:!0,template:'\n        <ngt-sprite\n            ngtCompound\n            [scale]="get(\'scale\')"\n            (pointerover)="onPointerOver($any($event))"\n            (pointerout)="onPointerOut($any($event))"\n        >\n            <ngt-sprite-material\n                [map]="get(\'texture\')"\n                [opacity]="get(\'label\') ? 1 : 0.75"\n                [alphaTest]="0.3"\n                [toneMapped]="false"\n            >\n                <ngt-value [rawValue]="gl.outputEncoding" attach="map.encoding" />\n                <ngt-value [rawValue]="gl.capabilities.getMaxAnisotropy() || 1" attach="map.anisotropy" />\n            </ngt-sprite-material>\n        </ngt-sprite>\n    ',imports:[angular_three.nQ],schemas:[core.CUSTOM_ELEMENTS_SCHEMA]}]}],null,{arcStyle:[{type:core.Input}],label:[{type:core.Input}],labelColor:[{type:core.Input}],axisHeadScale:[{type:core.Input}],disabled:[{type:core.Input}],font:[{type:core.Input}],clickEmitter:[{type:core.Input}]}),(0,angular_three.X$)({Group:three_module.Group,AmbientLight:three_module.AmbientLight,PointLight:three_module.PointLight});class NgtsGizmoViewport extends angular_three.fj{constructor(){super(...arguments),this.gizmoHelperApi=(0,core.inject)(NGTS_GIZMO_HELPER_API),this.Math=Math,this.clicked=new core.EventEmitter}set axisColors(axisColors){this.set({axisColors})}set axisScale(axisScale){this.set({axisScale})}set labels(labels){this.set({labels})}set axisHeadScale(axisHeadScale){this.set({axisHeadScale})}set labelColor(labelColor){this.set({labelColor})}set hideNegativeAxes(hideNegativeAxes){this.set({hideNegativeAxes})}set hideAxisHeads(hideAxisHeads){this.set({hideAxisHeads})}set disabled(disabled){this.set({disabled})}set font(font){this.set({font})}initialize(){super.initialize(),this.set({font:"18px Inter var, Arial, sans-serif",axisColors:["#ff2060","#20df80","#2080ff"],axisHeadScale:1,labels:["X","Y","Z"],labelColor:"#000"})}onPointerDown(event){this.get("disabled")||(event.stopPropagation(),this.gizmoHelperApi.tweenCamera(event.object.position))}static#_=this.ɵfac=(()=>{let ɵNgtsGizmoViewport_BaseFactory;return function NgtsGizmoViewport_Factory(__ngFactoryType__){return(ɵNgtsGizmoViewport_BaseFactory||(ɵNgtsGizmoViewport_BaseFactory=core["ɵɵgetInheritedFactory"](NgtsGizmoViewport)))(__ngFactoryType__||NgtsGizmoViewport)}})();static#_2=this.ɵcmp=core["ɵɵdefineComponent"]({type:NgtsGizmoViewport,selectors:[["ngts-gizmo-viewport"]],inputs:{axisColors:"axisColors",axisScale:"axisScale",labels:"labels",axisHeadScale:"axisHeadScale",labelColor:"labelColor",hideNegativeAxes:"hideNegativeAxes",hideAxisHeads:"hideAxisHeads",disabled:"disabled",font:"font"},outputs:{clicked:"clicked"},standalone:!0,features:[core["ɵɵInheritDefinitionFeature"],core["ɵɵStandaloneFeature"]],decls:7,vars:16,consts:[["ngtCompound","",3,"scale"],[3,"color","rotation","scale"],[4,"ngIf"],["intensity","0.5"],["position","10","intensity","0.5"],[3,"pointerdown","arcStyle","position","label","font","disabled","labelColor","clickEmitter","axisHeadScale"],[3,"pointerdown","arcStyle","position","font","disabled","labelColor","clickEmitter","axisHeadScale"]],template:function NgtsGizmoViewport_Template(rf,ctx){1&rf&&(core["ɵɵelementStart"](0,"ngt-group",0),core["ɵɵelement"](1,"ngts-gizmo-viewport-axis",1)(2,"ngts-gizmo-viewport-axis",1)(3,"ngts-gizmo-viewport-axis",1),core["ɵɵtemplate"](4,NgtsGizmoViewport_ng_container_4_Template,5,28,"ng-container",2),core["ɵɵelement"](5,"ngt-ambient-light",3)(6,"ngt-point-light",4),core["ɵɵelementEnd"]()),2&rf&&(core["ɵɵproperty"]("scale",40),core["ɵɵadvance"](),core["ɵɵproperty"]("color",ctx.get("axisColors")[0])("rotation",core["ɵɵpureFunction0"](11,_c10))("scale",ctx.get("axisScale")),core["ɵɵadvance"](),core["ɵɵproperty"]("color",ctx.get("axisColors")[1])("rotation",core["ɵɵpureFunction1"](12,_c11,ctx.Math.PI/2))("scale",ctx.get("axisScale")),core["ɵɵadvance"](),core["ɵɵproperty"]("color",ctx.get("axisColors")[2])("rotation",core["ɵɵpureFunction1"](14,_c12,-ctx.Math.PI/2))("scale",ctx.get("axisScale")),core["ɵɵadvance"](),core["ɵɵproperty"]("ngIf",!ctx.get("hideAxisHeads")))},dependencies:[NgtsGizmoViewportAxis,NgtsGizmoViewportAxisHead,common.NgIf],encapsulation:2})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtsGizmoViewport,[{type:core.Component,args:[{selector:"ngts-gizmo-viewport",standalone:!0,template:'\n        <ngt-group ngtCompound [scale]="40">\n            <ngts-gizmo-viewport-axis\n                [color]="get(\'axisColors\')[0]"\n                [rotation]="[0, 0, 0]"\n                [scale]="get(\'axisScale\')"\n            ></ngts-gizmo-viewport-axis>\n            <ngts-gizmo-viewport-axis\n                [color]="get(\'axisColors\')[1]"\n                [rotation]="[0, 0, Math.PI / 2]"\n                [scale]="get(\'axisScale\')"\n            ></ngts-gizmo-viewport-axis>\n            <ngts-gizmo-viewport-axis\n                [color]="get(\'axisColors\')[2]"\n                [rotation]="[0, -Math.PI / 2, 0]"\n                [scale]="get(\'axisScale\')"\n            ></ngts-gizmo-viewport-axis>\n            <ng-container *ngIf="!get(\'hideAxisHeads\')">\n                <ngts-gizmo-viewport-axis-head\n                    [arcStyle]="get(\'axisColors\')[0]"\n                    [position]="[1, 0, 0]"\n                    [label]="get(\'labels\')[0]"\n                    [font]="get(\'font\')"\n                    [disabled]="get(\'disabled\')"\n                    [labelColor]="get(\'labelColor\')"\n                    [clickEmitter]="clicked"\n                    [axisHeadScale]="get(\'axisHeadScale\')"\n                    (pointerdown)="onPointerDown($any($event))"\n                ></ngts-gizmo-viewport-axis-head>\n                <ngts-gizmo-viewport-axis-head\n                    [arcStyle]="get(\'axisColors\')[1]"\n                    [position]="[0, 1, 0]"\n                    [label]="get(\'labels\')[1]"\n                    [font]="get(\'font\')"\n                    [disabled]="get(\'disabled\')"\n                    [labelColor]="get(\'labelColor\')"\n                    [clickEmitter]="clicked"\n                    [axisHeadScale]="get(\'axisHeadScale\')"\n                    (pointerdown)="onPointerDown($any($event))"\n                ></ngts-gizmo-viewport-axis-head>\n                <ngts-gizmo-viewport-axis-head\n                    [arcStyle]="get(\'axisColors\')[2]"\n                    [position]="[0, 0, 1]"\n                    [label]="get(\'labels\')[2]"\n                    [font]="get(\'font\')"\n                    [disabled]="get(\'disabled\')"\n                    [labelColor]="get(\'labelColor\')"\n                    [clickEmitter]="clicked"\n                    [axisHeadScale]="get(\'axisHeadScale\')"\n                    (pointerdown)="onPointerDown($any($event))"\n                ></ngts-gizmo-viewport-axis-head>\n                <ng-container *ngIf="!get(\'hideNegativeAxes\')">\n                    <ngts-gizmo-viewport-axis-head\n                        [arcStyle]="get(\'axisColors\')[0]"\n                        [position]="[-1, 0, 0]"\n                        [font]="get(\'font\')"\n                        [disabled]="get(\'disabled\')"\n                        [labelColor]="get(\'labelColor\')"\n                        [clickEmitter]="clicked"\n                        [axisHeadScale]="get(\'axisHeadScale\')"\n                        (pointerdown)="onPointerDown($any($event))"\n                    ></ngts-gizmo-viewport-axis-head>\n                    <ngts-gizmo-viewport-axis-head\n                        [arcStyle]="get(\'axisColors\')[1]"\n                        [position]="[0, -1, 0]"\n                        [font]="get(\'font\')"\n                        [disabled]="get(\'disabled\')"\n                        [labelColor]="get(\'labelColor\')"\n                        [clickEmitter]="clicked"\n                        [axisHeadScale]="get(\'axisHeadScale\')"\n                        (pointerdown)="onPointerDown($any($event))"\n                    ></ngts-gizmo-viewport-axis-head>\n                    <ngts-gizmo-viewport-axis-head\n                        [arcStyle]="get(\'axisColors\')[2]"\n                        [position]="[0, 0, -1]"\n                        [font]="get(\'font\')"\n                        [disabled]="get(\'disabled\')"\n                        [labelColor]="get(\'labelColor\')"\n                        [clickEmitter]="clicked"\n                        [axisHeadScale]="get(\'axisHeadScale\')"\n                        (pointerdown)="onPointerDown($any($event))"\n                    ></ngts-gizmo-viewport-axis-head>\n                </ng-container>\n            </ng-container>\n            <ngt-ambient-light intensity="0.5"></ngt-ambient-light>\n            <ngt-point-light position="10" intensity="0.5"></ngt-point-light>\n        </ngt-group>\n    ',imports:[NgtsGizmoViewportAxis,NgtsGizmoViewportAxisHead,common.NgIf],schemas:[core.CUSTOM_ELEMENTS_SCHEMA]}]}],null,{axisColors:[{type:core.Input}],axisScale:[{type:core.Input}],labels:[{type:core.Input}],axisHeadScale:[{type:core.Input}],labelColor:[{type:core.Input}],hideNegativeAxes:[{type:core.Input}],hideAxisHeads:[{type:core.Input}],disabled:[{type:core.Input}],font:[{type:core.Input}],clicked:[{type:core.Output}]});const v=new three_module.Vector3;class NgtsQuadraticBezierLine extends NgtsLineInput{constructor(){super(...arguments),this.curve=new three_module.QuadraticBezierCurve3(void 0,void 0,void 0),this.lineRef=(0,angular_three.sY)()}set start(start){this.set({start})}set end(end){this.set({end})}set mid(mid){this.set({mid})}set segments(segments){this.set({segments})}initialize(){super.initialize(),this.set({start:[0,0,0],end:[0,0,0],segments:20})}ngOnInit(){this.connect("points",(0,observable_combineLatest.z)([this.select("start"),this.select("end"),this.select("mid").pipe((0,angular_three.pG)()),this.select("segments")]).pipe((0,operators_map.T)((([start,end,mid,segments])=>this.getPoints(start,end,mid,segments))))),this.replaceSetPoints()}replaceSetPoints(){this.hold(this.lineRef.$,(line=>{line.setPoints=(start,end,mid)=>{const points=this.getPoints(start,end,mid);this.lineRef.nativeElement.geometry&&this.lineRef.nativeElement.geometry.setPositions(points.map((p=>p.toArray())).flat())}}))}getPoints(start,end,mid,segments=20){return start instanceof three_module.Vector3?this.curve.v0.copy(start):this.curve.v0.set(...start),end instanceof three_module.Vector3?this.curve.v2.copy(end):this.curve.v2.set(...end),mid instanceof three_module.Vector3?this.curve.v1.copy(mid):this.curve.v1.copy(this.curve.v0.clone().add(this.curve.v2.clone().sub(this.curve.v0)).add(v.set(0,this.curve.v0.y-this.curve.v2.y,0))),this.curve.getPoints(segments)}static#_=this.ɵfac=(()=>{let ɵNgtsQuadraticBezierLine_BaseFactory;return function NgtsQuadraticBezierLine_Factory(__ngFactoryType__){return(ɵNgtsQuadraticBezierLine_BaseFactory||(ɵNgtsQuadraticBezierLine_BaseFactory=core["ɵɵgetInheritedFactory"](NgtsQuadraticBezierLine)))(__ngFactoryType__||NgtsQuadraticBezierLine)}})();static#_2=this.ɵcmp=core["ɵɵdefineComponent"]({type:NgtsQuadraticBezierLine,selectors:[["ngts-quadratic-bezier-line"]],inputs:{lineRef:"lineRef",start:"start",end:"end",mid:"mid",segments:"segments"},standalone:!0,features:[core["ɵɵInheritDefinitionFeature"],core["ɵɵStandaloneFeature"]],decls:1,vars:14,consts:[[3,"lineRef","points","color","vertexColors","resolution","lineWidth","alphaToCoverage","dashed","dashScale","dashSize","dashOffset","gapSize","wireframe","worldUnits"]],template:function NgtsQuadraticBezierLine_Template(rf,ctx){1&rf&&core["ɵɵelement"](0,"ngts-line",0),2&rf&&core["ɵɵproperty"]("lineRef",ctx.lineRef)("points",ctx.get("points"))("color",ctx.get("color"))("vertexColors",ctx.get("vertexColors"))("resolution",ctx.get("resolution"))("lineWidth",ctx.get("lineWidth"))("alphaToCoverage",ctx.get("alphaToCoverage"))("dashed",ctx.get("dashed"))("dashScale",ctx.get("dashScale"))("dashSize",ctx.get("dashSize"))("dashOffset",ctx.get("dashOffset"))("gapSize",ctx.get("gapSize"))("wireframe",ctx.get("wireframe"))("worldUnits",ctx.get("worldUnits"))},dependencies:[NgtsLine],encapsulation:2})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtsQuadraticBezierLine,[{type:core.Component,args:[{selector:"ngts-quadratic-bezier-line",standalone:!0,template:'\n        <ngts-line\n            [lineRef]="lineRef"\n            [points]="get(\'points\')"\n            [color]="get(\'color\')"\n            [vertexColors]="get(\'vertexColors\')"\n            [resolution]="get(\'resolution\')"\n            [lineWidth]="get(\'lineWidth\')"\n            [alphaToCoverage]="get(\'alphaToCoverage\')"\n            [dashed]="get(\'dashed\')"\n            [dashScale]="get(\'dashScale\')"\n            [dashSize]="get(\'dashSize\')"\n            [dashOffset]="get(\'dashOffset\')"\n            [gapSize]="get(\'gapSize\')"\n            [wireframe]="get(\'wireframe\')"\n            [worldUnits]="get(\'worldUnits\')"\n        />\n    ',imports:[NgtsLine],schemas:[core.CUSTOM_ELEMENTS_SCHEMA]}]}],null,{lineRef:[{type:core.Input}],start:[{type:core.Input}],end:[{type:core.Input}],mid:[{type:core.Input}],segments:[{type:core.Input}]}),(0,angular_three.X$)({Mesh:three_module.Mesh,TextGeometry});class NgtsText3D extends angular_three.fj{constructor(){super(...arguments),this.font$=this.select("font").pipe((0,operators_switchMap.n)((font=>"string"==typeof font?fetch(font).then((res=>res.json())):(0,observable_of.of)(font))),(0,operators_map.T)((fontData=>(new FontLoader).parse(fontData)))),this.geometryArgs$=(0,observable_combineLatest.z)([this.font$,this.select("text"),this.select("size"),this.select("height"),this.select("bevelThickness"),this.select("bevelSize"),this.select("bevelEnabled"),this.select("bevelSegments"),this.select("bevelOffset"),this.select("curveSegments"),this.select("letterSpacing"),this.select("lineHeight")]).pipe((0,operators_map.T)((([font,text,size,height,bevelThickness,bevelSize,bevelEnabled,bevelSegments,bevelOffset,curveSegments,letterSpacing,lineHeight])=>[text,{font,size,height,bevelThickness,bevelSize,bevelSegments,bevelEnabled,bevelOffset,curveSegments,letterSpacing,lineHeight}])))}set font(font){this.set({font})}set text(text){this.set({text})}set bevelEnabled(bevelEnabled){this.set({bevelEnabled})}set bevelOffset(bevelOffset){this.set({bevelOffset})}set bevelSize(bevelSize){this.set({bevelSize})}set bevelThickness(bevelThickness){this.set({bevelThickness})}set curveSegments(curveSegments){this.set({curveSegments})}set bevelSegments(bevelSegments){this.set({bevelSegments})}set height(height){this.set({height})}set size(size){this.set({size})}set lineHeight(lineHeight){this.set({lineHeight})}set letterSpacing(letterSpacing){this.set({letterSpacing})}initialize(){super.initialize(),this.set({letterSpacing:0,lineHeight:1,size:1,height:.2,bevelThickness:.1,bevelSize:.01,bevelEnabled:!1,bevelOffset:0,bevelSegments:4,curveSegments:8})}static#_=this.ɵfac=(()=>{let ɵNgtsText3D_BaseFactory;return function NgtsText3D_Factory(__ngFactoryType__){return(ɵNgtsText3D_BaseFactory||(ɵNgtsText3D_BaseFactory=core["ɵɵgetInheritedFactory"](NgtsText3D)))(__ngFactoryType__||NgtsText3D)}})();static#_2=this.ɵcmp=core["ɵɵdefineComponent"]({type:NgtsText3D,selectors:[["ngts-text-3d","font",""]],inputs:{font:"font",text:"text",bevelEnabled:"bevelEnabled",bevelOffset:"bevelOffset",bevelSize:"bevelSize",bevelThickness:"bevelThickness",curveSegments:"curveSegments",bevelSegments:"bevelSegments",height:"height",size:"size",lineHeight:"lineHeight",letterSpacing:"letterSpacing"},standalone:!0,features:[core["ɵɵInheritDefinitionFeature"],core["ɵɵStandaloneFeature"]],attrs:_c17,ngContentSelectors:angular_three_soba_abstractions_c0,decls:4,vars:4,consts:[["ngtCompound",""],[4,"args"]],template:function NgtsText3D_Template(rf,ctx){1&rf&&(core["ɵɵprojectionDef"](),core["ɵɵelementStart"](0,"ngt-mesh",0),core["ɵɵtemplate"](1,NgtsText3D_ngt_text_geometry_1_Template,1,0,"ngt-text-geometry",1),core["ɵɵpipe"](2,"ngtPush"),core["ɵɵprojection"](3),core["ɵɵelementEnd"]()),2&rf&&(core["ɵɵadvance"](),core["ɵɵproperty"]("args",core["ɵɵpipeBind2"](2,1,ctx.geometryArgs$,null)))},dependencies:[angular_three.nQ,angular_three.mp],encapsulation:2})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtsText3D,[{type:core.Component,args:[{selector:"ngts-text-3d[font]",standalone:!0,template:'\n        <ngt-mesh ngtCompound>\n            <ngt-text-geometry *args="geometryArgs$ | ngtPush : null" />\n            <ng-content />\n        </ngt-mesh>\n    ',imports:[angular_three.nQ,angular_three.mp],schemas:[core.CUSTOM_ELEMENTS_SCHEMA]}]}],null,{font:[{type:core.Input}],text:[{type:core.Input}],bevelEnabled:[{type:core.Input}],bevelOffset:[{type:core.Input}],bevelSize:[{type:core.Input}],bevelThickness:[{type:core.Input}],curveSegments:[{type:core.Input}],bevelSegments:[{type:core.Input}],height:[{type:core.Input}],size:[{type:core.Input}],lineHeight:[{type:core.Input}],letterSpacing:[{type:core.Input}]});class NgtsText extends angular_three.fj{constructor(){super(...arguments),this.textRef=(0,angular_three.sY)(),this.sync=new core.EventEmitter,this.store=(0,core.inject)(angular_three.PW),this.troikaText=new Text}set text(text){this.set({text})}set characters(characters){this.set({characters})}set font(font){this.set({font})}set anchorX(anchorX){this.set({anchorX})}set anchorY(anchorY){this.set({anchorY})}initialize(){super.initialize(),this.set({anchorX:"center",anchorY:"middle",text:""})}ngOnInit(){this.preloadFont(),this.syncText()}ngOnDestroy(){this.troikaText.dispose(),super.ngOnDestroy()}preloadFont(){const{font,characters}=this.get();font&&characters&&function preloadFont({font,characters,sdfGlyphSize},callback){getTextRenderInfo({font,sdfGlyphSize,text:Array.isArray(characters)?characters.join("\n"):""+characters},callback)}({font,characters})}syncText(){this.hold(this.select(),(()=>{const invalidate=this.store.get("invalidate");this.troikaText.sync((()=>{invalidate(),this.sync.observed&&this.sync.next(this.troikaText)}))}))}static#_=this.ɵfac=(()=>{let ɵNgtsText_BaseFactory;return function NgtsText_Factory(__ngFactoryType__){return(ɵNgtsText_BaseFactory||(ɵNgtsText_BaseFactory=core["ɵɵgetInheritedFactory"](NgtsText)))(__ngFactoryType__||NgtsText)}})();static#_2=this.ɵcmp=core["ɵɵdefineComponent"]({type:NgtsText,selectors:[["ngts-text","text",""]],inputs:{textRef:"textRef",text:"text",characters:"characters",font:"font",anchorX:"anchorX",anchorY:"anchorY"},outputs:{sync:"sync"},standalone:!0,features:[core["ɵɵProvidersFeature"]([RxActionFactory]),core["ɵɵInheritDefinitionFeature"],core["ɵɵStandaloneFeature"]],attrs:_c18,ngContentSelectors:angular_three_soba_abstractions_c0,decls:2,vars:3,consts:[["ngtCompound","",3,"ref","text","anchorX","anchorY","font",4,"args"],["ngtCompound","",3,"ref","text","anchorX","anchorY","font"]],template:function NgtsText_Template(rf,ctx){1&rf&&(core["ɵɵprojectionDef"](),core["ɵɵelementContainerStart"](0),core["ɵɵtemplate"](1,NgtsText_ngt_primitive_1_Template,2,5,"ngt-primitive",0),core["ɵɵelementContainerEnd"]()),2&rf&&(core["ɵɵadvance"](),core["ɵɵproperty"]("args",core["ɵɵpureFunction1"](1,_c2,ctx.troikaText)))},dependencies:[angular_three.nQ],encapsulation:2})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtsText,[{type:core.Component,args:[{selector:"ngts-text[text]",standalone:!0,template:'\n        <ng-container>\n            <ngt-primitive\n                ngtCompound\n                *args="[troikaText]"\n                [ref]="textRef"\n                [text]="get(\'text\')"\n                [anchorX]="get(\'anchorX\')"\n                [anchorY]="get(\'anchorY\')"\n                [font]="get(\'font\')"\n            >\n                <ng-content />\n            </ngt-primitive>\n        </ng-container>\n    ',imports:[angular_three.nQ],providers:[RxActionFactory],schemas:[core.CUSTOM_ELEMENTS_SCHEMA]}]}],null,{textRef:[{type:core.Input}],text:[{type:core.Input}],characters:[{type:core.Input}],font:[{type:core.Input}],anchorX:[{type:core.Input}],anchorY:[{type:core.Input}],sync:[{type:core.Output}]})},"./node_modules/angular-three-soba/fesm2022/angular-three-soba-controls.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{H:()=>NgtsOrbitControls});var core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),angular_three=__webpack_require__("./node_modules/angular-three/fesm2022/angular-three.mjs"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),combineLatest=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/combineLatest.js"),three_module=__webpack_require__("./node_modules/three/build/three.module.js"),__defProp=Object.defineProperty,__publicField=(obj,key,value)=>(((obj,key,value)=>{key in obj?__defProp(obj,key,{enumerable:!0,configurable:!0,writable:!0,value}):obj[key]=value})(obj,"symbol"!=typeof key?key+"":key,value),value);const _ray=new three_module.Ray,_plane=new three_module.Plane,TILT_LIMIT=Math.cos(Math.PI/180*70),moduloWrapAround=(offset,capacity)=>(offset%capacity+capacity)%capacity;class OrbitControls extends three_module.EventDispatcher{constructor(object,domElement){super(),__publicField(this,"object"),__publicField(this,"domElement"),__publicField(this,"enabled",!0),__publicField(this,"target",new three_module.Vector3),__publicField(this,"minDistance",0),__publicField(this,"maxDistance",1/0),__publicField(this,"minZoom",0),__publicField(this,"maxZoom",1/0),__publicField(this,"minPolarAngle",0),__publicField(this,"maxPolarAngle",Math.PI),__publicField(this,"minAzimuthAngle",-1/0),__publicField(this,"maxAzimuthAngle",1/0),__publicField(this,"enableDamping",!1),__publicField(this,"dampingFactor",.05),__publicField(this,"enableZoom",!0),__publicField(this,"zoomSpeed",1),__publicField(this,"enableRotate",!0),__publicField(this,"rotateSpeed",1),__publicField(this,"enablePan",!0),__publicField(this,"panSpeed",1),__publicField(this,"screenSpacePanning",!0),__publicField(this,"keyPanSpeed",7),__publicField(this,"zoomToCursor",!1),__publicField(this,"autoRotate",!1),__publicField(this,"autoRotateSpeed",2),__publicField(this,"reverseOrbit",!1),__publicField(this,"reverseHorizontalOrbit",!1),__publicField(this,"reverseVerticalOrbit",!1),__publicField(this,"keys",{LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"}),__publicField(this,"mouseButtons",{LEFT:three_module.MOUSE.ROTATE,MIDDLE:three_module.MOUSE.DOLLY,RIGHT:three_module.MOUSE.PAN}),__publicField(this,"touches",{ONE:three_module.TOUCH.ROTATE,TWO:three_module.TOUCH.DOLLY_PAN}),__publicField(this,"target0"),__publicField(this,"position0"),__publicField(this,"zoom0"),__publicField(this,"_domElementKeyEvents",null),__publicField(this,"getPolarAngle"),__publicField(this,"getAzimuthalAngle"),__publicField(this,"setPolarAngle"),__publicField(this,"setAzimuthalAngle"),__publicField(this,"getDistance"),__publicField(this,"listenToKeyEvents"),__publicField(this,"stopListenToKeyEvents"),__publicField(this,"saveState"),__publicField(this,"reset"),__publicField(this,"update"),__publicField(this,"connect"),__publicField(this,"dispose"),this.object=object,this.domElement=domElement,this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=()=>spherical.phi,this.getAzimuthalAngle=()=>spherical.theta,this.setPolarAngle=value=>{let phi=moduloWrapAround(value,2*Math.PI),currentPhi=spherical.phi;currentPhi<0&&(currentPhi+=2*Math.PI),phi<0&&(phi+=2*Math.PI);let phiDist=Math.abs(phi-currentPhi);2*Math.PI-phiDist<phiDist&&(phi<currentPhi?phi+=2*Math.PI:currentPhi+=2*Math.PI),sphericalDelta.phi=phi-currentPhi,scope.update()},this.setAzimuthalAngle=value=>{let theta=moduloWrapAround(value,2*Math.PI),currentTheta=spherical.theta;currentTheta<0&&(currentTheta+=2*Math.PI),theta<0&&(theta+=2*Math.PI);let thetaDist=Math.abs(theta-currentTheta);2*Math.PI-thetaDist<thetaDist&&(theta<currentTheta?theta+=2*Math.PI:currentTheta+=2*Math.PI),sphericalDelta.theta=theta-currentTheta,scope.update()},this.getDistance=()=>scope.object.position.distanceTo(scope.target),this.listenToKeyEvents=domElement2=>{domElement2.addEventListener("keydown",onKeyDown),this._domElementKeyEvents=domElement2},this.stopListenToKeyEvents=()=>{this._domElementKeyEvents.removeEventListener("keydown",onKeyDown),this._domElementKeyEvents=null},this.saveState=()=>{scope.target0.copy(scope.target),scope.position0.copy(scope.object.position),scope.zoom0=scope.object.zoom},this.reset=()=>{scope.target.copy(scope.target0),scope.object.position.copy(scope.position0),scope.object.zoom=scope.zoom0,scope.object.updateProjectionMatrix(),scope.dispatchEvent(changeEvent),scope.update(),state=STATE.NONE},this.update=(()=>{const offset=new three_module.Vector3,up=new three_module.Vector3(0,1,0),quat=(new three_module.Quaternion).setFromUnitVectors(object.up,up),quatInverse=quat.clone().invert(),lastPosition=new three_module.Vector3,lastQuaternion=new three_module.Quaternion,twoPI=2*Math.PI;return function update(){const position=scope.object.position;quat.setFromUnitVectors(object.up,up),quatInverse.copy(quat).invert(),offset.copy(position).sub(scope.target),offset.applyQuaternion(quat),spherical.setFromVector3(offset),scope.autoRotate&&state===STATE.NONE&&rotateLeft(function getAutoRotationAngle(){return 2*Math.PI/60/60*scope.autoRotateSpeed}()),scope.enableDamping?(spherical.theta+=sphericalDelta.theta*scope.dampingFactor,spherical.phi+=sphericalDelta.phi*scope.dampingFactor):(spherical.theta+=sphericalDelta.theta,spherical.phi+=sphericalDelta.phi);let min=scope.minAzimuthAngle,max=scope.maxAzimuthAngle;isFinite(min)&&isFinite(max)&&(min<-Math.PI?min+=twoPI:min>Math.PI&&(min-=twoPI),max<-Math.PI?max+=twoPI:max>Math.PI&&(max-=twoPI),spherical.theta=min<=max?Math.max(min,Math.min(max,spherical.theta)):spherical.theta>(min+max)/2?Math.max(min,spherical.theta):Math.min(max,spherical.theta)),spherical.phi=Math.max(scope.minPolarAngle,Math.min(scope.maxPolarAngle,spherical.phi)),spherical.makeSafe(),!0===scope.enableDamping?scope.target.addScaledVector(panOffset,scope.dampingFactor):scope.target.add(panOffset),scope.zoomToCursor&&performCursorZoom||scope.object.isOrthographicCamera?spherical.radius=clampDistance(spherical.radius):spherical.radius=clampDistance(spherical.radius*scale),offset.setFromSpherical(spherical),offset.applyQuaternion(quatInverse),position.copy(scope.target).add(offset),scope.object.matrixAutoUpdate||scope.object.updateMatrix(),scope.object.lookAt(scope.target),!0===scope.enableDamping?(sphericalDelta.theta*=1-scope.dampingFactor,sphericalDelta.phi*=1-scope.dampingFactor,panOffset.multiplyScalar(1-scope.dampingFactor)):(sphericalDelta.set(0,0,0),panOffset.set(0,0,0));let zoomChanged=!1;if(scope.zoomToCursor&&performCursorZoom){let newRadius=null;if(scope.object instanceof three_module.PerspectiveCamera&&scope.object.isPerspectiveCamera){const prevRadius=offset.length();newRadius=clampDistance(prevRadius*scale);const radiusDelta=prevRadius-newRadius;scope.object.position.addScaledVector(dollyDirection,radiusDelta),scope.object.updateMatrixWorld()}else if(scope.object.isOrthographicCamera){const mouseBefore=new three_module.Vector3(mouse.x,mouse.y,0);mouseBefore.unproject(scope.object),scope.object.zoom=Math.max(scope.minZoom,Math.min(scope.maxZoom,scope.object.zoom/scale)),scope.object.updateProjectionMatrix(),zoomChanged=!0;const mouseAfter=new three_module.Vector3(mouse.x,mouse.y,0);mouseAfter.unproject(scope.object),scope.object.position.sub(mouseAfter).add(mouseBefore),scope.object.updateMatrixWorld(),newRadius=offset.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),scope.zoomToCursor=!1;null!==newRadius&&(scope.screenSpacePanning?scope.target.set(0,0,-1).transformDirection(scope.object.matrix).multiplyScalar(newRadius).add(scope.object.position):(_ray.origin.copy(scope.object.position),_ray.direction.set(0,0,-1).transformDirection(scope.object.matrix),Math.abs(scope.object.up.dot(_ray.direction))<TILT_LIMIT?object.lookAt(scope.target):(_plane.setFromNormalAndCoplanarPoint(scope.object.up,scope.target),_ray.intersectPlane(_plane,scope.target))))}else scope.object instanceof three_module.OrthographicCamera&&scope.object.isOrthographicCamera&&(zoomChanged=1!==scale,zoomChanged&&(scope.object.zoom=Math.max(scope.minZoom,Math.min(scope.maxZoom,scope.object.zoom/scale)),scope.object.updateProjectionMatrix()));return scale=1,performCursorZoom=!1,!!(zoomChanged||lastPosition.distanceToSquared(scope.object.position)>EPS||8*(1-lastQuaternion.dot(scope.object.quaternion))>EPS)&&(scope.dispatchEvent(changeEvent),lastPosition.copy(scope.object.position),lastQuaternion.copy(scope.object.quaternion),zoomChanged=!1,!0)}})(),this.connect=domElement2=>{domElement2===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),scope.domElement=domElement2,scope.domElement.style.touchAction="none",scope.domElement.addEventListener("contextmenu",onContextMenu),scope.domElement.addEventListener("pointerdown",onPointerDown),scope.domElement.addEventListener("pointercancel",onPointerCancel),scope.domElement.addEventListener("wheel",onMouseWheel)},this.dispose=()=>{var _a,_b,_c,_d,_e,_f;null==(_a=scope.domElement)||_a.removeEventListener("contextmenu",onContextMenu),null==(_b=scope.domElement)||_b.removeEventListener("pointerdown",onPointerDown),null==(_c=scope.domElement)||_c.removeEventListener("pointercancel",onPointerCancel),null==(_d=scope.domElement)||_d.removeEventListener("wheel",onMouseWheel),null==(_e=scope.domElement)||_e.ownerDocument.removeEventListener("pointermove",onPointerMove),null==(_f=scope.domElement)||_f.ownerDocument.removeEventListener("pointerup",onPointerUp),null!==scope._domElementKeyEvents&&scope._domElementKeyEvents.removeEventListener("keydown",onKeyDown)};const scope=this,changeEvent={type:"change"},startEvent={type:"start"},endEvent={type:"end"},STATE={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let state=STATE.NONE;const EPS=1e-6,spherical=new three_module.Spherical,sphericalDelta=new three_module.Spherical;let scale=1;const panOffset=new three_module.Vector3,rotateStart=new three_module.Vector2,rotateEnd=new three_module.Vector2,rotateDelta=new three_module.Vector2,panStart=new three_module.Vector2,panEnd=new three_module.Vector2,panDelta=new three_module.Vector2,dollyStart=new three_module.Vector2,dollyEnd=new three_module.Vector2,dollyDelta=new three_module.Vector2,dollyDirection=new three_module.Vector3,mouse=new three_module.Vector2;let performCursorZoom=!1;const pointers=[],pointerPositions={};function getZoomScale(){return Math.pow(.95,scope.zoomSpeed)}function rotateLeft(angle){scope.reverseOrbit||scope.reverseHorizontalOrbit?sphericalDelta.theta+=angle:sphericalDelta.theta-=angle}function rotateUp(angle){scope.reverseOrbit||scope.reverseVerticalOrbit?sphericalDelta.phi+=angle:sphericalDelta.phi-=angle}const panLeft=(()=>{const v=new three_module.Vector3;return function panLeft2(distance,objectMatrix){v.setFromMatrixColumn(objectMatrix,0),v.multiplyScalar(-distance),panOffset.add(v)}})(),panUp=(()=>{const v=new three_module.Vector3;return function panUp2(distance,objectMatrix){!0===scope.screenSpacePanning?v.setFromMatrixColumn(objectMatrix,1):(v.setFromMatrixColumn(objectMatrix,0),v.crossVectors(scope.object.up,v)),v.multiplyScalar(distance),panOffset.add(v)}})(),pan=(()=>{const offset=new three_module.Vector3;return function pan2(deltaX,deltaY){const element=scope.domElement;if(element&&scope.object instanceof three_module.PerspectiveCamera&&scope.object.isPerspectiveCamera){const position=scope.object.position;offset.copy(position).sub(scope.target);let targetDistance=offset.length();targetDistance*=Math.tan(scope.object.fov/2*Math.PI/180),panLeft(2*deltaX*targetDistance/element.clientHeight,scope.object.matrix),panUp(2*deltaY*targetDistance/element.clientHeight,scope.object.matrix)}else element&&scope.object instanceof three_module.OrthographicCamera&&scope.object.isOrthographicCamera?(panLeft(deltaX*(scope.object.right-scope.object.left)/scope.object.zoom/element.clientWidth,scope.object.matrix),panUp(deltaY*(scope.object.top-scope.object.bottom)/scope.object.zoom/element.clientHeight,scope.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),scope.enablePan=!1)}})();function dollyOut(dollyScale){scope.object instanceof three_module.PerspectiveCamera&&scope.object.isPerspectiveCamera||scope.object instanceof three_module.OrthographicCamera&&scope.object.isOrthographicCamera?scale/=dollyScale:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),scope.enableZoom=!1)}function dollyIn(dollyScale){scope.object instanceof three_module.PerspectiveCamera&&scope.object.isPerspectiveCamera||scope.object instanceof three_module.OrthographicCamera&&scope.object.isOrthographicCamera?scale*=dollyScale:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),scope.enableZoom=!1)}function updateMouseParameters(event){if(!scope.zoomToCursor||!scope.domElement)return;performCursorZoom=!0;const rect=scope.domElement.getBoundingClientRect(),x=event.clientX-rect.left,y=event.clientY-rect.top,w=rect.width,h=rect.height;mouse.x=x/w*2-1,mouse.y=-y/h*2+1,dollyDirection.set(mouse.x,mouse.y,1).unproject(scope.object).sub(scope.object.position).normalize()}function clampDistance(dist){return Math.max(scope.minDistance,Math.min(scope.maxDistance,dist))}function handleMouseDownRotate(event){rotateStart.set(event.clientX,event.clientY)}function handleMouseDownPan(event){panStart.set(event.clientX,event.clientY)}function handleTouchStartRotate(){if(1==pointers.length)rotateStart.set(pointers[0].pageX,pointers[0].pageY);else{const x=.5*(pointers[0].pageX+pointers[1].pageX),y=.5*(pointers[0].pageY+pointers[1].pageY);rotateStart.set(x,y)}}function handleTouchStartPan(){if(1==pointers.length)panStart.set(pointers[0].pageX,pointers[0].pageY);else{const x=.5*(pointers[0].pageX+pointers[1].pageX),y=.5*(pointers[0].pageY+pointers[1].pageY);panStart.set(x,y)}}function handleTouchStartDolly(){const dx=pointers[0].pageX-pointers[1].pageX,dy=pointers[0].pageY-pointers[1].pageY,distance=Math.sqrt(dx*dx+dy*dy);dollyStart.set(0,distance)}function handleTouchMoveRotate(event){if(1==pointers.length)rotateEnd.set(event.pageX,event.pageY);else{const position=getSecondPointerPosition(event),x=.5*(event.pageX+position.x),y=.5*(event.pageY+position.y);rotateEnd.set(x,y)}rotateDelta.subVectors(rotateEnd,rotateStart).multiplyScalar(scope.rotateSpeed);const element=scope.domElement;element&&(rotateLeft(2*Math.PI*rotateDelta.x/element.clientHeight),rotateUp(2*Math.PI*rotateDelta.y/element.clientHeight)),rotateStart.copy(rotateEnd)}function handleTouchMovePan(event){if(1==pointers.length)panEnd.set(event.pageX,event.pageY);else{const position=getSecondPointerPosition(event),x=.5*(event.pageX+position.x),y=.5*(event.pageY+position.y);panEnd.set(x,y)}panDelta.subVectors(panEnd,panStart).multiplyScalar(scope.panSpeed),pan(panDelta.x,panDelta.y),panStart.copy(panEnd)}function handleTouchMoveDolly(event){const position=getSecondPointerPosition(event),dx=event.pageX-position.x,dy=event.pageY-position.y,distance=Math.sqrt(dx*dx+dy*dy);dollyEnd.set(0,distance),dollyDelta.set(0,Math.pow(dollyEnd.y/dollyStart.y,scope.zoomSpeed)),dollyOut(dollyDelta.y),dollyStart.copy(dollyEnd)}function onPointerDown(event){var _a,_b;!1!==scope.enabled&&(0===pointers.length&&(null==(_a=scope.domElement)||_a.ownerDocument.addEventListener("pointermove",onPointerMove),null==(_b=scope.domElement)||_b.ownerDocument.addEventListener("pointerup",onPointerUp)),function addPointer(event){pointers.push(event)}(event),"touch"===event.pointerType?function onTouchStart(event){switch(trackPointer(event),pointers.length){case 1:switch(scope.touches.ONE){case three_module.TOUCH.ROTATE:if(!1===scope.enableRotate)return;handleTouchStartRotate(),state=STATE.TOUCH_ROTATE;break;case three_module.TOUCH.PAN:if(!1===scope.enablePan)return;handleTouchStartPan(),state=STATE.TOUCH_PAN;break;default:state=STATE.NONE}break;case 2:switch(scope.touches.TWO){case three_module.TOUCH.DOLLY_PAN:if(!1===scope.enableZoom&&!1===scope.enablePan)return;!function handleTouchStartDollyPan(){scope.enableZoom&&handleTouchStartDolly(),scope.enablePan&&handleTouchStartPan()}(),state=STATE.TOUCH_DOLLY_PAN;break;case three_module.TOUCH.DOLLY_ROTATE:if(!1===scope.enableZoom&&!1===scope.enableRotate)return;!function handleTouchStartDollyRotate(){scope.enableZoom&&handleTouchStartDolly(),scope.enableRotate&&handleTouchStartRotate()}(),state=STATE.TOUCH_DOLLY_ROTATE;break;default:state=STATE.NONE}break;default:state=STATE.NONE}state!==STATE.NONE&&scope.dispatchEvent(startEvent)}(event):function onMouseDown(event){let mouseAction;switch(event.button){case 0:mouseAction=scope.mouseButtons.LEFT;break;case 1:mouseAction=scope.mouseButtons.MIDDLE;break;case 2:mouseAction=scope.mouseButtons.RIGHT;break;default:mouseAction=-1}switch(mouseAction){case three_module.MOUSE.DOLLY:if(!1===scope.enableZoom)return;!function handleMouseDownDolly(event){updateMouseParameters(event),dollyStart.set(event.clientX,event.clientY)}(event),state=STATE.DOLLY;break;case three_module.MOUSE.ROTATE:if(event.ctrlKey||event.metaKey||event.shiftKey){if(!1===scope.enablePan)return;handleMouseDownPan(event),state=STATE.PAN}else{if(!1===scope.enableRotate)return;handleMouseDownRotate(event),state=STATE.ROTATE}break;case three_module.MOUSE.PAN:if(event.ctrlKey||event.metaKey||event.shiftKey){if(!1===scope.enableRotate)return;handleMouseDownRotate(event),state=STATE.ROTATE}else{if(!1===scope.enablePan)return;handleMouseDownPan(event),state=STATE.PAN}break;default:state=STATE.NONE}state!==STATE.NONE&&scope.dispatchEvent(startEvent)}(event))}function onPointerMove(event){!1!==scope.enabled&&("touch"===event.pointerType?function onTouchMove(event){switch(trackPointer(event),state){case STATE.TOUCH_ROTATE:if(!1===scope.enableRotate)return;handleTouchMoveRotate(event),scope.update();break;case STATE.TOUCH_PAN:if(!1===scope.enablePan)return;handleTouchMovePan(event),scope.update();break;case STATE.TOUCH_DOLLY_PAN:if(!1===scope.enableZoom&&!1===scope.enablePan)return;!function handleTouchMoveDollyPan(event){scope.enableZoom&&handleTouchMoveDolly(event),scope.enablePan&&handleTouchMovePan(event)}(event),scope.update();break;case STATE.TOUCH_DOLLY_ROTATE:if(!1===scope.enableZoom&&!1===scope.enableRotate)return;!function handleTouchMoveDollyRotate(event){scope.enableZoom&&handleTouchMoveDolly(event),scope.enableRotate&&handleTouchMoveRotate(event)}(event),scope.update();break;default:state=STATE.NONE}}(event):function onMouseMove(event){if(!1===scope.enabled)return;switch(state){case STATE.ROTATE:if(!1===scope.enableRotate)return;!function handleMouseMoveRotate(event){rotateEnd.set(event.clientX,event.clientY),rotateDelta.subVectors(rotateEnd,rotateStart).multiplyScalar(scope.rotateSpeed);const element=scope.domElement;element&&(rotateLeft(2*Math.PI*rotateDelta.x/element.clientHeight),rotateUp(2*Math.PI*rotateDelta.y/element.clientHeight)),rotateStart.copy(rotateEnd),scope.update()}(event);break;case STATE.DOLLY:if(!1===scope.enableZoom)return;!function handleMouseMoveDolly(event){dollyEnd.set(event.clientX,event.clientY),dollyDelta.subVectors(dollyEnd,dollyStart),dollyDelta.y>0?dollyOut(getZoomScale()):dollyDelta.y<0&&dollyIn(getZoomScale()),dollyStart.copy(dollyEnd),scope.update()}(event);break;case STATE.PAN:if(!1===scope.enablePan)return;!function handleMouseMovePan(event){panEnd.set(event.clientX,event.clientY),panDelta.subVectors(panEnd,panStart).multiplyScalar(scope.panSpeed),pan(panDelta.x,panDelta.y),panStart.copy(panEnd),scope.update()}(event)}}(event))}function onPointerUp(event){var _a,_b,_c;removePointer(event),0===pointers.length&&(null==(_a=scope.domElement)||_a.releasePointerCapture(event.pointerId),null==(_b=scope.domElement)||_b.ownerDocument.removeEventListener("pointermove",onPointerMove),null==(_c=scope.domElement)||_c.ownerDocument.removeEventListener("pointerup",onPointerUp)),scope.dispatchEvent(endEvent),state=STATE.NONE}function onPointerCancel(event){removePointer(event)}function onMouseWheel(event){!1===scope.enabled||!1===scope.enableZoom||state!==STATE.NONE&&state!==STATE.ROTATE||(event.preventDefault(),scope.dispatchEvent(startEvent),function handleMouseWheel(event){updateMouseParameters(event),event.deltaY<0?dollyIn(getZoomScale()):event.deltaY>0&&dollyOut(getZoomScale()),scope.update()}(event),scope.dispatchEvent(endEvent))}function onKeyDown(event){!1!==scope.enabled&&!1!==scope.enablePan&&function handleKeyDown(event){let needsUpdate=!1;switch(event.code){case scope.keys.UP:pan(0,scope.keyPanSpeed),needsUpdate=!0;break;case scope.keys.BOTTOM:pan(0,-scope.keyPanSpeed),needsUpdate=!0;break;case scope.keys.LEFT:pan(scope.keyPanSpeed,0),needsUpdate=!0;break;case scope.keys.RIGHT:pan(-scope.keyPanSpeed,0),needsUpdate=!0}needsUpdate&&(event.preventDefault(),scope.update())}(event)}function onContextMenu(event){!1!==scope.enabled&&event.preventDefault()}function removePointer(event){delete pointerPositions[event.pointerId];for(let i=0;i<pointers.length;i++)if(pointers[i].pointerId==event.pointerId)return void pointers.splice(i,1)}function trackPointer(event){let position=pointerPositions[event.pointerId];void 0===position&&(position=new three_module.Vector2,pointerPositions[event.pointerId]=position),position.set(event.pageX,event.pageY)}function getSecondPointerPosition(event){const pointer=event.pointerId===pointers[0].pointerId?pointers[1]:pointers[0];return pointerPositions[pointer.pointerId]}void 0!==domElement&&this.connect(domElement),this.update()}}function NgtsOrbitControls_ngt_primitive_0_Template(rf,ctx){if(1&rf&&(core["ɵɵelement"](0,"ngt-primitive",1),core["ɵɵpipe"](1,"ngtPush")),2&rf){const ctx_r0=core["ɵɵnextContext"]();core["ɵɵproperty"]("enableDamping",core["ɵɵpipeBind1"](1,1,ctx_r0.enableDamping$))}}class NgtsOrbitControls extends angular_three.fj{set camera(camera){this.set({camera})}set domElement(domElement){this.set({domElement})}set makeDefault(makeDefault){this.set({makeDefault})}set regress(regress){this.set({regress})}set target(target){this.set({target})}set enableDamping(enableDamping){this.set({enableDamping})}constructor(){super(),this.controlsRef=(0,angular_three.sY)(),this.change=new core.EventEmitter,this.start=new core.EventEmitter,this.end=new core.EventEmitter,this.store=(0,core.inject)(angular_three.PW),this.enableDamping$=this.select("enableDamping"),(0,angular_three.bC)((()=>{const controls=this.controlsRef.nativeElement;controls&&controls.enabled&&controls.update()}))}initialize(){super.initialize(),this.set({enableDamping:!0,regress:!1})}ngOnInit(){this.setControls(),this.connectElement(),this.makeControlsDefault(),this.setEvents(),this.connect("args",this.controlsRef.$.pipe((0,map.T)((controls=>[controls]))))}setControls(){this.hold((0,combineLatest.z)([this.store.select("camera"),this.select("camera").pipe((0,angular_three.pG)())]),(([defaultCamera,camera])=>{const controlsCamera=camera||defaultCamera;this.controlsRef.nativeElement&&this.controlsRef.nativeElement.object===controlsCamera||(this.controlsRef.nativeElement=new OrbitControls(controlsCamera))}))}connectElement(){this.hold((0,combineLatest.z)([this.store.select("gl","domElement"),this.store.select("invalidate"),this.select("regress"),this.controlsRef.$]),(([glDom,,,controls])=>{const{events}=this.store.get(),domElement=this.get("domElement")||events.connected||glDom;controls.connect(domElement)}))}makeControlsDefault(){this.effect((0,combineLatest.z)([this.controlsRef.$,this.select("makeDefault")]),(([controls,makeDefault])=>{if(makeDefault){const oldControls=this.store.get("controls");return this.store.set({controls}),()=>{this.store.set({controls:oldControls})}}}))}setEvents(){this.effect(this.controlsRef.$,(controls=>{const{invalidate,performance}=this.store.get(),regress=this.get("regress"),changeCallback=e=>{invalidate(),regress&&performance.regress(),this.change.observed&&this.change.emit(e)},startCallback=this.start.observed?this.start.emit.bind(this.start):null,endCallback=this.end.observed?this.end.emit.bind(this.end):null;return controls.addEventListener("change",changeCallback),startCallback&&controls.addEventListener("start",startCallback),endCallback&&controls.addEventListener("end",endCallback),()=>{controls.removeEventListener("change",changeCallback),startCallback&&controls.removeEventListener("start",startCallback),endCallback&&controls.removeEventListener("end",endCallback)}}))}static#_=this.ɵfac=function NgtsOrbitControls_Factory(__ngFactoryType__){return new(__ngFactoryType__||NgtsOrbitControls)};static#_2=this.ɵcmp=core["ɵɵdefineComponent"]({type:NgtsOrbitControls,selectors:[["ngts-orbit-controls"]],inputs:{controlsRef:"controlsRef",camera:"camera",domElement:"domElement",makeDefault:"makeDefault",regress:"regress",target:"target",enableDamping:"enableDamping"},outputs:{change:"change",start:"start",end:"end"},standalone:!0,features:[core["ɵɵInheritDefinitionFeature"],core["ɵɵStandaloneFeature"]],decls:1,vars:1,consts:[["ngtCompound","",3,"enableDamping",4,"args"],["ngtCompound","",3,"enableDamping"]],template:function NgtsOrbitControls_Template(rf,ctx){1&rf&&core["ɵɵtemplate"](0,NgtsOrbitControls_ngt_primitive_0_Template,2,3,"ngt-primitive",0),2&rf&&core["ɵɵproperty"]("args",ctx.get("args"))},dependencies:[angular_three.nQ,angular_three.mp],encapsulation:2})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtsOrbitControls,[{type:core.Component,args:[{selector:"ngts-orbit-controls",standalone:!0,template:'\n        <ngt-primitive *args="get(\'args\')" ngtCompound [enableDamping]="enableDamping$ | ngtPush" />\n    ',imports:[angular_three.nQ,angular_three.mp],schemas:[core.CUSTOM_ELEMENTS_SCHEMA]}]}],(function(){return[]}),{controlsRef:[{type:core.Input}],camera:[{type:core.Input}],domElement:[{type:core.Input}],makeDefault:[{type:core.Input}],regress:[{type:core.Input}],target:[{type:core.Input}],enableDamping:[{type:core.Input}],change:[{type:core.Output}],start:[{type:core.Output}],end:[{type:core.Output}]})},"./node_modules/angular-three/fesm2022/angular-three.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{nQ:()=>NgtArgs,og:()=>NgtCanvas,Up:()=>NgtPortal,tM:()=>NgtPortalContent,mp:()=>NgtPush,L7:()=>NgtRepeat,fj:()=>NgtRxStore,PW:()=>NgtStore,X$:()=>extend,bC:()=>injectBeforeRender,TV:()=>injectNgtDestroy,sY:()=>injectNgtRef,UR:()=>safeDetectChanges,pG:()=>startWithUndefined});var core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),ReplaySubject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/ReplaySubject.js"),pipe=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/pipe.js"),scheduler_async=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/scheduler/async.js"),lift=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/lift.js"),OperatorSubscriber=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js");function debounceTime(dueTime,scheduler){return void 0===scheduler&&(scheduler=scheduler_async.E),(0,lift.N)((function(source,subscriber){var activeTask=null,lastValue=null,lastTime=null,emit=function(){if(activeTask){activeTask.unsubscribe(),activeTask=null;var value=lastValue;lastValue=null,subscriber.next(value)}};function emitWhenIdle(){var targetTime=lastTime+dueTime,now=scheduler.now();if(now<targetTime)return activeTask=this.schedule(void 0,targetTime-now),void subscriber.add(activeTask);emit()}source.subscribe((0,OperatorSubscriber._)(subscriber,(function(value){lastValue=value,lastTime=scheduler.now(),activeTask||(activeTask=scheduler.schedule(emitWhenIdle,dueTime),subscriber.add(activeTask))}),(function(){emit(),subscriber.complete()}),void 0,(function(){lastValue=activeTask=null})))}))}var takeUntil=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js"),Observable=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Observable.js"),fromEvent=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/fromEvent.js"),share=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/share.js");const defaultResizeOptions={box:"content-box",scroll:!1,offsetSize:!1,debounce:{scroll:50,resize:0},emitInZone:!0,emitInitialResult:!1},NGX_RESIZE_OPTIONS=new core.InjectionToken("NgxResizeOptions",{factory:()=>defaultResizeOptions});function provideNgxResizeOptions(options={}){return{provide:NGX_RESIZE_OPTIONS,useValue:{...defaultResizeOptions,...options}}}class NgxResize{constructor(host,zone,document,resizeOptions){this.host=host,this.zone=zone,this.document=document,this.resizeOptions=resizeOptions,this.ngxResizeOptions={},this.ngxResize=new core.EventEmitter}ngOnInit(){const mergedOptions={...this.resizeOptions,...this.ngxResizeOptions};this.sub=createResizeStream(mergedOptions,this.host.nativeElement,this.document,this.zone).subscribe(this.ngxResize)}ngOnDestroy(){this.sub?.unsubscribe()}}function createResizeStream({debounce,scroll,offsetSize,box,emitInZone,emitInitialResult},nativeElement,document,zone){const window=document.defaultView,isSupport=!!window?.ResizeObserver;let observer,lastBounds,lastEntries=[];const torndown$=new ReplaySubject.m,scrollContainers=findScrollContainers(nativeElement,window,document.body),scrollDebounce=debounce?"number"==typeof debounce?debounce:debounce.scroll:null,resizeDebounce=debounce?"number"==typeof debounce?debounce:debounce.resize:null,debounceAndTorndown=debounce=>(0,pipe.F)(debounceTime(debounce??0),(0,takeUntil.Q)(torndown$));return new Observable.c((subscriber=>{if(isSupport){if(emitInitialResult){const[result]=calculateResult(nativeElement,window,offsetSize,[]);subscriber.next(result)}return zone.runOutsideAngular((()=>{const callback=entries=>{lastEntries=entries;const[result,size]=calculateResult(nativeElement,window,offsetSize,entries);emitInZone?zone.run((()=>{subscriber.next(result)})):subscriber.next(result),areBoundsEqual(lastBounds||{},size)||(lastBounds=size)},boundCallback=()=>{callback(lastEntries)};observer=new ResizeObserver(callback),observer.observe(nativeElement,{box}),scroll&&(scrollContainers&&scrollContainers.forEach((scrollContainer=>{(0,fromEvent.R)(scrollContainer,"scroll",{capture:!0,passive:!0}).pipe(debounceAndTorndown(scrollDebounce)).subscribe(boundCallback)})),(0,fromEvent.R)(window,"scroll",{capture:!0,passive:!0}).pipe(debounceAndTorndown(scrollDebounce)).subscribe(boundCallback)),(0,fromEvent.R)(window,"resize").pipe(debounceAndTorndown(resizeDebounce)).subscribe(boundCallback)})),()=>{observer&&(observer.unobserve(nativeElement),observer.disconnect()),torndown$.next(),torndown$.complete()}}subscriber.error("[ngx-resize] your browser does not support ResizeObserver. Please consider using a polyfill")})).pipe(debounceTime(scrollDebounce??0),(0,share.u)({connector:()=>new ReplaySubject.m(1)}))}function calculateResult(nativeElement,window,offsetSize,entries){const{left,top,width,height,bottom,right,x,y}=nativeElement.getBoundingClientRect(),size={left,top,width,height,bottom,right,x,y};return nativeElement instanceof HTMLElement&&offsetSize&&(size.height=nativeElement.offsetHeight,size.width=nativeElement.offsetWidth),Object.freeze(size),[{entries,dpr:window.devicePixelRatio,...size},size]}function findScrollContainers(element,window,documentBody){const result=[];if(!element||!window||element===documentBody)return result;const{overflow,overflowX,overflowY}=window.getComputedStyle(element);return[overflow,overflowX,overflowY].some((prop=>"auto"===prop||"scroll"===prop))&&result.push(element),[...result,...findScrollContainers(element.parentElement,window,documentBody)]}NgxResize.ɵfac=function NgxResize_Factory(__ngFactoryType__){return new(__ngFactoryType__||NgxResize)(core["ɵɵdirectiveInject"](core.ElementRef),core["ɵɵdirectiveInject"](core.NgZone),core["ɵɵdirectiveInject"](common.DOCUMENT),core["ɵɵdirectiveInject"](NGX_RESIZE_OPTIONS))},NgxResize.ɵdir=core["ɵɵdefineDirective"]({type:NgxResize,selectors:[["","ngxResize",""]],inputs:{ngxResizeOptions:"ngxResizeOptions"},outputs:{ngxResize:"ngxResize"},standalone:!0}),("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgxResize,[{type:core.Directive,args:[{selector:"[ngxResize]",standalone:!0}]}],(function(){return[{type:core.ElementRef},{type:core.NgZone},{type:Document,decorators:[{type:core.Inject,args:[common.DOCUMENT]}]},{type:void 0,decorators:[{type:core.Inject,args:[NGX_RESIZE_OPTIONS]}]}]}),{ngxResizeOptions:[{type:core.Input}],ngxResize:[{type:core.Output}]});const keys=["x","y","top","bottom","left","right","width","height"],areBoundsEqual=(a,b)=>keys.every((key=>a[key]===b[key]));var isObservable=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/isObservable.js"),of=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),from=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/from.js"),tap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/tap.js"),retry=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/retry.js"),catchError=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/catchError.js"),switchMap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/switchMap.js"),forkJoin=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/forkJoin.js"),take=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/take.js"),BehaviorSubject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/BehaviorSubject.js"),startWith=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/startWith.js"),combineLatest=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/combineLatest.js"),filter=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/filter.js"),distinctUntilChanged=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js"),merge=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/merge.js"),three_module=__webpack_require__("./node_modules/three/build/three.module.js"),Subject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subject.js"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),QueueAction=function(_super){function QueueAction(scheduler,work){var _this=_super.call(this,scheduler,work)||this;return _this.scheduler=scheduler,_this.work=work,_this}return(0,tslib_es6.C6)(QueueAction,_super),QueueAction.prototype.schedule=function(state,delay){return void 0===delay&&(delay=0),delay>0?_super.prototype.schedule.call(this,state,delay):(this.delay=delay,this.state=state,this.scheduler.flush(this),this)},QueueAction.prototype.execute=function(state,delay){return delay>0||this.closed?_super.prototype.execute.call(this,state,delay):this._execute(state,delay)},QueueAction.prototype.requestAsyncId=function(scheduler,id,delay){return void 0===delay&&(delay=0),null!=delay&&delay>0||null==delay&&this.delay>0?_super.prototype.requestAsyncId.call(this,scheduler,id,delay):(scheduler.flush(this),0)},QueueAction}(__webpack_require__("./node_modules/rxjs/dist/esm5/internal/scheduler/AsyncAction.js").R),queueScheduler=new(function(_super){function QueueScheduler(){return null!==_super&&_super.apply(this,arguments)||this}return(0,tslib_es6.C6)(QueueScheduler,_super),QueueScheduler}(__webpack_require__("./node_modules/rxjs/dist/esm5/internal/scheduler/AsyncScheduler.js").q))(QueueAction),empty=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/empty.js"),noop=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/noop.js"),observeOn=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/observeOn.js"),mergeAll=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/mergeAll.js"),withLatestFrom=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/withLatestFrom.js");function scan(accumulator,seed){return(0,lift.N)(function scanInternals(accumulator,seed,hasSeed,emitOnNext,emitBeforeComplete){return function(source,subscriber){var hasState=hasSeed,state=seed,index=0;source.subscribe((0,OperatorSubscriber._)(subscriber,(function(value){var i=index++;state=hasState?accumulator(state,value,i):(hasState=!0,value),emitOnNext&&subscriber.next(state)}),emitBeforeComplete&&function(){hasState&&subscriber.next(state),subscriber.complete()}))}}(accumulator,seed,arguments.length>=2,!0))}var ConnectableObservable=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/ConnectableObservable.js"),isFunction=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/isFunction.js"),innerFrom=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js");var DEFAULT_CONFIG={connector:function(){return new Subject.B}};function connect(selector,config){void 0===config&&(config=DEFAULT_CONFIG);var connector=config.connector;return(0,lift.N)((function(source,subscriber){var subject=connector();(0,innerFrom.Tg)(selector(function fromSubscribable(subscribable){return new Observable.c((function(subscriber){return subscribable.subscribe(subscriber)}))}(subject))).subscribe(subscriber),subscriber.add(source.subscribe(subject))}))}function multicast(subjectOrSubjectFactory,selector){var subjectFactory=(0,isFunction.T)(subjectOrSubjectFactory)?subjectOrSubjectFactory:function(){return subjectOrSubjectFactory};return(0,isFunction.T)(selector)?connect(selector,{connector:subjectFactory}):function(source){return new ConnectableObservable.G(source,subjectFactory)}}var shareReplay=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/shareReplay.js");const defaultAccumulator=(st,sl)=>({...st,...sl});function createAccumulationObservable(stateObservables=new Subject.B,stateSlices=new Subject.B,accumulatorObservable=new BehaviorSubject.t(defaultAccumulator),scheduler=queueScheduler){const observeStateOn=()=>scheduler?(0,observeOn.Q)(scheduler):o$=>o$,signal$=(0,merge.h)(stateObservables.pipe((0,distinctUntilChanged.F)(),(0,mergeAll.U)(),observeStateOn()),stateSlices.pipe(observeStateOn())).pipe((0,withLatestFrom.E)(accumulatorObservable.pipe(observeStateOn())),scan(((state,[slice,stateAccumulator])=>stateAccumulator(state,slice)),{}),(0,tap.M)((newState=>compositionObservable.state=newState),(error=>console.error(error))),(0,catchError.W)((e=>empty.w)),function publish(selector){return selector?function(source){return connect(selector)(source)}:function(source){return multicast(new Subject.B)(source)}}()),state$=signal$.pipe(function publishReplay(bufferSize,windowTime,selectorOrScheduler,timestampProvider){selectorOrScheduler&&!(0,isFunction.T)(selectorOrScheduler)&&(timestampProvider=selectorOrScheduler);var selector=(0,isFunction.T)(selectorOrScheduler)?selectorOrScheduler:void 0;return function(source){return multicast(new ReplaySubject.m(bufferSize,windowTime,timestampProvider),selector)(source)}}(1)),compositionObservable={state:{},signal$,state$,nextSlice:function nextSlice(stateSlice){stateSlices.next(stateSlice)},nextSliceObservable:function nextSliceObservable(stateObservable){stateObservables.next(stateObservable)},nextAccumulator:function nextAccumulator(accumulatorFn){accumulatorObservable.next(accumulatorFn)},subscribe:function subscribe(){const sub=compositionObservable.signal$.connect();return sub.add(compositionObservable.state$.connect()),sub.add((()=>{accumulatorObservable.complete(),stateObservables.complete(),stateSlices.complete()})),sub}};return compositionObservable}function isOperateFnArrayGuard(op){return!!Array.isArray(op)&&(op.length>0&&op.every((i=>"function"==typeof i)))}function isStringArrayGuard(op){return!!Array.isArray(op)&&(op.length>0&&op.every((i=>"string"==typeof i)))}function isKeyOf(k){return null!=k&&["string","symbol","number"].includes(typeof k)}function isObjectGuard(obj){return null!=obj&&"object"==typeof obj&&!Array.isArray(obj)}function isDefined(val){return null!=val}function safePluck(stateObject,keys){if(!isDefined(stateObject))return stateObject;if(!isDefined(keys))return;const keysArr=(Array.isArray(keys)?keys:[keys]).filter((k=>isKeyOf(k)));if(0===keysArr.length||!isObjectGuard(stateObject)||0===Object.keys(stateObject).length)return;let prop=stateObject[keysArr.shift()];return keysArr.forEach((key=>{isObjectGuard(prop)&&isKeyOf(key)&&(prop=prop[key])})),prop}function defaultCompare(oldVal,newVal){return oldVal===newVal}function pipeFromArray(fns){return fns?1===fns.length?fns[0]:function piped(input){return fns.reduce(((prev,fn)=>fn(prev)),input)}:noop.l}function selectSlice(keys,keyCompareMap){return o$=>o$.pipe((0,filter.p)((state=>void 0!==state)),(0,map.T)((state=>{if(null===state)return null;const definedKeys=keys.filter((k=>state.hasOwnProperty(k)&&void 0!==state[k]));return definedKeys.length<keys.length?void 0:definedKeys.reduce(((vm,key)=>(vm[key]=state[key],vm)),{})})),(0,filter.p)((v=>void 0!==v)),function distinctUntilSomeChanged(keys,keyCompareMap){let distinctCompare=(oldState,newState)=>keys.some((key=>!defaultCompare(safePluck(oldState,[key]),safePluck(newState,[key]))));if(void 0!==keyCompareMap){const compare=key=>keyCompareMap.hasOwnProperty(key)&&void 0!==keyCompareMap[key]?keyCompareMap[key]:defaultCompare;distinctCompare=(oldState,newState)=>keys.some((key=>!compare(key)(safePluck(oldState,[key]),safePluck(newState,[key]))))}return(0,distinctUntilChanged.F)(((oldV,newV)=>!distinctCompare(oldV,newV)))}(keys,keyCompareMap))}function stateful(...optionalDerive){return s=>s.pipe((0,distinctUntilChanged.F)(),(o=>isOperateFnArrayGuard(optionalDerive)?o.pipe(pipeFromArray(optionalDerive)):o),(0,filter.p)((v=>void 0!==v)),(0,distinctUntilChanged.F)(),(0,shareReplay.t)({bufferSize:1,refCount:!0}))}function state_selections_select(...opOrMapFn){return state$=>{if(opOrMapFn&&0!==opOrMapFn.length){if(function isStringAndFunctionTupleGuard(op){return"string"==typeof op[0]&&"function"==typeof op[1]}(opOrMapFn))return state$.pipe(stateful((0,map.T)((s=>opOrMapFn[1](s[opOrMapFn[0]])))));if(function isStringArrayFunctionAndOptionalObjectTupleGuard(op){return isStringArrayGuard(op[0])&&("function"==typeof op[1]||void 0===op[1])&&(void 0===op[2]||"object"==typeof op[2])}(opOrMapFn)){const selectedState$=state$.pipe(selectSlice(opOrMapFn[0],opOrMapFn[2]));return void 0===opOrMapFn[1]?selectedState$:selectedState$.pipe(stateful((0,map.T)(opOrMapFn[1])))}if(isStringArrayGuard(opOrMapFn))return state$.pipe(stateful((0,map.T)((state=>opOrMapFn.reduce(((acc,key)=>acc?.[key]),state)))));if(isOperateFnArrayGuard(opOrMapFn))return state$.pipe(stateful(pipeFromArray(opOrMapFn)));throw new Error("wrong params passed to select")}return state$.pipe(stateful())}}var Subscription=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subscription.js"),rxjs_interop=__webpack_require__("./node_modules/@angular/core/fesm2022/rxjs-interop.mjs");const RX_ACCUMULATOR_FN=new core.InjectionToken("RX_ACCUMULATOR_FN",{providedIn:"root",factory:()=>defaultAccumulator});const RX_STATE_SCHEDULER=new core.InjectionToken("RX_STATE_SCHEDULER",{providedIn:"root",factory:()=>queueScheduler});class RxState{subscription=new Subscription.yU;scheduler=(0,core.inject)(RX_STATE_SCHEDULER,{optional:!0});accumulator=createAccumulationObservable(new Subject.B,new Subject.B,new BehaviorSubject.t((0,core.inject)(RX_ACCUMULATOR_FN)),"sync"===this.scheduler?null:this.scheduler);effectObservable=function createSideEffectObservable(stateObservables=new Subject.B,scheduler=queueScheduler){const effects$=(0,merge.h)(stateObservables.pipe((0,mergeAll.U)(),scheduler?(0,observeOn.Q)(scheduler):o$=>o$));return{effects$,nextEffectObservable:function nextEffectObservable(effect$){stateObservables.next(effect$)},subscribe:function subscribe(){return effects$.subscribe()}}}(new Subject.B,"sync"===this.scheduler?null:this.scheduler);injector=(0,core.inject)(core.Injector);signalStoreProxy;$=this.accumulator.signal$;constructor(){this.subscription.add(this.subscribe())}ngOnDestroy(){this.subscription.unsubscribe()}asReadOnly(){return{get:this.get.bind(this),select:this.select.bind(this),computed:this.computed.bind(this),signal:this.signal.bind(this)}}setAccumulator(accumulatorFn){this.accumulator.nextAccumulator(accumulatorFn)}get(...keys){const hasStateAnyKeys=Object.keys(this.accumulator.state).length>0;return keys&&keys.length?safePluck(this.accumulator.state,keys):hasStateAnyKeys?this.accumulator.state:void 0}set(keyOrStateOrProjectState,stateOrSliceProjectFn){if("object"!=typeof keyOrStateOrProjectState||void 0!==stateOrSliceProjectFn){if("function"!=typeof keyOrStateOrProjectState||void 0!==stateOrSliceProjectFn){if(isKeyOf(keyOrStateOrProjectState)&&"function"==typeof stateOrSliceProjectFn){const state={};return state[keyOrStateOrProjectState]=stateOrSliceProjectFn(this.accumulator.state),void this.accumulator.nextSlice(state)}throw new Error("wrong params passed to set")}this.accumulator.nextSlice(keyOrStateOrProjectState(this.accumulator.state))}else this.accumulator.nextSlice(keyOrStateOrProjectState)}connect(keyOrInputOrSlice$,projectOrSlices$,projectValueFn){if(!(0,isObservable.A)(keyOrInputOrSlice$)||projectOrSlices$||projectValueFn)if(!(0,core.isSignal)(keyOrInputOrSlice$)||projectOrSlices$||projectValueFn)if((0,isObservable.A)(keyOrInputOrSlice$)&&projectOrSlices$&&"function"==typeof projectOrSlices$&&!projectValueFn){const projectionStateFn=projectOrSlices$,slice$=keyOrInputOrSlice$.pipe((0,map.T)((v=>projectionStateFn(this.accumulator.state,v))));this.accumulator.nextSliceObservable(slice$)}else if((0,core.isSignal)(keyOrInputOrSlice$)&&projectOrSlices$&&"function"==typeof projectOrSlices$&&!projectValueFn){const projectionStateFn=projectOrSlices$,slice$=(0,rxjs_interop.br)(keyOrInputOrSlice$,{injector:this.injector}).pipe((0,map.T)((v=>projectionStateFn(this.accumulator.state,v))));this.accumulator.nextSliceObservable(slice$)}else if(isKeyOf(keyOrInputOrSlice$)&&(0,isObservable.A)(projectOrSlices$)&&!projectValueFn){const slice$=projectOrSlices$.pipe((0,map.T)((value=>({[keyOrInputOrSlice$]:value}))));this.accumulator.nextSliceObservable(slice$)}else if(isKeyOf(keyOrInputOrSlice$)&&(0,core.isSignal)(projectOrSlices$)&&!projectValueFn){const slice$=(0,rxjs_interop.br)(projectOrSlices$,{injector:this.injector}).pipe((0,map.T)((value=>({[keyOrInputOrSlice$]:value}))));this.accumulator.nextSliceObservable(slice$)}else if(projectValueFn&&"function"==typeof projectValueFn&&isKeyOf(keyOrInputOrSlice$)&&(0,isObservable.A)(projectOrSlices$)){const key=keyOrInputOrSlice$,slice$=projectOrSlices$.pipe((0,map.T)((value=>({[key]:projectValueFn(this.get(),value)}))));this.accumulator.nextSliceObservable(slice$)}else{if(!(projectValueFn&&"function"==typeof projectValueFn&&isKeyOf(keyOrInputOrSlice$)&&(0,core.isSignal)(projectOrSlices$)))throw new Error("wrong params passed to connect");{const key=keyOrInputOrSlice$,slice$=(0,rxjs_interop.br)(projectOrSlices$,{injector:this.injector}).pipe((0,map.T)((value=>({[key]:projectValueFn(this.get(),value)}))));this.accumulator.nextSliceObservable(slice$)}}else this.accumulator.nextSliceObservable((0,rxjs_interop.br)(keyOrInputOrSlice$,{injector:this.injector}));else this.accumulator.nextSliceObservable(keyOrInputOrSlice$)}select(...args){return this.accumulator.state$.pipe(state_selections_select(...args))}signal(key){return this.signalStoreProxy[key]}computed(fn){return(0,core.computed)((()=>fn(this.signalStoreProxy)))}computedFrom(...ops){return(0,rxjs_interop.ot)(this.select(...ops),{injector:this.injector,requireSync:!0})}hold(obsOrObsWithSideEffect,sideEffectFn){const sideEffect=obsOrObsWithSideEffect.pipe((0,catchError.W)((e=>empty.w)));"function"!=typeof sideEffectFn?this.effectObservable.nextEffectObservable(sideEffect):this.effectObservable.nextEffectObservable(sideEffect.pipe((0,tap.M)(sideEffectFn)))}subscribe(){const subscription=new Subscription.yU;return subscription.add(this.accumulator.subscribe()),subscription.add(this.effectObservable.subscribe()),this.signalStoreProxy=function createSignalStateProxy(state$,stateFn){const destroyRef=(0,core.inject)(core.DestroyRef);return new Proxy({},{get(target,p){let _signal=target[p];if(!_signal){const val=stateFn(p);_signal=(0,core.signal)(val),target[p]=_signal,state$.pipe(state_selections_select(p),(0,rxjs_interop.pQ)(destroyRef)).subscribe((val=>_signal.set(val)))}return _signal},has:(target,prop)=>!!target[prop],ownKeys:target=>[...Reflect.ownKeys(target)],getOwnPropertyDescriptor:(target,key)=>({enumerable:!0,configurable:!0}),set:()=>!0})}(this.$,this.get.bind(this)),subscription}static ɵfac=function RxState_Factory(__ngFactoryType__){return new(__ngFactoryType__||RxState)};static ɵprov=core["ɵɵdefineInjectable"]({token:RxState,factory:RxState.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](RxState,[{type:core.Injectable}],(()=>[]),null);var EmptyError=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/EmptyError.js"),concat=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/concat.js");function defer(observableFactory){return new Observable.c((function(subscriber){(0,innerFrom.Tg)(observableFactory()).subscribe(subscriber)}))}function throwError_throwError(errorOrErrorFactory,scheduler){var errorFactory=(0,isFunction.T)(errorOrErrorFactory)?errorOrErrorFactory:function(){return errorOrErrorFactory},init=function(subscriber){return subscriber.error(errorFactory())};return new Observable.c(scheduler?function(subscriber){return scheduler.schedule(init,0,subscriber)}:init)}var mergeMap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js"),first=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/first.js"),concatMap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/concatMap.js"),defaultIfEmpty=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/defaultIfEmpty.js");function takeLast(count){return count<=0?function(){return empty.w}:(0,lift.N)((function(source,subscriber){var buffer=[];source.subscribe((0,OperatorSubscriber._)(subscriber,(function(value){buffer.push(value),count<buffer.length&&buffer.shift()}),(function(){var e_1,_a;try{for(var buffer_1=(0,tslib_es6.Ju)(buffer),buffer_1_1=buffer_1.next();!buffer_1_1.done;buffer_1_1=buffer_1.next()){var value=buffer_1_1.value;subscriber.next(value)}}catch(e_1_1){e_1={error:e_1_1}}finally{try{buffer_1_1&&!buffer_1_1.done&&(_a=buffer_1.return)&&_a.call(buffer_1)}finally{if(e_1)throw e_1.error}}subscriber.complete()}),void 0,(function(){buffer=null})))}))}var throwIfEmpty=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/throwIfEmpty.js"),identity=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/identity.js");var finalize=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/finalize.js"),refCount=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/refCount.js"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2022/platform-browser.mjs");const PRIMARY_OUTLET="primary",RouteTitleKey=Symbol("RouteTitle");class ParamsAsMap{constructor(params){this.params=params||{}}has(name){return Object.prototype.hasOwnProperty.call(this.params,name)}get(name){if(this.has(name)){const v=this.params[name];return Array.isArray(v)?v[0]:v}return null}getAll(name){if(this.has(name)){const v=this.params[name];return Array.isArray(v)?v:[v]}return[]}get keys(){return Object.keys(this.params)}}function convertToParamMap(params){return new ParamsAsMap(params)}function defaultUrlMatcher(segments,segmentGroup,route){const parts=route.path.split("/");if(parts.length>segments.length)return null;if("full"===route.pathMatch&&(segmentGroup.hasChildren()||parts.length<segments.length))return null;const posParams={};for(let index=0;index<parts.length;index++){const part=parts[index],segment=segments[index];if(":"===part[0])posParams[part.substring(1)]=segment;else if(part!==segment.path)return null}return{consumed:segments.slice(0,parts.length),posParams}}function shallowEqual(a,b){const k1=a?getDataKeys(a):void 0,k2=b?getDataKeys(b):void 0;if(!k1||!k2||k1.length!=k2.length)return!1;let key;for(let i=0;i<k1.length;i++)if(key=k1[i],!equalArraysOrString(a[key],b[key]))return!1;return!0}function getDataKeys(obj){return[...Object.keys(obj),...Object.getOwnPropertySymbols(obj)]}function equalArraysOrString(a,b){if(Array.isArray(a)&&Array.isArray(b)){if(a.length!==b.length)return!1;const aSorted=[...a].sort(),bSorted=[...b].sort();return aSorted.every(((val,index)=>bSorted[index]===val))}return a===b}function router_last(a){return a.length>0?a[a.length-1]:null}function wrapIntoObservable(value){return(0,isObservable.A)(value)?value:(0,core["ɵisPromise"])(value)?(0,from.H)(Promise.resolve(value)):(0,of.of)(value)}const pathCompareMap={exact:function equalSegmentGroups(container,containee,matrixParams){if(!equalPath(container.segments,containee.segments))return!1;if(!matrixParamsMatch(container.segments,containee.segments,matrixParams))return!1;if(container.numberOfChildren!==containee.numberOfChildren)return!1;for(const c in containee.children){if(!container.children[c])return!1;if(!equalSegmentGroups(container.children[c],containee.children[c],matrixParams))return!1}return!0},subset:containsSegmentGroup},paramCompareMap={exact:function equalParams(container,containee){return shallowEqual(container,containee)},subset:function containsParams(container,containee){return Object.keys(containee).length<=Object.keys(container).length&&Object.keys(containee).every((key=>equalArraysOrString(container[key],containee[key])))},ignored:()=>!0};function containsTree(container,containee,options){return pathCompareMap[options.paths](container.root,containee.root,options.matrixParams)&&paramCompareMap[options.queryParams](container.queryParams,containee.queryParams)&&!("exact"===options.fragment&&container.fragment!==containee.fragment)}function containsSegmentGroup(container,containee,matrixParams){return containsSegmentGroupHelper(container,containee,containee.segments,matrixParams)}function containsSegmentGroupHelper(container,containee,containeePaths,matrixParams){if(container.segments.length>containeePaths.length){const current=container.segments.slice(0,containeePaths.length);return!!equalPath(current,containeePaths)&&(!containee.hasChildren()&&!!matrixParamsMatch(current,containeePaths,matrixParams))}if(container.segments.length===containeePaths.length){if(!equalPath(container.segments,containeePaths))return!1;if(!matrixParamsMatch(container.segments,containeePaths,matrixParams))return!1;for(const c in containee.children){if(!container.children[c])return!1;if(!containsSegmentGroup(container.children[c],containee.children[c],matrixParams))return!1}return!0}{const current=containeePaths.slice(0,container.segments.length),next=containeePaths.slice(container.segments.length);return!!equalPath(container.segments,current)&&(!!matrixParamsMatch(container.segments,current,matrixParams)&&(!!container.children[PRIMARY_OUTLET]&&containsSegmentGroupHelper(container.children[PRIMARY_OUTLET],containee,next,matrixParams)))}}function matrixParamsMatch(containerPaths,containeePaths,options){return containeePaths.every(((containeeSegment,i)=>paramCompareMap[options](containerPaths[i].parameters,containeeSegment.parameters)))}class UrlTree{constructor(root=new UrlSegmentGroup([],{}),queryParams={},fragment=null){if(this.root=root,this.queryParams=queryParams,this.fragment=fragment,("undefined"==typeof ngDevMode||ngDevMode)&&root.segments.length>0)throw new core["ɵRuntimeError"](4015,"The root `UrlSegmentGroup` should not contain `segments`. Instead, these segments belong in the `children` so they can be associated with a named outlet.")}get queryParamMap(){return this._queryParamMap??=convertToParamMap(this.queryParams),this._queryParamMap}toString(){return DEFAULT_SERIALIZER.serialize(this)}}class UrlSegmentGroup{constructor(segments,children){this.segments=segments,this.children=children,this.parent=null,Object.values(children).forEach((v=>v.parent=this))}hasChildren(){return this.numberOfChildren>0}get numberOfChildren(){return Object.keys(this.children).length}toString(){return serializePaths(this)}}class UrlSegment{constructor(path,parameters){this.path=path,this.parameters=parameters}get parameterMap(){return this._parameterMap??=convertToParamMap(this.parameters),this._parameterMap}toString(){return serializePath(this)}}function equalPath(as,bs){return as.length===bs.length&&as.every(((a,i)=>a.path===bs[i].path))}class UrlSerializer{static#_=this.ɵfac=function UrlSerializer_Factory(__ngFactoryType__){return new(__ngFactoryType__||UrlSerializer)};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:UrlSerializer,factory:()=>new DefaultUrlSerializer,providedIn:"root"})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](UrlSerializer,[{type:core.Injectable,args:[{providedIn:"root",useFactory:()=>new DefaultUrlSerializer}]}],null,null);class DefaultUrlSerializer{parse(url){const p=new UrlParser(url);return new UrlTree(p.parseRootSegment(),p.parseQueryParams(),p.parseFragment())}serialize(tree){return`${`/${serializeSegment(tree.root,!0)}`}${function serializeQueryParams(params){const strParams=Object.entries(params).map((([name,value])=>Array.isArray(value)?value.map((v=>`${encodeUriQuery(name)}=${encodeUriQuery(v)}`)).join("&"):`${encodeUriQuery(name)}=${encodeUriQuery(value)}`)).filter((s=>s));return strParams.length?`?${strParams.join("&")}`:""}(tree.queryParams)}${"string"==typeof tree.fragment?`#${function encodeUriFragment(s){return encodeURI(s)}(tree.fragment)}`:""}`}}const DEFAULT_SERIALIZER=new DefaultUrlSerializer;function serializePaths(segment){return segment.segments.map((p=>serializePath(p))).join("/")}function serializeSegment(segment,root){if(!segment.hasChildren())return serializePaths(segment);if(root){const primary=segment.children[PRIMARY_OUTLET]?serializeSegment(segment.children[PRIMARY_OUTLET],!1):"",children=[];return Object.entries(segment.children).forEach((([k,v])=>{k!==PRIMARY_OUTLET&&children.push(`${k}:${serializeSegment(v,!1)}`)})),children.length>0?`${primary}(${children.join("//")})`:primary}{const children=function mapChildrenIntoArray(segment,fn){let res=[];return Object.entries(segment.children).forEach((([childOutlet,child])=>{childOutlet===PRIMARY_OUTLET&&(res=res.concat(fn(child,childOutlet)))})),Object.entries(segment.children).forEach((([childOutlet,child])=>{childOutlet!==PRIMARY_OUTLET&&(res=res.concat(fn(child,childOutlet)))})),res}(segment,((v,k)=>k===PRIMARY_OUTLET?[serializeSegment(segment.children[PRIMARY_OUTLET],!1)]:[`${k}:${serializeSegment(v,!1)}`]));return 1===Object.keys(segment.children).length&&null!=segment.children[PRIMARY_OUTLET]?`${serializePaths(segment)}/${children[0]}`:`${serializePaths(segment)}/(${children.join("//")})`}}function encodeUriString(s){return encodeURIComponent(s).replace(/%40/g,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",")}function encodeUriQuery(s){return encodeUriString(s).replace(/%3B/gi,";")}function encodeUriSegment(s){return encodeUriString(s).replace(/\(/g,"%28").replace(/\)/g,"%29").replace(/%26/gi,"&")}function decode(s){return decodeURIComponent(s)}function decodeQuery(s){return decode(s.replace(/\+/g,"%20"))}function serializePath(path){return`${encodeUriSegment(path.path)}${function serializeMatrixParams(params){return Object.entries(params).map((([key,value])=>`;${encodeUriSegment(key)}=${encodeUriSegment(value)}`)).join("")}(path.parameters)}`}const SEGMENT_RE=/^[^\/()?;#]+/;function matchSegments(str){const match=str.match(SEGMENT_RE);return match?match[0]:""}const MATRIX_PARAM_SEGMENT_RE=/^[^\/()?;=#]+/;const QUERY_PARAM_RE=/^[^=?&#]+/;const QUERY_PARAM_VALUE_RE=/^[^&#]+/;class UrlParser{constructor(url){this.url=url,this.remaining=url}parseRootSegment(){return this.consumeOptional("/"),""===this.remaining||this.peekStartsWith("?")||this.peekStartsWith("#")?new UrlSegmentGroup([],{}):new UrlSegmentGroup([],this.parseChildren())}parseQueryParams(){const params={};if(this.consumeOptional("?"))do{this.parseQueryParam(params)}while(this.consumeOptional("&"));return params}parseFragment(){return this.consumeOptional("#")?decodeURIComponent(this.remaining):null}parseChildren(){if(""===this.remaining)return{};this.consumeOptional("/");const segments=[];for(this.peekStartsWith("(")||segments.push(this.parseSegment());this.peekStartsWith("/")&&!this.peekStartsWith("//")&&!this.peekStartsWith("/(");)this.capture("/"),segments.push(this.parseSegment());let children={};this.peekStartsWith("/(")&&(this.capture("/"),children=this.parseParens(!0));let res={};return this.peekStartsWith("(")&&(res=this.parseParens(!1)),(segments.length>0||Object.keys(children).length>0)&&(res[PRIMARY_OUTLET]=new UrlSegmentGroup(segments,children)),res}parseSegment(){const path=matchSegments(this.remaining);if(""===path&&this.peekStartsWith(";"))throw new core["ɵRuntimeError"](4009,("undefined"==typeof ngDevMode||ngDevMode)&&`Empty path url segment cannot have parameters: '${this.remaining}'.`);return this.capture(path),new UrlSegment(decode(path),this.parseMatrixParams())}parseMatrixParams(){const params={};for(;this.consumeOptional(";");)this.parseParam(params);return params}parseParam(params){const key=function matchMatrixKeySegments(str){const match=str.match(MATRIX_PARAM_SEGMENT_RE);return match?match[0]:""}(this.remaining);if(!key)return;this.capture(key);let value="";if(this.consumeOptional("=")){const valueMatch=matchSegments(this.remaining);valueMatch&&(value=valueMatch,this.capture(value))}params[decode(key)]=decode(value)}parseQueryParam(params){const key=function matchQueryParams(str){const match=str.match(QUERY_PARAM_RE);return match?match[0]:""}(this.remaining);if(!key)return;this.capture(key);let value="";if(this.consumeOptional("=")){const valueMatch=function matchUrlQueryParamValue(str){const match=str.match(QUERY_PARAM_VALUE_RE);return match?match[0]:""}(this.remaining);valueMatch&&(value=valueMatch,this.capture(value))}const decodedKey=decodeQuery(key),decodedVal=decodeQuery(value);if(params.hasOwnProperty(decodedKey)){let currentVal=params[decodedKey];Array.isArray(currentVal)||(currentVal=[currentVal],params[decodedKey]=currentVal),currentVal.push(decodedVal)}else params[decodedKey]=decodedVal}parseParens(allowPrimary){const segments={};for(this.capture("(");!this.consumeOptional(")")&&this.remaining.length>0;){const path=matchSegments(this.remaining),next=this.remaining[path.length];if("/"!==next&&")"!==next&&";"!==next)throw new core["ɵRuntimeError"](4010,("undefined"==typeof ngDevMode||ngDevMode)&&`Cannot parse url '${this.url}'`);let outletName;path.indexOf(":")>-1?(outletName=path.slice(0,path.indexOf(":")),this.capture(outletName),this.capture(":")):allowPrimary&&(outletName=PRIMARY_OUTLET);const children=this.parseChildren();segments[outletName]=1===Object.keys(children).length?children[PRIMARY_OUTLET]:new UrlSegmentGroup([],children),this.consumeOptional("//")}return segments}peekStartsWith(str){return this.remaining.startsWith(str)}consumeOptional(str){return!!this.peekStartsWith(str)&&(this.remaining=this.remaining.substring(str.length),!0)}capture(str){if(!this.consumeOptional(str))throw new core["ɵRuntimeError"](4011,("undefined"==typeof ngDevMode||ngDevMode)&&`Expected "${str}".`)}}function createRoot(rootCandidate){return rootCandidate.segments.length>0?new UrlSegmentGroup([],{[PRIMARY_OUTLET]:rootCandidate}):rootCandidate}function squashSegmentGroup(segmentGroup){const newChildren={};for(const[childOutlet,child]of Object.entries(segmentGroup.children)){const childCandidate=squashSegmentGroup(child);if(childOutlet===PRIMARY_OUTLET&&0===childCandidate.segments.length&&childCandidate.hasChildren())for(const[grandChildOutlet,grandChild]of Object.entries(childCandidate.children))newChildren[grandChildOutlet]=grandChild;else(childCandidate.segments.length>0||childCandidate.hasChildren())&&(newChildren[childOutlet]=childCandidate)}return function mergeTrivialChildren(s){if(1===s.numberOfChildren&&s.children[PRIMARY_OUTLET]){const c=s.children[PRIMARY_OUTLET];return new UrlSegmentGroup(s.segments.concat(c.segments),c.children)}return s}(new UrlSegmentGroup(segmentGroup.segments,newChildren))}function isUrlTree(v){return v instanceof UrlTree}function createSegmentGroupFromRoute(route){let targetGroup;const rootCandidate=function createSegmentGroupFromRouteRecursive(currentRoute){const childOutlets={};for(const childSnapshot of currentRoute.children){const root=createSegmentGroupFromRouteRecursive(childSnapshot);childOutlets[childSnapshot.outlet]=root}const segmentGroup=new UrlSegmentGroup(currentRoute.url,childOutlets);return currentRoute===route&&(targetGroup=segmentGroup),segmentGroup}(route.root),rootSegmentGroup=createRoot(rootCandidate);return targetGroup??rootSegmentGroup}function createUrlTreeFromSegmentGroup(relativeTo,commands,queryParams,fragment){let root=relativeTo;for(;root.parent;)root=root.parent;if(0===commands.length)return tree(root,root,root,queryParams,fragment);const nav=function computeNavigation(commands){if("string"==typeof commands[0]&&1===commands.length&&"/"===commands[0])return new Navigation(!0,0,commands);let numberOfDoubleDots=0,isAbsolute=!1;const res=commands.reduce(((res,cmd,cmdIdx)=>{if("object"==typeof cmd&&null!=cmd){if(cmd.outlets){const outlets={};return Object.entries(cmd.outlets).forEach((([name,commands])=>{outlets[name]="string"==typeof commands?commands.split("/"):commands})),[...res,{outlets}]}if(cmd.segmentPath)return[...res,cmd.segmentPath]}return"string"!=typeof cmd?[...res,cmd]:0===cmdIdx?(cmd.split("/").forEach(((urlPart,partIndex)=>{0==partIndex&&"."===urlPart||(0==partIndex&&""===urlPart?isAbsolute=!0:".."===urlPart?numberOfDoubleDots++:""!=urlPart&&res.push(urlPart))})),res):[...res,cmd]}),[]);return new Navigation(isAbsolute,numberOfDoubleDots,res)}(commands);if(nav.toRoot())return tree(root,root,new UrlSegmentGroup([],{}),queryParams,fragment);const position=function findStartingPositionForTargetGroup(nav,root,target){if(nav.isAbsolute)return new Position(root,!0,0);if(!target)return new Position(root,!1,NaN);if(null===target.parent)return new Position(target,!0,0);const modifier=isMatrixParams(nav.commands[0])?0:1,index=target.segments.length-1+modifier;return function createPositionApplyingDoubleDots(group,index,numberOfDoubleDots){let g=group,ci=index,dd=numberOfDoubleDots;for(;dd>ci;){if(dd-=ci,g=g.parent,!g)throw new core["ɵRuntimeError"](4005,("undefined"==typeof ngDevMode||ngDevMode)&&"Invalid number of '../'");ci=g.segments.length}return new Position(g,!1,ci-dd)}(target,index,nav.numberOfDoubleDots)}(nav,root,relativeTo),newSegmentGroup=position.processChildren?updateSegmentGroupChildren(position.segmentGroup,position.index,nav.commands):updateSegmentGroup(position.segmentGroup,position.index,nav.commands);return tree(root,position.segmentGroup,newSegmentGroup,queryParams,fragment)}function isMatrixParams(command){return"object"==typeof command&&null!=command&&!command.outlets&&!command.segmentPath}function isCommandWithOutlets(command){return"object"==typeof command&&null!=command&&command.outlets}function tree(oldRoot,oldSegmentGroup,newSegmentGroup,queryParams,fragment){let rootCandidate,qp={};queryParams&&Object.entries(queryParams).forEach((([name,value])=>{qp[name]=Array.isArray(value)?value.map((v=>`${v}`)):`${value}`})),rootCandidate=oldRoot===oldSegmentGroup?newSegmentGroup:replaceSegment(oldRoot,oldSegmentGroup,newSegmentGroup);const newRoot=createRoot(squashSegmentGroup(rootCandidate));return new UrlTree(newRoot,qp,fragment)}function replaceSegment(current,oldSegment,newSegment){const children={};return Object.entries(current.children).forEach((([outletName,c])=>{children[outletName]=c===oldSegment?newSegment:replaceSegment(c,oldSegment,newSegment)})),new UrlSegmentGroup(current.segments,children)}class Navigation{constructor(isAbsolute,numberOfDoubleDots,commands){if(this.isAbsolute=isAbsolute,this.numberOfDoubleDots=numberOfDoubleDots,this.commands=commands,isAbsolute&&commands.length>0&&isMatrixParams(commands[0]))throw new core["ɵRuntimeError"](4003,("undefined"==typeof ngDevMode||ngDevMode)&&"Root segment cannot have matrix parameters");const cmdWithOutlet=commands.find(isCommandWithOutlets);if(cmdWithOutlet&&cmdWithOutlet!==router_last(commands))throw new core["ɵRuntimeError"](4004,("undefined"==typeof ngDevMode||ngDevMode)&&"{outlets:{}} has to be the last command")}toRoot(){return this.isAbsolute&&1===this.commands.length&&"/"==this.commands[0]}}class Position{constructor(segmentGroup,processChildren,index){this.segmentGroup=segmentGroup,this.processChildren=processChildren,this.index=index}}function updateSegmentGroup(segmentGroup,startIndex,commands){if(segmentGroup??=new UrlSegmentGroup([],{}),0===segmentGroup.segments.length&&segmentGroup.hasChildren())return updateSegmentGroupChildren(segmentGroup,startIndex,commands);const m=function prefixedWith(segmentGroup,startIndex,commands){let currentCommandIndex=0,currentPathIndex=startIndex;const noMatch={match:!1,pathIndex:0,commandIndex:0};for(;currentPathIndex<segmentGroup.segments.length;){if(currentCommandIndex>=commands.length)return noMatch;const path=segmentGroup.segments[currentPathIndex],command=commands[currentCommandIndex];if(isCommandWithOutlets(command))break;const curr=`${command}`,next=currentCommandIndex<commands.length-1?commands[currentCommandIndex+1]:null;if(currentPathIndex>0&&void 0===curr)break;if(curr&&next&&"object"==typeof next&&void 0===next.outlets){if(!compare(curr,next,path))return noMatch;currentCommandIndex+=2}else{if(!compare(curr,{},path))return noMatch;currentCommandIndex++}currentPathIndex++}return{match:!0,pathIndex:currentPathIndex,commandIndex:currentCommandIndex}}(segmentGroup,startIndex,commands),slicedCommands=commands.slice(m.commandIndex);if(m.match&&m.pathIndex<segmentGroup.segments.length){const g=new UrlSegmentGroup(segmentGroup.segments.slice(0,m.pathIndex),{});return g.children[PRIMARY_OUTLET]=new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex),segmentGroup.children),updateSegmentGroupChildren(g,0,slicedCommands)}return m.match&&0===slicedCommands.length?new UrlSegmentGroup(segmentGroup.segments,{}):m.match&&!segmentGroup.hasChildren()?createNewSegmentGroup(segmentGroup,startIndex,commands):m.match?updateSegmentGroupChildren(segmentGroup,0,slicedCommands):createNewSegmentGroup(segmentGroup,startIndex,commands)}function updateSegmentGroupChildren(segmentGroup,startIndex,commands){if(0===commands.length)return new UrlSegmentGroup(segmentGroup.segments,{});{const outlets=function getOutlets(commands){return isCommandWithOutlets(commands[0])?commands[0].outlets:{[PRIMARY_OUTLET]:commands}}(commands),children={};if(Object.keys(outlets).some((o=>o!==PRIMARY_OUTLET))&&segmentGroup.children[PRIMARY_OUTLET]&&1===segmentGroup.numberOfChildren&&0===segmentGroup.children[PRIMARY_OUTLET].segments.length){const childrenOfEmptyChild=updateSegmentGroupChildren(segmentGroup.children[PRIMARY_OUTLET],startIndex,commands);return new UrlSegmentGroup(segmentGroup.segments,childrenOfEmptyChild.children)}return Object.entries(outlets).forEach((([outlet,commands])=>{"string"==typeof commands&&(commands=[commands]),null!==commands&&(children[outlet]=updateSegmentGroup(segmentGroup.children[outlet],startIndex,commands))})),Object.entries(segmentGroup.children).forEach((([childOutlet,child])=>{void 0===outlets[childOutlet]&&(children[childOutlet]=child)})),new UrlSegmentGroup(segmentGroup.segments,children)}}function createNewSegmentGroup(segmentGroup,startIndex,commands){const paths=segmentGroup.segments.slice(0,startIndex);let i=0;for(;i<commands.length;){const command=commands[i];if(isCommandWithOutlets(command)){const children=createNewSegmentChildren(command.outlets);return new UrlSegmentGroup(paths,children)}if(0===i&&isMatrixParams(commands[0])){const p=segmentGroup.segments[startIndex];paths.push(new UrlSegment(p.path,stringify(commands[0]))),i++;continue}const curr=isCommandWithOutlets(command)?command.outlets[PRIMARY_OUTLET]:`${command}`,next=i<commands.length-1?commands[i+1]:null;curr&&next&&isMatrixParams(next)?(paths.push(new UrlSegment(curr,stringify(next))),i+=2):(paths.push(new UrlSegment(curr,{})),i++)}return new UrlSegmentGroup(paths,{})}function createNewSegmentChildren(outlets){const children={};return Object.entries(outlets).forEach((([outlet,commands])=>{"string"==typeof commands&&(commands=[commands]),null!==commands&&(children[outlet]=createNewSegmentGroup(new UrlSegmentGroup([],{}),0,commands))})),children}function stringify(params){const res={};return Object.entries(params).forEach((([k,v])=>res[k]=`${v}`)),res}function compare(path,params,segment){return path==segment.path&&shallowEqual(params,segment.parameters)}var EventType,NavigationCancellationCode,NavigationSkippedCode;!function(EventType){EventType[EventType.NavigationStart=0]="NavigationStart",EventType[EventType.NavigationEnd=1]="NavigationEnd",EventType[EventType.NavigationCancel=2]="NavigationCancel",EventType[EventType.NavigationError=3]="NavigationError",EventType[EventType.RoutesRecognized=4]="RoutesRecognized",EventType[EventType.ResolveStart=5]="ResolveStart",EventType[EventType.ResolveEnd=6]="ResolveEnd",EventType[EventType.GuardsCheckStart=7]="GuardsCheckStart",EventType[EventType.GuardsCheckEnd=8]="GuardsCheckEnd",EventType[EventType.RouteConfigLoadStart=9]="RouteConfigLoadStart",EventType[EventType.RouteConfigLoadEnd=10]="RouteConfigLoadEnd",EventType[EventType.ChildActivationStart=11]="ChildActivationStart",EventType[EventType.ChildActivationEnd=12]="ChildActivationEnd",EventType[EventType.ActivationStart=13]="ActivationStart",EventType[EventType.ActivationEnd=14]="ActivationEnd",EventType[EventType.Scroll=15]="Scroll",EventType[EventType.NavigationSkipped=16]="NavigationSkipped"}(EventType||(EventType={}));class RouterEvent{constructor(id,url){this.id=id,this.url=url}}class NavigationStart extends RouterEvent{constructor(id,url,navigationTrigger="imperative",restoredState=null){super(id,url),this.type=EventType.NavigationStart,this.navigationTrigger=navigationTrigger,this.restoredState=restoredState}toString(){return`NavigationStart(id: ${this.id}, url: '${this.url}')`}}class NavigationEnd extends RouterEvent{constructor(id,url,urlAfterRedirects){super(id,url),this.urlAfterRedirects=urlAfterRedirects,this.type=EventType.NavigationEnd}toString(){return`NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`}}!function(NavigationCancellationCode){NavigationCancellationCode[NavigationCancellationCode.Redirect=0]="Redirect",NavigationCancellationCode[NavigationCancellationCode.SupersededByNewNavigation=1]="SupersededByNewNavigation",NavigationCancellationCode[NavigationCancellationCode.NoDataFromResolver=2]="NoDataFromResolver",NavigationCancellationCode[NavigationCancellationCode.GuardRejected=3]="GuardRejected"}(NavigationCancellationCode||(NavigationCancellationCode={})),function(NavigationSkippedCode){NavigationSkippedCode[NavigationSkippedCode.IgnoredSameUrlNavigation=0]="IgnoredSameUrlNavigation",NavigationSkippedCode[NavigationSkippedCode.IgnoredByUrlHandlingStrategy=1]="IgnoredByUrlHandlingStrategy"}(NavigationSkippedCode||(NavigationSkippedCode={}));class NavigationCancel extends RouterEvent{constructor(id,url,reason,code){super(id,url),this.reason=reason,this.code=code,this.type=EventType.NavigationCancel}toString(){return`NavigationCancel(id: ${this.id}, url: '${this.url}')`}}class NavigationSkipped extends RouterEvent{constructor(id,url,reason,code){super(id,url),this.reason=reason,this.code=code,this.type=EventType.NavigationSkipped}}class NavigationError extends RouterEvent{constructor(id,url,error,target){super(id,url),this.error=error,this.target=target,this.type=EventType.NavigationError}toString(){return`NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`}}class RoutesRecognized extends RouterEvent{constructor(id,url,urlAfterRedirects,state){super(id,url),this.urlAfterRedirects=urlAfterRedirects,this.state=state,this.type=EventType.RoutesRecognized}toString(){return`RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class GuardsCheckStart extends RouterEvent{constructor(id,url,urlAfterRedirects,state){super(id,url),this.urlAfterRedirects=urlAfterRedirects,this.state=state,this.type=EventType.GuardsCheckStart}toString(){return`GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class GuardsCheckEnd extends RouterEvent{constructor(id,url,urlAfterRedirects,state,shouldActivate){super(id,url),this.urlAfterRedirects=urlAfterRedirects,this.state=state,this.shouldActivate=shouldActivate,this.type=EventType.GuardsCheckEnd}toString(){return`GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`}}class ResolveStart extends RouterEvent{constructor(id,url,urlAfterRedirects,state){super(id,url),this.urlAfterRedirects=urlAfterRedirects,this.state=state,this.type=EventType.ResolveStart}toString(){return`ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class ResolveEnd extends RouterEvent{constructor(id,url,urlAfterRedirects,state){super(id,url),this.urlAfterRedirects=urlAfterRedirects,this.state=state,this.type=EventType.ResolveEnd}toString(){return`ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class RouteConfigLoadStart{constructor(route){this.route=route,this.type=EventType.RouteConfigLoadStart}toString(){return`RouteConfigLoadStart(path: ${this.route.path})`}}class RouteConfigLoadEnd{constructor(route){this.route=route,this.type=EventType.RouteConfigLoadEnd}toString(){return`RouteConfigLoadEnd(path: ${this.route.path})`}}class ChildActivationStart{constructor(snapshot){this.snapshot=snapshot,this.type=EventType.ChildActivationStart}toString(){return`ChildActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class ChildActivationEnd{constructor(snapshot){this.snapshot=snapshot,this.type=EventType.ChildActivationEnd}toString(){return`ChildActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class ActivationStart{constructor(snapshot){this.snapshot=snapshot,this.type=EventType.ActivationStart}toString(){return`ActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class ActivationEnd{constructor(snapshot){this.snapshot=snapshot,this.type=EventType.ActivationEnd}toString(){return`ActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class Scroll{constructor(routerEvent,position,anchor){this.routerEvent=routerEvent,this.position=position,this.anchor=anchor,this.type=EventType.Scroll}toString(){const pos=this.position?`${this.position[0]}, ${this.position[1]}`:null;return`Scroll(anchor: '${this.anchor}', position: '${pos}')`}}class BeforeActivateRoutes{}class RedirectRequest{constructor(url,navigationBehaviorOptions){this.url=url,this.navigationBehaviorOptions=navigationBehaviorOptions}}function validateConfig(config,parentPath="",requireStandaloneComponents=!1){for(let i=0;i<config.length;i++){const route=config[i];validateNode(route,getFullPath(parentPath,route),requireStandaloneComponents)}}function assertStandalone(fullPath,component){if(component&&(0,core["ɵisNgModule"])(component))throw new core["ɵRuntimeError"](4014,`Invalid configuration of route '${fullPath}'. You are using 'loadComponent' with a module, but it must be used with standalone components. Use 'loadChildren' instead.`);if(component&&!(0,core.isStandalone)(component))throw new core["ɵRuntimeError"](4014,`Invalid configuration of route '${fullPath}'. The component must be standalone.`)}function validateNode(route,fullPath,requireStandaloneComponents){if("undefined"==typeof ngDevMode||ngDevMode){if(!route)throw new core["ɵRuntimeError"](4014,`\n      Invalid configuration of route '${fullPath}': Encountered undefined route.\n      The reason might be an extra comma.\n\n      Example:\n      const routes: Routes = [\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\n        { path: 'detail/:id', component: HeroDetailComponent }\n      ];\n    `);if(Array.isArray(route))throw new core["ɵRuntimeError"](4014,`Invalid configuration of route '${fullPath}': Array cannot be specified`);if(!route.redirectTo&&!route.component&&!route.loadComponent&&!route.children&&!route.loadChildren&&route.outlet&&route.outlet!==PRIMARY_OUTLET)throw new core["ɵRuntimeError"](4014,`Invalid configuration of route '${fullPath}': a componentless route without children or loadChildren cannot have a named outlet set`);if(route.redirectTo&&route.children)throw new core["ɵRuntimeError"](4014,`Invalid configuration of route '${fullPath}': redirectTo and children cannot be used together`);if(route.redirectTo&&route.loadChildren)throw new core["ɵRuntimeError"](4014,`Invalid configuration of route '${fullPath}': redirectTo and loadChildren cannot be used together`);if(route.children&&route.loadChildren)throw new core["ɵRuntimeError"](4014,`Invalid configuration of route '${fullPath}': children and loadChildren cannot be used together`);if(route.redirectTo&&(route.component||route.loadComponent))throw new core["ɵRuntimeError"](4014,`Invalid configuration of route '${fullPath}': redirectTo and component/loadComponent cannot be used together`);if(route.component&&route.loadComponent)throw new core["ɵRuntimeError"](4014,`Invalid configuration of route '${fullPath}': component and loadComponent cannot be used together`);if(route.redirectTo&&route.canActivate)throw new core["ɵRuntimeError"](4014,`Invalid configuration of route '${fullPath}': redirectTo and canActivate cannot be used together. Redirects happen before activation so canActivate will never be executed.`);if(route.path&&route.matcher)throw new core["ɵRuntimeError"](4014,`Invalid configuration of route '${fullPath}': path and matcher cannot be used together`);if(!(void 0!==route.redirectTo||route.component||route.loadComponent||route.children||route.loadChildren))throw new core["ɵRuntimeError"](4014,`Invalid configuration of route '${fullPath}'. One of the following must be provided: component, loadComponent, redirectTo, children or loadChildren`);if(void 0===route.path&&void 0===route.matcher)throw new core["ɵRuntimeError"](4014,`Invalid configuration of route '${fullPath}': routes must have either a path or a matcher specified`);if("string"==typeof route.path&&"/"===route.path.charAt(0))throw new core["ɵRuntimeError"](4014,`Invalid configuration of route '${fullPath}': path cannot start with a slash`);if(""===route.path&&void 0!==route.redirectTo&&void 0===route.pathMatch){const exp="The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.";throw new core["ɵRuntimeError"](4014,`Invalid configuration of route '{path: "${fullPath}", redirectTo: "${route.redirectTo}"}': please provide 'pathMatch'. ${exp}`)}requireStandaloneComponents&&assertStandalone(fullPath,route.component)}route.children&&validateConfig(route.children,fullPath,requireStandaloneComponents)}function getFullPath(parentPath,currentRoute){return currentRoute?parentPath||currentRoute.path?parentPath&&!currentRoute.path?`${parentPath}/`:!parentPath&&currentRoute.path?currentRoute.path:`${parentPath}/${currentRoute.path}`:"":parentPath}function getOutlet(route){return route.outlet||PRIMARY_OUTLET}function getClosestRouteInjector(snapshot){if(!snapshot)return null;if(snapshot.routeConfig?._injector)return snapshot.routeConfig._injector;for(let s=snapshot.parent;s;s=s.parent){const route=s.routeConfig;if(route?._loadedInjector)return route._loadedInjector;if(route?._injector)return route._injector}return null}class OutletContext{get injector(){return getClosestRouteInjector(this.route?.snapshot)??this.rootInjector}set injector(_){}constructor(rootInjector){this.rootInjector=rootInjector,this.outlet=null,this.route=null,this.children=new ChildrenOutletContexts(this.rootInjector),this.attachRef=null}}class ChildrenOutletContexts{constructor(rootInjector){this.rootInjector=rootInjector,this.contexts=new Map}onChildOutletCreated(childName,outlet){const context=this.getOrCreateContext(childName);context.outlet=outlet,this.contexts.set(childName,context)}onChildOutletDestroyed(childName){const context=this.getContext(childName);context&&(context.outlet=null,context.attachRef=null)}onOutletDeactivated(){const contexts=this.contexts;return this.contexts=new Map,contexts}onOutletReAttached(contexts){this.contexts=contexts}getOrCreateContext(childName){let context=this.getContext(childName);return context||(context=new OutletContext(this.rootInjector),this.contexts.set(childName,context)),context}getContext(childName){return this.contexts.get(childName)||null}static#_=this.ɵfac=function ChildrenOutletContexts_Factory(__ngFactoryType__){return new(__ngFactoryType__||ChildrenOutletContexts)(core["ɵɵinject"](core.EnvironmentInjector))};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:ChildrenOutletContexts,factory:ChildrenOutletContexts.ɵfac,providedIn:"root"})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](ChildrenOutletContexts,[{type:core.Injectable,args:[{providedIn:"root"}]}],(()=>[{type:core.EnvironmentInjector}]),null);class Tree{constructor(root){this._root=root}get root(){return this._root.value}parent(t){const p=this.pathFromRoot(t);return p.length>1?p[p.length-2]:null}children(t){const n=findNode(t,this._root);return n?n.children.map((t=>t.value)):[]}firstChild(t){const n=findNode(t,this._root);return n&&n.children.length>0?n.children[0].value:null}siblings(t){const p=findPath(t,this._root);if(p.length<2)return[];return p[p.length-2].children.map((c=>c.value)).filter((cc=>cc!==t))}pathFromRoot(t){return findPath(t,this._root).map((s=>s.value))}}function findNode(value,node){if(value===node.value)return node;for(const child of node.children){const node=findNode(value,child);if(node)return node}return null}function findPath(value,node){if(value===node.value)return[node];for(const child of node.children){const path=findPath(value,child);if(path.length)return path.unshift(node),path}return[]}class TreeNode{constructor(value,children){this.value=value,this.children=children}toString(){return`TreeNode(${this.value})`}}function nodeChildrenAsMap(node){const map={};return node&&node.children.forEach((child=>map[child.value.outlet]=child)),map}class RouterState extends Tree{constructor(root,snapshot){super(root),this.snapshot=snapshot,setRouterState(this,root)}toString(){return this.snapshot.toString()}}function createEmptyState(rootComponent){const snapshot=function createEmptyStateSnapshot(rootComponent){const emptyParams={},emptyData={},emptyQueryParams={},fragment="",activated=new ActivatedRouteSnapshot([],emptyParams,emptyQueryParams,fragment,emptyData,PRIMARY_OUTLET,rootComponent,null,{});return new RouterStateSnapshot("",new TreeNode(activated,[]))}(rootComponent),emptyUrl=new BehaviorSubject.t([new UrlSegment("",{})]),emptyParams=new BehaviorSubject.t({}),emptyData=new BehaviorSubject.t({}),emptyQueryParams=new BehaviorSubject.t({}),fragment=new BehaviorSubject.t(""),activated=new ActivatedRoute(emptyUrl,emptyParams,emptyQueryParams,fragment,emptyData,PRIMARY_OUTLET,rootComponent,snapshot.root);return activated.snapshot=snapshot.root,new RouterState(new TreeNode(activated,[]),snapshot)}class ActivatedRoute{constructor(urlSubject,paramsSubject,queryParamsSubject,fragmentSubject,dataSubject,outlet,component,futureSnapshot){this.urlSubject=urlSubject,this.paramsSubject=paramsSubject,this.queryParamsSubject=queryParamsSubject,this.fragmentSubject=fragmentSubject,this.dataSubject=dataSubject,this.outlet=outlet,this.component=component,this._futureSnapshot=futureSnapshot,this.title=this.dataSubject?.pipe((0,map.T)((d=>d[RouteTitleKey])))??(0,of.of)(void 0),this.url=urlSubject,this.params=paramsSubject,this.queryParams=queryParamsSubject,this.fragment=fragmentSubject,this.data=dataSubject}get routeConfig(){return this._futureSnapshot.routeConfig}get root(){return this._routerState.root}get parent(){return this._routerState.parent(this)}get firstChild(){return this._routerState.firstChild(this)}get children(){return this._routerState.children(this)}get pathFromRoot(){return this._routerState.pathFromRoot(this)}get paramMap(){return this._paramMap??=this.params.pipe((0,map.T)((p=>convertToParamMap(p)))),this._paramMap}get queryParamMap(){return this._queryParamMap??=this.queryParams.pipe((0,map.T)((p=>convertToParamMap(p)))),this._queryParamMap}toString(){return this.snapshot?this.snapshot.toString():`Future(${this._futureSnapshot})`}}function getInherited(route,parent,paramsInheritanceStrategy="emptyOnly"){let inherited;const{routeConfig}=route;return inherited=null===parent||"always"!==paramsInheritanceStrategy&&""!==routeConfig?.path&&(parent.component||parent.routeConfig?.loadComponent)?{params:{...route.params},data:{...route.data},resolve:{...route.data,...route._resolvedData??{}}}:{params:{...parent.params,...route.params},data:{...parent.data,...route.data},resolve:{...route.data,...parent.data,...routeConfig?.data,...route._resolvedData}},routeConfig&&hasStaticTitle(routeConfig)&&(inherited.resolve[RouteTitleKey]=routeConfig.title),inherited}class ActivatedRouteSnapshot{get title(){return this.data?.[RouteTitleKey]}constructor(url,params,queryParams,fragment,data,outlet,component,routeConfig,resolve){this.url=url,this.params=params,this.queryParams=queryParams,this.fragment=fragment,this.data=data,this.outlet=outlet,this.component=component,this.routeConfig=routeConfig,this._resolve=resolve}get root(){return this._routerState.root}get parent(){return this._routerState.parent(this)}get firstChild(){return this._routerState.firstChild(this)}get children(){return this._routerState.children(this)}get pathFromRoot(){return this._routerState.pathFromRoot(this)}get paramMap(){return this._paramMap??=convertToParamMap(this.params),this._paramMap}get queryParamMap(){return this._queryParamMap??=convertToParamMap(this.queryParams),this._queryParamMap}toString(){return`Route(url:'${this.url.map((segment=>segment.toString())).join("/")}', path:'${this.routeConfig?this.routeConfig.path:""}')`}}class RouterStateSnapshot extends Tree{constructor(url,root){super(root),this.url=url,setRouterState(this,root)}toString(){return serializeNode(this._root)}}function setRouterState(state,node){node.value._routerState=state,node.children.forEach((c=>setRouterState(state,c)))}function serializeNode(node){const c=node.children.length>0?` { ${node.children.map(serializeNode).join(", ")} } `:"";return`${node.value}${c}`}function advanceActivatedRoute(route){if(route.snapshot){const currentSnapshot=route.snapshot,nextSnapshot=route._futureSnapshot;route.snapshot=nextSnapshot,shallowEqual(currentSnapshot.queryParams,nextSnapshot.queryParams)||route.queryParamsSubject.next(nextSnapshot.queryParams),currentSnapshot.fragment!==nextSnapshot.fragment&&route.fragmentSubject.next(nextSnapshot.fragment),shallowEqual(currentSnapshot.params,nextSnapshot.params)||route.paramsSubject.next(nextSnapshot.params),function shallowEqualArrays(a,b){if(a.length!==b.length)return!1;for(let i=0;i<a.length;++i)if(!shallowEqual(a[i],b[i]))return!1;return!0}(currentSnapshot.url,nextSnapshot.url)||route.urlSubject.next(nextSnapshot.url),shallowEqual(currentSnapshot.data,nextSnapshot.data)||route.dataSubject.next(nextSnapshot.data)}else route.snapshot=route._futureSnapshot,route.dataSubject.next(route._futureSnapshot.data)}function equalParamsAndUrlSegments(a,b){const equalUrlParams=shallowEqual(a.params,b.params)&&function equalSegments(as,bs){return equalPath(as,bs)&&as.every(((a,i)=>shallowEqual(a.parameters,bs[i].parameters)))}(a.url,b.url),parentsMismatch=!a.parent!=!b.parent;return equalUrlParams&&!parentsMismatch&&(!a.parent||equalParamsAndUrlSegments(a.parent,b.parent))}function hasStaticTitle(config){return"string"==typeof config.title||null===config.title}class RouterOutlet{constructor(){this.activated=null,this._activatedRoute=null,this.name=PRIMARY_OUTLET,this.activateEvents=new core.EventEmitter,this.deactivateEvents=new core.EventEmitter,this.attachEvents=new core.EventEmitter,this.detachEvents=new core.EventEmitter,this.parentContexts=(0,core.inject)(ChildrenOutletContexts),this.location=(0,core.inject)(core.ViewContainerRef),this.changeDetector=(0,core.inject)(core.ChangeDetectorRef),this.inputBinder=(0,core.inject)(INPUT_BINDER,{optional:!0}),this.supportsBindingToComponentInputs=!0}get activatedComponentRef(){return this.activated}ngOnChanges(changes){if(changes.name){const{firstChange,previousValue}=changes.name;if(firstChange)return;this.isTrackedInParentContexts(previousValue)&&(this.deactivate(),this.parentContexts.onChildOutletDestroyed(previousValue)),this.initializeOutletWithName()}}ngOnDestroy(){this.isTrackedInParentContexts(this.name)&&this.parentContexts.onChildOutletDestroyed(this.name),this.inputBinder?.unsubscribeFromRouteData(this)}isTrackedInParentContexts(outletName){return this.parentContexts.getContext(outletName)?.outlet===this}ngOnInit(){this.initializeOutletWithName()}initializeOutletWithName(){if(this.parentContexts.onChildOutletCreated(this.name,this),this.activated)return;const context=this.parentContexts.getContext(this.name);context?.route&&(context.attachRef?this.attach(context.attachRef,context.route):this.activateWith(context.route,context.injector))}get isActivated(){return!!this.activated}get component(){if(!this.activated)throw new core["ɵRuntimeError"](4012,("undefined"==typeof ngDevMode||ngDevMode)&&"Outlet is not activated");return this.activated.instance}get activatedRoute(){if(!this.activated)throw new core["ɵRuntimeError"](4012,("undefined"==typeof ngDevMode||ngDevMode)&&"Outlet is not activated");return this._activatedRoute}get activatedRouteData(){return this._activatedRoute?this._activatedRoute.snapshot.data:{}}detach(){if(!this.activated)throw new core["ɵRuntimeError"](4012,("undefined"==typeof ngDevMode||ngDevMode)&&"Outlet is not activated");this.location.detach();const cmp=this.activated;return this.activated=null,this._activatedRoute=null,this.detachEvents.emit(cmp.instance),cmp}attach(ref,activatedRoute){this.activated=ref,this._activatedRoute=activatedRoute,this.location.insert(ref.hostView),this.inputBinder?.bindActivatedRouteToOutletComponent(this),this.attachEvents.emit(ref.instance)}deactivate(){if(this.activated){const c=this.component;this.activated.destroy(),this.activated=null,this._activatedRoute=null,this.deactivateEvents.emit(c)}}activateWith(activatedRoute,environmentInjector){if(this.isActivated)throw new core["ɵRuntimeError"](4013,("undefined"==typeof ngDevMode||ngDevMode)&&"Cannot activate an already activated outlet");this._activatedRoute=activatedRoute;const location=this.location,component=activatedRoute.snapshot.component,childContexts=this.parentContexts.getOrCreateContext(this.name).children,injector=new OutletInjector(activatedRoute,childContexts,location.injector);this.activated=location.createComponent(component,{index:location.length,injector,environmentInjector}),this.changeDetector.markForCheck(),this.inputBinder?.bindActivatedRouteToOutletComponent(this),this.activateEvents.emit(this.activated.instance)}static#_=this.ɵfac=function RouterOutlet_Factory(__ngFactoryType__){return new(__ngFactoryType__||RouterOutlet)};static#_2=this.ɵdir=core["ɵɵdefineDirective"]({type:RouterOutlet,selectors:[["router-outlet"]],inputs:{name:"name"},outputs:{activateEvents:"activate",deactivateEvents:"deactivate",attachEvents:"attach",detachEvents:"detach"},exportAs:["outlet"],standalone:!0,features:[core["ɵɵNgOnChangesFeature"]]})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](RouterOutlet,[{type:core.Directive,args:[{selector:"router-outlet",exportAs:"outlet",standalone:!0}]}],null,{name:[{type:core.Input}],activateEvents:[{type:core.Output,args:["activate"]}],deactivateEvents:[{type:core.Output,args:["deactivate"]}],attachEvents:[{type:core.Output,args:["attach"]}],detachEvents:[{type:core.Output,args:["detach"]}]});class OutletInjector{__ngOutletInjector(parentInjector){return new OutletInjector(this.route,this.childContexts,parentInjector)}constructor(route,childContexts,parent){this.route=route,this.childContexts=childContexts,this.parent=parent}get(token,notFoundValue){return token===ActivatedRoute?this.route:token===ChildrenOutletContexts?this.childContexts:this.parent.get(token,notFoundValue)}}const INPUT_BINDER=new core.InjectionToken("");class RoutedComponentInputBinder{constructor(){this.outletDataSubscriptions=new Map}bindActivatedRouteToOutletComponent(outlet){this.unsubscribeFromRouteData(outlet),this.subscribeToRouteData(outlet)}unsubscribeFromRouteData(outlet){this.outletDataSubscriptions.get(outlet)?.unsubscribe(),this.outletDataSubscriptions.delete(outlet)}subscribeToRouteData(outlet){const{activatedRoute}=outlet,dataSubscription=(0,combineLatest.z)([activatedRoute.queryParams,activatedRoute.params,activatedRoute.data]).pipe((0,switchMap.n)((([queryParams,params,data],index)=>(data={...queryParams,...params,...data},0===index?(0,of.of)(data):Promise.resolve(data))))).subscribe((data=>{if(!outlet.isActivated||!outlet.activatedComponentRef||outlet.activatedRoute!==activatedRoute||null===activatedRoute.component)return void this.unsubscribeFromRouteData(outlet);const mirror=(0,core.reflectComponentType)(activatedRoute.component);if(mirror)for(const{templateName}of mirror.inputs)outlet.activatedComponentRef.setInput(templateName,data[templateName]);else this.unsubscribeFromRouteData(outlet)}));this.outletDataSubscriptions.set(outlet,dataSubscription)}static#_=this.ɵfac=function RoutedComponentInputBinder_Factory(__ngFactoryType__){return new(__ngFactoryType__||RoutedComponentInputBinder)};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:RoutedComponentInputBinder,factory:RoutedComponentInputBinder.ɵfac})}function createNode(routeReuseStrategy,curr,prevState){if(prevState&&routeReuseStrategy.shouldReuseRoute(curr.value,prevState.value.snapshot)){const value=prevState.value;value._futureSnapshot=curr.value;const children=function createOrReuseChildren(routeReuseStrategy,curr,prevState){return curr.children.map((child=>{for(const p of prevState.children)if(routeReuseStrategy.shouldReuseRoute(child.value,p.value.snapshot))return createNode(routeReuseStrategy,child,p);return createNode(routeReuseStrategy,child)}))}(routeReuseStrategy,curr,prevState);return new TreeNode(value,children)}{if(routeReuseStrategy.shouldAttach(curr.value)){const detachedRouteHandle=routeReuseStrategy.retrieve(curr.value);if(null!==detachedRouteHandle){const tree=detachedRouteHandle.route;return tree.value._futureSnapshot=curr.value,tree.children=curr.children.map((c=>createNode(routeReuseStrategy,c))),tree}}const value=function createActivatedRoute(c){return new ActivatedRoute(new BehaviorSubject.t(c.url),new BehaviorSubject.t(c.params),new BehaviorSubject.t(c.queryParams),new BehaviorSubject.t(c.fragment),new BehaviorSubject.t(c.data),c.outlet,c.component,c)}(curr.value),children=curr.children.map((c=>createNode(routeReuseStrategy,c)));return new TreeNode(value,children)}}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](RoutedComponentInputBinder,[{type:core.Injectable}],null,null);class RedirectCommand{constructor(redirectTo,navigationBehaviorOptions){this.redirectTo=redirectTo,this.navigationBehaviorOptions=navigationBehaviorOptions}}const NAVIGATION_CANCELING_ERROR="ngNavigationCancelingError";function redirectingNavigationError(urlSerializer,redirect){const{redirectTo,navigationBehaviorOptions}=isUrlTree(redirect)?{redirectTo:redirect,navigationBehaviorOptions:void 0}:redirect,error=navigationCancelingError(ngDevMode&&`Redirecting to "${urlSerializer.serialize(redirectTo)}"`,NavigationCancellationCode.Redirect);return error.url=redirectTo,error.navigationBehaviorOptions=navigationBehaviorOptions,error}function navigationCancelingError(message,code){const error=new Error(`NavigationCancelingError: ${message||""}`);return error[NAVIGATION_CANCELING_ERROR]=!0,error.cancellationCode=code,error}function isNavigationCancelingError(error){return!!error&&error[NAVIGATION_CANCELING_ERROR]}let warnedAboutUnsupportedInputBinding=!1;class ActivateRoutes{constructor(routeReuseStrategy,futureState,currState,forwardEvent,inputBindingEnabled){this.routeReuseStrategy=routeReuseStrategy,this.futureState=futureState,this.currState=currState,this.forwardEvent=forwardEvent,this.inputBindingEnabled=inputBindingEnabled}activate(parentContexts){const futureRoot=this.futureState._root,currRoot=this.currState?this.currState._root:null;this.deactivateChildRoutes(futureRoot,currRoot,parentContexts),advanceActivatedRoute(this.futureState.root),this.activateChildRoutes(futureRoot,currRoot,parentContexts)}deactivateChildRoutes(futureNode,currNode,contexts){const children=nodeChildrenAsMap(currNode);futureNode.children.forEach((futureChild=>{const childOutletName=futureChild.value.outlet;this.deactivateRoutes(futureChild,children[childOutletName],contexts),delete children[childOutletName]})),Object.values(children).forEach((v=>{this.deactivateRouteAndItsChildren(v,contexts)}))}deactivateRoutes(futureNode,currNode,parentContext){const future=futureNode.value,curr=currNode?currNode.value:null;if(future===curr)if(future.component){const context=parentContext.getContext(future.outlet);context&&this.deactivateChildRoutes(futureNode,currNode,context.children)}else this.deactivateChildRoutes(futureNode,currNode,parentContext);else curr&&this.deactivateRouteAndItsChildren(currNode,parentContext)}deactivateRouteAndItsChildren(route,parentContexts){route.value.component&&this.routeReuseStrategy.shouldDetach(route.value.snapshot)?this.detachAndStoreRouteSubtree(route,parentContexts):this.deactivateRouteAndOutlet(route,parentContexts)}detachAndStoreRouteSubtree(route,parentContexts){const context=parentContexts.getContext(route.value.outlet),contexts=context&&route.value.component?context.children:parentContexts,children=nodeChildrenAsMap(route);for(const treeNode of Object.values(children))this.deactivateRouteAndItsChildren(treeNode,contexts);if(context&&context.outlet){const componentRef=context.outlet.detach(),contexts=context.children.onOutletDeactivated();this.routeReuseStrategy.store(route.value.snapshot,{componentRef,route,contexts})}}deactivateRouteAndOutlet(route,parentContexts){const context=parentContexts.getContext(route.value.outlet),contexts=context&&route.value.component?context.children:parentContexts,children=nodeChildrenAsMap(route);for(const treeNode of Object.values(children))this.deactivateRouteAndItsChildren(treeNode,contexts);context&&(context.outlet&&(context.outlet.deactivate(),context.children.onOutletDeactivated()),context.attachRef=null,context.route=null)}activateChildRoutes(futureNode,currNode,contexts){const children=nodeChildrenAsMap(currNode);futureNode.children.forEach((c=>{this.activateRoutes(c,children[c.value.outlet],contexts),this.forwardEvent(new ActivationEnd(c.value.snapshot))})),futureNode.children.length&&this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot))}activateRoutes(futureNode,currNode,parentContexts){const future=futureNode.value,curr=currNode?currNode.value:null;if(advanceActivatedRoute(future),future===curr)if(future.component){const context=parentContexts.getOrCreateContext(future.outlet);this.activateChildRoutes(futureNode,currNode,context.children)}else this.activateChildRoutes(futureNode,currNode,parentContexts);else if(future.component){const context=parentContexts.getOrCreateContext(future.outlet);if(this.routeReuseStrategy.shouldAttach(future.snapshot)){const stored=this.routeReuseStrategy.retrieve(future.snapshot);this.routeReuseStrategy.store(future.snapshot,null),context.children.onOutletReAttached(stored.contexts),context.attachRef=stored.componentRef,context.route=stored.route.value,context.outlet&&context.outlet.attach(stored.componentRef,stored.route.value),advanceActivatedRoute(stored.route.value),this.activateChildRoutes(futureNode,null,context.children)}else context.attachRef=null,context.route=future,context.outlet&&context.outlet.activateWith(future,context.injector),this.activateChildRoutes(futureNode,null,context.children)}else this.activateChildRoutes(futureNode,null,parentContexts);if("undefined"==typeof ngDevMode||ngDevMode){const outlet=parentContexts.getOrCreateContext(future.outlet).outlet;outlet&&this.inputBindingEnabled&&!outlet.supportsBindingToComponentInputs&&!warnedAboutUnsupportedInputBinding&&(console.warn("'withComponentInputBinding' feature is enabled but this application is using an outlet that may not support binding to component inputs."),warnedAboutUnsupportedInputBinding=!0)}}}class CanActivate{constructor(path){this.path=path,this.route=this.path[this.path.length-1]}}class CanDeactivate{constructor(component,route){this.component=component,this.route=route}}function getAllRouteGuards(future,curr,parentContexts){const futureRoot=future._root;return getChildRouteGuards(futureRoot,curr?curr._root:null,parentContexts,[futureRoot.value])}function getTokenOrFunctionIdentity(tokenOrFunction,injector){const NOT_FOUND=Symbol(),result=injector.get(tokenOrFunction,NOT_FOUND);return result===NOT_FOUND?"function"!=typeof tokenOrFunction||(0,core["ɵisInjectable"])(tokenOrFunction)?injector.get(tokenOrFunction):tokenOrFunction:result}function getChildRouteGuards(futureNode,currNode,contexts,futurePath,checks={canDeactivateChecks:[],canActivateChecks:[]}){const prevChildren=nodeChildrenAsMap(currNode);return futureNode.children.forEach((c=>{!function getRouteGuards(futureNode,currNode,parentContexts,futurePath,checks={canDeactivateChecks:[],canActivateChecks:[]}){const future=futureNode.value,curr=currNode?currNode.value:null,context=parentContexts?parentContexts.getContext(futureNode.value.outlet):null;if(curr&&future.routeConfig===curr.routeConfig){const shouldRun=function shouldRunGuardsAndResolvers(curr,future,mode){if("function"==typeof mode)return mode(curr,future);switch(mode){case"pathParamsChange":return!equalPath(curr.url,future.url);case"pathParamsOrQueryParamsChange":return!equalPath(curr.url,future.url)||!shallowEqual(curr.queryParams,future.queryParams);case"always":return!0;case"paramsOrQueryParamsChange":return!equalParamsAndUrlSegments(curr,future)||!shallowEqual(curr.queryParams,future.queryParams);default:return!equalParamsAndUrlSegments(curr,future)}}(curr,future,future.routeConfig.runGuardsAndResolvers);shouldRun?checks.canActivateChecks.push(new CanActivate(futurePath)):(future.data=curr.data,future._resolvedData=curr._resolvedData),future.component?getChildRouteGuards(futureNode,currNode,context?context.children:null,futurePath,checks):getChildRouteGuards(futureNode,currNode,parentContexts,futurePath,checks),shouldRun&&context&&context.outlet&&context.outlet.isActivated&&checks.canDeactivateChecks.push(new CanDeactivate(context.outlet.component,curr))}else curr&&deactivateRouteAndItsChildren(currNode,context,checks),checks.canActivateChecks.push(new CanActivate(futurePath)),future.component?getChildRouteGuards(futureNode,null,context?context.children:null,futurePath,checks):getChildRouteGuards(futureNode,null,parentContexts,futurePath,checks);return checks}(c,prevChildren[c.value.outlet],contexts,futurePath.concat([c.value]),checks),delete prevChildren[c.value.outlet]})),Object.entries(prevChildren).forEach((([k,v])=>deactivateRouteAndItsChildren(v,contexts.getContext(k),checks))),checks}function deactivateRouteAndItsChildren(route,context,checks){const children=nodeChildrenAsMap(route),r=route.value;Object.entries(children).forEach((([childName,node])=>{r.component?deactivateRouteAndItsChildren(node,context?context.children.getContext(childName):null,checks):deactivateRouteAndItsChildren(node,context,checks)})),r.component&&context&&context.outlet&&context.outlet.isActivated?checks.canDeactivateChecks.push(new CanDeactivate(context.outlet.component,r)):checks.canDeactivateChecks.push(new CanDeactivate(null,r))}function router_isFunction(v){return"function"==typeof v}function isEmptyError(e){return e instanceof EmptyError.G||"EmptyError"===e?.name}const INITIAL_VALUE=Symbol("INITIAL_VALUE");function prioritizedGuardValue(){return(0,switchMap.n)((obs=>(0,combineLatest.z)(obs.map((o=>o.pipe((0,take.s)(1),(0,startWith.Z)(INITIAL_VALUE))))).pipe((0,map.T)((results=>{for(const result of results)if(!0!==result){if(result===INITIAL_VALUE)return INITIAL_VALUE;if(!1===result||(isUrlTree(val=result)||val instanceof RedirectCommand))return result}var val;return!0})),(0,filter.p)((item=>item!==INITIAL_VALUE)),(0,take.s)(1))))}function checkGuards(injector,forwardEvent){return(0,mergeMap.Z)((t=>{const{targetSnapshot,currentSnapshot,guards:{canActivateChecks,canDeactivateChecks}}=t;return 0===canDeactivateChecks.length&&0===canActivateChecks.length?(0,of.of)({...t,guardsResult:!0}):function runCanDeactivateChecks(checks,futureRSS,currRSS,injector){return(0,from.H)(checks).pipe((0,mergeMap.Z)((check=>function runCanDeactivate(component,currARS,currRSS,futureRSS,injector){const canDeactivate=currARS&&currARS.routeConfig?currARS.routeConfig.canDeactivate:null;if(!canDeactivate||0===canDeactivate.length)return(0,of.of)(!0);const canDeactivateObservables=canDeactivate.map((c=>{const closestInjector=getClosestRouteInjector(currARS)??injector,guard=getTokenOrFunctionIdentity(c,closestInjector);return wrapIntoObservable(function isCanDeactivate(guard){return guard&&router_isFunction(guard.canDeactivate)}(guard)?guard.canDeactivate(component,currARS,currRSS,futureRSS):(0,core.runInInjectionContext)(closestInjector,(()=>guard(component,currARS,currRSS,futureRSS)))).pipe((0,first.$)())}));return(0,of.of)(canDeactivateObservables).pipe(prioritizedGuardValue())}(check.component,check.route,currRSS,futureRSS,injector))),(0,first.$)((result=>!0!==result),!0))}(canDeactivateChecks,targetSnapshot,currentSnapshot,injector).pipe((0,mergeMap.Z)((canDeactivate=>canDeactivate&&function isBoolean(v){return"boolean"==typeof v}(canDeactivate)?function runCanActivateChecks(futureSnapshot,checks,injector,forwardEvent){return(0,from.H)(checks).pipe((0,concatMap.H)((check=>(0,concat.x)(function fireChildActivationStart(snapshot,forwardEvent){null!==snapshot&&forwardEvent&&forwardEvent(new ChildActivationStart(snapshot));return(0,of.of)(!0)}(check.route.parent,forwardEvent),function fireActivationStart(snapshot,forwardEvent){null!==snapshot&&forwardEvent&&forwardEvent(new ActivationStart(snapshot));return(0,of.of)(!0)}(check.route,forwardEvent),function runCanActivateChild(futureRSS,path,injector){const futureARS=path[path.length-1],canActivateChildGuardsMapped=path.slice(0,path.length-1).reverse().map((p=>function getCanActivateChild(p){const canActivateChild=p.routeConfig?p.routeConfig.canActivateChild:null;return canActivateChild&&0!==canActivateChild.length?{node:p,guards:canActivateChild}:null}(p))).filter((_=>null!==_)).map((d=>defer((()=>{const guardsMapped=d.guards.map((canActivateChild=>{const closestInjector=getClosestRouteInjector(d.node)??injector,guard=getTokenOrFunctionIdentity(canActivateChild,closestInjector);return wrapIntoObservable(function isCanActivateChild(guard){return guard&&router_isFunction(guard.canActivateChild)}(guard)?guard.canActivateChild(futureARS,futureRSS):(0,core.runInInjectionContext)(closestInjector,(()=>guard(futureARS,futureRSS)))).pipe((0,first.$)())}));return(0,of.of)(guardsMapped).pipe(prioritizedGuardValue())}))));return(0,of.of)(canActivateChildGuardsMapped).pipe(prioritizedGuardValue())}(futureSnapshot,check.path,injector),function runCanActivate(futureRSS,futureARS,injector){const canActivate=futureARS.routeConfig?futureARS.routeConfig.canActivate:null;if(!canActivate||0===canActivate.length)return(0,of.of)(!0);const canActivateObservables=canActivate.map((canActivate=>defer((()=>{const closestInjector=getClosestRouteInjector(futureARS)??injector,guard=getTokenOrFunctionIdentity(canActivate,closestInjector);return wrapIntoObservable(function isCanActivate(guard){return guard&&router_isFunction(guard.canActivate)}(guard)?guard.canActivate(futureARS,futureRSS):(0,core.runInInjectionContext)(closestInjector,(()=>guard(futureARS,futureRSS)))).pipe((0,first.$)())}))));return(0,of.of)(canActivateObservables).pipe(prioritizedGuardValue())}(futureSnapshot,check.route,injector)))),(0,first.$)((result=>!0!==result),!0))}(targetSnapshot,canActivateChecks,injector,forwardEvent):(0,of.of)(canDeactivate))),(0,map.T)((guardsResult=>({...t,guardsResult}))))}))}function runCanLoadGuards(injector,route,segments,urlSerializer){const canLoad=route.canLoad;if(void 0===canLoad||0===canLoad.length)return(0,of.of)(!0);const canLoadObservables=canLoad.map((injectionToken=>{const guard=getTokenOrFunctionIdentity(injectionToken,injector);return wrapIntoObservable(function isCanLoad(guard){return guard&&router_isFunction(guard.canLoad)}(guard)?guard.canLoad(route,segments):(0,core.runInInjectionContext)(injector,(()=>guard(route,segments))))}));return(0,of.of)(canLoadObservables).pipe(prioritizedGuardValue(),redirectIfUrlTree(urlSerializer))}function redirectIfUrlTree(urlSerializer){return(0,pipe.F)((0,tap.M)((result=>{if("boolean"!=typeof result)throw redirectingNavigationError(urlSerializer,result)})),(0,map.T)((result=>!0===result)))}function runCanMatchGuards(injector,route,segments,urlSerializer){const canMatch=route.canMatch;if(!canMatch||0===canMatch.length)return(0,of.of)(!0);const canMatchObservables=canMatch.map((injectionToken=>{const guard=getTokenOrFunctionIdentity(injectionToken,injector);return wrapIntoObservable(function isCanMatch(guard){return guard&&router_isFunction(guard.canMatch)}(guard)?guard.canMatch(route,segments):(0,core.runInInjectionContext)(injector,(()=>guard(route,segments))))}));return(0,of.of)(canMatchObservables).pipe(prioritizedGuardValue(),redirectIfUrlTree(urlSerializer))}class NoMatch{constructor(segmentGroup){this.segmentGroup=segmentGroup||null}}class AbsoluteRedirect extends Error{constructor(urlTree){super(),this.urlTree=urlTree}}function noMatch$1(segmentGroup){return throwError_throwError(new NoMatch(segmentGroup))}class ApplyRedirects{constructor(urlSerializer,urlTree){this.urlSerializer=urlSerializer,this.urlTree=urlTree}lineralizeSegments(route,urlTree){let res=[],c=urlTree.root;for(;;){if(res=res.concat(c.segments),0===c.numberOfChildren)return(0,of.of)(res);if(c.numberOfChildren>1||!c.children[PRIMARY_OUTLET])return redirectTo=`${route.redirectTo}`,throwError_throwError(new core["ɵRuntimeError"](4e3,("undefined"==typeof ngDevMode||ngDevMode)&&`Only absolute redirects can have named outlets. redirectTo: '${redirectTo}'`));c=c.children[PRIMARY_OUTLET]}var redirectTo}applyRedirectCommands(segments,redirectTo,posParams,currentSnapshot,injector){if("string"!=typeof redirectTo){const redirectToFn=redirectTo,{queryParams,fragment,routeConfig,url,outlet,params,data,title}=currentSnapshot,newRedirect=(0,core.runInInjectionContext)(injector,(()=>redirectToFn({params,data,queryParams,fragment,routeConfig,url,outlet,title})));if(newRedirect instanceof UrlTree)throw new AbsoluteRedirect(newRedirect);redirectTo=newRedirect}const newTree=this.applyRedirectCreateUrlTree(redirectTo,this.urlSerializer.parse(redirectTo),segments,posParams);if("/"===redirectTo[0])throw new AbsoluteRedirect(newTree);return newTree}applyRedirectCreateUrlTree(redirectTo,urlTree,segments,posParams){const newRoot=this.createSegmentGroup(redirectTo,urlTree.root,segments,posParams);return new UrlTree(newRoot,this.createQueryParams(urlTree.queryParams,this.urlTree.queryParams),urlTree.fragment)}createQueryParams(redirectToParams,actualParams){const res={};return Object.entries(redirectToParams).forEach((([k,v])=>{if("string"==typeof v&&":"===v[0]){const sourceName=v.substring(1);res[k]=actualParams[sourceName]}else res[k]=v})),res}createSegmentGroup(redirectTo,group,segments,posParams){const updatedSegments=this.createSegments(redirectTo,group.segments,segments,posParams);let children={};return Object.entries(group.children).forEach((([name,child])=>{children[name]=this.createSegmentGroup(redirectTo,child,segments,posParams)})),new UrlSegmentGroup(updatedSegments,children)}createSegments(redirectTo,redirectToSegments,actualSegments,posParams){return redirectToSegments.map((s=>":"===s.path[0]?this.findPosParam(redirectTo,s,posParams):this.findOrReturn(s,actualSegments)))}findPosParam(redirectTo,redirectToUrlSegment,posParams){const pos=posParams[redirectToUrlSegment.path.substring(1)];if(!pos)throw new core["ɵRuntimeError"](4001,("undefined"==typeof ngDevMode||ngDevMode)&&`Cannot redirect to '${redirectTo}'. Cannot find '${redirectToUrlSegment.path}'.`);return pos}findOrReturn(redirectToUrlSegment,actualSegments){let idx=0;for(const s of actualSegments){if(s.path===redirectToUrlSegment.path)return actualSegments.splice(idx),s;idx++}return redirectToUrlSegment}}const noMatch={matched:!1,consumedSegments:[],remainingSegments:[],parameters:{},positionalParamSegments:{}};function matchWithChecks(segmentGroup,route,segments,injector,urlSerializer){const result=match(segmentGroup,route,segments);return result.matched?(injector=function getOrCreateRouteInjectorIfNeeded(route,currentInjector){return route.providers&&!route._injector&&(route._injector=(0,core.createEnvironmentInjector)(route.providers,currentInjector,`Route: ${route.path}`)),route._injector??currentInjector}(route,injector),runCanMatchGuards(injector,route,segments,urlSerializer).pipe((0,map.T)((v=>!0===v?result:{...noMatch})))):(0,of.of)(result)}function match(segmentGroup,route,segments){if("**"===route.path)return function createWildcardMatchResult(segments){return{matched:!0,parameters:segments.length>0?router_last(segments).parameters:{},consumedSegments:segments,remainingSegments:[],positionalParamSegments:{}}}(segments);if(""===route.path)return"full"===route.pathMatch&&(segmentGroup.hasChildren()||segments.length>0)?{...noMatch}:{matched:!0,consumedSegments:[],remainingSegments:segments,parameters:{},positionalParamSegments:{}};const res=(route.matcher||defaultUrlMatcher)(segments,segmentGroup,route);if(!res)return{...noMatch};const posParams={};Object.entries(res.posParams??{}).forEach((([k,v])=>{posParams[k]=v.path}));const parameters=res.consumed.length>0?{...posParams,...res.consumed[res.consumed.length-1].parameters}:posParams;return{matched:!0,consumedSegments:res.consumed,remainingSegments:segments.slice(res.consumed.length),parameters,positionalParamSegments:res.posParams??{}}}function split(segmentGroup,consumedSegments,slicedSegments,config){if(slicedSegments.length>0&&function containsEmptyPathMatchesWithNamedOutlets(segmentGroup,slicedSegments,routes){return routes.some((r=>emptyPathMatch(segmentGroup,slicedSegments,r)&&getOutlet(r)!==PRIMARY_OUTLET))}(segmentGroup,slicedSegments,config)){return{segmentGroup:new UrlSegmentGroup(consumedSegments,function createChildrenForEmptyPaths(routes,primarySegment){const res={};res[PRIMARY_OUTLET]=primarySegment;for(const r of routes)if(""===r.path&&getOutlet(r)!==PRIMARY_OUTLET){const s=new UrlSegmentGroup([],{});res[getOutlet(r)]=s}return res}(config,new UrlSegmentGroup(slicedSegments,segmentGroup.children))),slicedSegments:[]}}if(0===slicedSegments.length&&function containsEmptyPathMatches(segmentGroup,slicedSegments,routes){return routes.some((r=>emptyPathMatch(segmentGroup,slicedSegments,r)))}(segmentGroup,slicedSegments,config)){const s=new UrlSegmentGroup(segmentGroup.segments,function addEmptyPathsToChildrenIfNeeded(segmentGroup,slicedSegments,routes,children){const res={};for(const r of routes)if(emptyPathMatch(segmentGroup,slicedSegments,r)&&!children[getOutlet(r)]){const s=new UrlSegmentGroup([],{});res[getOutlet(r)]=s}return{...children,...res}}(segmentGroup,slicedSegments,config,segmentGroup.children));return{segmentGroup:s,slicedSegments}}return{segmentGroup:new UrlSegmentGroup(segmentGroup.segments,segmentGroup.children),slicedSegments}}function emptyPathMatch(segmentGroup,slicedSegments,r){return(!(segmentGroup.hasChildren()||slicedSegments.length>0)||"full"!==r.pathMatch)&&""===r.path}class NoLeftoversInUrl{}class Recognizer{constructor(injector,configLoader,rootComponentType,config,urlTree,paramsInheritanceStrategy,urlSerializer){this.injector=injector,this.configLoader=configLoader,this.rootComponentType=rootComponentType,this.config=config,this.urlTree=urlTree,this.paramsInheritanceStrategy=paramsInheritanceStrategy,this.urlSerializer=urlSerializer,this.applyRedirects=new ApplyRedirects(this.urlSerializer,this.urlTree),this.absoluteRedirectCount=0,this.allowRedirects=!0}noMatchError(e){return new core["ɵRuntimeError"](4002,"undefined"==typeof ngDevMode||ngDevMode?`Cannot match any routes. URL Segment: '${e.segmentGroup}'`:`'${e.segmentGroup}'`)}recognize(){const rootSegmentGroup=split(this.urlTree.root,[],[],this.config).segmentGroup;return this.match(rootSegmentGroup).pipe((0,map.T)((({children,rootSnapshot})=>{const rootNode=new TreeNode(rootSnapshot,children),routeState=new RouterStateSnapshot("",rootNode),tree=function createUrlTreeFromSnapshot(relativeTo,commands,queryParams=null,fragment=null){return createUrlTreeFromSegmentGroup(createSegmentGroupFromRoute(relativeTo),commands,queryParams,fragment)}(rootSnapshot,[],this.urlTree.queryParams,this.urlTree.fragment);return tree.queryParams=this.urlTree.queryParams,routeState.url=this.urlSerializer.serialize(tree),{state:routeState,tree}})))}match(rootSegmentGroup){const rootSnapshot=new ActivatedRouteSnapshot([],Object.freeze({}),Object.freeze({...this.urlTree.queryParams}),this.urlTree.fragment,Object.freeze({}),PRIMARY_OUTLET,this.rootComponentType,null,{});return this.processSegmentGroup(this.injector,this.config,rootSegmentGroup,PRIMARY_OUTLET,rootSnapshot).pipe((0,map.T)((children=>({children,rootSnapshot}))),(0,catchError.W)((e=>{if(e instanceof AbsoluteRedirect)return this.urlTree=e.urlTree,this.match(e.urlTree.root);if(e instanceof NoMatch)throw this.noMatchError(e);throw e})))}processSegmentGroup(injector,config,segmentGroup,outlet,parentRoute){return 0===segmentGroup.segments.length&&segmentGroup.hasChildren()?this.processChildren(injector,config,segmentGroup,parentRoute):this.processSegment(injector,config,segmentGroup,segmentGroup.segments,outlet,!0,parentRoute).pipe((0,map.T)((child=>child instanceof TreeNode?[child]:[])))}processChildren(injector,config,segmentGroup,parentRoute){const childOutlets=[];for(const child of Object.keys(segmentGroup.children))"primary"===child?childOutlets.unshift(child):childOutlets.push(child);return(0,from.H)(childOutlets).pipe((0,concatMap.H)((childOutlet=>{const child=segmentGroup.children[childOutlet],sortedConfig=function sortByMatchingOutlets(routes,outletName){const sortedConfig=routes.filter((r=>getOutlet(r)===outletName));return sortedConfig.push(...routes.filter((r=>getOutlet(r)!==outletName))),sortedConfig}(config,childOutlet);return this.processSegmentGroup(injector,sortedConfig,child,childOutlet,parentRoute)})),scan(((children,outletChildren)=>(children.push(...outletChildren),children))),(0,defaultIfEmpty.U)(null),function last(predicate,defaultValue){var hasDefaultValue=arguments.length>=2;return function(source){return source.pipe(predicate?(0,filter.p)((function(v,i){return predicate(v,i,source)})):identity.D,takeLast(1),hasDefaultValue?(0,defaultIfEmpty.U)(defaultValue):(0,throwIfEmpty.v)((function(){return new EmptyError.G})))}}(),(0,mergeMap.Z)((children=>{if(null===children)return noMatch$1(segmentGroup);const mergedChildren=mergeEmptyPathMatches(children);return("undefined"==typeof ngDevMode||ngDevMode)&&function checkOutletNameUniqueness(nodes){const names={};nodes.forEach((n=>{const routeWithSameOutletName=names[n.value.outlet];if(routeWithSameOutletName){const p=routeWithSameOutletName.url.map((s=>s.toString())).join("/"),c=n.value.url.map((s=>s.toString())).join("/");throw new core["ɵRuntimeError"](4006,("undefined"==typeof ngDevMode||ngDevMode)&&`Two segments cannot have the same outlet name: '${p}' and '${c}'.`)}names[n.value.outlet]=n.value}))}(mergedChildren),function sortActivatedRouteSnapshots(nodes){nodes.sort(((a,b)=>a.value.outlet===PRIMARY_OUTLET?-1:b.value.outlet===PRIMARY_OUTLET?1:a.value.outlet.localeCompare(b.value.outlet)))}(mergedChildren),(0,of.of)(mergedChildren)})))}processSegment(injector,routes,segmentGroup,segments,outlet,allowRedirects,parentRoute){return(0,from.H)(routes).pipe((0,concatMap.H)((r=>this.processSegmentAgainstRoute(r._injector??injector,routes,r,segmentGroup,segments,outlet,allowRedirects,parentRoute).pipe((0,catchError.W)((e=>{if(e instanceof NoMatch)return(0,of.of)(null);throw e}))))),(0,first.$)((x=>!!x)),(0,catchError.W)((e=>{if(isEmptyError(e))return function noLeftoversInUrl(segmentGroup,segments,outlet){return 0===segments.length&&!segmentGroup.children[outlet]}(segmentGroup,segments,outlet)?(0,of.of)(new NoLeftoversInUrl):noMatch$1(segmentGroup);throw e})))}processSegmentAgainstRoute(injector,routes,route,rawSegment,segments,outlet,allowRedirects,parentRoute){return function isImmediateMatch(route,rawSegment,segments,outlet){return!!(getOutlet(route)===outlet||outlet!==PRIMARY_OUTLET&&emptyPathMatch(rawSegment,segments,route))&&match(rawSegment,route,segments).matched}(route,rawSegment,segments,outlet)?void 0===route.redirectTo?this.matchSegmentAgainstRoute(injector,rawSegment,route,segments,outlet,parentRoute):this.allowRedirects&&allowRedirects?this.expandSegmentAgainstRouteUsingRedirect(injector,rawSegment,routes,route,segments,outlet,parentRoute):noMatch$1(rawSegment):noMatch$1(rawSegment)}expandSegmentAgainstRouteUsingRedirect(injector,segmentGroup,routes,route,segments,outlet,parentRoute){const{matched,parameters,consumedSegments,positionalParamSegments,remainingSegments}=match(segmentGroup,route,segments);if(!matched)return noMatch$1(segmentGroup);if("string"==typeof route.redirectTo&&"/"===route.redirectTo[0]&&(this.absoluteRedirectCount++,this.absoluteRedirectCount>31)){if(ngDevMode)throw new core["ɵRuntimeError"](4016,`Detected possible infinite redirect when redirecting from '${this.urlTree}' to '${route.redirectTo}'.\nThis is currently a dev mode only error but will become a call stack size exceeded error in production in a future major version.`);this.allowRedirects=!1}const currentSnapshot=new ActivatedRouteSnapshot(segments,parameters,Object.freeze({...this.urlTree.queryParams}),this.urlTree.fragment,getData(route),getOutlet(route),route.component??route._loadedComponent??null,route,getResolve(route)),inherited=getInherited(currentSnapshot,parentRoute,this.paramsInheritanceStrategy);currentSnapshot.params=Object.freeze(inherited.params),currentSnapshot.data=Object.freeze(inherited.data);const newTree=this.applyRedirects.applyRedirectCommands(consumedSegments,route.redirectTo,positionalParamSegments,currentSnapshot,injector);return this.applyRedirects.lineralizeSegments(route,newTree).pipe((0,mergeMap.Z)((newSegments=>this.processSegment(injector,routes,segmentGroup,newSegments.concat(remainingSegments),outlet,!1,parentRoute))))}matchSegmentAgainstRoute(injector,rawSegment,route,segments,outlet,parentRoute){const matchResult=matchWithChecks(rawSegment,route,segments,injector,this.urlSerializer);return"**"===route.path&&(rawSegment.children={}),matchResult.pipe((0,switchMap.n)((result=>result.matched?(injector=route._injector??injector,this.getChildConfig(injector,route,segments).pipe((0,switchMap.n)((({routes:childConfig})=>{const childInjector=route._loadedInjector??injector,{parameters,consumedSegments,remainingSegments}=result,snapshot=new ActivatedRouteSnapshot(consumedSegments,parameters,Object.freeze({...this.urlTree.queryParams}),this.urlTree.fragment,getData(route),getOutlet(route),route.component??route._loadedComponent??null,route,getResolve(route)),inherited=getInherited(snapshot,parentRoute,this.paramsInheritanceStrategy);snapshot.params=Object.freeze(inherited.params),snapshot.data=Object.freeze(inherited.data);const{segmentGroup,slicedSegments}=split(rawSegment,consumedSegments,remainingSegments,childConfig);if(0===slicedSegments.length&&segmentGroup.hasChildren())return this.processChildren(childInjector,childConfig,segmentGroup,snapshot).pipe((0,map.T)((children=>new TreeNode(snapshot,children))));if(0===childConfig.length&&0===slicedSegments.length)return(0,of.of)(new TreeNode(snapshot,[]));const matchedOnOutlet=getOutlet(route)===outlet;return this.processSegment(childInjector,childConfig,segmentGroup,slicedSegments,matchedOnOutlet?PRIMARY_OUTLET:outlet,!0,snapshot).pipe((0,map.T)((child=>new TreeNode(snapshot,child instanceof TreeNode?[child]:[]))))})))):noMatch$1(rawSegment))))}getChildConfig(injector,route,segments){return route.children?(0,of.of)({routes:route.children,injector}):route.loadChildren?void 0!==route._loadedRoutes?(0,of.of)({routes:route._loadedRoutes,injector:route._loadedInjector}):runCanLoadGuards(injector,route,segments,this.urlSerializer).pipe((0,mergeMap.Z)((shouldLoadResult=>shouldLoadResult?this.configLoader.loadChildren(injector,route).pipe((0,tap.M)((cfg=>{route._loadedRoutes=cfg.routes,route._loadedInjector=cfg.injector}))):function canLoadFails(route){return throwError_throwError(navigationCancelingError(("undefined"==typeof ngDevMode||ngDevMode)&&`Cannot load children because the guard of the route "path: '${route.path}'" returned false`,NavigationCancellationCode.GuardRejected))}(route)))):(0,of.of)({routes:[],injector})}}function hasEmptyPathConfig(node){const config=node.value.routeConfig;return config&&""===config.path}function mergeEmptyPathMatches(nodes){const result=[],mergedNodes=new Set;for(const node of nodes){if(!hasEmptyPathConfig(node)){result.push(node);continue}const duplicateEmptyPathNode=result.find((resultNode=>node.value.routeConfig===resultNode.value.routeConfig));void 0!==duplicateEmptyPathNode?(duplicateEmptyPathNode.children.push(...node.children),mergedNodes.add(duplicateEmptyPathNode)):result.push(node)}for(const mergedNode of mergedNodes){const mergedChildren=mergeEmptyPathMatches(mergedNode.children);result.push(new TreeNode(mergedNode.value,mergedChildren))}return result.filter((n=>!mergedNodes.has(n)))}function getData(route){return route.data||{}}function getResolve(route){return route.resolve||{}}function recognize(injector,configLoader,rootComponentType,config,serializer,paramsInheritanceStrategy){return(0,mergeMap.Z)((t=>function recognize$1(injector,configLoader,rootComponentType,config,urlTree,urlSerializer,paramsInheritanceStrategy="emptyOnly"){return new Recognizer(injector,configLoader,rootComponentType,config,urlTree,paramsInheritanceStrategy,urlSerializer).recognize()}(injector,configLoader,rootComponentType,config,t.extractedUrl,serializer,paramsInheritanceStrategy).pipe((0,map.T)((({state:targetSnapshot,tree:urlAfterRedirects})=>({...t,targetSnapshot,urlAfterRedirects}))))))}function resolveData(paramsInheritanceStrategy,injector){return(0,mergeMap.Z)((t=>{const{targetSnapshot,guards:{canActivateChecks}}=t;if(!canActivateChecks.length)return(0,of.of)(t);const routesWithResolversToRun=new Set(canActivateChecks.map((check=>check.route))),routesNeedingDataUpdates=new Set;for(const route of routesWithResolversToRun)if(!routesNeedingDataUpdates.has(route))for(const newRoute of flattenRouteTree(route))routesNeedingDataUpdates.add(newRoute);let routesProcessed=0;return(0,from.H)(routesNeedingDataUpdates).pipe((0,concatMap.H)((route=>routesWithResolversToRun.has(route)?function runResolve(futureARS,futureRSS,paramsInheritanceStrategy,injector){const config=futureARS.routeConfig,resolve=futureARS._resolve;void 0===config?.title||hasStaticTitle(config)||(resolve[RouteTitleKey]=config.title);return function resolveNode(resolve,futureARS,futureRSS,injector){const keys=getDataKeys(resolve);if(0===keys.length)return(0,of.of)({});const data={};return(0,from.H)(keys).pipe((0,mergeMap.Z)((key=>function getResolver(injectionToken,futureARS,futureRSS,injector){const closestInjector=getClosestRouteInjector(futureARS)??injector,resolver=getTokenOrFunctionIdentity(injectionToken,closestInjector),resolverValue=resolver.resolve?resolver.resolve(futureARS,futureRSS):(0,core.runInInjectionContext)(closestInjector,(()=>resolver(futureARS,futureRSS)));return wrapIntoObservable(resolverValue)}(resolve[key],futureARS,futureRSS,injector).pipe((0,first.$)(),(0,tap.M)((value=>{if(value instanceof RedirectCommand)throw redirectingNavigationError(new DefaultUrlSerializer,value);data[key]=value}))))),takeLast(1),function mapTo(value){return(0,map.T)((function(){return value}))}(data),(0,catchError.W)((e=>isEmptyError(e)?empty.w:throwError_throwError(e))))}(resolve,futureARS,futureRSS,injector).pipe((0,map.T)((resolvedData=>(futureARS._resolvedData=resolvedData,futureARS.data=getInherited(futureARS,futureARS.parent,paramsInheritanceStrategy).resolve,null))))}(route,targetSnapshot,paramsInheritanceStrategy,injector):(route.data=getInherited(route,route.parent,paramsInheritanceStrategy).resolve,(0,of.of)(void 0)))),(0,tap.M)((()=>routesProcessed++)),takeLast(1),(0,mergeMap.Z)((_=>routesProcessed===routesNeedingDataUpdates.size?(0,of.of)(t):empty.w)))}))}function flattenRouteTree(route){const descendants=route.children.map((child=>flattenRouteTree(child))).flat();return[route,...descendants]}function switchTap(next){return(0,switchMap.n)((v=>{const nextResult=next(v);return nextResult?(0,from.H)(nextResult).pipe((0,map.T)((()=>v))):(0,of.of)(v)}))}class TitleStrategy{buildTitle(snapshot){let pageTitle,route=snapshot.root;for(;void 0!==route;)pageTitle=this.getResolvedTitleForRoute(route)??pageTitle,route=route.children.find((child=>child.outlet===PRIMARY_OUTLET));return pageTitle}getResolvedTitleForRoute(snapshot){return snapshot.data[RouteTitleKey]}static#_=this.ɵfac=function TitleStrategy_Factory(__ngFactoryType__){return new(__ngFactoryType__||TitleStrategy)};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:TitleStrategy,factory:()=>(0,core.inject)(DefaultTitleStrategy),providedIn:"root"})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](TitleStrategy,[{type:core.Injectable,args:[{providedIn:"root",useFactory:()=>(0,core.inject)(DefaultTitleStrategy)}]}],null,null);class DefaultTitleStrategy extends TitleStrategy{constructor(title){super(),this.title=title}updateTitle(snapshot){const title=this.buildTitle(snapshot);void 0!==title&&this.title.setTitle(title)}static#_=this.ɵfac=function DefaultTitleStrategy_Factory(__ngFactoryType__){return new(__ngFactoryType__||DefaultTitleStrategy)(core["ɵɵinject"](platform_browser.Title))};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:DefaultTitleStrategy,factory:DefaultTitleStrategy.ɵfac,providedIn:"root"})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](DefaultTitleStrategy,[{type:core.Injectable,args:[{providedIn:"root"}]}],(()=>[{type:platform_browser.Title}]),null);const ROUTER_CONFIGURATION=new core.InjectionToken("undefined"==typeof ngDevMode||ngDevMode?"router config":"",{providedIn:"root",factory:()=>({})});class ɵEmptyOutletComponent{static#_=this.ɵfac=function ɵEmptyOutletComponent_Factory(__ngFactoryType__){return new(__ngFactoryType__||ɵEmptyOutletComponent)};static#_2=this.ɵcmp=core["ɵɵdefineComponent"]({type:ɵEmptyOutletComponent,selectors:[["ng-component"]],standalone:!0,features:[core["ɵɵStandaloneFeature"]],decls:1,vars:0,template:function _EmptyOutletComponent_Template(rf,ctx){1&rf&&core["ɵɵelement"](0,"router-outlet")},dependencies:[RouterOutlet],encapsulation:2})}function standardizeConfig(r){const children=r.children&&r.children.map(standardizeConfig),c=children?{...r,children}:{...r};return c.component||c.loadComponent||!children&&!c.loadChildren||!c.outlet||c.outlet===PRIMARY_OUTLET||(c.component=ɵEmptyOutletComponent),c}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](ɵEmptyOutletComponent,[{type:core.Component,args:[{template:"<router-outlet></router-outlet>",imports:[RouterOutlet],standalone:!0}]}],null,null);const ROUTES=new core.InjectionToken(ngDevMode?"ROUTES":"");class RouterConfigLoader{constructor(){this.componentLoaders=new WeakMap,this.childrenLoaders=new WeakMap,this.compiler=(0,core.inject)(core.Compiler)}loadComponent(route){if(this.componentLoaders.get(route))return this.componentLoaders.get(route);if(route._loadedComponent)return(0,of.of)(route._loadedComponent);this.onLoadStartListener&&this.onLoadStartListener(route);const loadRunner=wrapIntoObservable(route.loadComponent()).pipe((0,map.T)(maybeUnwrapDefaultExport),(0,tap.M)((component=>{this.onLoadEndListener&&this.onLoadEndListener(route),("undefined"==typeof ngDevMode||ngDevMode)&&assertStandalone(route.path??"",component),route._loadedComponent=component})),(0,finalize.j)((()=>{this.componentLoaders.delete(route)}))),loader=new ConnectableObservable.G(loadRunner,(()=>new Subject.B)).pipe((0,refCount.B)());return this.componentLoaders.set(route,loader),loader}loadChildren(parentInjector,route){if(this.childrenLoaders.get(route))return this.childrenLoaders.get(route);if(route._loadedRoutes)return(0,of.of)({routes:route._loadedRoutes,injector:route._loadedInjector});this.onLoadStartListener&&this.onLoadStartListener(route);const moduleFactoryOrRoutes$=function loadChildren(route,compiler,parentInjector,onLoadEndListener){return wrapIntoObservable(route.loadChildren()).pipe((0,map.T)(maybeUnwrapDefaultExport),(0,mergeMap.Z)((t=>t instanceof core.NgModuleFactory||Array.isArray(t)?(0,of.of)(t):(0,from.H)(compiler.compileModuleAsync(t)))),(0,map.T)((factoryOrRoutes=>{let injector,rawRoutes;onLoadEndListener&&onLoadEndListener(route);let requireStandaloneComponents=!1;Array.isArray(factoryOrRoutes)?(rawRoutes=factoryOrRoutes,requireStandaloneComponents=!0):(injector=factoryOrRoutes.create(parentInjector).injector,rawRoutes=injector.get(ROUTES,[],{optional:!0,self:!0}).flat());const routes=rawRoutes.map(standardizeConfig);return("undefined"==typeof ngDevMode||ngDevMode)&&validateConfig(routes,route.path,requireStandaloneComponents),{routes,injector}})))}(route,this.compiler,parentInjector,this.onLoadEndListener),loadRunner=moduleFactoryOrRoutes$.pipe((0,finalize.j)((()=>{this.childrenLoaders.delete(route)}))),loader=new ConnectableObservable.G(loadRunner,(()=>new Subject.B)).pipe((0,refCount.B)());return this.childrenLoaders.set(route,loader),loader}static#_=this.ɵfac=function RouterConfigLoader_Factory(__ngFactoryType__){return new(__ngFactoryType__||RouterConfigLoader)};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:RouterConfigLoader,factory:RouterConfigLoader.ɵfac,providedIn:"root"})}function maybeUnwrapDefaultExport(input){return function isWrappedDefaultExport(value){return value&&"object"==typeof value&&"default"in value}(input)?input.default:input}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](RouterConfigLoader,[{type:core.Injectable,args:[{providedIn:"root"}]}],null,null);class UrlHandlingStrategy{static#_=this.ɵfac=function UrlHandlingStrategy_Factory(__ngFactoryType__){return new(__ngFactoryType__||UrlHandlingStrategy)};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:UrlHandlingStrategy,factory:()=>(0,core.inject)(DefaultUrlHandlingStrategy),providedIn:"root"})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](UrlHandlingStrategy,[{type:core.Injectable,args:[{providedIn:"root",useFactory:()=>(0,core.inject)(DefaultUrlHandlingStrategy)}]}],null,null);class DefaultUrlHandlingStrategy{shouldProcessUrl(url){return!0}extract(url){return url}merge(newUrlPart,wholeUrl){return newUrlPart}static#_=this.ɵfac=function DefaultUrlHandlingStrategy_Factory(__ngFactoryType__){return new(__ngFactoryType__||DefaultUrlHandlingStrategy)};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:DefaultUrlHandlingStrategy,factory:DefaultUrlHandlingStrategy.ɵfac,providedIn:"root"})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](DefaultUrlHandlingStrategy,[{type:core.Injectable,args:[{providedIn:"root"}]}],null,null);const CREATE_VIEW_TRANSITION=new core.InjectionToken(ngDevMode?"view transition helper":""),VIEW_TRANSITION_OPTIONS=new core.InjectionToken(ngDevMode?"view transition options":"");function createViewTransition(injector,from,to){const transitionOptions=injector.get(VIEW_TRANSITION_OPTIONS),document=injector.get(common.DOCUMENT);return injector.get(core.NgZone).runOutsideAngular((()=>{if(!document.startViewTransition||transitionOptions.skipNextTransition)return transitionOptions.skipNextTransition=!1,new Promise((resolve=>setTimeout(resolve)));let resolveViewTransitionStarted;const viewTransitionStarted=new Promise((resolve=>{resolveViewTransitionStarted=resolve})),transition=document.startViewTransition((()=>(resolveViewTransitionStarted(),function createRenderPromise(injector){return new Promise((resolve=>{(0,core.afterNextRender)({read:()=>setTimeout(resolve)},{injector})}))}(injector)))),{onViewTransitionCreated}=transitionOptions;return onViewTransitionCreated&&(0,core.runInInjectionContext)(injector,(()=>onViewTransitionCreated({transition,from,to}))),viewTransitionStarted}))}const NAVIGATION_ERROR_HANDLER=new core.InjectionToken("undefined"==typeof ngDevMode||ngDevMode?"navigation error handler":"");class NavigationTransitions{get hasRequestedNavigation(){return 0!==this.navigationId}constructor(){this.currentNavigation=null,this.currentTransition=null,this.lastSuccessfulNavigation=null,this.events=new Subject.B,this.transitionAbortSubject=new Subject.B,this.configLoader=(0,core.inject)(RouterConfigLoader),this.environmentInjector=(0,core.inject)(core.EnvironmentInjector),this.urlSerializer=(0,core.inject)(UrlSerializer),this.rootContexts=(0,core.inject)(ChildrenOutletContexts),this.location=(0,core.inject)(common.Location),this.inputBindingEnabled=null!==(0,core.inject)(INPUT_BINDER,{optional:!0}),this.titleStrategy=(0,core.inject)(TitleStrategy),this.options=(0,core.inject)(ROUTER_CONFIGURATION,{optional:!0})||{},this.paramsInheritanceStrategy=this.options.paramsInheritanceStrategy||"emptyOnly",this.urlHandlingStrategy=(0,core.inject)(UrlHandlingStrategy),this.createViewTransition=(0,core.inject)(CREATE_VIEW_TRANSITION,{optional:!0}),this.navigationErrorHandler=(0,core.inject)(NAVIGATION_ERROR_HANDLER,{optional:!0}),this.navigationId=0,this.afterPreactivation=()=>(0,of.of)(void 0),this.rootComponentType=null;this.configLoader.onLoadEndListener=r=>this.events.next(new RouteConfigLoadEnd(r)),this.configLoader.onLoadStartListener=r=>this.events.next(new RouteConfigLoadStart(r))}complete(){this.transitions?.complete()}handleNavigationRequest(request){const id=++this.navigationId;this.transitions?.next({...this.transitions.value,...request,id})}setupNavigations(router,initialUrlTree,initialRouterState){return this.transitions=new BehaviorSubject.t({id:0,currentUrlTree:initialUrlTree,currentRawUrl:initialUrlTree,extractedUrl:this.urlHandlingStrategy.extract(initialUrlTree),urlAfterRedirects:this.urlHandlingStrategy.extract(initialUrlTree),rawUrl:initialUrlTree,extras:{},resolve:()=>{},reject:()=>{},promise:Promise.resolve(!0),source:"imperative",restoredState:null,currentSnapshot:initialRouterState.snapshot,targetSnapshot:null,currentRouterState:initialRouterState,targetRouterState:null,guards:{canActivateChecks:[],canDeactivateChecks:[]},guardsResult:null}),this.transitions.pipe((0,filter.p)((t=>0!==t.id)),(0,map.T)((t=>({...t,extractedUrl:this.urlHandlingStrategy.extract(t.rawUrl)}))),(0,switchMap.n)((overallTransitionState=>{let completed=!1,errored=!1;return(0,of.of)(overallTransitionState).pipe((0,switchMap.n)((t=>{if(this.navigationId>overallTransitionState.id){const cancellationReason="undefined"==typeof ngDevMode||ngDevMode?`Navigation ID ${overallTransitionState.id} is not equal to the current navigation id ${this.navigationId}`:"";return this.cancelNavigationTransition(overallTransitionState,cancellationReason,NavigationCancellationCode.SupersededByNewNavigation),empty.w}this.currentTransition=overallTransitionState,this.currentNavigation={id:t.id,initialUrl:t.rawUrl,extractedUrl:t.extractedUrl,targetBrowserUrl:"string"==typeof t.extras.browserUrl?this.urlSerializer.parse(t.extras.browserUrl):t.extras.browserUrl,trigger:t.source,extras:t.extras,previousNavigation:this.lastSuccessfulNavigation?{...this.lastSuccessfulNavigation,previousNavigation:null}:null};const urlTransition=!router.navigated||this.isUpdatingInternalState()||this.isUpdatedBrowserUrl(),onSameUrlNavigation=t.extras.onSameUrlNavigation??router.onSameUrlNavigation;if(!urlTransition&&"reload"!==onSameUrlNavigation){const reason="undefined"==typeof ngDevMode||ngDevMode?`Navigation to ${t.rawUrl} was ignored because it is the same as the current Router URL.`:"";return this.events.next(new NavigationSkipped(t.id,this.urlSerializer.serialize(t.rawUrl),reason,NavigationSkippedCode.IgnoredSameUrlNavigation)),t.resolve(!1),empty.w}if(this.urlHandlingStrategy.shouldProcessUrl(t.rawUrl))return(0,of.of)(t).pipe((0,switchMap.n)((t=>{const transition=this.transitions?.getValue();return this.events.next(new NavigationStart(t.id,this.urlSerializer.serialize(t.extractedUrl),t.source,t.restoredState)),transition!==this.transitions?.getValue()?empty.w:Promise.resolve(t)})),recognize(this.environmentInjector,this.configLoader,this.rootComponentType,router.config,this.urlSerializer,this.paramsInheritanceStrategy),(0,tap.M)((t=>{overallTransitionState.targetSnapshot=t.targetSnapshot,overallTransitionState.urlAfterRedirects=t.urlAfterRedirects,this.currentNavigation={...this.currentNavigation,finalUrl:t.urlAfterRedirects};const routesRecognized=new RoutesRecognized(t.id,this.urlSerializer.serialize(t.extractedUrl),this.urlSerializer.serialize(t.urlAfterRedirects),t.targetSnapshot);this.events.next(routesRecognized)})));if(urlTransition&&this.urlHandlingStrategy.shouldProcessUrl(t.currentRawUrl)){const{id,extractedUrl,source,restoredState,extras}=t,navStart=new NavigationStart(id,this.urlSerializer.serialize(extractedUrl),source,restoredState);this.events.next(navStart);const targetSnapshot=createEmptyState(this.rootComponentType).snapshot;return this.currentTransition=overallTransitionState={...t,targetSnapshot,urlAfterRedirects:extractedUrl,extras:{...extras,skipLocationChange:!1,replaceUrl:!1}},this.currentNavigation.finalUrl=extractedUrl,(0,of.of)(overallTransitionState)}{const reason="undefined"==typeof ngDevMode||ngDevMode?`Navigation was ignored because the UrlHandlingStrategy indicated neither the current URL ${t.currentRawUrl} nor target URL ${t.rawUrl} should be processed.`:"";return this.events.next(new NavigationSkipped(t.id,this.urlSerializer.serialize(t.extractedUrl),reason,NavigationSkippedCode.IgnoredByUrlHandlingStrategy)),t.resolve(!1),empty.w}})),(0,tap.M)((t=>{const guardsStart=new GuardsCheckStart(t.id,this.urlSerializer.serialize(t.extractedUrl),this.urlSerializer.serialize(t.urlAfterRedirects),t.targetSnapshot);this.events.next(guardsStart)})),(0,map.T)((t=>(this.currentTransition=overallTransitionState={...t,guards:getAllRouteGuards(t.targetSnapshot,t.currentSnapshot,this.rootContexts)},overallTransitionState))),checkGuards(this.environmentInjector,(evt=>this.events.next(evt))),(0,tap.M)((t=>{if(overallTransitionState.guardsResult=t.guardsResult,t.guardsResult&&"boolean"!=typeof t.guardsResult)throw redirectingNavigationError(this.urlSerializer,t.guardsResult);const guardsEnd=new GuardsCheckEnd(t.id,this.urlSerializer.serialize(t.extractedUrl),this.urlSerializer.serialize(t.urlAfterRedirects),t.targetSnapshot,!!t.guardsResult);this.events.next(guardsEnd)})),(0,filter.p)((t=>!!t.guardsResult||(this.cancelNavigationTransition(t,"",NavigationCancellationCode.GuardRejected),!1))),switchTap((t=>{if(t.guards.canActivateChecks.length)return(0,of.of)(t).pipe((0,tap.M)((t=>{const resolveStart=new ResolveStart(t.id,this.urlSerializer.serialize(t.extractedUrl),this.urlSerializer.serialize(t.urlAfterRedirects),t.targetSnapshot);this.events.next(resolveStart)})),(0,switchMap.n)((t=>{let dataResolved=!1;return(0,of.of)(t).pipe(resolveData(this.paramsInheritanceStrategy,this.environmentInjector),(0,tap.M)({next:()=>dataResolved=!0,complete:()=>{dataResolved||this.cancelNavigationTransition(t,"undefined"==typeof ngDevMode||ngDevMode?"At least one route resolver didn't emit any value.":"",NavigationCancellationCode.NoDataFromResolver)}}))})),(0,tap.M)((t=>{const resolveEnd=new ResolveEnd(t.id,this.urlSerializer.serialize(t.extractedUrl),this.urlSerializer.serialize(t.urlAfterRedirects),t.targetSnapshot);this.events.next(resolveEnd)})))})),switchTap((t=>{const loadComponents=route=>{const loaders=[];route.routeConfig?.loadComponent&&!route.routeConfig._loadedComponent&&loaders.push(this.configLoader.loadComponent(route.routeConfig).pipe((0,tap.M)((loadedComponent=>{route.component=loadedComponent})),(0,map.T)((()=>{}))));for(const child of route.children)loaders.push(...loadComponents(child));return loaders};return(0,combineLatest.z)(loadComponents(t.targetSnapshot.root)).pipe((0,defaultIfEmpty.U)(null),(0,take.s)(1))})),switchTap((()=>this.afterPreactivation())),(0,switchMap.n)((()=>{const{currentSnapshot,targetSnapshot}=overallTransitionState,viewTransitionStarted=this.createViewTransition?.(this.environmentInjector,currentSnapshot.root,targetSnapshot.root);return viewTransitionStarted?(0,from.H)(viewTransitionStarted).pipe((0,map.T)((()=>overallTransitionState))):(0,of.of)(overallTransitionState)})),(0,map.T)((t=>{const targetRouterState=function createRouterState(routeReuseStrategy,curr,prevState){const root=createNode(routeReuseStrategy,curr._root,prevState?prevState._root:void 0);return new RouterState(root,curr)}(router.routeReuseStrategy,t.targetSnapshot,t.currentRouterState);return this.currentTransition=overallTransitionState={...t,targetRouterState},this.currentNavigation.targetRouterState=targetRouterState,overallTransitionState})),(0,tap.M)((()=>{this.events.next(new BeforeActivateRoutes)})),(rootContexts=this.rootContexts,routeReuseStrategy=router.routeReuseStrategy,forwardEvent=evt=>this.events.next(evt),inputBindingEnabled=this.inputBindingEnabled,(0,map.T)((t=>(new ActivateRoutes(routeReuseStrategy,t.targetRouterState,t.currentRouterState,forwardEvent,inputBindingEnabled).activate(rootContexts),t)))),(0,take.s)(1),(0,tap.M)({next:t=>{completed=!0,this.lastSuccessfulNavigation=this.currentNavigation,this.events.next(new NavigationEnd(t.id,this.urlSerializer.serialize(t.extractedUrl),this.urlSerializer.serialize(t.urlAfterRedirects))),this.titleStrategy?.updateTitle(t.targetRouterState.snapshot),t.resolve(!0)},complete:()=>{completed=!0}}),(0,takeUntil.Q)(this.transitionAbortSubject.pipe((0,tap.M)((err=>{throw err})))),(0,finalize.j)((()=>{if(!completed&&!errored){const cancelationReason="undefined"==typeof ngDevMode||ngDevMode?`Navigation ID ${overallTransitionState.id} is not equal to the current navigation id ${this.navigationId}`:"";this.cancelNavigationTransition(overallTransitionState,cancelationReason,NavigationCancellationCode.SupersededByNewNavigation)}this.currentTransition?.id===overallTransitionState.id&&(this.currentNavigation=null,this.currentTransition=null)})),(0,catchError.W)((e=>{if(errored=!0,isNavigationCancelingError(e))this.events.next(new NavigationCancel(overallTransitionState.id,this.urlSerializer.serialize(overallTransitionState.extractedUrl),e.message,e.cancellationCode)),!function isRedirectingNavigationCancelingError(error){return isNavigationCancelingError(error)&&isUrlTree(error.url)}(e)?overallTransitionState.resolve(!1):this.events.next(new RedirectRequest(e.url,e.navigationBehaviorOptions));else{const navigationError=new NavigationError(overallTransitionState.id,this.urlSerializer.serialize(overallTransitionState.extractedUrl),e,overallTransitionState.targetSnapshot??void 0);try{const navigationErrorHandlerResult=(0,core.runInInjectionContext)(this.environmentInjector,(()=>this.navigationErrorHandler?.(navigationError)));if(navigationErrorHandlerResult instanceof RedirectCommand){const{message,cancellationCode}=redirectingNavigationError(this.urlSerializer,navigationErrorHandlerResult);this.events.next(new NavigationCancel(overallTransitionState.id,this.urlSerializer.serialize(overallTransitionState.extractedUrl),message,cancellationCode)),this.events.next(new RedirectRequest(navigationErrorHandlerResult.redirectTo,navigationErrorHandlerResult.navigationBehaviorOptions))}else{this.events.next(navigationError);const errorHandlerResult=router.errorHandler(e);overallTransitionState.resolve(!!errorHandlerResult)}}catch(ee){this.options.resolveNavigationPromiseOnError?overallTransitionState.resolve(!1):overallTransitionState.reject(ee)}}return empty.w})));var rootContexts,routeReuseStrategy,forwardEvent,inputBindingEnabled})))}cancelNavigationTransition(t,reason,code){const navCancel=new NavigationCancel(t.id,this.urlSerializer.serialize(t.extractedUrl),reason,code);this.events.next(navCancel),t.resolve(!1)}isUpdatingInternalState(){return this.currentTransition?.extractedUrl.toString()!==this.currentTransition?.currentUrlTree.toString()}isUpdatedBrowserUrl(){const currentBrowserUrl=this.urlHandlingStrategy.extract(this.urlSerializer.parse(this.location.path(!0))),targetBrowserUrl=this.currentNavigation?.targetBrowserUrl??this.currentNavigation?.extractedUrl;return currentBrowserUrl.toString()!==targetBrowserUrl?.toString()&&!this.currentNavigation?.extras.skipLocationChange}static#_=this.ɵfac=function NavigationTransitions_Factory(__ngFactoryType__){return new(__ngFactoryType__||NavigationTransitions)};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:NavigationTransitions,factory:NavigationTransitions.ɵfac,providedIn:"root"})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NavigationTransitions,[{type:core.Injectable,args:[{providedIn:"root"}]}],(()=>[]),null);class RouteReuseStrategy{static#_=this.ɵfac=function RouteReuseStrategy_Factory(__ngFactoryType__){return new(__ngFactoryType__||RouteReuseStrategy)};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:RouteReuseStrategy,factory:()=>(0,core.inject)(DefaultRouteReuseStrategy),providedIn:"root"})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](RouteReuseStrategy,[{type:core.Injectable,args:[{providedIn:"root",useFactory:()=>(0,core.inject)(DefaultRouteReuseStrategy)}]}],null,null);class BaseRouteReuseStrategy{shouldDetach(route){return!1}store(route,detachedTree){}shouldAttach(route){return!1}retrieve(route){return null}shouldReuseRoute(future,curr){return future.routeConfig===curr.routeConfig}}class DefaultRouteReuseStrategy extends BaseRouteReuseStrategy{static#_=this.ɵfac=(()=>{let ɵDefaultRouteReuseStrategy_BaseFactory;return function DefaultRouteReuseStrategy_Factory(__ngFactoryType__){return(ɵDefaultRouteReuseStrategy_BaseFactory||(ɵDefaultRouteReuseStrategy_BaseFactory=core["ɵɵgetInheritedFactory"](DefaultRouteReuseStrategy)))(__ngFactoryType__||DefaultRouteReuseStrategy)}})();static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:DefaultRouteReuseStrategy,factory:DefaultRouteReuseStrategy.ɵfac,providedIn:"root"})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](DefaultRouteReuseStrategy,[{type:core.Injectable,args:[{providedIn:"root"}]}],null,null);class StateManager{static#_=this.ɵfac=function StateManager_Factory(__ngFactoryType__){return new(__ngFactoryType__||StateManager)};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:StateManager,factory:()=>(0,core.inject)(HistoryStateManager),providedIn:"root"})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](StateManager,[{type:core.Injectable,args:[{providedIn:"root",useFactory:()=>(0,core.inject)(HistoryStateManager)}]}],null,null);class HistoryStateManager extends StateManager{constructor(){super(...arguments),this.location=(0,core.inject)(common.Location),this.urlSerializer=(0,core.inject)(UrlSerializer),this.options=(0,core.inject)(ROUTER_CONFIGURATION,{optional:!0})||{},this.canceledNavigationResolution=this.options.canceledNavigationResolution||"replace",this.urlHandlingStrategy=(0,core.inject)(UrlHandlingStrategy),this.urlUpdateStrategy=this.options.urlUpdateStrategy||"deferred",this.currentUrlTree=new UrlTree,this.rawUrlTree=this.currentUrlTree,this.currentPageId=0,this.lastSuccessfulId=-1,this.routerState=createEmptyState(null),this.stateMemento=this.createStateMemento()}getCurrentUrlTree(){return this.currentUrlTree}getRawUrlTree(){return this.rawUrlTree}restoredState(){return this.location.getState()}get browserPageId(){return"computed"!==this.canceledNavigationResolution?this.currentPageId:this.restoredState()?.ɵrouterPageId??this.currentPageId}getRouterState(){return this.routerState}createStateMemento(){return{rawUrlTree:this.rawUrlTree,currentUrlTree:this.currentUrlTree,routerState:this.routerState}}registerNonRouterCurrentEntryChangeListener(listener){return this.location.subscribe((event=>{"popstate"===event.type&&listener(event.url,event.state)}))}handleRouterEvent(e,currentTransition){if(e instanceof NavigationStart)this.stateMemento=this.createStateMemento();else if(e instanceof NavigationSkipped)this.rawUrlTree=currentTransition.initialUrl;else if(e instanceof RoutesRecognized){if("eager"===this.urlUpdateStrategy&&!currentTransition.extras.skipLocationChange){const rawUrl=this.urlHandlingStrategy.merge(currentTransition.finalUrl,currentTransition.initialUrl);this.setBrowserUrl(currentTransition.targetBrowserUrl??rawUrl,currentTransition)}}else e instanceof BeforeActivateRoutes?(this.currentUrlTree=currentTransition.finalUrl,this.rawUrlTree=this.urlHandlingStrategy.merge(currentTransition.finalUrl,currentTransition.initialUrl),this.routerState=currentTransition.targetRouterState,"deferred"!==this.urlUpdateStrategy||currentTransition.extras.skipLocationChange||this.setBrowserUrl(currentTransition.targetBrowserUrl??this.rawUrlTree,currentTransition)):e instanceof NavigationCancel&&(e.code===NavigationCancellationCode.GuardRejected||e.code===NavigationCancellationCode.NoDataFromResolver)?this.restoreHistory(currentTransition):e instanceof NavigationError?this.restoreHistory(currentTransition,!0):e instanceof NavigationEnd&&(this.lastSuccessfulId=e.id,this.currentPageId=this.browserPageId)}setBrowserUrl(url,transition){const path=url instanceof UrlTree?this.urlSerializer.serialize(url):url;if(this.location.isCurrentPathEqualTo(path)||transition.extras.replaceUrl){const currentBrowserPageId=this.browserPageId,state={...transition.extras.state,...this.generateNgRouterState(transition.id,currentBrowserPageId)};this.location.replaceState(path,"",state)}else{const state={...transition.extras.state,...this.generateNgRouterState(transition.id,this.browserPageId+1)};this.location.go(path,"",state)}}restoreHistory(navigation,restoringFromCaughtError=!1){if("computed"===this.canceledNavigationResolution){const currentBrowserPageId=this.browserPageId,targetPagePosition=this.currentPageId-currentBrowserPageId;0!==targetPagePosition?this.location.historyGo(targetPagePosition):this.currentUrlTree===navigation.finalUrl&&0===targetPagePosition&&(this.resetState(navigation),this.resetUrlToCurrentUrlTree())}else"replace"===this.canceledNavigationResolution&&(restoringFromCaughtError&&this.resetState(navigation),this.resetUrlToCurrentUrlTree())}resetState(navigation){this.routerState=this.stateMemento.routerState,this.currentUrlTree=this.stateMemento.currentUrlTree,this.rawUrlTree=this.urlHandlingStrategy.merge(this.currentUrlTree,navigation.finalUrl??this.rawUrlTree)}resetUrlToCurrentUrlTree(){this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree),"",this.generateNgRouterState(this.lastSuccessfulId,this.currentPageId))}generateNgRouterState(navigationId,routerPageId){return"computed"===this.canceledNavigationResolution?{navigationId,ɵrouterPageId:routerPageId}:{navigationId}}static#_=this.ɵfac=(()=>{let ɵHistoryStateManager_BaseFactory;return function HistoryStateManager_Factory(__ngFactoryType__){return(ɵHistoryStateManager_BaseFactory||(ɵHistoryStateManager_BaseFactory=core["ɵɵgetInheritedFactory"](HistoryStateManager)))(__ngFactoryType__||HistoryStateManager)}})();static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:HistoryStateManager,factory:HistoryStateManager.ɵfac,providedIn:"root"})}var NavigationResult;function afterNextNavigation(router,action){router.events.pipe((0,filter.p)((e=>e instanceof NavigationEnd||e instanceof NavigationCancel||e instanceof NavigationError||e instanceof NavigationSkipped)),(0,map.T)((e=>{if(e instanceof NavigationEnd||e instanceof NavigationSkipped)return NavigationResult.COMPLETE;return e instanceof NavigationCancel&&(e.code===NavigationCancellationCode.Redirect||e.code===NavigationCancellationCode.SupersededByNewNavigation)?NavigationResult.REDIRECTING:NavigationResult.FAILED})),(0,filter.p)((result=>result!==NavigationResult.REDIRECTING)),(0,take.s)(1)).subscribe((()=>{action()}))}function defaultErrorHandler(error){throw error}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](HistoryStateManager,[{type:core.Injectable,args:[{providedIn:"root"}]}],null,null),function(NavigationResult){NavigationResult[NavigationResult.COMPLETE=0]="COMPLETE",NavigationResult[NavigationResult.FAILED=1]="FAILED",NavigationResult[NavigationResult.REDIRECTING=2]="REDIRECTING"}(NavigationResult||(NavigationResult={}));const exactMatchOptions={paths:"exact",fragment:"ignored",matrixParams:"ignored",queryParams:"exact"},subsetMatchOptions={paths:"subset",fragment:"ignored",matrixParams:"ignored",queryParams:"subset"};class Router{get currentUrlTree(){return this.stateManager.getCurrentUrlTree()}get rawUrlTree(){return this.stateManager.getRawUrlTree()}get events(){return this._events}get routerState(){return this.stateManager.getRouterState()}constructor(){this.disposed=!1,this.console=(0,core.inject)(core["ɵConsole"]),this.stateManager=(0,core.inject)(StateManager),this.options=(0,core.inject)(ROUTER_CONFIGURATION,{optional:!0})||{},this.pendingTasks=(0,core.inject)(core["ɵPendingTasks"]),this.urlUpdateStrategy=this.options.urlUpdateStrategy||"deferred",this.navigationTransitions=(0,core.inject)(NavigationTransitions),this.urlSerializer=(0,core.inject)(UrlSerializer),this.location=(0,core.inject)(common.Location),this.urlHandlingStrategy=(0,core.inject)(UrlHandlingStrategy),this._events=new Subject.B,this.errorHandler=this.options.errorHandler||defaultErrorHandler,this.navigated=!1,this.routeReuseStrategy=(0,core.inject)(RouteReuseStrategy),this.onSameUrlNavigation=this.options.onSameUrlNavigation||"ignore",this.config=(0,core.inject)(ROUTES,{optional:!0})?.flat()??[],this.componentInputBindingEnabled=!!(0,core.inject)(INPUT_BINDER,{optional:!0}),this.eventsSubscription=new Subscription.yU,this.resetConfig(this.config),this.navigationTransitions.setupNavigations(this,this.currentUrlTree,this.routerState).subscribe({error:e=>{this.console.warn(ngDevMode?`Unhandled Navigation Error: ${e}`:e)}}),this.subscribeToNavigationEvents()}subscribeToNavigationEvents(){const subscription=this.navigationTransitions.events.subscribe((e=>{try{const currentTransition=this.navigationTransitions.currentTransition,currentNavigation=this.navigationTransitions.currentNavigation;if(null!==currentTransition&&null!==currentNavigation)if(this.stateManager.handleRouterEvent(e,currentNavigation),e instanceof NavigationCancel&&e.code!==NavigationCancellationCode.Redirect&&e.code!==NavigationCancellationCode.SupersededByNewNavigation)this.navigated=!0;else if(e instanceof NavigationEnd)this.navigated=!0;else if(e instanceof RedirectRequest){const opts=e.navigationBehaviorOptions,mergedTree=this.urlHandlingStrategy.merge(e.url,currentTransition.currentRawUrl),extras={browserUrl:currentTransition.extras.browserUrl,info:currentTransition.extras.info,skipLocationChange:currentTransition.extras.skipLocationChange,replaceUrl:currentTransition.extras.replaceUrl||"eager"===this.urlUpdateStrategy||(source=currentTransition.source,"imperative"!==source),...opts};this.scheduleNavigation(mergedTree,"imperative",null,extras,{resolve:currentTransition.resolve,reject:currentTransition.reject,promise:currentTransition.promise})}(function isPublicRouterEvent(e){return!(e instanceof BeforeActivateRoutes||e instanceof RedirectRequest)})(e)&&this._events.next(e)}catch(e){this.navigationTransitions.transitionAbortSubject.next(e)}var source}));this.eventsSubscription.add(subscription)}resetRootComponentType(rootComponentType){this.routerState.root.component=rootComponentType,this.navigationTransitions.rootComponentType=rootComponentType}initialNavigation(){this.setUpLocationChangeListener(),this.navigationTransitions.hasRequestedNavigation||this.navigateToSyncWithBrowser(this.location.path(!0),"imperative",this.stateManager.restoredState())}setUpLocationChangeListener(){this.nonRouterCurrentEntryChangeSubscription??=this.stateManager.registerNonRouterCurrentEntryChangeListener(((url,state)=>{setTimeout((()=>{this.navigateToSyncWithBrowser(url,"popstate",state)}),0)}))}navigateToSyncWithBrowser(url,source,state){const extras={replaceUrl:!0},restoredState=state?.navigationId?state:null;if(state){const stateCopy={...state};delete stateCopy.navigationId,delete stateCopy.ɵrouterPageId,0!==Object.keys(stateCopy).length&&(extras.state=stateCopy)}const urlTree=this.parseUrl(url);this.scheduleNavigation(urlTree,source,restoredState,extras)}get url(){return this.serializeUrl(this.currentUrlTree)}getCurrentNavigation(){return this.navigationTransitions.currentNavigation}get lastSuccessfulNavigation(){return this.navigationTransitions.lastSuccessfulNavigation}resetConfig(config){("undefined"==typeof ngDevMode||ngDevMode)&&validateConfig(config),this.config=config.map(standardizeConfig),this.navigated=!1}ngOnDestroy(){this.dispose()}dispose(){this.navigationTransitions.complete(),this.nonRouterCurrentEntryChangeSubscription&&(this.nonRouterCurrentEntryChangeSubscription.unsubscribe(),this.nonRouterCurrentEntryChangeSubscription=void 0),this.disposed=!0,this.eventsSubscription.unsubscribe()}createUrlTree(commands,navigationExtras={}){const{relativeTo,queryParams,fragment,queryParamsHandling,preserveFragment}=navigationExtras,f=preserveFragment?this.currentUrlTree.fragment:fragment;let relativeToUrlSegmentGroup,q=null;switch(queryParamsHandling??this.options.defaultQueryParamsHandling){case"merge":q={...this.currentUrlTree.queryParams,...queryParams};break;case"preserve":q=this.currentUrlTree.queryParams;break;default:q=queryParams||null}null!==q&&(q=this.removeEmptyProps(q));try{relativeToUrlSegmentGroup=createSegmentGroupFromRoute(relativeTo?relativeTo.snapshot:this.routerState.snapshot.root)}catch(e){"string"==typeof commands[0]&&"/"===commands[0][0]||(commands=[]),relativeToUrlSegmentGroup=this.currentUrlTree.root}return createUrlTreeFromSegmentGroup(relativeToUrlSegmentGroup,commands,q,f??null)}navigateByUrl(url,extras={skipLocationChange:!1}){const urlTree=isUrlTree(url)?url:this.parseUrl(url),mergedTree=this.urlHandlingStrategy.merge(urlTree,this.rawUrlTree);return this.scheduleNavigation(mergedTree,"imperative",null,extras)}navigate(commands,extras={skipLocationChange:!1}){return function validateCommands(commands){for(let i=0;i<commands.length;i++){const cmd=commands[i];if(null==cmd)throw new core["ɵRuntimeError"](4008,("undefined"==typeof ngDevMode||ngDevMode)&&`The requested path contains ${cmd} segment at index ${i}`)}}(commands),this.navigateByUrl(this.createUrlTree(commands,extras),extras)}serializeUrl(url){return this.urlSerializer.serialize(url)}parseUrl(url){try{return this.urlSerializer.parse(url)}catch{return this.urlSerializer.parse("/")}}isActive(url,matchOptions){let options;if(options=!0===matchOptions?{...exactMatchOptions}:!1===matchOptions?{...subsetMatchOptions}:matchOptions,isUrlTree(url))return containsTree(this.currentUrlTree,url,options);const urlTree=this.parseUrl(url);return containsTree(this.currentUrlTree,urlTree,options)}removeEmptyProps(params){return Object.entries(params).reduce(((result,[key,value])=>(null!=value&&(result[key]=value),result)),{})}scheduleNavigation(rawUrl,source,restoredState,extras,priorPromise){if(this.disposed)return Promise.resolve(!1);let resolve,reject,promise;priorPromise?(resolve=priorPromise.resolve,reject=priorPromise.reject,promise=priorPromise.promise):promise=new Promise(((res,rej)=>{resolve=res,reject=rej}));const taskId=this.pendingTasks.add();return afterNextNavigation(this,(()=>{queueMicrotask((()=>this.pendingTasks.remove(taskId)))})),this.navigationTransitions.handleNavigationRequest({source,restoredState,currentUrlTree:this.currentUrlTree,currentRawUrl:this.currentUrlTree,rawUrl,extras,resolve,reject,promise,currentSnapshot:this.routerState.snapshot,currentRouterState:this.routerState}),promise.catch((e=>Promise.reject(e)))}static#_=this.ɵfac=function Router_Factory(__ngFactoryType__){return new(__ngFactoryType__||Router)};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:Router,factory:Router.ɵfac,providedIn:"root"})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](Router,[{type:core.Injectable,args:[{providedIn:"root"}]}],(()=>[]),null);class RouterLink{constructor(router,route,tabIndexAttribute,renderer,el,locationStrategy){this.router=router,this.route=route,this.tabIndexAttribute=tabIndexAttribute,this.renderer=renderer,this.el=el,this.locationStrategy=locationStrategy,this.href=null,this.onChanges=new Subject.B,this.preserveFragment=!1,this.skipLocationChange=!1,this.replaceUrl=!1,this.routerLinkInput=null;const tagName=el.nativeElement.tagName?.toLowerCase();this.isAnchorElement="a"===tagName||"area"===tagName,this.isAnchorElement?this.subscription=router.events.subscribe((s=>{s instanceof NavigationEnd&&this.updateHref()})):this.setTabIndexIfNotOnNativeEl("0")}setTabIndexIfNotOnNativeEl(newTabIndex){null!=this.tabIndexAttribute||this.isAnchorElement||this.applyAttributeValue("tabindex",newTabIndex)}ngOnChanges(changes){if(ngDevMode&&isUrlTree(this.routerLinkInput)&&(void 0!==this.fragment||this.queryParams||this.queryParamsHandling||this.preserveFragment||this.relativeTo))throw new core["ɵRuntimeError"](4016,"Cannot configure queryParams or fragment when using a UrlTree as the routerLink input value.");this.isAnchorElement&&this.updateHref(),this.onChanges.next(this)}set routerLink(commandsOrUrlTree){null==commandsOrUrlTree?(this.routerLinkInput=null,this.setTabIndexIfNotOnNativeEl(null)):(isUrlTree(commandsOrUrlTree)?this.routerLinkInput=commandsOrUrlTree:this.routerLinkInput=Array.isArray(commandsOrUrlTree)?commandsOrUrlTree:[commandsOrUrlTree],this.setTabIndexIfNotOnNativeEl("0"))}onClick(button,ctrlKey,shiftKey,altKey,metaKey){const urlTree=this.urlTree;if(null===urlTree)return!0;if(this.isAnchorElement){if(0!==button||ctrlKey||shiftKey||altKey||metaKey)return!0;if("string"==typeof this.target&&"_self"!=this.target)return!0}const extras={skipLocationChange:this.skipLocationChange,replaceUrl:this.replaceUrl,state:this.state,info:this.info};return this.router.navigateByUrl(urlTree,extras),!this.isAnchorElement}ngOnDestroy(){this.subscription?.unsubscribe()}updateHref(){const urlTree=this.urlTree;this.href=null!==urlTree&&this.locationStrategy?this.locationStrategy?.prepareExternalUrl(this.router.serializeUrl(urlTree)):null;const sanitizedValue=null===this.href?null:(0,core["ɵɵsanitizeUrlOrResourceUrl"])(this.href,this.el.nativeElement.tagName.toLowerCase(),"href");this.applyAttributeValue("href",sanitizedValue)}applyAttributeValue(attrName,attrValue){const renderer=this.renderer,nativeElement=this.el.nativeElement;null!==attrValue?renderer.setAttribute(nativeElement,attrName,attrValue):renderer.removeAttribute(nativeElement,attrName)}get urlTree(){return null===this.routerLinkInput?null:isUrlTree(this.routerLinkInput)?this.routerLinkInput:this.router.createUrlTree(this.routerLinkInput,{relativeTo:void 0!==this.relativeTo?this.relativeTo:this.route,queryParams:this.queryParams,fragment:this.fragment,queryParamsHandling:this.queryParamsHandling,preserveFragment:this.preserveFragment})}static#_=this.ɵfac=function RouterLink_Factory(__ngFactoryType__){return new(__ngFactoryType__||RouterLink)(core["ɵɵdirectiveInject"](Router),core["ɵɵdirectiveInject"](ActivatedRoute),core["ɵɵinjectAttribute"]("tabindex"),core["ɵɵdirectiveInject"](core.Renderer2),core["ɵɵdirectiveInject"](core.ElementRef),core["ɵɵdirectiveInject"](common.LocationStrategy))};static#_2=this.ɵdir=core["ɵɵdefineDirective"]({type:RouterLink,selectors:[["","routerLink",""]],hostVars:1,hostBindings:function RouterLink_HostBindings(rf,ctx){1&rf&&core["ɵɵlistener"]("click",(function RouterLink_click_HostBindingHandler($event){return ctx.onClick($event.button,$event.ctrlKey,$event.shiftKey,$event.altKey,$event.metaKey)})),2&rf&&core["ɵɵattribute"]("target",ctx.target)},inputs:{target:"target",queryParams:"queryParams",fragment:"fragment",queryParamsHandling:"queryParamsHandling",state:"state",info:"info",relativeTo:"relativeTo",preserveFragment:[2,"preserveFragment","preserveFragment",core.booleanAttribute],skipLocationChange:[2,"skipLocationChange","skipLocationChange",core.booleanAttribute],replaceUrl:[2,"replaceUrl","replaceUrl",core.booleanAttribute],routerLink:"routerLink"},standalone:!0,features:[core["ɵɵInputTransformsFeature"],core["ɵɵNgOnChangesFeature"]]})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](RouterLink,[{type:core.Directive,args:[{selector:"[routerLink]",standalone:!0}]}],(()=>[{type:Router},{type:ActivatedRoute},{type:void 0,decorators:[{type:core.Attribute,args:["tabindex"]}]},{type:core.Renderer2},{type:core.ElementRef},{type:common.LocationStrategy}]),{target:[{type:core.HostBinding,args:["attr.target"]},{type:core.Input}],queryParams:[{type:core.Input}],fragment:[{type:core.Input}],queryParamsHandling:[{type:core.Input}],state:[{type:core.Input}],info:[{type:core.Input}],relativeTo:[{type:core.Input}],preserveFragment:[{type:core.Input,args:[{transform:core.booleanAttribute}]}],skipLocationChange:[{type:core.Input,args:[{transform:core.booleanAttribute}]}],replaceUrl:[{type:core.Input,args:[{transform:core.booleanAttribute}]}],routerLink:[{type:core.Input}],onClick:[{type:core.HostListener,args:["click",["$event.button","$event.ctrlKey","$event.shiftKey","$event.altKey","$event.metaKey"]]}]});class RouterLinkActive{get isActive(){return this._isActive}constructor(router,element,renderer,cdr,link){this.router=router,this.element=element,this.renderer=renderer,this.cdr=cdr,this.link=link,this.classes=[],this._isActive=!1,this.routerLinkActiveOptions={exact:!1},this.isActiveChange=new core.EventEmitter,this.routerEventsSubscription=router.events.subscribe((s=>{s instanceof NavigationEnd&&this.update()}))}ngAfterContentInit(){(0,of.of)(this.links.changes,(0,of.of)(null)).pipe((0,mergeAll.U)()).subscribe((_=>{this.update(),this.subscribeToEachLinkOnChanges()}))}subscribeToEachLinkOnChanges(){this.linkInputChangesSubscription?.unsubscribe();const allLinkChanges=[...this.links.toArray(),this.link].filter((link=>!!link)).map((link=>link.onChanges));this.linkInputChangesSubscription=(0,from.H)(allLinkChanges).pipe((0,mergeAll.U)()).subscribe((link=>{this._isActive!==this.isLinkActive(this.router)(link)&&this.update()}))}set routerLinkActive(data){const classes=Array.isArray(data)?data:data.split(" ");this.classes=classes.filter((c=>!!c))}ngOnChanges(changes){this.update()}ngOnDestroy(){this.routerEventsSubscription.unsubscribe(),this.linkInputChangesSubscription?.unsubscribe()}update(){this.links&&this.router.navigated&&queueMicrotask((()=>{const hasActiveLinks=this.hasActiveLinks();this.classes.forEach((c=>{hasActiveLinks?this.renderer.addClass(this.element.nativeElement,c):this.renderer.removeClass(this.element.nativeElement,c)})),hasActiveLinks&&void 0!==this.ariaCurrentWhenActive?this.renderer.setAttribute(this.element.nativeElement,"aria-current",this.ariaCurrentWhenActive.toString()):this.renderer.removeAttribute(this.element.nativeElement,"aria-current"),this._isActive!==hasActiveLinks&&(this._isActive=hasActiveLinks,this.cdr.markForCheck(),this.isActiveChange.emit(hasActiveLinks))}))}isLinkActive(router){const options=function isActiveMatchOptions(options){return!!options.paths}(this.routerLinkActiveOptions)?this.routerLinkActiveOptions:this.routerLinkActiveOptions.exact||!1;return link=>{const urlTree=link.urlTree;return!!urlTree&&router.isActive(urlTree,options)}}hasActiveLinks(){const isActiveCheckFn=this.isLinkActive(this.router);return this.link&&isActiveCheckFn(this.link)||this.links.some(isActiveCheckFn)}static#_=this.ɵfac=function RouterLinkActive_Factory(__ngFactoryType__){return new(__ngFactoryType__||RouterLinkActive)(core["ɵɵdirectiveInject"](Router),core["ɵɵdirectiveInject"](core.ElementRef),core["ɵɵdirectiveInject"](core.Renderer2),core["ɵɵdirectiveInject"](core.ChangeDetectorRef),core["ɵɵdirectiveInject"](RouterLink,8))};static#_2=this.ɵdir=core["ɵɵdefineDirective"]({type:RouterLinkActive,selectors:[["","routerLinkActive",""]],contentQueries:function RouterLinkActive_ContentQueries(rf,ctx,dirIndex){if(1&rf&&core["ɵɵcontentQuery"](dirIndex,RouterLink,5),2&rf){let _t;core["ɵɵqueryRefresh"](_t=core["ɵɵloadQuery"]())&&(ctx.links=_t)}},inputs:{routerLinkActiveOptions:"routerLinkActiveOptions",ariaCurrentWhenActive:"ariaCurrentWhenActive",routerLinkActive:"routerLinkActive"},outputs:{isActiveChange:"isActiveChange"},exportAs:["routerLinkActive"],standalone:!0,features:[core["ɵɵNgOnChangesFeature"]]})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](RouterLinkActive,[{type:core.Directive,args:[{selector:"[routerLinkActive]",exportAs:"routerLinkActive",standalone:!0}]}],(()=>[{type:Router},{type:core.ElementRef},{type:core.Renderer2},{type:core.ChangeDetectorRef},{type:RouterLink,decorators:[{type:core.Optional}]}]),{links:[{type:core.ContentChildren,args:[RouterLink,{descendants:!0}]}],routerLinkActiveOptions:[{type:core.Input}],ariaCurrentWhenActive:[{type:core.Input}],isActiveChange:[{type:core.Output}],routerLinkActive:[{type:core.Input}]});class PreloadingStrategy{}class PreloadAllModules{preload(route,fn){return fn().pipe((0,catchError.W)((()=>(0,of.of)(null))))}static#_=this.ɵfac=function PreloadAllModules_Factory(__ngFactoryType__){return new(__ngFactoryType__||PreloadAllModules)};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:PreloadAllModules,factory:PreloadAllModules.ɵfac,providedIn:"root"})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](PreloadAllModules,[{type:core.Injectable,args:[{providedIn:"root"}]}],null,null);class NoPreloading{preload(route,fn){return(0,of.of)(null)}static#_=this.ɵfac=function NoPreloading_Factory(__ngFactoryType__){return new(__ngFactoryType__||NoPreloading)};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:NoPreloading,factory:NoPreloading.ɵfac,providedIn:"root"})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NoPreloading,[{type:core.Injectable,args:[{providedIn:"root"}]}],null,null);class RouterPreloader{constructor(router,compiler,injector,preloadingStrategy,loader){this.router=router,this.injector=injector,this.preloadingStrategy=preloadingStrategy,this.loader=loader}setUpPreloading(){this.subscription=this.router.events.pipe((0,filter.p)((e=>e instanceof NavigationEnd)),(0,concatMap.H)((()=>this.preload()))).subscribe((()=>{}))}preload(){return this.processRoutes(this.injector,this.router.config)}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}processRoutes(injector,routes){const res=[];for(const route of routes){route.providers&&!route._injector&&(route._injector=(0,core.createEnvironmentInjector)(route.providers,injector,`Route: ${route.path}`));const injectorForCurrentRoute=route._injector??injector,injectorForChildren=route._loadedInjector??injectorForCurrentRoute;(route.loadChildren&&!route._loadedRoutes&&void 0===route.canLoad||route.loadComponent&&!route._loadedComponent)&&res.push(this.preloadConfig(injectorForCurrentRoute,route)),(route.children||route._loadedRoutes)&&res.push(this.processRoutes(injectorForChildren,route.children??route._loadedRoutes))}return(0,from.H)(res).pipe((0,mergeAll.U)())}preloadConfig(injector,route){return this.preloadingStrategy.preload(route,(()=>{let loadedChildren$;loadedChildren$=route.loadChildren&&void 0===route.canLoad?this.loader.loadChildren(injector,route):(0,of.of)(null);const recursiveLoadChildren$=loadedChildren$.pipe((0,mergeMap.Z)((config=>null===config?(0,of.of)(void 0):(route._loadedRoutes=config.routes,route._loadedInjector=config.injector,this.processRoutes(config.injector??injector,config.routes)))));if(route.loadComponent&&!route._loadedComponent){const loadComponent$=this.loader.loadComponent(route);return(0,from.H)([recursiveLoadChildren$,loadComponent$]).pipe((0,mergeAll.U)())}return recursiveLoadChildren$}))}static#_=this.ɵfac=function RouterPreloader_Factory(__ngFactoryType__){return new(__ngFactoryType__||RouterPreloader)(core["ɵɵinject"](Router),core["ɵɵinject"](core.Compiler),core["ɵɵinject"](core.EnvironmentInjector),core["ɵɵinject"](PreloadingStrategy),core["ɵɵinject"](RouterConfigLoader))};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:RouterPreloader,factory:RouterPreloader.ɵfac,providedIn:"root"})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](RouterPreloader,[{type:core.Injectable,args:[{providedIn:"root"}]}],(()=>[{type:Router},{type:core.Compiler},{type:core.EnvironmentInjector},{type:PreloadingStrategy},{type:RouterConfigLoader}]),null);const ROUTER_SCROLLER=new core.InjectionToken("");class RouterScroller{constructor(urlSerializer,transitions,viewportScroller,zone,options={}){this.urlSerializer=urlSerializer,this.transitions=transitions,this.viewportScroller=viewportScroller,this.zone=zone,this.options=options,this.lastId=0,this.lastSource="imperative",this.restoredId=0,this.store={},options.scrollPositionRestoration||="disabled",options.anchorScrolling||="disabled"}init(){"disabled"!==this.options.scrollPositionRestoration&&this.viewportScroller.setHistoryScrollRestoration("manual"),this.routerEventsSubscription=this.createScrollEvents(),this.scrollEventsSubscription=this.consumeScrollEvents()}createScrollEvents(){return this.transitions.events.subscribe((e=>{e instanceof NavigationStart?(this.store[this.lastId]=this.viewportScroller.getScrollPosition(),this.lastSource=e.navigationTrigger,this.restoredId=e.restoredState?e.restoredState.navigationId:0):e instanceof NavigationEnd?(this.lastId=e.id,this.scheduleScrollEvent(e,this.urlSerializer.parse(e.urlAfterRedirects).fragment)):e instanceof NavigationSkipped&&e.code===NavigationSkippedCode.IgnoredSameUrlNavigation&&(this.lastSource=void 0,this.restoredId=0,this.scheduleScrollEvent(e,this.urlSerializer.parse(e.url).fragment))}))}consumeScrollEvents(){return this.transitions.events.subscribe((e=>{e instanceof Scroll&&(e.position?"top"===this.options.scrollPositionRestoration?this.viewportScroller.scrollToPosition([0,0]):"enabled"===this.options.scrollPositionRestoration&&this.viewportScroller.scrollToPosition(e.position):e.anchor&&"enabled"===this.options.anchorScrolling?this.viewportScroller.scrollToAnchor(e.anchor):"disabled"!==this.options.scrollPositionRestoration&&this.viewportScroller.scrollToPosition([0,0]))}))}scheduleScrollEvent(routerEvent,anchor){this.zone.runOutsideAngular((()=>{setTimeout((()=>{this.zone.run((()=>{this.transitions.events.next(new Scroll(routerEvent,"popstate"===this.lastSource?this.store[this.restoredId]:null,anchor))}))}),0)}))}ngOnDestroy(){this.routerEventsSubscription?.unsubscribe(),this.scrollEventsSubscription?.unsubscribe()}static#_=this.ɵfac=function RouterScroller_Factory(__ngFactoryType__){core["ɵɵinvalidFactory"]()};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:RouterScroller,factory:RouterScroller.ɵfac})}function rootRoute(router){return router.routerState.root}function routerFeature(kind,providers){return{ɵkind:kind,ɵproviders:providers}}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](RouterScroller,[{type:core.Injectable}],(()=>[{type:UrlSerializer},{type:NavigationTransitions},{type:common.ViewportScroller},{type:core.NgZone},{type:void 0}]),null);const ROUTER_IS_PROVIDED=new core.InjectionToken("",{providedIn:"root",factory:()=>!1});core.ENVIRONMENT_INITIALIZER;function getBootstrapListener(){const injector=(0,core.inject)(core.Injector);return bootstrappedComponentRef=>{const ref=injector.get(core.ApplicationRef);if(bootstrappedComponentRef!==ref.components[0])return;const router=injector.get(Router),bootstrapDone=injector.get(BOOTSTRAP_DONE);1===injector.get(INITIAL_NAVIGATION)&&router.initialNavigation(),injector.get(ROUTER_PRELOADER,null,core.InjectFlags.Optional)?.setUpPreloading(),injector.get(ROUTER_SCROLLER,null,core.InjectFlags.Optional)?.init(),router.resetRootComponentType(ref.componentTypes[0]),bootstrapDone.closed||(bootstrapDone.next(),bootstrapDone.complete(),bootstrapDone.unsubscribe())}}const BOOTSTRAP_DONE=new core.InjectionToken("undefined"==typeof ngDevMode||ngDevMode?"bootstrap done indicator":"",{factory:()=>new Subject.B}),INITIAL_NAVIGATION=new core.InjectionToken("undefined"==typeof ngDevMode||ngDevMode?"initial navigation":"",{providedIn:"root",factory:()=>1});function withDebugTracing(){let providers=[];return providers="undefined"==typeof ngDevMode||ngDevMode?[{provide:core.ENVIRONMENT_INITIALIZER,multi:!0,useFactory:()=>{const router=(0,core.inject)(Router);return()=>router.events.subscribe((e=>{console.group?.(`Router Event: ${e.constructor.name}`),console.log(function stringifyEvent(routerEvent){switch(routerEvent.type){case EventType.ActivationEnd:return`ActivationEnd(path: '${routerEvent.snapshot.routeConfig?.path||""}')`;case EventType.ActivationStart:return`ActivationStart(path: '${routerEvent.snapshot.routeConfig?.path||""}')`;case EventType.ChildActivationEnd:return`ChildActivationEnd(path: '${routerEvent.snapshot.routeConfig?.path||""}')`;case EventType.ChildActivationStart:return`ChildActivationStart(path: '${routerEvent.snapshot.routeConfig?.path||""}')`;case EventType.GuardsCheckEnd:return`GuardsCheckEnd(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state}, shouldActivate: ${routerEvent.shouldActivate})`;case EventType.GuardsCheckStart:return`GuardsCheckStart(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state})`;case EventType.NavigationCancel:return`NavigationCancel(id: ${routerEvent.id}, url: '${routerEvent.url}')`;case EventType.NavigationSkipped:return`NavigationSkipped(id: ${routerEvent.id}, url: '${routerEvent.url}')`;case EventType.NavigationEnd:return`NavigationEnd(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}')`;case EventType.NavigationError:return`NavigationError(id: ${routerEvent.id}, url: '${routerEvent.url}', error: ${routerEvent.error})`;case EventType.NavigationStart:return`NavigationStart(id: ${routerEvent.id}, url: '${routerEvent.url}')`;case EventType.ResolveEnd:return`ResolveEnd(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state})`;case EventType.ResolveStart:return`ResolveStart(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state})`;case EventType.RouteConfigLoadEnd:return`RouteConfigLoadEnd(path: ${routerEvent.route.path})`;case EventType.RouteConfigLoadStart:return`RouteConfigLoadStart(path: ${routerEvent.route.path})`;case EventType.RoutesRecognized:return`RoutesRecognized(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state})`;case EventType.Scroll:const pos=routerEvent.position?`${routerEvent.position[0]}, ${routerEvent.position[1]}`:null;return`Scroll(anchor: '${routerEvent.anchor}', position: '${pos}')`}}(e)),console.log(e),console.groupEnd?.()}))}}]:[],routerFeature(1,providers)}const ROUTER_PRELOADER=new core.InjectionToken("undefined"==typeof ngDevMode||ngDevMode?"router preloader":"");const ROUTER_DIRECTIVES=[RouterOutlet,RouterLink,RouterLinkActive,ɵEmptyOutletComponent],ROUTER_FORROOT_GUARD=new core.InjectionToken("undefined"==typeof ngDevMode||ngDevMode?"router duplicate forRoot guard":"ROUTER_FORROOT_GUARD"),ROUTER_PROVIDERS=[common.Location,{provide:UrlSerializer,useClass:DefaultUrlSerializer},Router,ChildrenOutletContexts,{provide:ActivatedRoute,useFactory:rootRoute,deps:[Router]},RouterConfigLoader,"undefined"==typeof ngDevMode||ngDevMode?{provide:ROUTER_IS_PROVIDED,useValue:!0}:[]];class RouterModule{constructor(guard){}static forRoot(routes,config){return{ngModule:RouterModule,providers:[ROUTER_PROVIDERS,("undefined"==typeof ngDevMode||ngDevMode)&&config?.enableTracing?withDebugTracing().ɵproviders:[],{provide:ROUTES,multi:!0,useValue:routes},{provide:ROUTER_FORROOT_GUARD,useFactory:provideForRootGuard,deps:[[Router,new core.Optional,new core.SkipSelf]]},{provide:ROUTER_CONFIGURATION,useValue:config||{}},config?.useHash?{provide:common.LocationStrategy,useClass:common.HashLocationStrategy}:{provide:common.LocationStrategy,useClass:common.PathLocationStrategy},{provide:ROUTER_SCROLLER,useFactory:()=>{const viewportScroller=(0,core.inject)(common.ViewportScroller),zone=(0,core.inject)(core.NgZone),config=(0,core.inject)(ROUTER_CONFIGURATION),transitions=(0,core.inject)(NavigationTransitions),urlSerializer=(0,core.inject)(UrlSerializer);return config.scrollOffset&&viewportScroller.setOffset(config.scrollOffset),new RouterScroller(urlSerializer,transitions,viewportScroller,zone,config)}},config?.preloadingStrategy?(preloadingStrategy=config.preloadingStrategy,routerFeature(0,[{provide:ROUTER_PRELOADER,useExisting:RouterPreloader},{provide:PreloadingStrategy,useExisting:preloadingStrategy}])).ɵproviders:[],config?.initialNavigation?provideInitialNavigation(config):[],config?.bindToComponentInputs?routerFeature(8,[RoutedComponentInputBinder,{provide:INPUT_BINDER,useExisting:RoutedComponentInputBinder}]).ɵproviders:[],config?.enableViewTransitions?routerFeature(9,[{provide:CREATE_VIEW_TRANSITION,useValue:createViewTransition},{provide:VIEW_TRANSITION_OPTIONS,useValue:{skipNextTransition:!!options?.skipInitialTransition,...options}}]).ɵproviders:[],[{provide:ROUTER_INITIALIZER,useFactory:getBootstrapListener},{provide:core.APP_BOOTSTRAP_LISTENER,multi:!0,useExisting:ROUTER_INITIALIZER}]]};var options,preloadingStrategy}static forChild(routes){return{ngModule:RouterModule,providers:[{provide:ROUTES,multi:!0,useValue:routes}]}}static#_=this.ɵfac=function RouterModule_Factory(__ngFactoryType__){return new(__ngFactoryType__||RouterModule)(core["ɵɵinject"](ROUTER_FORROOT_GUARD,8))};static#_2=this.ɵmod=core["ɵɵdefineNgModule"]({type:RouterModule,imports:[RouterOutlet,RouterLink,RouterLinkActive,ɵEmptyOutletComponent],exports:[RouterOutlet,RouterLink,RouterLinkActive,ɵEmptyOutletComponent]});static#_3=this.ɵinj=core["ɵɵdefineInjector"]({})}function provideForRootGuard(router){if(("undefined"==typeof ngDevMode||ngDevMode)&&router)throw new core["ɵRuntimeError"](4007,"The Router was provided more than once. This can happen if 'forRoot' is used outside of the root injector. Lazy loaded modules should use RouterModule.forChild() instead.");return"guarded"}function provideInitialNavigation(config){return["disabled"===config.initialNavigation?routerFeature(3,[{provide:core.APP_INITIALIZER,multi:!0,useFactory:()=>{const router=(0,core.inject)(Router);return()=>{router.setUpLocationChangeListener()}}},{provide:INITIAL_NAVIGATION,useValue:2}]).ɵproviders:[],"enabledBlocking"===config.initialNavigation?routerFeature(2,[{provide:INITIAL_NAVIGATION,useValue:0},{provide:core.APP_INITIALIZER,multi:!0,deps:[core.Injector],useFactory:injector=>{const locationInitialized=injector.get(common.LOCATION_INITIALIZED,Promise.resolve());return()=>locationInitialized.then((()=>new Promise((resolve=>{const router=injector.get(Router),bootstrapDone=injector.get(BOOTSTRAP_DONE);afterNextNavigation(router,(()=>{resolve(!0)})),injector.get(NavigationTransitions).afterPreactivation=()=>(resolve(!0),bootstrapDone.closed?(0,of.of)(void 0):bootstrapDone),router.initialNavigation()}))))}}]).ɵproviders:[]]}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](RouterModule,[{type:core.NgModule,args:[{imports:ROUTER_DIRECTIVES,exports:ROUTER_DIRECTIVES}]}],(()=>[{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[ROUTER_FORROOT_GUARD]}]}]),null);const ROUTER_INITIALIZER=new core.InjectionToken("undefined"==typeof ngDevMode||ngDevMode?"Router Initializer":"");new core.Version("18.2.1");const _c0=["glCanvas"],_c1=["portalContentAnchor"];function NgtPortal_ng_container_2_Template(rf,ctx){if(1&rf){const _r1=core["ɵɵgetCurrentView"]();core["ɵɵelementContainerStart"](0,2),core["ɵɵlistener"]("beforeRender",(function NgtPortal_ng_container_2_Template_ng_container_beforeRender_0_listener($event){core["ɵɵrestoreView"](_r1);const ctx_r1=core["ɵɵnextContext"]();return core["ɵɵresetView"](ctx_r1.onBeforeRender($event))})),core["ɵɵelementContainerEnd"]()}if(2&rf){const ctx_r1=core["ɵɵnextContext"]();core["ɵɵproperty"]("renderPriority",ctx_r1.autoRenderPriority)("parentScene",ctx_r1.parentScene)("parentCamera",ctx_r1.parentCamera)}}const idCache={};function makeId(event){if(event)return(event.eventObject||event.object).uuid+"/"+event.index+event.instanceId;const newId=three_module.MathUtils.generateUUID();return idCache[newId]?makeId():(idCache[newId]=!0,newId)}function makeDpr(dpr,window){const target=window?.devicePixelRatio||1;return Array.isArray(dpr)?Math.min(Math.max(dpr[0],target),dpr[1]):dpr}function safeDetectChanges(cdr){if(cdr)try{(cdr.context||cdr._attachedToViewContainer)&&cdr.detectChanges()}catch(e){cdr.markForCheck()}}const cached=new Map;function load(loaderConstructorFactory,input,extensions,onProgress){return((0,isObservable.A)(input)?input:(0,of.of)(input)).pipe((0,map.T)((inputs=>{const loader=new(loaderConstructorFactory(inputs));extensions&&extensions(loader);return[(Array.isArray(inputs)?inputs:"string"==typeof inputs?[inputs]:Object.values(inputs)).map((url=>(cached.has(url)||cached.set(url,(0,from.H)(loader.loadAsync(url,onProgress)).pipe((0,tap.M)((data=>{data.scene&&Object.assign(data,function makeObjectGraph(object){const data={nodes:{},materials:{}};return object&&object.traverse((child=>{child.name&&(data.nodes[child.name]=child),"material"in child&&!data.materials[child.material.name]&&(data.materials[child.material.name]=child.material)})),data}(data.scene))})),(0,retry.L)(2),(0,catchError.W)((err=>(console.error(`[NGT] Error loading ${url}: ${err.message}`),(0,of.of)([])))),(0,share.u)({connector:()=>new ReplaySubject.m(1)}))),cached.get(url)))),inputs]})))}function injectNgtLoader(loaderConstructorFactory,input,extensions,onProgress){const cdr=(0,core.inject)(core.ChangeDetectorRef);return load(loaderConstructorFactory,input,extensions,onProgress).pipe((0,switchMap.n)((([observables$,inputs])=>(0,forkJoin.p)(observables$).pipe((0,map.T)((results=>{if(Array.isArray(inputs))return results;if("string"==typeof inputs)return results[0];const keys=Object.keys(inputs);return keys.reduce(((result,key)=>(result[key]=results[keys.indexOf(key)],result)),{})})),(0,tap.M)((()=>{requestAnimationFrame((()=>{safeDetectChanges(cdr)}))}))))))}injectNgtLoader.destroy=()=>{cached.clear()},injectNgtLoader.preLoad=(loaderConstructorFactory,inputs,extensions)=>{load(loaderConstructorFactory,inputs,extensions).pipe((0,take.s)(1)).subscribe()};const globalEffects=new Set,globalAfterEffects=new Set,globalTailEffects=new Set;function run(effects,timestamp){if(effects.size)for(const{callback}of effects.values())callback(timestamp)}function flushGlobalEffects(type,timestamp){switch(type){case"before":return run(globalEffects,timestamp);case"after":return run(globalAfterEffects,timestamp);case"tail":return run(globalTailEffects,timestamp)}}function render(timestamp,store,frame){const state=store.get();let delta=state.clock.getDelta();"never"===state.frameloop&&"number"==typeof timestamp&&(delta=timestamp-state.clock.elapsedTime,state.clock.oldTime=state.clock.elapsedTime,state.clock.elapsedTime=timestamp);for(let i=0;i<state.internal.subscribers.length;i++){state.internal.subscribers[i].callback({...state,delta,frame})}return!state.internal.priority&&state.gl.render&&state.gl.render(state.scene,state.camera),state.internal.frames=Math.max(0,state.internal.frames-1),"always"===state.frameloop?1:state.internal.frames}const is={obj:a=>a===Object(a)&&!Array.isArray(a)&&"function"!=typeof a,material:a=>!!a&&a.isMaterial,geometry:a=>!!a&&a.isBufferGeometry,orthographicCamera:a=>!!a&&a.isOrthographicCamera,perspectiveCamera:a=>!!a&&a.isPerspectiveCamera,camera:a=>!!a&&a.isCamera,renderer:a=>!!a&&a instanceof three_module.WebGLRenderer,scene:a=>!!a&&a.isScene,object3D:a=>!!a&&a.isObject3D,instance:a=>!!a&&!!a.__ngt__,ref:a=>a instanceof core.ElementRef,colorSpaceExist:object=>"colorSpace"in object||"outputColorSpace"in object,equ(a,b,{arrays="shallow",objects="reference",strict=!0}={}){if(typeof a!=typeof b||!!a!=!!b)return!1;if("string"==typeof a||"number"==typeof a)return a===b;const isObj=is.obj(a);if(isObj&&"reference"===objects)return a===b;const isArr=Array.isArray(a);if(isArr&&"reference"===arrays)return a===b;if((isArr||isObj)&&a===b)return!0;let i;for(i in a)if(!(i in b))return!1;for(i in strict?b:a)if(a[i]!==b[i])return!1;if(void 0===i){if(isArr&&0===a.length&&0===b.length)return!0;if(isObj&&0===Object.keys(a).length&&0===Object.keys(b).length)return!0;if(a!==b)return!1}return!0}};function checkNeedsUpdate(value){null!==value&&is.obj(value)&&"needsUpdate"in value&&(value.needsUpdate=!0,"uniformsNeedUpdate"in value&&(value.uniformsNeedUpdate=!0))}function checkUpdate(value){is.object3D(value)&&value.updateMatrix(),is.camera(value)&&((is.perspectiveCamera(value)||is.orthographicCamera(value))&&value.updateProjectionMatrix(),value.updateMatrixWorld()),checkNeedsUpdate(value)}function updateCamera(camera,size){camera.manual||(is.orthographicCamera(camera)?(camera.left=size.width/-2,camera.right=size.width/2,camera.top=size.height/2,camera.bottom=size.height/-2):camera.aspect=size.width/size.height,camera.updateProjectionMatrix(),camera.updateMatrixWorld())}function getLocalState(obj){return obj&&obj.__ngt__||{}}function invalidateInstance(instance){const state=getLocalState(instance).store?.get();state&&0===state.internal.frames&&state.invalidate(),checkUpdate(instance)}function prepare(object,localState){const instance="function"==typeof object?object():object;if(localState?.primitive||!instance.__ngt__){const{objects=new BehaviorSubject.t([]),nonObjects=new BehaviorSubject.t([]),...rest}=localState||{};instance.__ngt__={previousAttach:null,store:null,parent:null,memoized:{},eventCount:0,handlers:{},objects,nonObjects,add:(object,type)=>{const current=instance.__ngt__[type].value,foundIndex=current.indexOf((obj=>obj===object));foundIndex>-1?(current.splice(foundIndex,1,object),instance.__ngt__[type].next(current)):instance.__ngt__[type].next([...instance.__ngt__[type].value,object]),notifyAncestors(instance.__ngt__.parent)},remove:(object,type)=>{instance.__ngt__[type].next(instance.__ngt__[type].value.filter((o=>o!==object))),notifyAncestors(instance.__ngt__.parent)},...rest}}return instance}function notifyAncestors(instance){if(!instance)return;const localState=getLocalState(instance);localState.objects&&localState.objects.next(localState.objects.value),localState.nonObjects&&localState.nonObjects.next(localState.nonObjects.value),notifyAncestors(localState.parent)}function applyProps(instance,props){if(!Object.keys(props).length)return instance;const localState=getLocalState(instance),rootState=localState.store?.get(),changes=function diffProps(instance,props){const propsEntries=Object.entries(props),changes=[];for(const[propKey,propValue]of propsEntries)is.equ(propValue,instance[propKey])||changes.push([propKey,propValue]);return changes}(instance,props);for(let i=0;i<changes.length;i++){let key=changes[i][0];const currentInstance=instance,targetProp=currentInstance[key];let value=changes[i][1];if(is.colorSpaceExist(currentInstance)){const sRGBEncoding=3001,SRGBColorSpace="srgb",LinearSRGBColorSpace="srgb-linear";"encoding"===key?(key="colorSpace",value=value===sRGBEncoding?SRGBColorSpace:LinearSRGBColorSpace):"outputEncoding"===key&&(key="outputColorSpace",value=value===sRGBEncoding?SRGBColorSpace:LinearSRGBColorSpace)}if(targetProp&&targetProp.set&&(targetProp.copy||targetProp instanceof three_module.Layers)){const isColor=targetProp instanceof three_module.Color;if(Array.isArray(value))targetProp.fromArray?targetProp.fromArray(value):targetProp.set(...value);else if(targetProp.copy&&value&&value.constructor&&targetProp.constructor.name===value.constructor.name)targetProp.copy(value),three_module.ColorManagement||rootState.linear||!isColor||targetProp.convertSRGBToLinear();else if(void 0!==value){const isColor=targetProp instanceof three_module.Color;!isColor&&targetProp.setScalar?targetProp.setScalar(value):targetProp instanceof three_module.Layers&&value instanceof three_module.Layers?targetProp.mask=value.mask:targetProp.set(value),three_module.ColorManagement||rootState?.linear||!isColor||targetProp.convertSRGBToLinear()}}else if(currentInstance[key]=value,currentInstance[key]instanceof three_module.Texture&&currentInstance[key].format===three_module.RGBAFormat&&currentInstance[key].type===three_module.UnsignedByteType){const texture=currentInstance[key];is.colorSpaceExist(texture)&&is.colorSpaceExist(rootState.gl)?texture.colorSpace=rootState.gl.outputColorSpace:texture.encoding=rootState.gl.outputEncoding}checkUpdate(targetProp),invalidateInstance(instance)}const instanceHandlers=localState.eventCount;return localState.parent&&rootState.internal&&instance.raycast&&instanceHandlers!==localState.eventCount&&(rootState.removeInteraction(instance.uuid),localState.eventCount&&rootState.addInteraction(instance)),localState.parent&&localState.afterUpdate&&localState.afterUpdate.observed&&changes.length&&localState.afterUpdate.emit(instance),instance}const startWithUndefined=()=>(0,startWith.Z)(void 0);class NgtRxStore extends RxState{constructor(){super(),this.set({__ngt_dummy__:"__ngt_dummy__"});const originalSet=this.set.bind(this);Object.defineProperty(this,"set",{get:()=>(...args)=>{const firstArg=args[0];if(is.obj(firstArg)){const modArgs=Object.entries(firstArg).reduce(((modded,[key,value])=>(modded[key]=void 0===value?this.get(key):value,modded)),{});return originalSet(modArgs)}return originalSet(...args)}});const originalGet=this.get.bind(this);Object.defineProperty(this,"get",{get:()=>(...args)=>0===args.length?originalGet()??{}:originalGet(...args)}),this.initialize()}initialize(){}effect(obs,sideEffectFn){return this.hold(obs.pipe(function tapEffect(effectFn){let prev,cleanupFn=()=>{},firstRun=!1;const teardown=error=>()=>{cleanupFn&&cleanupFn({prev,complete:!0,error})};return(0,tap.M)({next:value=>{cleanupFn&&firstRun&&cleanupFn({prev,complete:!1,error:!1});const cleanUpOrVoid=effectFn(value);cleanUpOrVoid&&(cleanupFn=cleanUpOrVoid),prev=value,firstRun||(firstRun=!0)},complete:teardown(!1),unsubscribe:teardown(!1),error:teardown(!0)})}(sideEffectFn)))}triggerChangeDetection(cdr,keys=[]){let $=this.$;keys.length&&($=(0,combineLatest.z)(keys.map((key=>this.select(key).pipe((0,startWith.Z)(this.get(key)??void 0)))))),this.hold($,(()=>{requestAnimationFrame((()=>{safeDetectChanges(cdr)}))}))}static#_=this.ɵfac=function NgtRxStore_Factory(__ngFactoryType__){return new(__ngFactoryType__||NgtRxStore)};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:NgtRxStore,factory:NgtRxStore.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtRxStore,[{type:core.Injectable}],(function(){return[]}),null);const rootStateMap=new Map,{invalidate,advance}=function createLoop(roots){let repeat,frame,running=!1;function loop(timestamp){frame=requestAnimationFrame(loop),running=!0,repeat=0,flushGlobalEffects("before",timestamp);for(const root of roots.values()){const state=root.get();state.internal.active&&("always"===state.frameloop||state.internal.frames>0)&&!state.gl.xr?.isPresenting&&(repeat+=render(timestamp,root))}if(flushGlobalEffects("after",timestamp),0===repeat)return flushGlobalEffects("tail",timestamp),running=!1,cancelAnimationFrame(frame)}return{loop,invalidate:function invalidate(store,frames=1){const state=store?.get();if(!state)return roots.forEach((root=>invalidate(root,frames)));!state.gl.xr?.isPresenting&&state.internal.active&&"never"!==state.frameloop&&(state.internal.frames=Math.min(60,state.internal.frames+frames),running||(running=!0,requestAnimationFrame(loop)))},advance:function advance(timestamp,runGlobalEffects=!0,store,frame){const state=store?.get();if(runGlobalEffects&&flushGlobalEffects("before",timestamp),state)render(timestamp,store,frame);else for(const root of roots.values())render(timestamp,root);runGlobalEffects&&flushGlobalEffects("after",timestamp)}}}(rootStateMap),shallowLoose={objects:"shallow",strict:!1};class NgtStore extends NgtRxStore{constructor(){super(...arguments),this.parentStore=(0,core.inject)(NgtStore,{optional:!0,skipSelf:!0}),this.window=(0,core.inject)(common.DOCUMENT).defaultView,this.isInit=!1}init(){if(!this.isInit){const position=new three_module.Vector3,defaultTarget=new three_module.Vector3,tempTarget=new three_module.Vector3,getCurrentViewport=(camera=this.get("camera"),target=defaultTarget,size=this.get("size"))=>{const{width,height,top,left}=size,aspect=width/height;target instanceof three_module.Vector3?tempTarget.copy(target):tempTarget.set(...target);const distance=camera.getWorldPosition(position).distanceTo(tempTarget);if(is.orthographicCamera(camera))return{width:width/camera.zoom,height:height/camera.zoom,top,left,factor:1,distance,aspect};const fov=camera.fov*Math.PI/180,h=2*Math.tan(fov/2)*distance,w=h*aspect;return{width:w,height:h,top,left,factor:width/w,distance,aspect}};let performanceTimeout;const setPerformanceCurrent=current=>{this.set((state=>({performance:{...state.performance,current}})))};this.set({get:this.get.bind(this),set:this.set.bind(this),select:this.select.bind(this),ready:!1,scene:prepare(new three_module.Scene,{store:this}),events:{priority:1,enabled:!0,connected:!1},invalidate:(frames=1)=>invalidate(this,frames),advance:(timestamp,runGlobalEffects)=>advance(timestamp,runGlobalEffects,this),legacy:!1,linear:!1,flat:!1,controls:null,clock:new three_module.Clock,pointer:new three_module.Vector2,frameloop:"always",performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const state=this.get();performanceTimeout&&clearTimeout(performanceTimeout),state.performance.current!==state.performance.min&&setPerformanceCurrent(state.performance.min),performanceTimeout=setTimeout((()=>setPerformanceCurrent(this.get("performance","max")||1)),state.performance.debounce)}},size:{width:0,height:0,top:0,left:0},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport},previousStore:this.parentStore,internal:{active:!1,priority:0,frames:0,lastEvent:null,interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,subscribe:(callback,priority=0,store=this)=>{const internal=this.get("internal");return internal.priority=internal.priority+(priority>0?1:0),internal.subscribers.push({priority,store,callback}),internal.subscribers.sort(((a,b)=>(a.priority||0)-(b.priority||0))),()=>{const internal=this.get("internal");internal?.subscribers&&(internal.priority=internal.priority-(priority>0?1:0),internal.subscribers=internal.subscribers.filter((s=>s.callback!==callback)))}}},setEvents:events=>{this.set((state=>({events:{...state.events,...events}})))},setSize:(width,height,top,left)=>{const camera=this.get("camera"),size={width,height,top:top||0,left:left||0};this.set((state=>({size,viewport:{...state.viewport,...getCurrentViewport(camera,defaultTarget,size)}})))},setDpr:dpr=>{const resolved=makeDpr(dpr,this.window);this.set((state=>({viewport:{...state.viewport,dpr:resolved,initialDpr:state.viewport.initialDpr||resolved}})))},setFrameloop:(frameloop="always")=>{const clock=this.get("clock");clock.stop(),clock.elapsedTime=0,"never"!==frameloop&&(clock.start(),clock.elapsedTime=0),this.set({frameloop})},addInteraction:interaction=>{this.set((state=>({internal:{...state.internal,interaction:[...state.internal.interaction,interaction]}})))},removeInteraction:uuid=>{this.set((state=>({internal:{...state.internal,interaction:state.internal.interaction.filter((interaction=>interaction.uuid!==uuid))}})))}}),this.isInit=!0,this.resize()}}configure(inputs,canvasElement){const{gl:glOptions,size:sizeOptions,camera:cameraOptions,raycaster:raycasterOptions,events,orthographic,lookAt,shadows,linear,legacy,flat,dpr,frameloop,performance}=inputs,state=this.get(),stateToUpdate={};let gl=state.gl;state.gl||(stateToUpdate.gl=gl=function makeDefaultRenderer(glOptions,canvasElement){const customRenderer="function"==typeof glOptions?glOptions(canvasElement):glOptions;return null!=customRenderer?.render?customRenderer:new three_module.WebGLRenderer({powerPreference:"high-performance",canvas:canvasElement,antialias:!0,alpha:!0,...glOptions||{}})}(glOptions,canvasElement));let raycaster=state.raycaster;raycaster||(stateToUpdate.raycaster=raycaster=new three_module.Raycaster);const{params,...options}=raycasterOptions||{};if(is.equ(options,raycaster,shallowLoose)||applyProps(raycaster,{...options}),is.equ(params,raycaster.params,shallowLoose)||applyProps(raycaster,{params:{...raycaster.params,...params||{}}}),!state.camera){const isCamera=is.camera(cameraOptions);let camera=isCamera?cameraOptions:function makeDefaultCamera(isOrthographic,size){return isOrthographic?new three_module.OrthographicCamera(0,0,0,0,.1,1e3):new three_module.PerspectiveCamera(75,size.width/size.height,.1,1e3)}(orthographic||!1,state.size);isCamera||(cameraOptions&&applyProps(camera,cameraOptions),cameraOptions?.position||(camera.position.z=5),cameraOptions?.rotation||(Array.isArray(lookAt)?camera.lookAt(lookAt[0],lookAt[1],lookAt[2]):lookAt instanceof three_module.Vector3?camera.lookAt(lookAt):camera.lookAt(0,0,0)),camera.updateProjectionMatrix?.()),is.instance(camera)||(camera=prepare(camera,{store:this})),stateToUpdate.camera=camera}if(!state.xr){const handleXRFrame=(timestamp,frame)=>{"never"!==this.get().frameloop&&advance(timestamp,!0,this,frame)},handleSessionChange=()=>{const state=this.get();state.gl.xr.enabled=state.gl.xr.isPresenting,state.gl.xr.setAnimationLoop(state.gl.xr.isPresenting?handleXRFrame:null),state.gl.xr.isPresenting||invalidate(this)},xr={connect:()=>{gl.xr.addEventListener("sessionstart",handleSessionChange),gl.xr.addEventListener("sessionend",handleSessionChange)},disconnect:()=>{gl.xr.removeEventListener("sessionstart",handleSessionChange),gl.xr.removeEventListener("sessionend",handleSessionChange)}};gl.xr&&xr.connect(),stateToUpdate.xr=xr}if(gl.shadowMap){const isBoolean="boolean"==typeof shadows;if(isBoolean&&gl.shadowMap.enabled!==shadows||!is.equ(shadows,gl.shadowMap,shallowLoose)){const old=gl.shadowMap.enabled;gl.shadowMap.enabled=!!shadows,isBoolean?gl.shadowMap.type=three_module.PCFSoftShadowMap:Object.assign(gl.shadowMap,shadows),old!==gl.shadowMap.enabled&&checkNeedsUpdate(gl.shadowMap)}}if(three_module.ColorManagement){const ColorManagement=three_module.ColorManagement;"enabled"in ColorManagement?ColorManagement.enabled=!legacy??!1:"legacyMode"in ColorManagement&&(ColorManagement.legacyMode=legacy??!0)}applyProps(gl,{outputEncoding:linear?3e3:3001,toneMapping:flat?three_module.NoToneMapping:three_module.ACESFilmicToneMapping}),state.legacy!==legacy&&(stateToUpdate.legacy=legacy),state.linear!==linear&&(stateToUpdate.linear=linear),state.flat!==flat&&(stateToUpdate.flat=flat),gl.setClearAlpha(0),gl.setPixelRatio(makeDpr(state.viewport.dpr)),gl.setSize(state.size.width,state.size.height),!is.obj(glOptions)||"function"==typeof glOptions||is.renderer(glOptions)||is.equ(glOptions,gl,shallowLoose)||applyProps(gl,glOptions),events&&!state.events.handlers&&(stateToUpdate.events=events(this)),performance&&!is.equ(performance,state.performance,shallowLoose)&&(stateToUpdate.performance={...state.performance,...performance}),this.set(stateToUpdate),dpr&&state.viewport.dpr!==makeDpr(dpr)&&state.setDpr(dpr);const size=function computeInitialSize(canvas,defaultSize){if(defaultSize)return defaultSize;if(canvas instanceof HTMLCanvasElement&&canvas.parentElement)return canvas.parentElement.getBoundingClientRect();return{width:0,height:0,top:0,left:0}}(canvasElement,sizeOptions);is.equ(size,state.size,shallowLoose)||state.setSize(size.width,size.height,size.top,size.left),state.frameloop!==frameloop&&state.setFrameloop(frameloop),this.get("ready")||this.set({ready:!0}),this.invalidate()}destroy(canvas){this.set((state=>({internal:{...state.internal,active:!1}}))),setTimeout((()=>{const{gl,xr,events}=this.get();gl&&(events.disconnect&&events.disconnect(),gl.renderLists.dispose(),gl.forceContextLoss(),gl.xr&&gl.xr.enabled&&(gl.xr.setAnimationLoop(null),xr.disconnect()),function dispose(obj){obj.dispose&&!is.scene(obj)&&obj.dispose();for(const p in obj)p.dispose?.(),delete obj[p]}(this.get()),rootStateMap.delete(canvas))}),500)}resize(){const state=this.get();let oldSize=state.size,oldDpr=state.viewport.dpr,oldCamera=state.camera;this.hold((0,combineLatest.z)([this.select("camera"),this.select("size"),this.select("viewport"),this.select("gl")]),(([camera,size,viewport,gl])=>{size===oldSize&&viewport.dpr===oldDpr||(oldSize=size,oldDpr=viewport.dpr,updateCamera(camera,size),gl.setPixelRatio(viewport.dpr),gl.setSize(size.width,size.height)),camera!==oldCamera&&(updateCamera(camera,size),oldCamera=camera,this.set((state=>({viewport:{...state.viewport,...state.viewport.getCurrentViewport(camera)}}))))}))}invalidate(){this.hold(this.select(),(()=>invalidate(this)))}static#_=this.ɵfac=(()=>{let ɵNgtStore_BaseFactory;return function NgtStore_Factory(__ngFactoryType__){return(ɵNgtStore_BaseFactory||(ɵNgtStore_BaseFactory=core["ɵɵgetInheritedFactory"](NgtStore)))(__ngFactoryType__||NgtStore)}})();static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:NgtStore,factory:NgtStore.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtStore,[{type:core.Injectable}],null,null);const NGT_COMPOUND_PREFIXES=new core.InjectionToken("NgtCompoundPrefixes"),catalogue={};function extend(objects){Object.assign(catalogue,objects)}const NGT_CATALOGUE=new core.InjectionToken("THREE Constructors Catalogue",{factory:()=>catalogue});class NgtCommonDirective{constructor(){this.vcr=(0,core.inject)(core.ViewContainerRef),this.template=(0,core.inject)(core.TemplateRef),this.injected=!1,this.shouldCreateView=!0;const commentNode=this.vcr.element.nativeElement;commentNode.__ngt_renderer_add_comment__&&(commentNode.__ngt_renderer_add_comment__(),delete commentNode.__ngt_renderer_add_comment__)}createView(){this.shouldCreateView&&(this.view&&!this.view.destroyed&&this.view.destroy(),this.view=this.vcr.createEmbeddedView(this.template),safeDetectChanges(this.view))}static#_=this.ɵfac=function NgtCommonDirective_Factory(__ngFactoryType__){return new(__ngFactoryType__||NgtCommonDirective)};static#_2=this.ɵdir=core["ɵɵdefineDirective"]({type:NgtCommonDirective})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtCommonDirective,[{type:core.Directive}],(function(){return[]}),null);class NgtArgs extends NgtCommonDirective{constructor(){super(...arguments),this.injectedArgs=[]}set args(args){null==args||!Array.isArray(args)||1===args.length&&null===args[0]||(this.injected=!1,this.injectedArgs=args,this.createView())}get args(){return this.validate()?(this.injected=!0,this.injectedArgs):null}validate(){return!this.injected&&!!this.injectedArgs.length}static#_=this.ɵfac=(()=>{let ɵNgtArgs_BaseFactory;return function NgtArgs_Factory(__ngFactoryType__){return(ɵNgtArgs_BaseFactory||(ɵNgtArgs_BaseFactory=core["ɵɵgetInheritedFactory"](NgtArgs)))(__ngFactoryType__||NgtArgs)}})();static#_2=this.ɵdir=core["ɵɵdefineDirective"]({type:NgtArgs,selectors:[["","args",""]],inputs:{args:"args"},standalone:!0,features:[core["ɵɵInheritDefinitionFeature"]]})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtArgs,[{type:core.Directive,args:[{selector:"[args]",standalone:!0}]}],null,{args:[{type:core.Input}]});class NgtParent extends NgtCommonDirective{constructor(){super(...arguments),this.injectedParent=null}set parent(parent){parent&&(this.injected=!1,this.injectedParent=parent,this.createView())}get parent(){return this.validate()?(this.injected=!0,this.injectedParent):null}validate(){return!this.injected&&!!this.injectedParent}static#_=this.ɵfac=(()=>{let ɵNgtParent_BaseFactory;return function NgtParent_Factory(__ngFactoryType__){return(ɵNgtParent_BaseFactory||(ɵNgtParent_BaseFactory=core["ɵɵgetInheritedFactory"](NgtParent)))(__ngFactoryType__||NgtParent)}})();static#_2=this.ɵdir=core["ɵɵdefineDirective"]({type:NgtParent,selectors:[["","parent",""]],inputs:{parent:"parent"},standalone:!0,features:[core["ɵɵInheritDefinitionFeature"]]})}function releaseInternalPointerCapture(capturedMap,obj,captures,pointerId){const captureData=captures.get(obj);captureData&&(captures.delete(obj),0===captures.size&&(capturedMap.delete(pointerId),captureData.target.releasePointerCapture(pointerId)))}function removeInteractivity(store,object){const internal=store.get("internal");internal.interaction=internal.interaction.filter((o=>o!==object)),internal.initialHits=internal.initialHits.filter((o=>o!==object)),internal.hovered.forEach(((value,key)=>{value.eventObject!==object&&value.object!==object||internal.hovered.delete(key)})),internal.capturedMap.forEach(((captures,pointerId)=>{releaseInternalPointerCapture(internal.capturedMap,object,captures,pointerId)})),store.get("previousStore")&&removeInteractivity(store.get("previousStore"),object)}function createEvents(store){function filterPointerEvents(objects){return objects.filter((obj=>["move","over","enter","out","leave"].some((name=>{const eventName=`pointer${name}`;return getLocalState(obj).handlers?.[eventName]}))))}function cancelPointer(intersections){const{internal}=store.get();for(const hoveredObj of internal.hovered.values())if(!intersections.length||!intersections.find((hit=>hit.object===hoveredObj.object&&hit.index===hoveredObj.index&&hit.instanceId===hoveredObj.instanceId))){const instance=getLocalState(hoveredObj.eventObject),handlers=instance?.handlers;if(internal.hovered.delete(makeId(hoveredObj)),instance?.eventCount){const data={...hoveredObj,intersections};handlers?.pointerout?.(data),handlers?.pointerleave?.(data)}}}function pointerMissed(event,objects){for(let i=0;i<objects.length;i++){const instance=getLocalState(objects[i]);instance?.handlers.pointermissed?.(event)}}return{handlePointer:function handlePointer(name){switch(name){case"pointerleave":case"pointercancel":return()=>cancelPointer([]);case"lostpointercapture":return event=>{const{internal}=store.get();"pointerId"in event&&internal.capturedMap.has(event.pointerId)&&(internal.capturedMap.delete(event.pointerId),cancelPointer([]))}}return function handleEvent(event){const{onPointerMissed,internal}=store.get();internal.lastEvent=event;const isPointerMove="pointermove"===name,isClickEvent="click"===name||"contextmenu"===name||"dblclick"===name,hits=function intersect(event,filter){const state=store.get(),duplicates=new Set,intersections=[],eventObjects=filter?filter(state.internal.interaction):state.internal.interaction;for(let i=0;i<eventObjects.length;i++){const instanceState=getLocalState(eventObjects[i]).store?.get();instanceState&&(instanceState.raycaster.camera=void 0)}state.previousStore||state.events.compute?.(event,store);let hits=eventObjects.flatMap((function handleRaycast(obj){const objStore=getLocalState(obj).store,objState=objStore?.get();return objState&&objState.events.enabled&&null!==objState.raycaster.camera?(void 0===objState.raycaster.camera&&(objState.events.compute?.(event,objStore,objState.previousStore),void 0===objState.raycaster.camera&&(objState.raycaster.camera=null)),objState.raycaster.camera?objState.raycaster.intersectObject(obj,!0):[]):[]})).sort(((a,b)=>{const aState=getLocalState(a.object).store.get(),bState=getLocalState(b.object).store.get();return aState&&bState&&bState.events.priority-aState.events.priority||a.distance-b.distance})).filter((item=>{const id=makeId(item);return!duplicates.has(id)&&(duplicates.add(id),!0)}));state.events.filter&&(hits=state.events.filter(hits,store));for(const hit of hits){let eventObject=hit.object;for(;eventObject;)getLocalState(eventObject).eventCount&&intersections.push({...hit,eventObject}),eventObject=eventObject.parent}if("pointerId"in event&&state.internal.capturedMap.has(event.pointerId))for(const capturedData of state.internal.capturedMap.get(event.pointerId).values())duplicates.has(makeId(capturedData.intersection))||intersections.push(capturedData.intersection);return intersections}(event,isPointerMove?filterPointerEvents:void 0),delta=isClickEvent?function calculateDistance(event){const internal=store.get("internal"),dx=event.offsetX-internal.initialClick[0],dy=event.offsetY-internal.initialClick[1];return Math.round(Math.sqrt(dx*dx+dy*dy))}(event):0;"pointerdown"===name&&(internal.initialClick=[event.offsetX,event.offsetY],internal.initialHits=hits.map((hit=>hit.eventObject))),isClickEvent&&!hits.length&&delta<=2&&(pointerMissed(event,internal.interaction),onPointerMissed&&onPointerMissed(event)),isPointerMove&&cancelPointer(hits),function handleIntersects(intersections,event,delta,callback){const rootState=store.get();if(intersections.length){const localState={stopped:!1};for(const hit of intersections){const state=getLocalState(hit.object).store?.get()||rootState,{raycaster,pointer,camera,internal}=state,unprojectedPoint=new three_module.Vector3(pointer.x,pointer.y,0).unproject(camera),hasPointerCapture=id=>internal.capturedMap.get(id)?.has(hit.eventObject)??!1,setPointerCapture=id=>{const captureData={intersection:hit,target:event.target};internal.capturedMap.has(id)?internal.capturedMap.get(id).set(hit.eventObject,captureData):internal.capturedMap.set(id,new Map([[hit.eventObject,captureData]])),event.target.setPointerCapture(id)},releasePointerCapture=id=>{const captures=internal.capturedMap.get(id);captures&&releaseInternalPointerCapture(internal.capturedMap,hit.eventObject,captures,id)},extractEventProps={};for(const prop in event){const property=event[prop];"function"!=typeof property&&(extractEventProps[prop]=property)}const raycastEvent={...hit,...extractEventProps,pointer,intersections,stopped:localState.stopped,delta,unprojectedPoint,ray:raycaster.ray,camera,stopPropagation(){const capturesForPointer="pointerId"in event&&internal.capturedMap.get(event.pointerId);(!capturesForPointer||capturesForPointer.has(hit.eventObject))&&(raycastEvent.stopped=localState.stopped=!0,internal.hovered.size&&Array.from(internal.hovered.values()).find((i=>i.eventObject===hit.eventObject)))&&cancelPointer([...intersections.slice(0,intersections.indexOf(hit)),hit])},target:{hasPointerCapture,setPointerCapture,releasePointerCapture},currentTarget:{hasPointerCapture,setPointerCapture,releasePointerCapture},nativeEvent:event};if(callback(raycastEvent),!0===localState.stopped)break}}return intersections}(hits,event,delta,(function onIntersect(data){const eventObject=data.eventObject,instance=getLocalState(eventObject),handlers=instance?.handlers;if(instance?.eventCount)if(isPointerMove){if(handlers?.pointerover||handlers?.pointerenter||handlers?.pointerout||handlers?.pointerleave){const id=makeId(data),hoveredItem=internal.hovered.get(id);hoveredItem?hoveredItem.stopped&&data.stopPropagation():(internal.hovered.set(id,data),handlers.pointerover?.(data),handlers.pointerenter?.(data))}handlers?.pointermove?.(data)}else{const handler=handlers?.[name];handler?isClickEvent&&!internal.initialHits.includes(eventObject)||(pointerMissed(event,internal.interaction.filter((object=>!internal.initialHits.includes(object)))),handler(data)):isClickEvent&&internal.initialHits.includes(eventObject)&&pointerMissed(event,internal.interaction.filter((object=>!internal.initialHits.includes(object))))}}))}}}}function attach(object,value,paths=[]){const[base,...remaining]=paths;base&&(0===remaining.length?applyProps(object,{[base]:value}):(!function assignEmpty(obj,base){(!Object.hasOwn(obj,base)&&Reflect&&Reflect.has&&!Reflect.has(obj,base)||void 0===obj[base])&&(obj[base]={})}(object,base),attach(object[base],value,remaining)))}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtParent,[{type:core.Directive,args:[{selector:"[parent]",standalone:!0}]}],null,{parent:[{type:core.Input}]});const SPECIAL_DOM_TAG_NGT_PORTAL="ngt-portal",SPECIAL_DOM_TAG_NGT_PRIMITIVE="ngt-primitive",SPECIAL_DOM_TAG_NGT_VALUE="ngt-value",SPECIAL_PROPERTIES_COMPOUND="ngtCompound",SPECIAL_PROPERTIES_RENDER_PRIORITY="priority",SPECIAL_PROPERTIES_ATTACH="attach",SPECIAL_PROPERTIES_VALUE="rawValue",SPECIAL_PROPERTIES_REF="ref",SPECIAL_EVENTS_BEFORE_RENDER="beforeRender",SPECIAL_EVENTS_AFTER_UPDATE="afterUpdate",SPECIAL_EVENTS_AFTER_ATTACH="afterAttach";function attachThreeChild(parent,child){const pLS=getLocalState(parent),cLS=getLocalState(child);if(!pLS||!cLS)throw new Error("[NGT] THREE instances need to be prepared with local state.");let added=!1;if(cLS.store&&cLS.store!==pLS.store.get("previousStore")||(cLS.store=pLS.store),cLS.attach){const attachProp=cLS.attach;if("function"==typeof attachProp){const attachCleanUp=attachProp(parent,child,cLS.store);attachCleanUp&&(cLS.previousAttach=attachCleanUp)}else{if("none"===attachProp[0])return void invalidateInstance(child);if("material"===attachProp[0]&&attachProp[1]&&"number"==typeof Number(attachProp[1])&&is.material(child)&&!Array.isArray(parent.material)&&(parent.material=[]),cLS.isRaw){if(cLS.parent=parent,void 0===child.__ngt_renderer__[11])return;attach(parent,child.__ngt_renderer__[11],attachProp)}else attach(parent,child,attachProp);cLS.previousAttach=attachProp.reduce(((value,property)=>value[property]),parent)}}else is.object3D(parent)&&is.object3D(child)&&(parent.add(child),added=!0);pLS.add(child,added?"objects":"nonObjects"),cLS.parent=parent,cLS.afterAttach&&cLS.afterAttach.emit({parent,node:child}),invalidateInstance(child),invalidateInstance(parent)}function removeThreeChild(parent,child,dispose){const pLS=getLocalState(parent),cLS=getLocalState(child);cLS.parent=null,pLS.objects&&pLS.remove(child,"objects"),pLS.nonObjects&&pLS.remove(child,"nonObjects"),cLS.attach?function detach(parent,child,attachProp){const childLocalState=getLocalState(child);Array.isArray(attachProp)?attach(parent,childLocalState.previousAttach,attachProp):childLocalState.previousAttach()}(parent,child,cLS.attach):is.object3D(parent)&&is.object3D(child)&&(parent.remove(child),removeInteractivity(cLS.store||pLS.store,child));const isPrimitive=cLS.primitive;isPrimitive||(removeThreeRecursive(cLS.objects?.value||[],child,!!dispose),removeThreeRecursive(child.childre,child,!!dispose)),isPrimitive||!child.dispose||is.scene(child)||queueMicrotask((()=>child.dispose())),invalidateInstance(parent)}function removeThreeRecursive(array,parent,dispose){array&&[...array].forEach((child=>removeThreeChild(parent,child,dispose)))}function eventToHandler(callback,cdr,targetCdr){return event=>{callback(event),safeDetectChanges(targetCdr),safeDetectChanges(cdr)}}class NgtRendererStore{constructor(root){this.root=root,this.comments=[]}createNode(type,node){const state=[type,null,null,[],!1,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0],rendererNode=Object.assign(node,{__ngt_renderer__:state});return rendererNode.ownerDocument||(rendererNode.ownerDocument=this.root.document),"three"!==state[0]&&(state[14]=()=>(0,core.getDebugNode)(rendererNode).injector),"comment"===state[0]?(rendererNode.__ngt_renderer_add_comment__=node=>{node&&"portal"===node.__ngt_renderer__[0]?this.portals.push(node):this.comments.push(rendererNode)},rendererNode):"compound"===state[0]?(state[8]=new Set,state[9]={},state[10]={},rendererNode):rendererNode}setParent(node,parent){node.__ngt_renderer__[1]||(node.__ngt_renderer__[1]=parent)}addChild(node,child){node.__ngt_renderer__[3].includes(child)||node.__ngt_renderer__[3].push(child)}removeChild(node,child){const index=node.__ngt_renderer__[3].findIndex((c=>child===c));index>=0&&node.__ngt_renderer__[3].splice(index,1)}setCompound(compound,instance){const rS=compound.__ngt_renderer__;rS[7]=instance;const attributes=Object.keys(rS[9]),properties=Object.keys(rS[10]);for(const key of attributes)this.applyAttribute(instance,key,rS[9][key]);for(const key of properties)this.applyProperty(instance,key,rS[10][key]);this.executeOperation(compound)}queueOperation(node,op){node.__ngt_renderer__[8].add(op)}executeOperation(node,type="op"){const rS=node.__ngt_renderer__;rS[8]?.size&&rS[8].forEach((op=>{op[0]===type&&(op[1](),rS[8].delete(op))}))}processPortalContainer(portal){const injectorFactory=portal.__ngt_renderer__[14],injector=injectorFactory?.();if(!injector)return;const portalStore=injector.get(NgtStore,null);if(!portalStore)return;const portalContainer=portalStore.get("scene");portalContainer&&(portal.__ngt_renderer__[13]=this.createNode("three",portalContainer))}applyAttribute(node,name,value){const rS=node.__ngt_renderer__;if(!rS[4]){if(name===SPECIAL_PROPERTIES_RENDER_PRIORITY){let priority=Number(value);isNaN(priority)&&(priority=0,console.warn('[NGT] "priority" is an invalid number, default to 0')),getLocalState(node).priority=priority}if(name!==SPECIAL_PROPERTIES_COMPOUND)if(name!==SPECIAL_PROPERTIES_ATTACH){if(name===SPECIAL_PROPERTIES_VALUE){let maybeCoerced=value;return""===maybeCoerced||"true"===maybeCoerced||"false"===maybeCoerced?maybeCoerced="true"===maybeCoerced||""===maybeCoerced:isNaN(Number(maybeCoerced))||(maybeCoerced=Number(maybeCoerced)),void(rS[11]=maybeCoerced)}applyProps(node,{[name]:value})}else{const paths=value.split(".");paths.length&&(getLocalState(node).attach=paths)}else rS[5]=[""===value||"first"===value,{}]}}applyProperty(node,name,value){const rS=node.__ngt_renderer__;if(rS[4])return;if(name===SPECIAL_PROPERTIES_REF&&is.ref(value))return rS[12]=value,void(value.nativeElement=node);const parent=getLocalState(node).parent||rS[1];if(getLocalState(node).isRaw&&name===SPECIAL_PROPERTIES_VALUE)return rS[11]=value,void(parent&&attachThreeChild(parent,node));if(name===SPECIAL_PROPERTIES_ATTACH)return getLocalState(node).attach=Array.isArray(value)?value.map((v=>v.toString())):value,void(parent&&attachThreeChild(parent,node));const compound=rS[5];compound?.[1]&&name in compound[1]&&!compound[0]&&(value=compound[1][name]),applyProps(node,{[name]:value})}isCompound(name){return this.root.compoundPrefixes.some((prefix=>name.startsWith(prefix)))}isDOM(node){const rS=node.__ngt_renderer__;return!rS||"compound"!==rS[0]&&(node instanceof Element||node instanceof Document||node instanceof Window)}get rootScene(){return this.root.store.get("scene")}get rootCdr(){return this.root.cdr}get portals(){return this.root.portals}getClosestParentWithInstance(node){let parent=node.__ngt_renderer__[1];for(;parent&&"three"!==parent.__ngt_renderer__[0];)parent=parent.__ngt_renderer__[13]?parent.__ngt_renderer__[13]:parent.__ngt_renderer__[1];return parent}getClosestParentWithCompound(node){if(node.__ngt_renderer__[6])return node.__ngt_renderer__[6];let parent=node.__ngt_renderer__[1];if(parent&&"compound"===parent.__ngt_renderer__[0]&&!parent.__ngt_renderer__[7])return parent;for(;parent&&("three"===parent.__ngt_renderer__[0]||!parent.__ngt_renderer__[6]||"compound"!==parent.__ngt_renderer__[0]);)parent=parent.__ngt_renderer__[1];return parent?"three"===parent.__ngt_renderer__[0]&&parent.__ngt_renderer__[6]?parent.__ngt_renderer__[6]:parent.__ngt_renderer__[7]?null:parent:void 0}getCreationState(){return{injectedArgs:this.firstNonInjectedDirective(NgtArgs)?.args||[],injectedParent:this.firstNonInjectedDirective(NgtParent)?.parent||null,store:this.tryGetPortalStore()}}destroy(node,parent){const rS=node.__ngt_renderer__;if(!rS[4]){if("three"===rS[0]){rS[5]=void 0,rS[6]=void 0;const localState=getLocalState(node);localState.objects&&(localState.objects.value.forEach((obj=>this.destroy(obj,parent))),localState.objects.complete()),localState.nonObjects&&(localState.nonObjects.value.forEach((obj=>this.destroy(obj,parent))),localState.nonObjects.complete()),localState.afterUpdate&&localState.afterUpdate.complete(),localState.afterAttach&&localState.afterAttach.complete(),delete localState.objects,delete localState.nonObjects,delete localState.add,delete localState.remove,delete localState.afterUpdate,delete localState.afterAttach,delete localState.store,delete localState.handlers,localState.primitive||delete node.__ngt__}if("comment"===rS[0]){rS[14]=null,delete node.__ngt_renderer_add_comment__;const index=this.comments.findIndex((comment=>comment===node));index>-1&&this.comments.splice(index,1)}if("portal"===rS[0]){rS[14]=null;const index=this.portals.findIndex((portal=>portal===node));index>-1&&this.portals.splice(index,1)}"compound"===rS[0]&&(rS[7]=void 0,rS[9]=null,rS[10]=null,this.executeOperation(node,"cleanUp"),rS[8].clear(),rS[8]=null),rS[12]&&(rS[12].nativeElement=null,rS[12]=void 0),rS[1]=null;for(const renderChild of rS[3]||[])"three"===renderChild.__ngt_renderer__[0]&&parent&&removeThreeChild(parent,renderChild,!0),this.destroy(renderChild,parent);rS[3]=[],rS[4]=!0,parent&&this.removeChild(parent,node)}}firstNonInjectedDirective(dir){let directive,i=this.comments.length-1;for(;i>=0;){const comment=this.comments[i];if(comment.__ngt_renderer__[4]){i--;continue}const injector=comment.__ngt_renderer__[14]();if(!injector){i--;continue}const instance=injector.get(dir,null);if(instance&&instance.validate()){directive=instance;break}i--}return directive}tryGetPortalStore(){let store,i=this.portals.length-1;for(;i>=0;){const portal=this.portals[i];if(portal.__ngt_renderer__[4]){i--;continue}const injector=portal.__ngt_renderer__[14]();if(!injector){i--;continue}const instance=injector.get(NgtStore,null);if(instance&&instance.get("previousStore")){store=instance;break}i--}return store||this.root.store}}class NgtRendererFactory{constructor(){this.delegateRendererFactory=(0,core.inject)(core.RendererFactory2,{skipSelf:!0}),this.catalogue=(0,core.inject)(NGT_CATALOGUE),this.rendererMap=new Map,this.routedSet=new Set,this.rendererStore=new NgtRendererStore({store:(0,core.inject)(NgtStore),cdr:(0,core.inject)(core.ChangeDetectorRef),portals:[],compoundPrefixes:(0,core.inject)(NGT_COMPOUND_PREFIXES),document:(0,core.inject)(common.DOCUMENT)})}createRenderer(hostElement,type){const delegateRenderer=this.delegateRendererFactory.createRenderer(hostElement,type);if(!type)return delegateRenderer;type.type.isRoutedScene&&this.routedSet.add(type.id);let renderer=this.rendererMap.get(type.id);return renderer||(renderer=new NgtRenderer(delegateRenderer,this.rendererStore,this.catalogue,!hostElement&&(0===this.routedSet.size||this.routedSet.has(type.id))),this.rendererMap.set(type.id,renderer)),renderer}static#_=this.ɵfac=function NgtRendererFactory_Factory(__ngFactoryType__){return new(__ngFactoryType__||NgtRendererFactory)};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:NgtRendererFactory,factory:NgtRendererFactory.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtRendererFactory,[{type:core.Injectable}],null,null);class NgtRenderer{constructor(delegate,store,catalogue,root=!0){this.delegate=delegate,this.store=store,this.catalogue=catalogue,this.root=root,this.createText=this.delegate.createText.bind(this.delegate),this.destroy=this.delegate.destroy.bind(this.delegate),this.destroyNode=null,this.selectRootElement=this.delegate.selectRootElement.bind(this.delegate),this.nextSibling=this.delegate.nextSibling.bind(this.delegate),this.removeAttribute=this.delegate.removeAttribute.bind(this.delegate),this.addClass=this.delegate.addClass.bind(this.delegate),this.removeClass=this.delegate.removeClass.bind(this.delegate),this.setStyle=this.delegate.setStyle.bind(this.delegate),this.removeStyle=this.delegate.removeStyle.bind(this.delegate),this.setValue=this.delegate.setValue.bind(this.delegate)}createElement(name,namespace){const element=this.delegate.createElement(name,namespace);if(this.root){this.root=!1;const node=this.store.createNode("three",this.store.rootScene);return node.__ngt_renderer__[14]=()=>(0,core.getDebugNode)(element).injector,node}if(this.store.isCompound(name))return this.store.createNode("compound",element);if(name===SPECIAL_DOM_TAG_NGT_PORTAL)return this.store.createNode("portal",element);if(name===SPECIAL_DOM_TAG_NGT_VALUE)return this.store.createNode("three",Object.assign({__ngt_renderer__:{rawValue:void 0}},{__ngt__:{isRaw:!0}}));const{injectedArgs,injectedParent,store}=this.store.getCreationState();let parent=injectedParent;if("string"==typeof injectedParent&&(parent=store.get("scene").getObjectByName(injectedParent)),name===SPECIAL_DOM_TAG_NGT_PRIMITIVE){if(!injectedArgs[0])throw new Error("[NGT] ngt-primitive without args is invalid");const object=injectedArgs[0];let localState=getLocalState(object);Object.keys(localState).length||(prepare(object,{store,args:injectedArgs,primitive:!0}),localState=getLocalState(object)),localState.store||(localState.store=store);const node=this.store.createNode("three",object);return parent&&(node.__ngt_renderer__[2]=parent),node}const threeName=function kebabToPascal(str){return str.split("-").map((part=>part.charAt(0).toUpperCase()+part.slice(1))).join("")}(name.startsWith("ngt")?name.slice(4):name),threeTarget=this.catalogue[threeName];if(threeTarget){const instance=prepare(new threeTarget(...injectedArgs),{store,args:injectedArgs}),node=this.store.createNode("three",instance),localState=getLocalState(instance);return is.geometry(instance)?localState.attach=["geometry"]:is.material(instance)&&(localState.attach=["material"]),parent&&(node.__ngt_renderer__[2]=parent),node}return this.store.createNode("dom",element)}createComment(value){return this.store.createNode("comment",this.delegate.createComment(value))}appendChild(parent,newChild){if(newChild instanceof Text)return;const cRS=newChild.__ngt_renderer__,pRS=parent.__ngt_renderer__;if("comment"===cRS[0])return void this.store.setParent(newChild,parent);if(cRS[2]){if(is.ref(cRS[2]))return void cRS[2].$.pipe((0,take.s)(1)).subscribe((val=>{val!==parent&&this.appendChild(val,newChild)}));if(parent!==cRS[2])return void this.appendChild(cRS[2],newChild)}if(this.store.setParent(newChild,parent),this.store.addChild(parent,newChild),"portal"===cRS[0])return this.store.processPortalContainer(newChild),void(cRS[13]&&this.appendChild(parent,cRS[13]));if("portal"===pRS[0])return this.store.processPortalContainer(parent),void(pRS[13]&&this.appendChild(pRS[13],newChild));if("three"===pRS[0]&&"three"===cRS[0]){if(getLocalState(newChild).parent)return;if(attachThreeChild(parent,newChild),!cRS[5])return;const closestGrandparentWithCompound=this.store.getClosestParentWithCompound(parent);if(!closestGrandparentWithCompound)return;return void this.appendChild(closestGrandparentWithCompound,newChild)}if("three"===pRS[0])for(const renderChild of cRS[3])this.appendChild(parent,renderChild);"compound"===pRS[0]&&(pRS[7]||"three"!==cRS[0]||(cRS[5]?this.store.setCompound(parent,newChild):cRS[6]||(cRS[6]=parent)),pRS[7]&&"three"===cRS[0]&&cRS[5]&&pRS[7]!==newChild&&this.store.setCompound(parent,newChild));if("three"===cRS[0]&&!getLocalState(newChild).parent||("dom"===pRS[0]||"compound"===pRS[0]&&!pRS[7])&&("dom"===cRS[0]||"compound"===cRS[0]&&!cRS[7])){const closestGrandparentInstance=this.store.getClosestParentWithInstance(parent);closestGrandparentInstance&&this.appendChild(closestGrandparentInstance,newChild)}}insertBefore(parent,newChild){null!=parent&&parent.__ngt_renderer__&&parent!==newChild&&this.appendChild(parent,newChild)}removeChild(parent,oldChild,isHostElement){const pRS=parent.__ngt_renderer__,cRS=oldChild.__ngt_renderer__;if("three"===pRS[0]&&"three"===cRS[0])return removeThreeChild(parent,oldChild,!0),void this.store.destroy(oldChild,parent);if("compound"===pRS[0]&&pRS[1])return void this.removeChild(pRS[1],oldChild,isHostElement);if("three"===pRS[0])return void this.store.destroy(oldChild,parent);const closestGrandparentInstance=this.store.getClosestParentWithInstance(parent);closestGrandparentInstance&&this.removeChild(closestGrandparentInstance,oldChild,isHostElement),this.store.destroy(oldChild,closestGrandparentInstance)}parentNode(node){const rS=node.__ngt_renderer__;return rS?.[1]?rS[1]:this.delegate.parentNode(node)}setAttribute(el,name,value,namespace){const rS=el.__ngt_renderer__;if("compound"===rS[0])return rS[9][name]=value,rS[7]?void this.setAttribute(rS[7],name,value,namespace):void this.store.queueOperation(el,["op",()=>this.setAttribute(el,name,value,namespace)]);"three"===rS[0]&&this.store.applyAttribute(el,name,value)}setProperty(el,name,value){const rS=el.__ngt_renderer__;if("compound"===rS[0])return rS[10][name]=value,rS[7]?(rS[7].__ngt_renderer__[5]&&Object.assign(rS[7].__ngt_renderer__[5],{props:Object.assign(rS[7].__ngt_renderer__[5],{[name]:value})}),void this.setProperty(rS[7],name,value)):void this.store.queueOperation(el,["op",()=>this.setProperty(el,name,value)]);"three"===rS[0]&&this.store.applyProperty(el,name,value)}listen(target,eventName,callback){const rS=target.__ngt_renderer__,targetCdr=rS?.[14]?.().get(core.ChangeDetectorRef,null);if("three"===rS[0]||"compound"===rS[0]&&rS[7]){return function processThreeEvent(instance,priority,eventName,callback,cdr,targetCdr){const lS=getLocalState(instance);if(eventName===SPECIAL_EVENTS_BEFORE_RENDER)return lS.store.get("internal").subscribe((state=>callback({state,object:instance})),priority||lS.priority||0);if(eventName===SPECIAL_EVENTS_AFTER_UPDATE||eventName===SPECIAL_EVENTS_AFTER_ATTACH){let emitter=lS[eventName];emitter||(emitter=lS[eventName]=new core.EventEmitter);const sub=emitter.subscribe(callback);return sub.unsubscribe.bind(sub)}lS.handlers||(lS.handlers={});const previousHandler=lS.handlers[eventName];return Object.assign(lS.handlers,{[eventName]:eventToHandler((event=>{previousHandler&&previousHandler(event),callback(event)}),cdr,targetCdr)}),lS.eventCount+=1,1===lS.eventCount&&instance.raycast&&lS.store.get("addInteraction")(instance),()=>{const localState=getLocalState(instance);localState&&localState.eventCount&&localState.store.get("removeInteraction")(instance.uuid)}}(rS[7]||target,getLocalState(target).priority||0,eventName,callback,this.store.rootCdr,targetCdr)}"compound"!==rS[0]||rS[7]||this.store.queueOperation(target,["op",()=>this.store.queueOperation(target,["cleanUp",this.listen(target,eventName,callback)])]);const callbackWithCdr=event=>{const value=callback(event);return safeDetectChanges(targetCdr),safeDetectChanges(this.store.rootCdr),value};if(!rS)return this.delegate.listen(target,eventName,callbackWithCdr);if(this.store.isDOM(target))return this.delegate.listen(target,eventName,callbackWithCdr);if(target===this.store.rootScene){let[domTarget,event]=eventName.split(":");null==event&&(event=domTarget,domTarget="");const eventTarget="window"===domTarget?target.ownerDocument.defaultView:target.ownerDocument;return this.delegate.listen(eventTarget,event,callbackWithCdr)}return()=>{}}get data(){return this.delegate.data}}function provideNgtRenderer({store,changeDetectorRef,compoundPrefixes=[]}){return compoundPrefixes.includes("ngts")||compoundPrefixes.push("ngts"),compoundPrefixes.includes("ngtp")||compoundPrefixes.push("ngtp"),(0,core.makeEnvironmentProviders)([{provide:core.RendererFactory2,useClass:NgtRendererFactory},{provide:NgtStore,useValue:store},{provide:core.ChangeDetectorRef,useValue:changeDetectorRef},{provide:NGT_COMPOUND_PREFIXES,useValue:compoundPrefixes}])}const DOM_EVENTS={click:!1,contextmenu:!1,dblclick:!1,wheel:!1,pointerdown:!0,pointerup:!0,pointerleave:!0,pointermove:!0,pointercancel:!0,lostpointercapture:!0};function createPointerEvents(store){const{handlePointer}=createEvents(store);return{priority:1,enabled:!0,compute:(event,root)=>{const state=root.get();state.pointer.set(event.offsetX/state.size.width*2-1,-event.offsetY/state.size.height*2+1),state.raycaster.setFromCamera(state.pointer,state.camera)},connected:void 0,handlers:Object.keys(DOM_EVENTS).reduce(((handlers,supportedEventName)=>(handlers[supportedEventName]=handlePointer(supportedEventName),handlers)),{}),connect:target=>{const state=store.get();state.events.disconnect?.(),state.setEvents({connected:target}),Object.entries(state.events.handlers??{}).forEach((([eventName,eventHandler])=>{const passive=DOM_EVENTS[eventName];target.addEventListener(eventName,eventHandler,{passive})}))},disconnect:()=>{const{events,setEvents}=store.get();events.connected&&(Object.entries(events.handlers??{}).forEach((([eventName,eventHandler])=>{events.connected instanceof HTMLElement&&events.connected.removeEventListener(eventName,eventHandler)})),setEvents({connected:void 0}))}}}class NgtCanvas extends NgtRxStore{constructor(){super(...arguments),this.cdr=(0,core.inject)(core.ChangeDetectorRef),this.envInjector=(0,core.inject)(core.EnvironmentInjector),this.host=(0,core.inject)(core.ElementRef),this.store=(0,core.inject)(NgtStore),this.hbClass=!0,this.sceneGraphInputs={},this.compoundPrefixes=[],this.created=new core.EventEmitter,this.pointerMissed=new core.EventEmitter}initialize(){super.initialize(),this.set({shadows:!1,linear:!1,flat:!1,legacy:!1,orthographic:!1,frameloop:"always",dpr:[1,2],events:createPointerEvents})}get hbPointerEvents(){return this.get("eventSource")!==this.host.nativeElement?"none":"auto"}set linear(linear){this.set({linear})}set legacy(legacy){this.set({legacy})}set flat(flat){this.set({flat})}set orthographic(orthographic){this.set({orthographic})}set frameloop(frameloop){this.set({frameloop})}set dpr(dpr){this.set({dpr})}set raycaster(raycaster){this.set({raycaster})}set shadows(shadows){this.set({shadows})}set camera(camera){this.set({camera})}set gl(gl){this.set({gl})}set eventSource(eventSource){this.set({eventSource})}set eventPrefix(eventPrefix){this.set({eventPrefix})}set lookAt(lookAt){this.set({lookAt})}set performance(performance){this.set({performance})}ngOnChanges(changes){changes.sceneGraphInputs&&this.glRef&&this.setSceneGraphInputs()}ngOnInit(){this.get("eventSource")||(this.eventSource=this.host.nativeElement),this.pointerMissed.observed&&this.store.set({onPointerMissed:event=>{this.pointerMissed.emit(event),safeDetectChanges(this.cdr)}}),this.store.init(),rootStateMap.set(this.glCanvas.nativeElement,this.store),this.hold(this.store.select("ready").pipe((0,filter.p)((ready=>ready))),(()=>this.storeReady()))}onResize({width,height}){width>0&&height>0&&(this.store.isInit||this.store.init(),this.store.configure(this.get(),this.glCanvas.nativeElement))}storeReady(){this.store.set((state=>({internal:{...state.internal,active:!0}})));const inputs=this.get(),state=this.store.get();state.events.connect?.(is.ref(inputs.eventSource)?inputs.eventSource.nativeElement:inputs.eventSource),inputs.eventPrefix&&state.setEvents({compute:(event,store)=>{const innerState=store.get(),x=event[inputs.eventPrefix+"X"],y=event[inputs.eventPrefix+"Y"];innerState.pointer.set(x/innerState.size.width*2-1,-y/innerState.size.height*2+1),innerState.raycaster.setFromCamera(innerState.pointer,innerState.camera)}}),this.created.observed&&this.created.emit(this.store.get()),this.glRef&&this.glRef.destroy(),requestAnimationFrame((()=>{const{store,cdr:changeDetectorRef,compoundPrefixes}=this;this.glEnvInjector=(0,core.createEnvironmentInjector)([provideNgtRenderer({store,changeDetectorRef,compoundPrefixes})],this.envInjector),this.glRef=this.glAnchor.createComponent(this.sceneGraph,{environmentInjector:this.glEnvInjector}),this.glRef.changeDetectorRef.detach(),this.setSceneGraphInputs(),this.overrideDetectChanges(),this.cdr.detectChanges()}))}ngOnDestroy(){this.glRef&&this.glRef.destroy(),this.glEnvInjector&&this.glEnvInjector.destroy(),injectNgtLoader.destroy(),this.store.destroy(this.glCanvas.nativeElement),super.ngOnDestroy()}overrideDetectChanges(){const originalDetectChanges=this.cdr.detectChanges.bind(this.cdr);this.cdr.detectChanges=()=>{originalDetectChanges(),safeDetectChanges(this.glRef?.changeDetectorRef)}}setSceneGraphInputs(){for(const key of Object.keys(this.sceneGraphInputs))this.glRef.setInput(key,this.sceneGraphInputs[key]);safeDetectChanges(this.cdr)}static#_=this.ɵfac=(()=>{let ɵNgtCanvas_BaseFactory;return function NgtCanvas_Factory(__ngFactoryType__){return(ɵNgtCanvas_BaseFactory||(ɵNgtCanvas_BaseFactory=core["ɵɵgetInheritedFactory"](NgtCanvas)))(__ngFactoryType__||NgtCanvas)}})();static#_2=this.ɵcmp=core["ɵɵdefineComponent"]({type:NgtCanvas,selectors:[["ngt-canvas"]],viewQuery:function NgtCanvas_Query(rf,ctx){if(1&rf&&(core["ɵɵviewQuery"](_c0,7),core["ɵɵviewQuery"](_c0,7,core.ViewContainerRef)),2&rf){let _t;core["ɵɵqueryRefresh"](_t=core["ɵɵloadQuery"]())&&(ctx.glCanvas=_t.first),core["ɵɵqueryRefresh"](_t=core["ɵɵloadQuery"]())&&(ctx.glAnchor=_t.first)}},hostVars:4,hostBindings:function NgtCanvas_HostBindings(rf,ctx){2&rf&&(core["ɵɵstyleProp"]("pointer-events",ctx.hbPointerEvents),core["ɵɵclassProp"]("ngt-canvas",ctx.hbClass))},inputs:{sceneGraph:"sceneGraph",sceneGraphInputs:"sceneGraphInputs",compoundPrefixes:"compoundPrefixes",linear:"linear",legacy:"legacy",flat:"flat",orthographic:"orthographic",frameloop:"frameloop",dpr:"dpr",raycaster:"raycaster",shadows:"shadows",camera:"camera",gl:"gl",eventSource:"eventSource",eventPrefix:"eventPrefix",lookAt:"lookAt",performance:"performance"},outputs:{created:"created",pointerMissed:"pointerMissed"},standalone:!0,features:[core["ɵɵProvidersFeature"]([NgtStore,provideNgxResizeOptions({emitInZone:!1})]),core["ɵɵInheritDefinitionFeature"],core["ɵɵNgOnChangesFeature"],core["ɵɵStandaloneFeature"]],decls:3,vars:0,consts:[["glCanvas",""],[2,"height","100%","width","100%",3,"ngxResize"],[2,"display","block"]],template:function NgtCanvas_Template(rf,ctx){if(1&rf){const _r1=core["ɵɵgetCurrentView"]();core["ɵɵelementStart"](0,"div",1),core["ɵɵlistener"]("ngxResize",(function NgtCanvas_Template_div_ngxResize_0_listener($event){return core["ɵɵrestoreView"](_r1),core["ɵɵresetView"](ctx.onResize($event))})),core["ɵɵelement"](1,"canvas",2,0),core["ɵɵelementEnd"]()}},dependencies:[NgxResize],styles:["[_nghost-%COMP%]{display:block;position:relative;width:100%;height:100%;overflow:hidden}"]})}function injectNgtDestroy(cb){try{const cdr=(0,core.inject)(core.ChangeDetectorRef),destroy$=new ReplaySubject.m;return queueMicrotask((()=>{cdr.onDestroy((()=>{destroy$.next(),destroy$.complete(),cb?.()}))})),{destroy$,cdr}}catch(e){throw new Error("[NGT] injectNgtDestroy is being called outside of Constructor Context")}}function injectBeforeRender(cb,priority=0){try{const store=(0,core.inject)(NgtStore),sub=store.get("internal").subscribe(cb,priority,store);return injectNgtDestroy((()=>{sub()})),sub}catch(e){throw new Error('[NGT] "injectBeforeRender" is invoked outside of Constructor Context')}}function injectNgtRef(initialValue=null){const ref=is.ref(initialValue)?initialValue:new core.ElementRef(initialValue);let lastValue=ref.nativeElement;const cdRefs=[],ref$=new BehaviorSubject.t(lastValue),{destroy$,cdr}=injectNgtDestroy((()=>{ref$.complete()}));cdRefs.push(cdr);const obs$=ref$.asObservable().pipe((0,distinctUntilChanged.F)(),(0,takeUntil.Q)(destroy$)),$=obs$.pipe((0,filter.p)(((value,index)=>index>0||null!=value)),(0,takeUntil.Q)(destroy$));return Object.defineProperty(ref,"nativeElement",{set:newVal=>{if(ref.nativeElement!==newVal){ref$.next(newVal),lastValue=ref.nativeElement,ref.nativeElement=newVal;const cds=[...cdRefs];for(let i=0;i<cds.length;i++){const cd=cds[i];cd.destroyed?cdRefs.splice(i,1):safeDetectChanges(cd)}}},get:()=>ref$.value}),Object.assign(ref,{subscribe:callback=>obs$.subscribe((current=>{callback(current,lastValue),lastValue=current})),$,children$:(type="objects")=>$.pipe((0,switchMap.n)((instance=>{const localState=getLocalState(instance);return localState.objects&&localState.nonObjects?(0,merge.h)(localState.objects,localState.nonObjects).pipe((0,map.T)((()=>{try{return"both"===type?[...localState.objects.value,...localState.nonObjects.value]:localState[type].value}catch(e){return console.error(`[NGT] Exception in accessing children of ${instance}`),[]}}))):(0,of.of)([])})),(0,filter.p)(((children,index)=>index>0||children.length>0)),(0,takeUntil.Q)(destroy$)),useCDR:cdr=>{cdRefs.push(cdr)}})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtCanvas,[{type:core.Component,args:[{selector:"ngt-canvas",standalone:!0,template:'\n        <div (ngxResize)="onResize($event)" style="height: 100%; width: 100%;">\n            <canvas #glCanvas style="display: block;"></canvas>\n        </div>\n    ',imports:[NgxResize],providers:[NgtStore,provideNgxResizeOptions({emitInZone:!1})],styles:[":host{display:block;position:relative;width:100%;height:100%;overflow:hidden}\n"]}]}],null,{hbClass:[{type:core.HostBinding,args:["class.ngt-canvas"]}],hbPointerEvents:[{type:core.HostBinding,args:["style.pointerEvents"]}],sceneGraph:[{type:core.Input}],sceneGraphInputs:[{type:core.Input}],compoundPrefixes:[{type:core.Input}],linear:[{type:core.Input}],legacy:[{type:core.Input}],flat:[{type:core.Input}],orthographic:[{type:core.Input}],frameloop:[{type:core.Input}],dpr:[{type:core.Input}],raycaster:[{type:core.Input}],shadows:[{type:core.Input}],camera:[{type:core.Input}],gl:[{type:core.Input}],eventSource:[{type:core.Input}],eventPrefix:[{type:core.Input}],lookAt:[{type:core.Input}],performance:[{type:core.Input}],created:[{type:core.Output}],pointerMissed:[{type:core.Output}],glCanvas:[{type:core.ViewChild,args:["glCanvas",{static:!0}]}],glAnchor:[{type:core.ViewChild,args:["glCanvas",{static:!0,read:core.ViewContainerRef}]}]});class NgtRepeat extends common.NgForOf{set ngForRepeat(count){this.ngForOf=Number.isInteger(count)?Array.from({length:count},((_,i)=>i)):[]}static#_=this.ɵfac=(()=>{let ɵNgtRepeat_BaseFactory;return function NgtRepeat_Factory(__ngFactoryType__){return(ɵNgtRepeat_BaseFactory||(ɵNgtRepeat_BaseFactory=core["ɵɵgetInheritedFactory"](NgtRepeat)))(__ngFactoryType__||NgtRepeat)}})();static#_2=this.ɵdir=core["ɵɵdefineDirective"]({type:NgtRepeat,selectors:[["","ngFor","","ngForRepeat",""]],inputs:{ngForRepeat:"ngForRepeat"},standalone:!0,features:[core["ɵɵInheritDefinitionFeature"]]})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtRepeat,[{type:core.Directive,args:[{selector:"[ngFor][ngForRepeat]",standalone:!0}]}],null,{ngForRepeat:[{type:core.Input}]});class NgtPush{constructor(){this.cdr=(0,core.inject)(core.ChangeDetectorRef),this.parentCdr=(0,core.inject)(core.ChangeDetectorRef,{skipSelf:!0,optional:!0}),this.envCdr=(0,core.inject)(core.EnvironmentInjector).get(core.ChangeDetectorRef,null)}transform(value,defaultValue=null){if(this.obj===value)return this.latestValue;if(this.obj=value,this.latestValue=defaultValue,this.sub&&this.sub.unsubscribe(),(0,isObservable.A)(this.obj))this.sub=this.obj.subscribe(this.updateValue.bind(this));else{if(!function isPromise(value){return(value instanceof Promise||"[object Promise]"===Object.prototype.toString.call(value))&&"function"==typeof value.then}(this.obj))throw new Error("[NGT] Invalid value passed to ngtPush pipe");this.obj.then(this.updateValue.bind(this))}return this.latestValue}updateValue(val){this.latestValue=val,safeDetectChanges(this.cdr),safeDetectChanges(this.parentCdr),safeDetectChanges(this.envCdr)}ngOnDestroy(){this.sub&&this.sub.unsubscribe(),this.latestValue=void 0,this.obj=void 0}static#_=this.ɵfac=function NgtPush_Factory(__ngFactoryType__){return new(__ngFactoryType__||NgtPush)};static#_2=this.ɵpipe=core["ɵɵdefinePipe"]({name:"ngtPush",type:NgtPush,pure:!1,standalone:!0})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtPush,[{type:core.Pipe,args:[{name:"ngtPush",pure:!1,standalone:!0}]}],null,null);const privateKeys=["get","set","select","setSize","setDpr","setFrameloop","events","invalidate","advance","size","viewport","addInteraction","removeInteraction"];class NgtPortalBeforeRender{constructor(){this.portalStore=(0,core.inject)(NgtStore),this.renderPriority=1,this.beforeRender=new core.EventEmitter}ngOnInit(){let oldClear;this.subscription=this.portalStore.get("internal").subscribe((({delta,frame})=>{this.beforeRender.emit({...this.portalStore.get(),delta,frame});const{gl,scene,camera}=this.portalStore.get();oldClear=gl.autoClear,1===this.renderPriority&&(gl.autoClear=!0,gl.render(this.parentScene,this.parentCamera)),gl.autoClear=!1,gl.clearDepth(),gl.render(scene,camera),gl.autoClear=oldClear}),this.renderPriority,this.portalStore)}ngOnDestroy(){this.subscription?.()}static#_=this.ɵfac=function NgtPortalBeforeRender_Factory(__ngFactoryType__){return new(__ngFactoryType__||NgtPortalBeforeRender)};static#_2=this.ɵdir=core["ɵɵdefineDirective"]({type:NgtPortalBeforeRender,selectors:[["","ngtPortalBeforeRender",""]],inputs:{renderPriority:"renderPriority",parentScene:"parentScene",parentCamera:"parentCamera"},outputs:{beforeRender:"beforeRender"},standalone:!0})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtPortalBeforeRender,[{type:core.Directive,args:[{selector:"[ngtPortalBeforeRender]",standalone:!0}]}],null,{renderPriority:[{type:core.Input}],parentScene:[{type:core.Input}],parentCamera:[{type:core.Input}],beforeRender:[{type:core.Output}]});class NgtPortalContent{constructor(vcr,parentVcr){const commentNode=vcr.element.nativeElement;commentNode.__ngt_renderer_add_comment__&&(commentNode.__ngt_renderer_add_comment__(parentVcr.element.nativeElement),delete commentNode.__ngt_renderer_add_comment__)}static#_=this.ɵfac=function NgtPortalContent_Factory(__ngFactoryType__){return new(__ngFactoryType__||NgtPortalContent)(core["ɵɵdirectiveInject"](core.ViewContainerRef),core["ɵɵdirectiveInject"](core.ViewContainerRef,4))};static#_2=this.ɵdir=core["ɵɵdefineDirective"]({type:NgtPortalContent,selectors:[["ng-template","ngtPortalContent",""]],standalone:!0})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtPortalContent,[{type:core.Directive,args:[{selector:"ng-template[ngtPortalContent]",standalone:!0}]}],(function(){return[{type:core.ViewContainerRef},{type:core.ViewContainerRef,decorators:[{type:core.SkipSelf}]}]}),null);class NgtPortal extends NgtRxStore{constructor(){super(...arguments),this.autoRender=!0,this.autoRenderPriority=1,this.beforeRender=new core.EventEmitter,this.parentStore=(0,core.inject)(NgtStore,{skipSelf:!0}),this.parentScene=this.parentStore.get("scene"),this.parentCamera=this.parentStore.get("camera"),this.portalStore=(0,core.inject)(NgtStore,{self:!0}),this.raycaster=new three_module.Raycaster,this.pointer=new three_module.Vector2,this.portalContentRendered=!1}set container(container){this.set({container})}set state(state){this.set({state})}initialize(){super.initialize(),this.set({container:injectNgtRef(prepare(new three_module.Scene))})}ngOnInit(){const previousState=this.parentStore.get(),inputsState=this.get();!inputsState.state&&this.autoRender&&(inputsState.state={events:{priority:this.autoRenderPriority+1}});const{events,size,...restInputsState}=inputsState.state||{},containerState=inputsState.container,container=is.ref(containerState)?containerState.nativeElement:containerState,localState=getLocalState(container);localState.store||(localState.store=this.portalStore),this.portalStore.set({...previousState,scene:container,raycaster:this.raycaster,pointer:this.pointer,previousStore:this.parentStore,events:{...previousState.events,...events||{}},size:{...previousState.size,...size||{}},...restInputsState,get:this.portalStore.get.bind(this.portalStore),set:this.portalStore.set.bind(this.portalStore),select:this.portalStore.select.bind(this.portalStore),setEvents:events=>this.portalStore.set((state=>({...state,events:{...state.events,...events}})))}),this.hold(this.parentStore.select(),(previous=>this.portalStore.set((state=>this.inject(previous,state))))),requestAnimationFrame((()=>{this.portalStore.set((injectState=>this.inject(this.parentStore.get(),injectState)))})),this.portalContentView=this.portalContentAnchor.createEmbeddedView(this.portalContentTemplate),this.portalContentView.detectChanges(),this.portalContentRendered=!0}onBeforeRender(portal){this.beforeRender.emit({root:{...this.parentStore.get(),delta:portal.delta,frame:portal.frame},portal})}ngOnDestroy(){this.portalContentView&&!this.portalContentView.destroyed&&this.portalContentView.destroy(),super.ngOnDestroy()}inject(rootState,injectState){const intersect={...rootState};Object.keys(intersect).forEach((key=>{(privateKeys.includes(key)||rootState[key]!==injectState[key])&&delete intersect[key]}));const inputs=this.get(),{size,events,...restInputsState}=inputs.state||{};let viewport;if(injectState&&size){const camera=injectState.camera;viewport=rootState.viewport.getCurrentViewport(camera,new three_module.Vector3,size),camera!==rootState.camera&&updateCamera(camera,size)}return{...intersect,scene:is.ref(inputs.container)?inputs.container.nativeElement:inputs.container,raycaster:this.raycaster,pointer:this.pointer,previousStore:this.parentStore,events:{...rootState.events,...injectState?.events||{},...events},size:{...rootState.size,...size},viewport:{...rootState.viewport,...viewport||{}},...restInputsState}}static#_=this.ɵfac=(()=>{let ɵNgtPortal_BaseFactory;return function NgtPortal_Factory(__ngFactoryType__){return(ɵNgtPortal_BaseFactory||(ɵNgtPortal_BaseFactory=core["ɵɵgetInheritedFactory"](NgtPortal)))(__ngFactoryType__||NgtPortal)}})();static#_2=this.ɵcmp=core["ɵɵdefineComponent"]({type:NgtPortal,selectors:[["ngt-portal"]],contentQueries:function NgtPortal_ContentQueries(rf,ctx,dirIndex){if(1&rf&&core["ɵɵcontentQuery"](dirIndex,NgtPortalContent,7,core.TemplateRef),2&rf){let _t;core["ɵɵqueryRefresh"](_t=core["ɵɵloadQuery"]())&&(ctx.portalContentTemplate=_t.first)}},viewQuery:function NgtPortal_Query(rf,ctx){if(1&rf&&core["ɵɵviewQuery"](_c1,7,core.ViewContainerRef),2&rf){let _t;core["ɵɵqueryRefresh"](_t=core["ɵɵloadQuery"]())&&(ctx.portalContentAnchor=_t.first)}},inputs:{container:"container",state:"state",autoRender:"autoRender",autoRenderPriority:"autoRenderPriority"},outputs:{beforeRender:"beforeRender"},standalone:!0,features:[core["ɵɵProvidersFeature"]([NgtStore]),core["ɵɵInheritDefinitionFeature"],core["ɵɵStandaloneFeature"]],decls:3,vars:1,consts:[["portalContentAnchor",""],["ngtPortalBeforeRender","",3,"renderPriority","parentScene","parentCamera","beforeRender",4,"ngIf"],["ngtPortalBeforeRender","",3,"beforeRender","renderPriority","parentScene","parentCamera"]],template:function NgtPortal_Template(rf,ctx){1&rf&&(core["ɵɵelementContainerStart"](0,null,0),core["ɵɵtemplate"](2,NgtPortal_ng_container_2_Template,1,3,"ng-container",1),core["ɵɵelementContainerEnd"]()),2&rf&&(core["ɵɵadvance"](2),core["ɵɵproperty"]("ngIf",ctx.autoRender&&ctx.portalContentRendered))},dependencies:[common.NgIf,NgtPortalBeforeRender],encapsulation:2})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtPortal,[{type:core.Component,args:[{selector:"ngt-portal",standalone:!0,template:'\n        <ng-container #portalContentAnchor>\n            <ng-container\n                *ngIf="autoRender && portalContentRendered"\n                ngtPortalBeforeRender\n                [renderPriority]="autoRenderPriority"\n                [parentScene]="parentScene"\n                [parentCamera]="parentCamera"\n                (beforeRender)="onBeforeRender($event)"\n            />\n        </ng-container>\n    ',imports:[common.NgIf,NgtPortalBeforeRender],providers:[NgtStore]}]}],null,{container:[{type:core.Input}],state:[{type:core.Input}],autoRender:[{type:core.Input}],autoRenderPriority:[{type:core.Input}],beforeRender:[{type:core.Output}],portalContentTemplate:[{type:core.ContentChild,args:[NgtPortalContent,{read:core.TemplateRef,static:!0}]}],portalContentAnchor:[{type:core.ViewChild,args:["portalContentAnchor",{read:core.ViewContainerRef,static:!0}]}]});class NgtRoutedScene{static#_=this.isRoutedScene=!0;constructor(router){const{destroy$,cdr}=injectNgtDestroy();router.events.pipe((0,filter.p)((event=>event instanceof ActivationEnd)),(0,takeUntil.Q)(destroy$)).subscribe((()=>safeDetectChanges(cdr)))}static#_2=this.ɵfac=function NgtRoutedScene_Factory(__ngFactoryType__){return new(__ngFactoryType__||NgtRoutedScene)(core["ɵɵdirectiveInject"](Router))};static#_3=this.ɵcmp=core["ɵɵdefineComponent"]({type:NgtRoutedScene,selectors:[["ngt-routed-scene"]],standalone:!0,features:[core["ɵɵStandaloneFeature"]],decls:1,vars:0,template:function NgtRoutedScene_Template(rf,ctx){1&rf&&core["ɵɵelement"](0,"router-outlet")},dependencies:[RouterOutlet],encapsulation:2})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](NgtRoutedScene,[{type:core.Component,args:[{standalone:!0,selector:"ngt-routed-scene",template:"<router-outlet />",imports:[RouterOutlet]}]}],(function(){return[{type:Router}]}),null)},"./node_modules/rxjs/dist/esm5/internal/observable/ConnectableObservable.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{G:()=>ConnectableObservable});var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_Observable__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Observable.js"),_Subscription__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subscription.js"),_operators_refCount__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/refCount.js"),_operators_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"),_util_lift__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/lift.js"),ConnectableObservable=function(_super){function ConnectableObservable(source,subjectFactory){var _this=_super.call(this)||this;return _this.source=source,_this.subjectFactory=subjectFactory,_this._subject=null,_this._refCount=0,_this._connection=null,(0,_util_lift__WEBPACK_IMPORTED_MODULE_1__.S)(source)&&(_this.lift=source.lift),_this}return(0,tslib__WEBPACK_IMPORTED_MODULE_0__.C6)(ConnectableObservable,_super),ConnectableObservable.prototype._subscribe=function(subscriber){return this.getSubject().subscribe(subscriber)},ConnectableObservable.prototype.getSubject=function(){var subject=this._subject;return subject&&!subject.isStopped||(this._subject=this.subjectFactory()),this._subject},ConnectableObservable.prototype._teardown=function(){this._refCount=0;var _connection=this._connection;this._subject=this._connection=null,null==_connection||_connection.unsubscribe()},ConnectableObservable.prototype.connect=function(){var _this=this,connection=this._connection;if(!connection){connection=this._connection=new _Subscription__WEBPACK_IMPORTED_MODULE_2__.yU;var subject_1=this.getSubject();connection.add(this.source.subscribe((0,_operators_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_3__._)(subject_1,void 0,(function(){_this._teardown(),subject_1.complete()}),(function(err){_this._teardown(),subject_1.error(err)}),(function(){return _this._teardown()})))),connection.closed&&(this._connection=null,connection=_Subscription__WEBPACK_IMPORTED_MODULE_2__.yU.EMPTY)}return connection},ConnectableObservable.prototype.refCount=function(){return(0,_operators_refCount__WEBPACK_IMPORTED_MODULE_4__.B)()(this)},ConnectableObservable}(_Observable__WEBPACK_IMPORTED_MODULE_5__.c)},"./node_modules/rxjs/dist/esm5/internal/observable/concat.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{x:()=>concat});var mergeAll=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/mergeAll.js");var util_args=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/args.js"),from=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/from.js");function concat(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];return function concatAll(){return(0,mergeAll.U)(1)}()((0,from.H)(args,(0,util_args.lI)(args)))}},"./node_modules/rxjs/dist/esm5/internal/observable/forkJoin.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{p:()=>forkJoin});var _Observable__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Observable.js"),_util_argsArgArrayOrObject__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/argsArgArrayOrObject.js"),_innerFrom__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js"),_util_args__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/args.js"),_operators_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"),_util_mapOneOrManyArgs__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/mapOneOrManyArgs.js"),_util_createObject__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/createObject.js");function forkJoin(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];var resultSelector=(0,_util_args__WEBPACK_IMPORTED_MODULE_0__.ms)(args),_a=(0,_util_argsArgArrayOrObject__WEBPACK_IMPORTED_MODULE_1__.D)(args),sources=_a.args,keys=_a.keys,result=new _Observable__WEBPACK_IMPORTED_MODULE_2__.c((function(subscriber){var length=sources.length;if(length)for(var values=new Array(length),remainingCompletions=length,remainingEmissions=length,_loop_1=function(sourceIndex){var hasValue=!1;(0,_innerFrom__WEBPACK_IMPORTED_MODULE_3__.Tg)(sources[sourceIndex]).subscribe((0,_operators_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_4__._)(subscriber,(function(value){hasValue||(hasValue=!0,remainingEmissions--),values[sourceIndex]=value}),(function(){return remainingCompletions--}),void 0,(function(){remainingCompletions&&hasValue||(remainingEmissions||subscriber.next(keys?(0,_util_createObject__WEBPACK_IMPORTED_MODULE_5__.e)(keys,values):values),subscriber.complete())})))},sourceIndex=0;sourceIndex<length;sourceIndex++)_loop_1(sourceIndex);else subscriber.complete()}));return resultSelector?result.pipe((0,_util_mapOneOrManyArgs__WEBPACK_IMPORTED_MODULE_6__.I)(resultSelector)):result}},"./node_modules/rxjs/dist/esm5/internal/observable/fromEvent.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{R:()=>fromEvent});var tslib__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_observable_innerFrom__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js"),_Observable__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Observable.js"),_operators_mergeMap__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js"),_util_isArrayLike__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/isArrayLike.js"),_util_isFunction__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/isFunction.js"),_util_mapOneOrManyArgs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/mapOneOrManyArgs.js"),nodeEventEmitterMethods=["addListener","removeListener"],eventTargetMethods=["addEventListener","removeEventListener"],jqueryMethods=["on","off"];function fromEvent(target,eventName,options,resultSelector){if((0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.T)(options)&&(resultSelector=options,options=void 0),resultSelector)return fromEvent(target,eventName,options).pipe((0,_util_mapOneOrManyArgs__WEBPACK_IMPORTED_MODULE_1__.I)(resultSelector));var _a=(0,tslib__WEBPACK_IMPORTED_MODULE_2__.zs)(function isEventTarget(target){return(0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.T)(target.addEventListener)&&(0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.T)(target.removeEventListener)}(target)?eventTargetMethods.map((function(methodName){return function(handler){return target[methodName](eventName,handler,options)}})):function isNodeStyleEventEmitter(target){return(0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.T)(target.addListener)&&(0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.T)(target.removeListener)}(target)?nodeEventEmitterMethods.map(toCommonHandlerRegistry(target,eventName)):function isJQueryStyleEventEmitter(target){return(0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.T)(target.on)&&(0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.T)(target.off)}(target)?jqueryMethods.map(toCommonHandlerRegistry(target,eventName)):[],2),add=_a[0],remove=_a[1];if(!add&&(0,_util_isArrayLike__WEBPACK_IMPORTED_MODULE_3__.X)(target))return(0,_operators_mergeMap__WEBPACK_IMPORTED_MODULE_4__.Z)((function(subTarget){return fromEvent(subTarget,eventName,options)}))((0,_observable_innerFrom__WEBPACK_IMPORTED_MODULE_5__.Tg)(target));if(!add)throw new TypeError("Invalid event target");return new _Observable__WEBPACK_IMPORTED_MODULE_6__.c((function(subscriber){var handler=function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];return subscriber.next(1<args.length?args:args[0])};return add(handler),function(){return remove(handler)}}))}function toCommonHandlerRegistry(target,eventName){return function(methodName){return function(handler){return target[methodName](eventName,handler)}}}},"./node_modules/rxjs/dist/esm5/internal/observable/merge.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>merge});var _operators_mergeAll__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/mergeAll.js"),_innerFrom__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js"),_empty__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/empty.js"),_util_args__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/args.js"),_from__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/from.js");function merge(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];var scheduler=(0,_util_args__WEBPACK_IMPORTED_MODULE_0__.lI)(args),concurrent=(0,_util_args__WEBPACK_IMPORTED_MODULE_0__.R0)(args,1/0),sources=args;return sources.length?1===sources.length?(0,_innerFrom__WEBPACK_IMPORTED_MODULE_2__.Tg)(sources[0]):(0,_operators_mergeAll__WEBPACK_IMPORTED_MODULE_3__.U)(concurrent)((0,_from__WEBPACK_IMPORTED_MODULE_4__.H)(sources,scheduler)):_empty__WEBPACK_IMPORTED_MODULE_1__.w}},"./node_modules/rxjs/dist/esm5/internal/observable/timer.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{O:()=>timer});var Observable=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Observable.js"),scheduler_async=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/scheduler/async.js"),isScheduler=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/isScheduler.js");function timer(dueTime,intervalOrScheduler,scheduler){void 0===dueTime&&(dueTime=0),void 0===scheduler&&(scheduler=scheduler_async.b);var intervalDuration=-1;return null!=intervalOrScheduler&&((0,isScheduler.m)(intervalOrScheduler)?scheduler=intervalOrScheduler:intervalDuration=intervalOrScheduler),new Observable.c((function(subscriber){var due=function isValidDate(value){return value instanceof Date&&!isNaN(value)}(dueTime)?+dueTime-scheduler.now():dueTime;due<0&&(due=0);var n=0;return scheduler.schedule((function(){subscriber.closed||(subscriber.next(n++),0<=intervalDuration?this.schedule(void 0,intervalDuration):subscriber.complete())}),due)}))}},"./node_modules/rxjs/dist/esm5/internal/operators/catchError.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>catchError});var _observable_innerFrom__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js"),_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"),_util_lift__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/lift.js");function catchError(selector){return(0,_util_lift__WEBPACK_IMPORTED_MODULE_0__.N)((function(source,subscriber){var handledResult,innerSub=null,syncUnsub=!1;innerSub=source.subscribe((0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__._)(subscriber,void 0,void 0,(function(err){handledResult=(0,_observable_innerFrom__WEBPACK_IMPORTED_MODULE_2__.Tg)(selector(err,catchError(selector)(source))),innerSub?(innerSub.unsubscribe(),innerSub=null,handledResult.subscribe(subscriber)):syncUnsub=!0}))),syncUnsub&&(innerSub.unsubscribe(),innerSub=null,handledResult.subscribe(subscriber))}))}},"./node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{F:()=>distinctUntilChanged});var _util_identity__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/identity.js"),_util_lift__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/lift.js"),_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js");function distinctUntilChanged(comparator,keySelector){return void 0===keySelector&&(keySelector=_util_identity__WEBPACK_IMPORTED_MODULE_0__.D),comparator=null!=comparator?comparator:defaultCompare,(0,_util_lift__WEBPACK_IMPORTED_MODULE_1__.N)((function(source,subscriber){var previousKey,first=!0;source.subscribe((0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__._)(subscriber,(function(value){var currentKey=keySelector(value);!first&&comparator(previousKey,currentKey)||(first=!1,previousKey=currentKey,subscriber.next(value))})))}))}function defaultCompare(a,b){return a===b}},"./node_modules/rxjs/dist/esm5/internal/operators/mergeAll.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{U:()=>mergeAll});var _mergeMap__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js"),_util_identity__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/identity.js");function mergeAll(concurrent){return void 0===concurrent&&(concurrent=1/0),(0,_mergeMap__WEBPACK_IMPORTED_MODULE_0__.Z)(_util_identity__WEBPACK_IMPORTED_MODULE_1__.D,concurrent)}},"./node_modules/rxjs/dist/esm5/internal/operators/refCount.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{B:()=>refCount});var _util_lift__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/lift.js"),_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js");function refCount(){return(0,_util_lift__WEBPACK_IMPORTED_MODULE_0__.N)((function(source,subscriber){var connection=null;source._refCount++;var refCounter=(0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__._)(subscriber,void 0,void 0,void 0,(function(){if(!source||source._refCount<=0||0<--source._refCount)connection=null;else{var sharedConnection=source._connection,conn=connection;connection=null,!sharedConnection||conn&&sharedConnection!==conn||sharedConnection.unsubscribe(),subscriber.unsubscribe()}}));source.subscribe(refCounter),refCounter.closed||(connection=source.connect())}))}},"./node_modules/rxjs/dist/esm5/internal/operators/retry.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{L:()=>retry});var _util_lift__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/lift.js"),_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"),_util_identity__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/identity.js"),_observable_timer__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/timer.js"),_observable_innerFrom__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js");function retry(configOrCount){var config;void 0===configOrCount&&(configOrCount=1/0);var _a=(config=configOrCount&&"object"==typeof configOrCount?configOrCount:{count:configOrCount}).count,count=void 0===_a?1/0:_a,delay=config.delay,_b=config.resetOnSuccess,resetOnSuccess=void 0!==_b&&_b;return count<=0?_util_identity__WEBPACK_IMPORTED_MODULE_0__.D:(0,_util_lift__WEBPACK_IMPORTED_MODULE_1__.N)((function(source,subscriber){var innerSub,soFar=0,subscribeForRetry=function(){var syncUnsub=!1;innerSub=source.subscribe((0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__._)(subscriber,(function(value){resetOnSuccess&&(soFar=0),subscriber.next(value)}),void 0,(function(err){if(soFar++<count){var resub_1=function(){innerSub?(innerSub.unsubscribe(),innerSub=null,subscribeForRetry()):syncUnsub=!0};if(null!=delay){var notifier="number"==typeof delay?(0,_observable_timer__WEBPACK_IMPORTED_MODULE_3__.O)(delay):(0,_observable_innerFrom__WEBPACK_IMPORTED_MODULE_4__.Tg)(delay(err,soFar)),notifierSubscriber_1=(0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__._)(subscriber,(function(){notifierSubscriber_1.unsubscribe(),resub_1()}),(function(){subscriber.complete()}));notifier.subscribe(notifierSubscriber_1)}else resub_1()}else subscriber.error(err)}))),syncUnsub&&(innerSub.unsubscribe(),innerSub=null,subscribeForRetry())};subscribeForRetry()}))}},"./node_modules/rxjs/dist/esm5/internal/operators/startWith.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>startWith});var _observable_concat__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/concat.js"),_util_args__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/args.js"),_util_lift__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/lift.js");function startWith(){for(var values=[],_i=0;_i<arguments.length;_i++)values[_i]=arguments[_i];var scheduler=(0,_util_args__WEBPACK_IMPORTED_MODULE_0__.lI)(values);return(0,_util_lift__WEBPACK_IMPORTED_MODULE_1__.N)((function(source,subscriber){(scheduler?(0,_observable_concat__WEBPACK_IMPORTED_MODULE_2__.x)(values,source,scheduler):(0,_observable_concat__WEBPACK_IMPORTED_MODULE_2__.x)(values,source)).subscribe(subscriber)}))}},"./node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Q:()=>takeUntil});var _util_lift__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/lift.js"),_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"),_observable_innerFrom__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js"),_util_noop__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/noop.js");function takeUntil(notifier){return(0,_util_lift__WEBPACK_IMPORTED_MODULE_0__.N)((function(source,subscriber){(0,_observable_innerFrom__WEBPACK_IMPORTED_MODULE_1__.Tg)(notifier).subscribe((0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__._)(subscriber,(function(){return subscriber.complete()}),_util_noop__WEBPACK_IMPORTED_MODULE_3__.l)),!subscriber.closed&&source.subscribe(subscriber)}))}},"./node_modules/rxjs/dist/esm5/internal/scheduler/async.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{E:()=>asyncScheduler,b:()=>async});var _AsyncAction__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/scheduler/AsyncAction.js"),asyncScheduler=new(__webpack_require__("./node_modules/rxjs/dist/esm5/internal/scheduler/AsyncScheduler.js").q)(_AsyncAction__WEBPACK_IMPORTED_MODULE_1__.R),async=asyncScheduler},"./node_modules/rxjs/dist/esm5/internal/util/isObservable.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>isObservable});var _Observable__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Observable.js"),_isFunction__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/isFunction.js");function isObservable(obj){return!!obj&&(obj instanceof _Observable__WEBPACK_IMPORTED_MODULE_0__.c||(0,_isFunction__WEBPACK_IMPORTED_MODULE_1__.T)(obj.lift)&&(0,_isFunction__WEBPACK_IMPORTED_MODULE_1__.T)(obj.subscribe))}},"./node_modules/three/build/three.module.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ACESFilmicToneMapping:()=>ACESFilmicToneMapping,AddEquation:()=>AddEquation,AddOperation:()=>AddOperation,AdditiveAnimationBlendMode:()=>AdditiveAnimationBlendMode,AdditiveBlending:()=>AdditiveBlending,AlphaFormat:()=>AlphaFormat,AlwaysDepth:()=>AlwaysDepth,AlwaysStencilFunc:()=>AlwaysStencilFunc,AmbientLight:()=>AmbientLight,AmbientLightProbe:()=>AmbientLightProbe,AnimationAction:()=>AnimationAction,AnimationClip:()=>AnimationClip,AnimationLoader:()=>AnimationLoader,AnimationMixer:()=>AnimationMixer,AnimationObjectGroup:()=>AnimationObjectGroup,AnimationUtils:()=>AnimationUtils,ArcCurve:()=>ArcCurve,ArrayCamera:()=>ArrayCamera,ArrowHelper:()=>ArrowHelper,Audio:()=>Audio,AudioAnalyser:()=>AudioAnalyser,AudioContext:()=>AudioContext,AudioListener:()=>AudioListener,AudioLoader:()=>AudioLoader,AxesHelper:()=>AxesHelper,BackSide:()=>BackSide,BasicDepthPacking:()=>BasicDepthPacking,BasicShadowMap:()=>BasicShadowMap,Bone:()=>Bone,BooleanKeyframeTrack:()=>BooleanKeyframeTrack,Box2:()=>Box2,Box3:()=>Box3,Box3Helper:()=>Box3Helper,BoxBufferGeometry:()=>BoxBufferGeometry,BoxGeometry:()=>BoxGeometry,BoxHelper:()=>BoxHelper,BufferAttribute:()=>BufferAttribute,BufferGeometry:()=>BufferGeometry,BufferGeometryLoader:()=>BufferGeometryLoader,ByteType:()=>ByteType,Cache:()=>Cache,Camera:()=>Camera,CameraHelper:()=>CameraHelper,CanvasTexture:()=>CanvasTexture,CapsuleBufferGeometry:()=>CapsuleBufferGeometry,CapsuleGeometry:()=>CapsuleGeometry,CatmullRomCurve3:()=>CatmullRomCurve3,CineonToneMapping:()=>CineonToneMapping,CircleBufferGeometry:()=>CircleBufferGeometry,CircleGeometry:()=>CircleGeometry,ClampToEdgeWrapping:()=>ClampToEdgeWrapping,Clock:()=>Clock,Color:()=>Color,ColorKeyframeTrack:()=>ColorKeyframeTrack,ColorManagement:()=>ColorManagement,CompressedArrayTexture:()=>CompressedArrayTexture,CompressedTexture:()=>CompressedTexture,CompressedTextureLoader:()=>CompressedTextureLoader,ConeBufferGeometry:()=>ConeBufferGeometry,ConeGeometry:()=>ConeGeometry,CubeCamera:()=>CubeCamera,CubeReflectionMapping:()=>CubeReflectionMapping,CubeRefractionMapping:()=>CubeRefractionMapping,CubeTexture:()=>CubeTexture,CubeTextureLoader:()=>CubeTextureLoader,CubeUVReflectionMapping:()=>CubeUVReflectionMapping,CubicBezierCurve:()=>CubicBezierCurve,CubicBezierCurve3:()=>CubicBezierCurve3,CubicInterpolant:()=>CubicInterpolant,CullFaceBack:()=>CullFaceBack,CullFaceFront:()=>CullFaceFront,CullFaceFrontBack:()=>CullFaceFrontBack,CullFaceNone:()=>CullFaceNone,Curve:()=>Curve,CurvePath:()=>CurvePath,CustomBlending:()=>CustomBlending,CustomToneMapping:()=>CustomToneMapping,CylinderBufferGeometry:()=>CylinderBufferGeometry,CylinderGeometry:()=>CylinderGeometry,Cylindrical:()=>Cylindrical,Data3DTexture:()=>Data3DTexture,DataArrayTexture:()=>DataArrayTexture,DataTexture:()=>DataTexture,DataTextureLoader:()=>DataTextureLoader,DataUtils:()=>DataUtils,DecrementStencilOp:()=>DecrementStencilOp,DecrementWrapStencilOp:()=>DecrementWrapStencilOp,DefaultLoadingManager:()=>DefaultLoadingManager,DepthFormat:()=>DepthFormat,DepthStencilFormat:()=>DepthStencilFormat,DepthTexture:()=>DepthTexture,DirectionalLight:()=>DirectionalLight,DirectionalLightHelper:()=>DirectionalLightHelper,DiscreteInterpolant:()=>DiscreteInterpolant,DisplayP3ColorSpace:()=>DisplayP3ColorSpace,DodecahedronBufferGeometry:()=>DodecahedronBufferGeometry,DodecahedronGeometry:()=>DodecahedronGeometry,DoubleSide:()=>DoubleSide,DstAlphaFactor:()=>DstAlphaFactor,DstColorFactor:()=>DstColorFactor,DynamicCopyUsage:()=>DynamicCopyUsage,DynamicDrawUsage:()=>DynamicDrawUsage,DynamicReadUsage:()=>DynamicReadUsage,EdgesGeometry:()=>EdgesGeometry,EllipseCurve:()=>EllipseCurve,EqualDepth:()=>EqualDepth,EqualStencilFunc:()=>EqualStencilFunc,EquirectangularReflectionMapping:()=>EquirectangularReflectionMapping,EquirectangularRefractionMapping:()=>EquirectangularRefractionMapping,Euler:()=>Euler,EventDispatcher:()=>EventDispatcher,ExtrudeBufferGeometry:()=>ExtrudeBufferGeometry,ExtrudeGeometry:()=>ExtrudeGeometry,FileLoader:()=>FileLoader,Float16BufferAttribute:()=>Float16BufferAttribute,Float32BufferAttribute:()=>Float32BufferAttribute,Float64BufferAttribute:()=>Float64BufferAttribute,FloatType:()=>FloatType,Fog:()=>Fog,FogExp2:()=>FogExp2,FramebufferTexture:()=>FramebufferTexture,FrontSide:()=>FrontSide,Frustum:()=>Frustum,GLBufferAttribute:()=>GLBufferAttribute,GLSL1:()=>GLSL1,GLSL3:()=>GLSL3,GreaterDepth:()=>GreaterDepth,GreaterEqualDepth:()=>GreaterEqualDepth,GreaterEqualStencilFunc:()=>GreaterEqualStencilFunc,GreaterStencilFunc:()=>GreaterStencilFunc,GridHelper:()=>GridHelper,Group:()=>Group,HalfFloatType:()=>HalfFloatType,HemisphereLight:()=>HemisphereLight,HemisphereLightHelper:()=>HemisphereLightHelper,HemisphereLightProbe:()=>HemisphereLightProbe,IcosahedronBufferGeometry:()=>IcosahedronBufferGeometry,IcosahedronGeometry:()=>IcosahedronGeometry,ImageBitmapLoader:()=>ImageBitmapLoader,ImageLoader:()=>ImageLoader,ImageUtils:()=>ImageUtils,IncrementStencilOp:()=>IncrementStencilOp,IncrementWrapStencilOp:()=>IncrementWrapStencilOp,InstancedBufferAttribute:()=>InstancedBufferAttribute,InstancedBufferGeometry:()=>InstancedBufferGeometry,InstancedInterleavedBuffer:()=>InstancedInterleavedBuffer,InstancedMesh:()=>InstancedMesh,Int16BufferAttribute:()=>Int16BufferAttribute,Int32BufferAttribute:()=>Int32BufferAttribute,Int8BufferAttribute:()=>Int8BufferAttribute,IntType:()=>IntType,InterleavedBuffer:()=>InterleavedBuffer,InterleavedBufferAttribute:()=>InterleavedBufferAttribute,Interpolant:()=>Interpolant,InterpolateDiscrete:()=>InterpolateDiscrete,InterpolateLinear:()=>InterpolateLinear,InterpolateSmooth:()=>InterpolateSmooth,InvertStencilOp:()=>InvertStencilOp,KeepStencilOp:()=>KeepStencilOp,KeyframeTrack:()=>KeyframeTrack,LOD:()=>LOD,LatheBufferGeometry:()=>LatheBufferGeometry,LatheGeometry:()=>LatheGeometry,Layers:()=>Layers,LessDepth:()=>LessDepth,LessEqualDepth:()=>LessEqualDepth,LessEqualStencilFunc:()=>LessEqualStencilFunc,LessStencilFunc:()=>LessStencilFunc,Light:()=>Light,LightProbe:()=>LightProbe,Line:()=>Line,Line3:()=>Line3,LineBasicMaterial:()=>LineBasicMaterial,LineCurve:()=>LineCurve,LineCurve3:()=>LineCurve3,LineDashedMaterial:()=>LineDashedMaterial,LineLoop:()=>LineLoop,LineSegments:()=>LineSegments,LinearEncoding:()=>LinearEncoding,LinearFilter:()=>LinearFilter,LinearInterpolant:()=>LinearInterpolant,LinearMipMapLinearFilter:()=>LinearMipMapLinearFilter,LinearMipMapNearestFilter:()=>LinearMipMapNearestFilter,LinearMipmapLinearFilter:()=>LinearMipmapLinearFilter,LinearMipmapNearestFilter:()=>LinearMipmapNearestFilter,LinearSRGBColorSpace:()=>LinearSRGBColorSpace,LinearToneMapping:()=>LinearToneMapping,Loader:()=>Loader,LoaderUtils:()=>LoaderUtils,LoadingManager:()=>LoadingManager,LoopOnce:()=>LoopOnce,LoopPingPong:()=>LoopPingPong,LoopRepeat:()=>LoopRepeat,LuminanceAlphaFormat:()=>LuminanceAlphaFormat,LuminanceFormat:()=>LuminanceFormat,MOUSE:()=>MOUSE,Material:()=>Material,MaterialLoader:()=>MaterialLoader,MathUtils:()=>MathUtils,Matrix3:()=>Matrix3,Matrix4:()=>Matrix4,MaxEquation:()=>MaxEquation,Mesh:()=>Mesh,MeshBasicMaterial:()=>MeshBasicMaterial,MeshDepthMaterial:()=>MeshDepthMaterial,MeshDistanceMaterial:()=>MeshDistanceMaterial,MeshLambertMaterial:()=>MeshLambertMaterial,MeshMatcapMaterial:()=>MeshMatcapMaterial,MeshNormalMaterial:()=>MeshNormalMaterial,MeshPhongMaterial:()=>MeshPhongMaterial,MeshPhysicalMaterial:()=>MeshPhysicalMaterial,MeshStandardMaterial:()=>MeshStandardMaterial,MeshToonMaterial:()=>MeshToonMaterial,MinEquation:()=>MinEquation,MirroredRepeatWrapping:()=>MirroredRepeatWrapping,MixOperation:()=>MixOperation,MultiplyBlending:()=>MultiplyBlending,MultiplyOperation:()=>MultiplyOperation,NearestFilter:()=>NearestFilter,NearestMipMapLinearFilter:()=>NearestMipMapLinearFilter,NearestMipMapNearestFilter:()=>NearestMipMapNearestFilter,NearestMipmapLinearFilter:()=>NearestMipmapLinearFilter,NearestMipmapNearestFilter:()=>NearestMipmapNearestFilter,NeverDepth:()=>NeverDepth,NeverStencilFunc:()=>NeverStencilFunc,NoBlending:()=>NoBlending,NoColorSpace:()=>NoColorSpace,NoToneMapping:()=>NoToneMapping,NormalAnimationBlendMode:()=>NormalAnimationBlendMode,NormalBlending:()=>NormalBlending,NotEqualDepth:()=>NotEqualDepth,NotEqualStencilFunc:()=>NotEqualStencilFunc,NumberKeyframeTrack:()=>NumberKeyframeTrack,Object3D:()=>Object3D,ObjectLoader:()=>ObjectLoader,ObjectSpaceNormalMap:()=>ObjectSpaceNormalMap,OctahedronBufferGeometry:()=>OctahedronBufferGeometry,OctahedronGeometry:()=>OctahedronGeometry,OneFactor:()=>OneFactor,OneMinusDstAlphaFactor:()=>OneMinusDstAlphaFactor,OneMinusDstColorFactor:()=>OneMinusDstColorFactor,OneMinusSrcAlphaFactor:()=>OneMinusSrcAlphaFactor,OneMinusSrcColorFactor:()=>OneMinusSrcColorFactor,OrthographicCamera:()=>OrthographicCamera,PCFShadowMap:()=>PCFShadowMap,PCFSoftShadowMap:()=>PCFSoftShadowMap,PMREMGenerator:()=>PMREMGenerator,Path:()=>Path,PerspectiveCamera:()=>PerspectiveCamera,Plane:()=>Plane,PlaneBufferGeometry:()=>PlaneBufferGeometry,PlaneGeometry:()=>PlaneGeometry,PlaneHelper:()=>PlaneHelper,PointLight:()=>PointLight,PointLightHelper:()=>PointLightHelper,Points:()=>Points,PointsMaterial:()=>PointsMaterial,PolarGridHelper:()=>PolarGridHelper,PolyhedronBufferGeometry:()=>PolyhedronBufferGeometry,PolyhedronGeometry:()=>PolyhedronGeometry,PositionalAudio:()=>PositionalAudio,PropertyBinding:()=>PropertyBinding,PropertyMixer:()=>PropertyMixer,QuadraticBezierCurve:()=>QuadraticBezierCurve,QuadraticBezierCurve3:()=>QuadraticBezierCurve3,Quaternion:()=>Quaternion,QuaternionKeyframeTrack:()=>QuaternionKeyframeTrack,QuaternionLinearInterpolant:()=>QuaternionLinearInterpolant,RED_GREEN_RGTC2_Format:()=>RED_GREEN_RGTC2_Format,RED_RGTC1_Format:()=>RED_RGTC1_Format,REVISION:()=>REVISION,RGBADepthPacking:()=>RGBADepthPacking,RGBAFormat:()=>RGBAFormat,RGBAIntegerFormat:()=>RGBAIntegerFormat,RGBA_ASTC_10x10_Format:()=>RGBA_ASTC_10x10_Format,RGBA_ASTC_10x5_Format:()=>RGBA_ASTC_10x5_Format,RGBA_ASTC_10x6_Format:()=>RGBA_ASTC_10x6_Format,RGBA_ASTC_10x8_Format:()=>RGBA_ASTC_10x8_Format,RGBA_ASTC_12x10_Format:()=>RGBA_ASTC_12x10_Format,RGBA_ASTC_12x12_Format:()=>RGBA_ASTC_12x12_Format,RGBA_ASTC_4x4_Format:()=>RGBA_ASTC_4x4_Format,RGBA_ASTC_5x4_Format:()=>RGBA_ASTC_5x4_Format,RGBA_ASTC_5x5_Format:()=>RGBA_ASTC_5x5_Format,RGBA_ASTC_6x5_Format:()=>RGBA_ASTC_6x5_Format,RGBA_ASTC_6x6_Format:()=>RGBA_ASTC_6x6_Format,RGBA_ASTC_8x5_Format:()=>RGBA_ASTC_8x5_Format,RGBA_ASTC_8x6_Format:()=>RGBA_ASTC_8x6_Format,RGBA_ASTC_8x8_Format:()=>RGBA_ASTC_8x8_Format,RGBA_BPTC_Format:()=>RGBA_BPTC_Format,RGBA_ETC2_EAC_Format:()=>RGBA_ETC2_EAC_Format,RGBA_PVRTC_2BPPV1_Format:()=>RGBA_PVRTC_2BPPV1_Format,RGBA_PVRTC_4BPPV1_Format:()=>RGBA_PVRTC_4BPPV1_Format,RGBA_S3TC_DXT1_Format:()=>RGBA_S3TC_DXT1_Format,RGBA_S3TC_DXT3_Format:()=>RGBA_S3TC_DXT3_Format,RGBA_S3TC_DXT5_Format:()=>RGBA_S3TC_DXT5_Format,RGB_ETC1_Format:()=>RGB_ETC1_Format,RGB_ETC2_Format:()=>RGB_ETC2_Format,RGB_PVRTC_2BPPV1_Format:()=>RGB_PVRTC_2BPPV1_Format,RGB_PVRTC_4BPPV1_Format:()=>RGB_PVRTC_4BPPV1_Format,RGB_S3TC_DXT1_Format:()=>RGB_S3TC_DXT1_Format,RGFormat:()=>RGFormat,RGIntegerFormat:()=>RGIntegerFormat,RawShaderMaterial:()=>RawShaderMaterial,Ray:()=>Ray,Raycaster:()=>Raycaster,RectAreaLight:()=>RectAreaLight,RedFormat:()=>RedFormat,RedIntegerFormat:()=>RedIntegerFormat,ReinhardToneMapping:()=>ReinhardToneMapping,RepeatWrapping:()=>RepeatWrapping,ReplaceStencilOp:()=>ReplaceStencilOp,ReverseSubtractEquation:()=>ReverseSubtractEquation,RingBufferGeometry:()=>RingBufferGeometry,RingGeometry:()=>RingGeometry,SIGNED_RED_GREEN_RGTC2_Format:()=>SIGNED_RED_GREEN_RGTC2_Format,SIGNED_RED_RGTC1_Format:()=>SIGNED_RED_RGTC1_Format,SRGBColorSpace:()=>SRGBColorSpace,Scene:()=>Scene,ShaderChunk:()=>ShaderChunk,ShaderLib:()=>ShaderLib,ShaderMaterial:()=>ShaderMaterial,ShadowMaterial:()=>ShadowMaterial,Shape:()=>Shape,ShapeBufferGeometry:()=>ShapeBufferGeometry,ShapeGeometry:()=>ShapeGeometry,ShapePath:()=>ShapePath,ShapeUtils:()=>ShapeUtils,ShortType:()=>ShortType,Skeleton:()=>Skeleton,SkeletonHelper:()=>SkeletonHelper,SkinnedMesh:()=>SkinnedMesh,Source:()=>Source,Sphere:()=>Sphere,SphereBufferGeometry:()=>SphereBufferGeometry,SphereGeometry:()=>SphereGeometry,Spherical:()=>Spherical,SphericalHarmonics3:()=>SphericalHarmonics3,SplineCurve:()=>SplineCurve,SpotLight:()=>SpotLight,SpotLightHelper:()=>SpotLightHelper,Sprite:()=>Sprite,SpriteMaterial:()=>SpriteMaterial,SrcAlphaFactor:()=>SrcAlphaFactor,SrcAlphaSaturateFactor:()=>SrcAlphaSaturateFactor,SrcColorFactor:()=>SrcColorFactor,StaticCopyUsage:()=>StaticCopyUsage,StaticDrawUsage:()=>StaticDrawUsage,StaticReadUsage:()=>StaticReadUsage,StereoCamera:()=>StereoCamera,StreamCopyUsage:()=>StreamCopyUsage,StreamDrawUsage:()=>StreamDrawUsage,StreamReadUsage:()=>StreamReadUsage,StringKeyframeTrack:()=>StringKeyframeTrack,SubtractEquation:()=>SubtractEquation,SubtractiveBlending:()=>SubtractiveBlending,TOUCH:()=>TOUCH,TangentSpaceNormalMap:()=>TangentSpaceNormalMap,TetrahedronBufferGeometry:()=>TetrahedronBufferGeometry,TetrahedronGeometry:()=>TetrahedronGeometry,Texture:()=>Texture,TextureLoader:()=>TextureLoader,TorusBufferGeometry:()=>TorusBufferGeometry,TorusGeometry:()=>TorusGeometry,TorusKnotBufferGeometry:()=>TorusKnotBufferGeometry,TorusKnotGeometry:()=>TorusKnotGeometry,Triangle:()=>Triangle,TriangleFanDrawMode:()=>TriangleFanDrawMode,TriangleStripDrawMode:()=>TriangleStripDrawMode,TrianglesDrawMode:()=>TrianglesDrawMode,TubeBufferGeometry:()=>TubeBufferGeometry,TubeGeometry:()=>TubeGeometry,TwoPassDoubleSide:()=>TwoPassDoubleSide,UVMapping:()=>UVMapping,Uint16BufferAttribute:()=>Uint16BufferAttribute,Uint32BufferAttribute:()=>Uint32BufferAttribute,Uint8BufferAttribute:()=>Uint8BufferAttribute,Uint8ClampedBufferAttribute:()=>Uint8ClampedBufferAttribute,Uniform:()=>Uniform,UniformsGroup:()=>UniformsGroup,UniformsLib:()=>UniformsLib,UniformsUtils:()=>UniformsUtils,UnsignedByteType:()=>UnsignedByteType,UnsignedInt248Type:()=>UnsignedInt248Type,UnsignedIntType:()=>UnsignedIntType,UnsignedShort4444Type:()=>UnsignedShort4444Type,UnsignedShort5551Type:()=>UnsignedShort5551Type,UnsignedShortType:()=>UnsignedShortType,VSMShadowMap:()=>VSMShadowMap,Vector2:()=>Vector2,Vector3:()=>Vector3,Vector4:()=>Vector4,VectorKeyframeTrack:()=>VectorKeyframeTrack,VideoTexture:()=>VideoTexture,WebGL1Renderer:()=>WebGL1Renderer,WebGL3DRenderTarget:()=>WebGL3DRenderTarget,WebGLArrayRenderTarget:()=>WebGLArrayRenderTarget,WebGLCubeRenderTarget:()=>WebGLCubeRenderTarget,WebGLMultipleRenderTargets:()=>WebGLMultipleRenderTargets,WebGLRenderTarget:()=>WebGLRenderTarget,WebGLRenderer:()=>WebGLRenderer,WebGLUtils:()=>WebGLUtils,WireframeGeometry:()=>WireframeGeometry,WrapAroundEnding:()=>WrapAroundEnding,ZeroCurvatureEnding:()=>ZeroCurvatureEnding,ZeroFactor:()=>ZeroFactor,ZeroSlopeEnding:()=>ZeroSlopeEnding,ZeroStencilOp:()=>ZeroStencilOp,_SRGBAFormat:()=>_SRGBAFormat,sRGBEncoding:()=>sRGBEncoding});var _home_runner_work_ng_components_ng_components_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js");const REVISION="152",MOUSE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},TOUCH={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},CullFaceNone=0,CullFaceBack=1,CullFaceFront=2,CullFaceFrontBack=3,BasicShadowMap=0,PCFShadowMap=1,PCFSoftShadowMap=2,VSMShadowMap=3,FrontSide=0,BackSide=1,DoubleSide=2,TwoPassDoubleSide=2,NoBlending=0,NormalBlending=1,AdditiveBlending=2,SubtractiveBlending=3,MultiplyBlending=4,CustomBlending=5,AddEquation=100,SubtractEquation=101,ReverseSubtractEquation=102,MinEquation=103,MaxEquation=104,ZeroFactor=200,OneFactor=201,SrcColorFactor=202,OneMinusSrcColorFactor=203,SrcAlphaFactor=204,OneMinusSrcAlphaFactor=205,DstAlphaFactor=206,OneMinusDstAlphaFactor=207,DstColorFactor=208,OneMinusDstColorFactor=209,SrcAlphaSaturateFactor=210,NeverDepth=0,AlwaysDepth=1,LessDepth=2,LessEqualDepth=3,EqualDepth=4,GreaterEqualDepth=5,GreaterDepth=6,NotEqualDepth=7,MultiplyOperation=0,MixOperation=1,AddOperation=2,NoToneMapping=0,LinearToneMapping=1,ReinhardToneMapping=2,CineonToneMapping=3,ACESFilmicToneMapping=4,CustomToneMapping=5,UVMapping=300,CubeReflectionMapping=301,CubeRefractionMapping=302,EquirectangularReflectionMapping=303,EquirectangularRefractionMapping=304,CubeUVReflectionMapping=306,RepeatWrapping=1e3,ClampToEdgeWrapping=1001,MirroredRepeatWrapping=1002,NearestFilter=1003,NearestMipmapNearestFilter=1004,NearestMipMapNearestFilter=1004,NearestMipmapLinearFilter=1005,NearestMipMapLinearFilter=1005,LinearFilter=1006,LinearMipmapNearestFilter=1007,LinearMipMapNearestFilter=1007,LinearMipmapLinearFilter=1008,LinearMipMapLinearFilter=1008,UnsignedByteType=1009,ByteType=1010,ShortType=1011,UnsignedShortType=1012,IntType=1013,UnsignedIntType=1014,FloatType=1015,HalfFloatType=1016,UnsignedShort4444Type=1017,UnsignedShort5551Type=1018,UnsignedInt248Type=1020,AlphaFormat=1021,RGBAFormat=1023,LuminanceFormat=1024,LuminanceAlphaFormat=1025,DepthFormat=1026,DepthStencilFormat=1027,RedFormat=1028,RedIntegerFormat=1029,RGFormat=1030,RGIntegerFormat=1031,RGBAIntegerFormat=1033,RGB_S3TC_DXT1_Format=33776,RGBA_S3TC_DXT1_Format=33777,RGBA_S3TC_DXT3_Format=33778,RGBA_S3TC_DXT5_Format=33779,RGB_PVRTC_4BPPV1_Format=35840,RGB_PVRTC_2BPPV1_Format=35841,RGBA_PVRTC_4BPPV1_Format=35842,RGBA_PVRTC_2BPPV1_Format=35843,RGB_ETC1_Format=36196,RGB_ETC2_Format=37492,RGBA_ETC2_EAC_Format=37496,RGBA_ASTC_4x4_Format=37808,RGBA_ASTC_5x4_Format=37809,RGBA_ASTC_5x5_Format=37810,RGBA_ASTC_6x5_Format=37811,RGBA_ASTC_6x6_Format=37812,RGBA_ASTC_8x5_Format=37813,RGBA_ASTC_8x6_Format=37814,RGBA_ASTC_8x8_Format=37815,RGBA_ASTC_10x5_Format=37816,RGBA_ASTC_10x6_Format=37817,RGBA_ASTC_10x8_Format=37818,RGBA_ASTC_10x10_Format=37819,RGBA_ASTC_12x10_Format=37820,RGBA_ASTC_12x12_Format=37821,RGBA_BPTC_Format=36492,RED_RGTC1_Format=36283,SIGNED_RED_RGTC1_Format=36284,RED_GREEN_RGTC2_Format=36285,SIGNED_RED_GREEN_RGTC2_Format=36286,LoopOnce=2200,LoopRepeat=2201,LoopPingPong=2202,InterpolateDiscrete=2300,InterpolateLinear=2301,InterpolateSmooth=2302,ZeroCurvatureEnding=2400,ZeroSlopeEnding=2401,WrapAroundEnding=2402,NormalAnimationBlendMode=2500,AdditiveAnimationBlendMode=2501,TrianglesDrawMode=0,TriangleStripDrawMode=1,TriangleFanDrawMode=2,LinearEncoding=3e3,sRGBEncoding=3001,BasicDepthPacking=3200,RGBADepthPacking=3201,TangentSpaceNormalMap=0,ObjectSpaceNormalMap=1,NoColorSpace="",SRGBColorSpace="srgb",LinearSRGBColorSpace="srgb-linear",DisplayP3ColorSpace="display-p3",ZeroStencilOp=0,KeepStencilOp=7680,ReplaceStencilOp=7681,IncrementStencilOp=7682,DecrementStencilOp=7683,IncrementWrapStencilOp=34055,DecrementWrapStencilOp=34056,InvertStencilOp=5386,NeverStencilFunc=512,LessStencilFunc=513,EqualStencilFunc=514,LessEqualStencilFunc=515,GreaterStencilFunc=516,NotEqualStencilFunc=517,GreaterEqualStencilFunc=518,AlwaysStencilFunc=519,StaticDrawUsage=35044,DynamicDrawUsage=35048,StreamDrawUsage=35040,StaticReadUsage=35045,DynamicReadUsage=35049,StreamReadUsage=35041,StaticCopyUsage=35046,DynamicCopyUsage=35050,StreamCopyUsage=35042,GLSL1="100",GLSL3="300 es",_SRGBAFormat=1035;class EventDispatcher{addEventListener(type,listener){void 0===this._listeners&&(this._listeners={});const listeners=this._listeners;void 0===listeners[type]&&(listeners[type]=[]),-1===listeners[type].indexOf(listener)&&listeners[type].push(listener)}hasEventListener(type,listener){if(void 0===this._listeners)return!1;const listeners=this._listeners;return void 0!==listeners[type]&&-1!==listeners[type].indexOf(listener)}removeEventListener(type,listener){if(void 0===this._listeners)return;const listenerArray=this._listeners[type];if(void 0!==listenerArray){const index=listenerArray.indexOf(listener);-1!==index&&listenerArray.splice(index,1)}}dispatchEvent(event){if(void 0===this._listeners)return;const listenerArray=this._listeners[event.type];if(void 0!==listenerArray){event.target=this;const array=listenerArray.slice(0);for(let i=0,l=array.length;i<l;i++)array[i].call(this,event);event.target=null}}}const _lut=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let _seed=1234567;const DEG2RAD=Math.PI/180,RAD2DEG=180/Math.PI;function generateUUID(){const d0=4294967295*Math.random()|0,d1=4294967295*Math.random()|0,d2=4294967295*Math.random()|0,d3=4294967295*Math.random()|0;return(_lut[255&d0]+_lut[d0>>8&255]+_lut[d0>>16&255]+_lut[d0>>24&255]+"-"+_lut[255&d1]+_lut[d1>>8&255]+"-"+_lut[d1>>16&15|64]+_lut[d1>>24&255]+"-"+_lut[63&d2|128]+_lut[d2>>8&255]+"-"+_lut[d2>>16&255]+_lut[d2>>24&255]+_lut[255&d3]+_lut[d3>>8&255]+_lut[d3>>16&255]+_lut[d3>>24&255]).toLowerCase()}function clamp(value,min,max){return Math.max(min,Math.min(max,value))}function euclideanModulo(n,m){return(n%m+m)%m}function lerp(x,y,t){return(1-t)*x+t*y}function isPowerOfTwo(value){return!(value&value-1)&&0!==value}function ceilPowerOfTwo(value){return Math.pow(2,Math.ceil(Math.log(value)/Math.LN2))}function floorPowerOfTwo(value){return Math.pow(2,Math.floor(Math.log(value)/Math.LN2))}function denormalize(value,array){switch(array.constructor){case Float32Array:return value;case Uint16Array:return value/65535;case Uint8Array:return value/255;case Int16Array:return Math.max(value/32767,-1);case Int8Array:return Math.max(value/127,-1);default:throw new Error("Invalid component type.")}}function normalize(value,array){switch(array.constructor){case Float32Array:return value;case Uint16Array:return Math.round(65535*value);case Uint8Array:return Math.round(255*value);case Int16Array:return Math.round(32767*value);case Int8Array:return Math.round(127*value);default:throw new Error("Invalid component type.")}}const MathUtils={DEG2RAD,RAD2DEG,generateUUID,clamp,euclideanModulo,mapLinear:function mapLinear(x,a1,a2,b1,b2){return b1+(x-a1)*(b2-b1)/(a2-a1)},inverseLerp:function inverseLerp(x,y,value){return x!==y?(value-x)/(y-x):0},lerp,damp:function damp(x,y,lambda,dt){return lerp(x,y,1-Math.exp(-lambda*dt))},pingpong:function pingpong(x,length=1){return length-Math.abs(euclideanModulo(x,2*length)-length)},smoothstep:function smoothstep(x,min,max){return x<=min?0:x>=max?1:(x=(x-min)/(max-min))*x*(3-2*x)},smootherstep:function smootherstep(x,min,max){return x<=min?0:x>=max?1:(x=(x-min)/(max-min))*x*x*(x*(6*x-15)+10)},randInt:function randInt(low,high){return low+Math.floor(Math.random()*(high-low+1))},randFloat:function randFloat(low,high){return low+Math.random()*(high-low)},randFloatSpread:function randFloatSpread(range){return range*(.5-Math.random())},seededRandom:function seededRandom(s){void 0!==s&&(_seed=s);let t=_seed+=1831565813;return t=Math.imul(t^t>>>15,1|t),t^=t+Math.imul(t^t>>>7,61|t),((t^t>>>14)>>>0)/4294967296},degToRad:function degToRad(degrees){return degrees*DEG2RAD},radToDeg:function radToDeg(radians){return radians*RAD2DEG},isPowerOfTwo,ceilPowerOfTwo,floorPowerOfTwo,setQuaternionFromProperEuler:function setQuaternionFromProperEuler(q,a,b,c,order){const cos=Math.cos,sin=Math.sin,c2=cos(b/2),s2=sin(b/2),c13=cos((a+c)/2),s13=sin((a+c)/2),c1_3=cos((a-c)/2),s1_3=sin((a-c)/2),c3_1=cos((c-a)/2),s3_1=sin((c-a)/2);switch(order){case"XYX":q.set(c2*s13,s2*c1_3,s2*s1_3,c2*c13);break;case"YZY":q.set(s2*s1_3,c2*s13,s2*c1_3,c2*c13);break;case"ZXZ":q.set(s2*c1_3,s2*s1_3,c2*s13,c2*c13);break;case"XZX":q.set(c2*s13,s2*s3_1,s2*c3_1,c2*c13);break;case"YXY":q.set(s2*c3_1,c2*s13,s2*s3_1,c2*c13);break;case"ZYZ":q.set(s2*s3_1,s2*c3_1,c2*s13,c2*c13);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+order)}},normalize,denormalize};class Vector2{constructor(x=0,y=0){Vector2.prototype.isVector2=!0,this.x=x,this.y=y}get width(){return this.x}set width(value){this.x=value}get height(){return this.y}set height(value){this.y=value}set(x,y){return this.x=x,this.y=y,this}setScalar(scalar){return this.x=scalar,this.y=scalar,this}setX(x){return this.x=x,this}setY(y){return this.y=y,this}setComponent(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;default:throw new Error("index is out of range: "+index)}return this}getComponent(index){switch(index){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+index)}}clone(){return new this.constructor(this.x,this.y)}copy(v){return this.x=v.x,this.y=v.y,this}add(v){return this.x+=v.x,this.y+=v.y,this}addScalar(s){return this.x+=s,this.y+=s,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this}addScaledVector(v,s){return this.x+=v.x*s,this.y+=v.y*s,this}sub(v){return this.x-=v.x,this.y-=v.y,this}subScalar(s){return this.x-=s,this.y-=s,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this}multiply(v){return this.x*=v.x,this.y*=v.y,this}multiplyScalar(scalar){return this.x*=scalar,this.y*=scalar,this}divide(v){return this.x/=v.x,this.y/=v.y,this}divideScalar(scalar){return this.multiplyScalar(1/scalar)}applyMatrix3(m){const x=this.x,y=this.y,e=m.elements;return this.x=e[0]*x+e[3]*y+e[6],this.y=e[1]*x+e[4]*y+e[7],this}min(v){return this.x=Math.min(this.x,v.x),this.y=Math.min(this.y,v.y),this}max(v){return this.x=Math.max(this.x,v.x),this.y=Math.max(this.y,v.y),this}clamp(min,max){return this.x=Math.max(min.x,Math.min(max.x,this.x)),this.y=Math.max(min.y,Math.min(max.y,this.y)),this}clampScalar(minVal,maxVal){return this.x=Math.max(minVal,Math.min(maxVal,this.x)),this.y=Math.max(minVal,Math.min(maxVal,this.y)),this}clampLength(min,max){const length=this.length();return this.divideScalar(length||1).multiplyScalar(Math.max(min,Math.min(max,length)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(v){return this.x*v.x+this.y*v.y}cross(v){return this.x*v.y-this.y*v.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(v){const denominator=Math.sqrt(this.lengthSq()*v.lengthSq());if(0===denominator)return Math.PI/2;const theta=this.dot(v)/denominator;return Math.acos(clamp(theta,-1,1))}distanceTo(v){return Math.sqrt(this.distanceToSquared(v))}distanceToSquared(v){const dx=this.x-v.x,dy=this.y-v.y;return dx*dx+dy*dy}manhattanDistanceTo(v){return Math.abs(this.x-v.x)+Math.abs(this.y-v.y)}setLength(length){return this.normalize().multiplyScalar(length)}lerp(v,alpha){return this.x+=(v.x-this.x)*alpha,this.y+=(v.y-this.y)*alpha,this}lerpVectors(v1,v2,alpha){return this.x=v1.x+(v2.x-v1.x)*alpha,this.y=v1.y+(v2.y-v1.y)*alpha,this}equals(v){return v.x===this.x&&v.y===this.y}fromArray(array,offset=0){return this.x=array[offset],this.y=array[offset+1],this}toArray(array=[],offset=0){return array[offset]=this.x,array[offset+1]=this.y,array}fromBufferAttribute(attribute,index){return this.x=attribute.getX(index),this.y=attribute.getY(index),this}rotateAround(center,angle){const c=Math.cos(angle),s=Math.sin(angle),x=this.x-center.x,y=this.y-center.y;return this.x=x*c-y*s+center.x,this.y=x*s+y*c+center.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Matrix3{constructor(){Matrix3.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(n11,n12,n13,n21,n22,n23,n31,n32,n33){const te=this.elements;return te[0]=n11,te[1]=n21,te[2]=n31,te[3]=n12,te[4]=n22,te[5]=n32,te[6]=n13,te[7]=n23,te[8]=n33,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(m){const te=this.elements,me=m.elements;return te[0]=me[0],te[1]=me[1],te[2]=me[2],te[3]=me[3],te[4]=me[4],te[5]=me[5],te[6]=me[6],te[7]=me[7],te[8]=me[8],this}extractBasis(xAxis,yAxis,zAxis){return xAxis.setFromMatrix3Column(this,0),yAxis.setFromMatrix3Column(this,1),zAxis.setFromMatrix3Column(this,2),this}setFromMatrix4(m){const me=m.elements;return this.set(me[0],me[4],me[8],me[1],me[5],me[9],me[2],me[6],me[10]),this}multiply(m){return this.multiplyMatrices(this,m)}premultiply(m){return this.multiplyMatrices(m,this)}multiplyMatrices(a,b){const ae=a.elements,be=b.elements,te=this.elements,a11=ae[0],a12=ae[3],a13=ae[6],a21=ae[1],a22=ae[4],a23=ae[7],a31=ae[2],a32=ae[5],a33=ae[8],b11=be[0],b12=be[3],b13=be[6],b21=be[1],b22=be[4],b23=be[7],b31=be[2],b32=be[5],b33=be[8];return te[0]=a11*b11+a12*b21+a13*b31,te[3]=a11*b12+a12*b22+a13*b32,te[6]=a11*b13+a12*b23+a13*b33,te[1]=a21*b11+a22*b21+a23*b31,te[4]=a21*b12+a22*b22+a23*b32,te[7]=a21*b13+a22*b23+a23*b33,te[2]=a31*b11+a32*b21+a33*b31,te[5]=a31*b12+a32*b22+a33*b32,te[8]=a31*b13+a32*b23+a33*b33,this}multiplyScalar(s){const te=this.elements;return te[0]*=s,te[3]*=s,te[6]*=s,te[1]*=s,te[4]*=s,te[7]*=s,te[2]*=s,te[5]*=s,te[8]*=s,this}determinant(){const te=this.elements,a=te[0],b=te[1],c=te[2],d=te[3],e=te[4],f=te[5],g=te[6],h=te[7],i=te[8];return a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g}invert(){const te=this.elements,n11=te[0],n21=te[1],n31=te[2],n12=te[3],n22=te[4],n32=te[5],n13=te[6],n23=te[7],n33=te[8],t11=n33*n22-n32*n23,t12=n32*n13-n33*n12,t13=n23*n12-n22*n13,det=n11*t11+n21*t12+n31*t13;if(0===det)return this.set(0,0,0,0,0,0,0,0,0);const detInv=1/det;return te[0]=t11*detInv,te[1]=(n31*n23-n33*n21)*detInv,te[2]=(n32*n21-n31*n22)*detInv,te[3]=t12*detInv,te[4]=(n33*n11-n31*n13)*detInv,te[5]=(n31*n12-n32*n11)*detInv,te[6]=t13*detInv,te[7]=(n21*n13-n23*n11)*detInv,te[8]=(n22*n11-n21*n12)*detInv,this}transpose(){let tmp;const m=this.elements;return tmp=m[1],m[1]=m[3],m[3]=tmp,tmp=m[2],m[2]=m[6],m[6]=tmp,tmp=m[5],m[5]=m[7],m[7]=tmp,this}getNormalMatrix(matrix4){return this.setFromMatrix4(matrix4).invert().transpose()}transposeIntoArray(r){const m=this.elements;return r[0]=m[0],r[1]=m[3],r[2]=m[6],r[3]=m[1],r[4]=m[4],r[5]=m[7],r[6]=m[2],r[7]=m[5],r[8]=m[8],this}setUvTransform(tx,ty,sx,sy,rotation,cx,cy){const c=Math.cos(rotation),s=Math.sin(rotation);return this.set(sx*c,sx*s,-sx*(c*cx+s*cy)+cx+tx,-sy*s,sy*c,-sy*(-s*cx+c*cy)+cy+ty,0,0,1),this}scale(sx,sy){return this.premultiply(_m3.makeScale(sx,sy)),this}rotate(theta){return this.premultiply(_m3.makeRotation(-theta)),this}translate(tx,ty){return this.premultiply(_m3.makeTranslation(tx,ty)),this}makeTranslation(x,y){return this.set(1,0,x,0,1,y,0,0,1),this}makeRotation(theta){const c=Math.cos(theta),s=Math.sin(theta);return this.set(c,-s,0,s,c,0,0,0,1),this}makeScale(x,y){return this.set(x,0,0,0,y,0,0,0,1),this}equals(matrix){const te=this.elements,me=matrix.elements;for(let i=0;i<9;i++)if(te[i]!==me[i])return!1;return!0}fromArray(array,offset=0){for(let i=0;i<9;i++)this.elements[i]=array[i+offset];return this}toArray(array=[],offset=0){const te=this.elements;return array[offset]=te[0],array[offset+1]=te[1],array[offset+2]=te[2],array[offset+3]=te[3],array[offset+4]=te[4],array[offset+5]=te[5],array[offset+6]=te[6],array[offset+7]=te[7],array[offset+8]=te[8],array}clone(){return(new this.constructor).fromArray(this.elements)}}const _m3=new Matrix3;function arrayNeedsUint32(array){for(let i=array.length-1;i>=0;--i)if(array[i]>=65535)return!0;return!1}const TYPED_ARRAYS={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function getTypedArray(type,buffer){return new TYPED_ARRAYS[type](buffer)}function createElementNS(name){return document.createElementNS("http://www.w3.org/1999/xhtml",name)}const _cache={};function warnOnce(message){message in _cache||(_cache[message]=!0,console.warn(message))}function SRGBToLinear(c){return c<.04045?.0773993808*c:Math.pow(.9478672986*c+.0521327014,2.4)}function LinearToSRGB(c){return c<.0031308?12.92*c:1.055*Math.pow(c,.41666)-.055}const LINEAR_SRGB_TO_LINEAR_DISPLAY_P3=(new Matrix3).fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]),LINEAR_DISPLAY_P3_TO_LINEAR_SRGB=(new Matrix3).fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]);const TO_LINEAR={[LinearSRGBColorSpace]:color=>color,[SRGBColorSpace]:color=>color.convertSRGBToLinear(),[DisplayP3ColorSpace]:function DisplayP3ToLinearSRGB(color){return color.convertSRGBToLinear().applyMatrix3(LINEAR_DISPLAY_P3_TO_LINEAR_SRGB)}},FROM_LINEAR={[LinearSRGBColorSpace]:color=>color,[SRGBColorSpace]:color=>color.convertLinearToSRGB(),[DisplayP3ColorSpace]:function LinearSRGBToDisplayP3(color){return color.applyMatrix3(LINEAR_SRGB_TO_LINEAR_DISPLAY_P3).convertLinearToSRGB()}},ColorManagement={enabled:!0,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(legacyMode){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!legacyMode},get workingColorSpace(){return LinearSRGBColorSpace},set workingColorSpace(colorSpace){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(color,sourceColorSpace,targetColorSpace){if(!1===this.enabled||sourceColorSpace===targetColorSpace||!sourceColorSpace||!targetColorSpace)return color;const sourceToLinear=TO_LINEAR[sourceColorSpace],targetFromLinear=FROM_LINEAR[targetColorSpace];if(void 0===sourceToLinear||void 0===targetFromLinear)throw new Error(`Unsupported color space conversion, "${sourceColorSpace}" to "${targetColorSpace}".`);return targetFromLinear(sourceToLinear(color))},fromWorkingColorSpace:function(color,targetColorSpace){return this.convert(color,this.workingColorSpace,targetColorSpace)},toWorkingColorSpace:function(color,sourceColorSpace){return this.convert(color,sourceColorSpace,this.workingColorSpace)}};let _canvas;class ImageUtils{static getDataURL(image){if(/^data:/i.test(image.src))return image.src;if("undefined"==typeof HTMLCanvasElement)return image.src;let canvas;if(image instanceof HTMLCanvasElement)canvas=image;else{void 0===_canvas&&(_canvas=createElementNS("canvas")),_canvas.width=image.width,_canvas.height=image.height;const context=_canvas.getContext("2d");image instanceof ImageData?context.putImageData(image,0,0):context.drawImage(image,0,0,image.width,image.height),canvas=_canvas}return canvas.width>2048||canvas.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",image),canvas.toDataURL("image/jpeg",.6)):canvas.toDataURL("image/png")}static sRGBToLinear(image){if("undefined"!=typeof HTMLImageElement&&image instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&image instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&image instanceof ImageBitmap){const canvas=createElementNS("canvas");canvas.width=image.width,canvas.height=image.height;const context=canvas.getContext("2d");context.drawImage(image,0,0,image.width,image.height);const imageData=context.getImageData(0,0,image.width,image.height),data=imageData.data;for(let i=0;i<data.length;i++)data[i]=255*SRGBToLinear(data[i]/255);return context.putImageData(imageData,0,0),canvas}if(image.data){const data=image.data.slice(0);for(let i=0;i<data.length;i++)data instanceof Uint8Array||data instanceof Uint8ClampedArray?data[i]=Math.floor(255*SRGBToLinear(data[i]/255)):data[i]=SRGBToLinear(data[i]);return{data,width:image.width,height:image.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),image}}class Source{constructor(data=null){this.isSource=!0,this.uuid=generateUUID(),this.data=data,this.version=0}set needsUpdate(value){!0===value&&this.version++}toJSON(meta){const isRootObject=void 0===meta||"string"==typeof meta;if(!isRootObject&&void 0!==meta.images[this.uuid])return meta.images[this.uuid];const output={uuid:this.uuid,url:""},data=this.data;if(null!==data){let url;if(Array.isArray(data)){url=[];for(let i=0,l=data.length;i<l;i++)data[i].isDataTexture?url.push(serializeImage(data[i].image)):url.push(serializeImage(data[i]))}else url=serializeImage(data);output.url=url}return isRootObject||(meta.images[this.uuid]=output),output}}function serializeImage(image){return"undefined"!=typeof HTMLImageElement&&image instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&image instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&image instanceof ImageBitmap?ImageUtils.getDataURL(image):image.data?{data:Array.from(image.data),width:image.width,height:image.height,type:image.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let textureId=0;class Texture extends EventDispatcher{constructor(image=Texture.DEFAULT_IMAGE,mapping=Texture.DEFAULT_MAPPING,wrapS=ClampToEdgeWrapping,wrapT=ClampToEdgeWrapping,magFilter=LinearFilter,minFilter=LinearMipmapLinearFilter,format=RGBAFormat,type=UnsignedByteType,anisotropy=Texture.DEFAULT_ANISOTROPY,colorSpace=NoColorSpace){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:textureId++}),this.uuid=generateUUID(),this.name="",this.source=new Source(image),this.mipmaps=[],this.mapping=mapping,this.channel=0,this.wrapS=wrapS,this.wrapT=wrapT,this.magFilter=magFilter,this.minFilter=minFilter,this.anisotropy=anisotropy,this.format=format,this.internalFormat=null,this.type=type,this.offset=new Vector2(0,0),this.repeat=new Vector2(1,1),this.center=new Vector2(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Matrix3,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,"string"==typeof colorSpace?this.colorSpace=colorSpace:(warnOnce("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=colorSpace===sRGBEncoding?SRGBColorSpace:NoColorSpace),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(value=null){this.source.data=value}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(source){return this.name=source.name,this.source=source.source,this.mipmaps=source.mipmaps.slice(0),this.mapping=source.mapping,this.channel=source.channel,this.wrapS=source.wrapS,this.wrapT=source.wrapT,this.magFilter=source.magFilter,this.minFilter=source.minFilter,this.anisotropy=source.anisotropy,this.format=source.format,this.internalFormat=source.internalFormat,this.type=source.type,this.offset.copy(source.offset),this.repeat.copy(source.repeat),this.center.copy(source.center),this.rotation=source.rotation,this.matrixAutoUpdate=source.matrixAutoUpdate,this.matrix.copy(source.matrix),this.generateMipmaps=source.generateMipmaps,this.premultiplyAlpha=source.premultiplyAlpha,this.flipY=source.flipY,this.unpackAlignment=source.unpackAlignment,this.colorSpace=source.colorSpace,this.userData=JSON.parse(JSON.stringify(source.userData)),this.needsUpdate=!0,this}toJSON(meta){const isRootObject=void 0===meta||"string"==typeof meta;if(!isRootObject&&void 0!==meta.textures[this.uuid])return meta.textures[this.uuid];const output={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(meta).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(output.userData=this.userData),isRootObject||(meta.textures[this.uuid]=output),output}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(uv){if(this.mapping!==UVMapping)return uv;if(uv.applyMatrix3(this.matrix),uv.x<0||uv.x>1)switch(this.wrapS){case RepeatWrapping:uv.x=uv.x-Math.floor(uv.x);break;case ClampToEdgeWrapping:uv.x=uv.x<0?0:1;break;case MirroredRepeatWrapping:1===Math.abs(Math.floor(uv.x)%2)?uv.x=Math.ceil(uv.x)-uv.x:uv.x=uv.x-Math.floor(uv.x)}if(uv.y<0||uv.y>1)switch(this.wrapT){case RepeatWrapping:uv.y=uv.y-Math.floor(uv.y);break;case ClampToEdgeWrapping:uv.y=uv.y<0?0:1;break;case MirroredRepeatWrapping:1===Math.abs(Math.floor(uv.y)%2)?uv.y=Math.ceil(uv.y)-uv.y:uv.y=uv.y-Math.floor(uv.y)}return this.flipY&&(uv.y=1-uv.y),uv}set needsUpdate(value){!0===value&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return warnOnce("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===SRGBColorSpace?sRGBEncoding:LinearEncoding}set encoding(encoding){warnOnce("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=encoding===sRGBEncoding?SRGBColorSpace:NoColorSpace}}Texture.DEFAULT_IMAGE=null,Texture.DEFAULT_MAPPING=UVMapping,Texture.DEFAULT_ANISOTROPY=1;class Vector4{constructor(x=0,y=0,z=0,w=1){Vector4.prototype.isVector4=!0,this.x=x,this.y=y,this.z=z,this.w=w}get width(){return this.z}set width(value){this.z=value}get height(){return this.w}set height(value){this.w=value}set(x,y,z,w){return this.x=x,this.y=y,this.z=z,this.w=w,this}setScalar(scalar){return this.x=scalar,this.y=scalar,this.z=scalar,this.w=scalar,this}setX(x){return this.x=x,this}setY(y){return this.y=y,this}setZ(z){return this.z=z,this}setW(w){return this.w=w,this}setComponent(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;case 2:this.z=value;break;case 3:this.w=value;break;default:throw new Error("index is out of range: "+index)}return this}getComponent(index){switch(index){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+index)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(v){return this.x=v.x,this.y=v.y,this.z=v.z,this.w=void 0!==v.w?v.w:1,this}add(v){return this.x+=v.x,this.y+=v.y,this.z+=v.z,this.w+=v.w,this}addScalar(s){return this.x+=s,this.y+=s,this.z+=s,this.w+=s,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this.w=a.w+b.w,this}addScaledVector(v,s){return this.x+=v.x*s,this.y+=v.y*s,this.z+=v.z*s,this.w+=v.w*s,this}sub(v){return this.x-=v.x,this.y-=v.y,this.z-=v.z,this.w-=v.w,this}subScalar(s){return this.x-=s,this.y-=s,this.z-=s,this.w-=s,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this.w=a.w-b.w,this}multiply(v){return this.x*=v.x,this.y*=v.y,this.z*=v.z,this.w*=v.w,this}multiplyScalar(scalar){return this.x*=scalar,this.y*=scalar,this.z*=scalar,this.w*=scalar,this}applyMatrix4(m){const x=this.x,y=this.y,z=this.z,w=this.w,e=m.elements;return this.x=e[0]*x+e[4]*y+e[8]*z+e[12]*w,this.y=e[1]*x+e[5]*y+e[9]*z+e[13]*w,this.z=e[2]*x+e[6]*y+e[10]*z+e[14]*w,this.w=e[3]*x+e[7]*y+e[11]*z+e[15]*w,this}divideScalar(scalar){return this.multiplyScalar(1/scalar)}setAxisAngleFromQuaternion(q){this.w=2*Math.acos(q.w);const s=Math.sqrt(1-q.w*q.w);return s<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=q.x/s,this.y=q.y/s,this.z=q.z/s),this}setAxisAngleFromRotationMatrix(m){let angle,x,y,z;const te=m.elements,m11=te[0],m12=te[4],m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6],m33=te[10];if(Math.abs(m12-m21)<.01&&Math.abs(m13-m31)<.01&&Math.abs(m23-m32)<.01){if(Math.abs(m12+m21)<.1&&Math.abs(m13+m31)<.1&&Math.abs(m23+m32)<.1&&Math.abs(m11+m22+m33-3)<.1)return this.set(1,0,0,0),this;angle=Math.PI;const xx=(m11+1)/2,yy=(m22+1)/2,zz=(m33+1)/2,xy=(m12+m21)/4,xz=(m13+m31)/4,yz=(m23+m32)/4;return xx>yy&&xx>zz?xx<.01?(x=0,y=.707106781,z=.707106781):(x=Math.sqrt(xx),y=xy/x,z=xz/x):yy>zz?yy<.01?(x=.707106781,y=0,z=.707106781):(y=Math.sqrt(yy),x=xy/y,z=yz/y):zz<.01?(x=.707106781,y=.707106781,z=0):(z=Math.sqrt(zz),x=xz/z,y=yz/z),this.set(x,y,z,angle),this}let s=Math.sqrt((m32-m23)*(m32-m23)+(m13-m31)*(m13-m31)+(m21-m12)*(m21-m12));return Math.abs(s)<.001&&(s=1),this.x=(m32-m23)/s,this.y=(m13-m31)/s,this.z=(m21-m12)/s,this.w=Math.acos((m11+m22+m33-1)/2),this}min(v){return this.x=Math.min(this.x,v.x),this.y=Math.min(this.y,v.y),this.z=Math.min(this.z,v.z),this.w=Math.min(this.w,v.w),this}max(v){return this.x=Math.max(this.x,v.x),this.y=Math.max(this.y,v.y),this.z=Math.max(this.z,v.z),this.w=Math.max(this.w,v.w),this}clamp(min,max){return this.x=Math.max(min.x,Math.min(max.x,this.x)),this.y=Math.max(min.y,Math.min(max.y,this.y)),this.z=Math.max(min.z,Math.min(max.z,this.z)),this.w=Math.max(min.w,Math.min(max.w,this.w)),this}clampScalar(minVal,maxVal){return this.x=Math.max(minVal,Math.min(maxVal,this.x)),this.y=Math.max(minVal,Math.min(maxVal,this.y)),this.z=Math.max(minVal,Math.min(maxVal,this.z)),this.w=Math.max(minVal,Math.min(maxVal,this.w)),this}clampLength(min,max){const length=this.length();return this.divideScalar(length||1).multiplyScalar(Math.max(min,Math.min(max,length)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(v){return this.x*v.x+this.y*v.y+this.z*v.z+this.w*v.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(length){return this.normalize().multiplyScalar(length)}lerp(v,alpha){return this.x+=(v.x-this.x)*alpha,this.y+=(v.y-this.y)*alpha,this.z+=(v.z-this.z)*alpha,this.w+=(v.w-this.w)*alpha,this}lerpVectors(v1,v2,alpha){return this.x=v1.x+(v2.x-v1.x)*alpha,this.y=v1.y+(v2.y-v1.y)*alpha,this.z=v1.z+(v2.z-v1.z)*alpha,this.w=v1.w+(v2.w-v1.w)*alpha,this}equals(v){return v.x===this.x&&v.y===this.y&&v.z===this.z&&v.w===this.w}fromArray(array,offset=0){return this.x=array[offset],this.y=array[offset+1],this.z=array[offset+2],this.w=array[offset+3],this}toArray(array=[],offset=0){return array[offset]=this.x,array[offset+1]=this.y,array[offset+2]=this.z,array[offset+3]=this.w,array}fromBufferAttribute(attribute,index){return this.x=attribute.getX(index),this.y=attribute.getY(index),this.z=attribute.getZ(index),this.w=attribute.getW(index),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class WebGLRenderTarget extends EventDispatcher{constructor(width=1,height=1,options={}){super(),this.isWebGLRenderTarget=!0,this.width=width,this.height=height,this.depth=1,this.scissor=new Vector4(0,0,width,height),this.scissorTest=!1,this.viewport=new Vector4(0,0,width,height);const image={width,height,depth:1};void 0!==options.encoding&&(warnOnce("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),options.colorSpace=options.encoding===sRGBEncoding?SRGBColorSpace:NoColorSpace),this.texture=new Texture(image,options.mapping,options.wrapS,options.wrapT,options.magFilter,options.minFilter,options.format,options.type,options.anisotropy,options.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=void 0!==options.generateMipmaps&&options.generateMipmaps,this.texture.internalFormat=void 0!==options.internalFormat?options.internalFormat:null,this.texture.minFilter=void 0!==options.minFilter?options.minFilter:LinearFilter,this.depthBuffer=void 0===options.depthBuffer||options.depthBuffer,this.stencilBuffer=void 0!==options.stencilBuffer&&options.stencilBuffer,this.depthTexture=void 0!==options.depthTexture?options.depthTexture:null,this.samples=void 0!==options.samples?options.samples:0}setSize(width,height,depth=1){this.width===width&&this.height===height&&this.depth===depth||(this.width=width,this.height=height,this.depth=depth,this.texture.image.width=width,this.texture.image.height=height,this.texture.image.depth=depth,this.dispose()),this.viewport.set(0,0,width,height),this.scissor.set(0,0,width,height)}clone(){return(new this.constructor).copy(this)}copy(source){this.width=source.width,this.height=source.height,this.depth=source.depth,this.scissor.copy(source.scissor),this.scissorTest=source.scissorTest,this.viewport.copy(source.viewport),this.texture=source.texture.clone(),this.texture.isRenderTargetTexture=!0;const image=Object.assign({},source.texture.image);return this.texture.source=new Source(image),this.depthBuffer=source.depthBuffer,this.stencilBuffer=source.stencilBuffer,null!==source.depthTexture&&(this.depthTexture=source.depthTexture.clone()),this.samples=source.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class DataArrayTexture extends Texture{constructor(data=null,width=1,height=1,depth=1){super(null),this.isDataArrayTexture=!0,this.image={data,width,height,depth},this.magFilter=NearestFilter,this.minFilter=NearestFilter,this.wrapR=ClampToEdgeWrapping,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class WebGLArrayRenderTarget extends WebGLRenderTarget{constructor(width=1,height=1,depth=1){super(width,height),this.isWebGLArrayRenderTarget=!0,this.depth=depth,this.texture=new DataArrayTexture(null,width,height,depth),this.texture.isRenderTargetTexture=!0}}class Data3DTexture extends Texture{constructor(data=null,width=1,height=1,depth=1){super(null),this.isData3DTexture=!0,this.image={data,width,height,depth},this.magFilter=NearestFilter,this.minFilter=NearestFilter,this.wrapR=ClampToEdgeWrapping,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class WebGL3DRenderTarget extends WebGLRenderTarget{constructor(width=1,height=1,depth=1){super(width,height),this.isWebGL3DRenderTarget=!0,this.depth=depth,this.texture=new Data3DTexture(null,width,height,depth),this.texture.isRenderTargetTexture=!0}}class WebGLMultipleRenderTargets extends WebGLRenderTarget{constructor(width=1,height=1,count=1,options={}){super(width,height,options),this.isWebGLMultipleRenderTargets=!0;const texture=this.texture;this.texture=[];for(let i=0;i<count;i++)this.texture[i]=texture.clone(),this.texture[i].isRenderTargetTexture=!0}setSize(width,height,depth=1){if(this.width!==width||this.height!==height||this.depth!==depth){this.width=width,this.height=height,this.depth=depth;for(let i=0,il=this.texture.length;i<il;i++)this.texture[i].image.width=width,this.texture[i].image.height=height,this.texture[i].image.depth=depth;this.dispose()}return this.viewport.set(0,0,width,height),this.scissor.set(0,0,width,height),this}copy(source){this.dispose(),this.width=source.width,this.height=source.height,this.depth=source.depth,this.scissor.copy(source.scissor),this.scissorTest=source.scissorTest,this.viewport.copy(source.viewport),this.depthBuffer=source.depthBuffer,this.stencilBuffer=source.stencilBuffer,null!==source.depthTexture&&(this.depthTexture=source.depthTexture.clone()),this.texture.length=0;for(let i=0,il=source.texture.length;i<il;i++)this.texture[i]=source.texture[i].clone(),this.texture[i].isRenderTargetTexture=!0;return this}}class Quaternion{constructor(x=0,y=0,z=0,w=1){this.isQuaternion=!0,this._x=x,this._y=y,this._z=z,this._w=w}static slerpFlat(dst,dstOffset,src0,srcOffset0,src1,srcOffset1,t){let x0=src0[srcOffset0+0],y0=src0[srcOffset0+1],z0=src0[srcOffset0+2],w0=src0[srcOffset0+3];const x1=src1[srcOffset1+0],y1=src1[srcOffset1+1],z1=src1[srcOffset1+2],w1=src1[srcOffset1+3];if(0===t)return dst[dstOffset+0]=x0,dst[dstOffset+1]=y0,dst[dstOffset+2]=z0,void(dst[dstOffset+3]=w0);if(1===t)return dst[dstOffset+0]=x1,dst[dstOffset+1]=y1,dst[dstOffset+2]=z1,void(dst[dstOffset+3]=w1);if(w0!==w1||x0!==x1||y0!==y1||z0!==z1){let s=1-t;const cos=x0*x1+y0*y1+z0*z1+w0*w1,dir=cos>=0?1:-1,sqrSin=1-cos*cos;if(sqrSin>Number.EPSILON){const sin=Math.sqrt(sqrSin),len=Math.atan2(sin,cos*dir);s=Math.sin(s*len)/sin,t=Math.sin(t*len)/sin}const tDir=t*dir;if(x0=x0*s+x1*tDir,y0=y0*s+y1*tDir,z0=z0*s+z1*tDir,w0=w0*s+w1*tDir,s===1-t){const f=1/Math.sqrt(x0*x0+y0*y0+z0*z0+w0*w0);x0*=f,y0*=f,z0*=f,w0*=f}}dst[dstOffset]=x0,dst[dstOffset+1]=y0,dst[dstOffset+2]=z0,dst[dstOffset+3]=w0}static multiplyQuaternionsFlat(dst,dstOffset,src0,srcOffset0,src1,srcOffset1){const x0=src0[srcOffset0],y0=src0[srcOffset0+1],z0=src0[srcOffset0+2],w0=src0[srcOffset0+3],x1=src1[srcOffset1],y1=src1[srcOffset1+1],z1=src1[srcOffset1+2],w1=src1[srcOffset1+3];return dst[dstOffset]=x0*w1+w0*x1+y0*z1-z0*y1,dst[dstOffset+1]=y0*w1+w0*y1+z0*x1-x0*z1,dst[dstOffset+2]=z0*w1+w0*z1+x0*y1-y0*x1,dst[dstOffset+3]=w0*w1-x0*x1-y0*y1-z0*z1,dst}get x(){return this._x}set x(value){this._x=value,this._onChangeCallback()}get y(){return this._y}set y(value){this._y=value,this._onChangeCallback()}get z(){return this._z}set z(value){this._z=value,this._onChangeCallback()}get w(){return this._w}set w(value){this._w=value,this._onChangeCallback()}set(x,y,z,w){return this._x=x,this._y=y,this._z=z,this._w=w,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(quaternion){return this._x=quaternion.x,this._y=quaternion.y,this._z=quaternion.z,this._w=quaternion.w,this._onChangeCallback(),this}setFromEuler(euler,update){const x=euler._x,y=euler._y,z=euler._z,order=euler._order,cos=Math.cos,sin=Math.sin,c1=cos(x/2),c2=cos(y/2),c3=cos(z/2),s1=sin(x/2),s2=sin(y/2),s3=sin(z/2);switch(order){case"XYZ":this._x=s1*c2*c3+c1*s2*s3,this._y=c1*s2*c3-s1*c2*s3,this._z=c1*c2*s3+s1*s2*c3,this._w=c1*c2*c3-s1*s2*s3;break;case"YXZ":this._x=s1*c2*c3+c1*s2*s3,this._y=c1*s2*c3-s1*c2*s3,this._z=c1*c2*s3-s1*s2*c3,this._w=c1*c2*c3+s1*s2*s3;break;case"ZXY":this._x=s1*c2*c3-c1*s2*s3,this._y=c1*s2*c3+s1*c2*s3,this._z=c1*c2*s3+s1*s2*c3,this._w=c1*c2*c3-s1*s2*s3;break;case"ZYX":this._x=s1*c2*c3-c1*s2*s3,this._y=c1*s2*c3+s1*c2*s3,this._z=c1*c2*s3-s1*s2*c3,this._w=c1*c2*c3+s1*s2*s3;break;case"YZX":this._x=s1*c2*c3+c1*s2*s3,this._y=c1*s2*c3+s1*c2*s3,this._z=c1*c2*s3-s1*s2*c3,this._w=c1*c2*c3-s1*s2*s3;break;case"XZY":this._x=s1*c2*c3-c1*s2*s3,this._y=c1*s2*c3-s1*c2*s3,this._z=c1*c2*s3+s1*s2*c3,this._w=c1*c2*c3+s1*s2*s3;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+order)}return!1!==update&&this._onChangeCallback(),this}setFromAxisAngle(axis,angle){const halfAngle=angle/2,s=Math.sin(halfAngle);return this._x=axis.x*s,this._y=axis.y*s,this._z=axis.z*s,this._w=Math.cos(halfAngle),this._onChangeCallback(),this}setFromRotationMatrix(m){const te=m.elements,m11=te[0],m12=te[4],m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6],m33=te[10],trace=m11+m22+m33;if(trace>0){const s=.5/Math.sqrt(trace+1);this._w=.25/s,this._x=(m32-m23)*s,this._y=(m13-m31)*s,this._z=(m21-m12)*s}else if(m11>m22&&m11>m33){const s=2*Math.sqrt(1+m11-m22-m33);this._w=(m32-m23)/s,this._x=.25*s,this._y=(m12+m21)/s,this._z=(m13+m31)/s}else if(m22>m33){const s=2*Math.sqrt(1+m22-m11-m33);this._w=(m13-m31)/s,this._x=(m12+m21)/s,this._y=.25*s,this._z=(m23+m32)/s}else{const s=2*Math.sqrt(1+m33-m11-m22);this._w=(m21-m12)/s,this._x=(m13+m31)/s,this._y=(m23+m32)/s,this._z=.25*s}return this._onChangeCallback(),this}setFromUnitVectors(vFrom,vTo){let r=vFrom.dot(vTo)+1;return r<Number.EPSILON?(r=0,Math.abs(vFrom.x)>Math.abs(vFrom.z)?(this._x=-vFrom.y,this._y=vFrom.x,this._z=0,this._w=r):(this._x=0,this._y=-vFrom.z,this._z=vFrom.y,this._w=r)):(this._x=vFrom.y*vTo.z-vFrom.z*vTo.y,this._y=vFrom.z*vTo.x-vFrom.x*vTo.z,this._z=vFrom.x*vTo.y-vFrom.y*vTo.x,this._w=r),this.normalize()}angleTo(q){return 2*Math.acos(Math.abs(clamp(this.dot(q),-1,1)))}rotateTowards(q,step){const angle=this.angleTo(q);if(0===angle)return this;const t=Math.min(1,step/angle);return this.slerp(q,t),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(v){return this._x*v._x+this._y*v._y+this._z*v._z+this._w*v._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let l=this.length();return 0===l?(this._x=0,this._y=0,this._z=0,this._w=1):(l=1/l,this._x=this._x*l,this._y=this._y*l,this._z=this._z*l,this._w=this._w*l),this._onChangeCallback(),this}multiply(q){return this.multiplyQuaternions(this,q)}premultiply(q){return this.multiplyQuaternions(q,this)}multiplyQuaternions(a,b){const qax=a._x,qay=a._y,qaz=a._z,qaw=a._w,qbx=b._x,qby=b._y,qbz=b._z,qbw=b._w;return this._x=qax*qbw+qaw*qbx+qay*qbz-qaz*qby,this._y=qay*qbw+qaw*qby+qaz*qbx-qax*qbz,this._z=qaz*qbw+qaw*qbz+qax*qby-qay*qbx,this._w=qaw*qbw-qax*qbx-qay*qby-qaz*qbz,this._onChangeCallback(),this}slerp(qb,t){if(0===t)return this;if(1===t)return this.copy(qb);const x=this._x,y=this._y,z=this._z,w=this._w;let cosHalfTheta=w*qb._w+x*qb._x+y*qb._y+z*qb._z;if(cosHalfTheta<0?(this._w=-qb._w,this._x=-qb._x,this._y=-qb._y,this._z=-qb._z,cosHalfTheta=-cosHalfTheta):this.copy(qb),cosHalfTheta>=1)return this._w=w,this._x=x,this._y=y,this._z=z,this;const sqrSinHalfTheta=1-cosHalfTheta*cosHalfTheta;if(sqrSinHalfTheta<=Number.EPSILON){const s=1-t;return this._w=s*w+t*this._w,this._x=s*x+t*this._x,this._y=s*y+t*this._y,this._z=s*z+t*this._z,this.normalize(),this._onChangeCallback(),this}const sinHalfTheta=Math.sqrt(sqrSinHalfTheta),halfTheta=Math.atan2(sinHalfTheta,cosHalfTheta),ratioA=Math.sin((1-t)*halfTheta)/sinHalfTheta,ratioB=Math.sin(t*halfTheta)/sinHalfTheta;return this._w=w*ratioA+this._w*ratioB,this._x=x*ratioA+this._x*ratioB,this._y=y*ratioA+this._y*ratioB,this._z=z*ratioA+this._z*ratioB,this._onChangeCallback(),this}slerpQuaternions(qa,qb,t){return this.copy(qa).slerp(qb,t)}random(){const u1=Math.random(),sqrt1u1=Math.sqrt(1-u1),sqrtu1=Math.sqrt(u1),u2=2*Math.PI*Math.random(),u3=2*Math.PI*Math.random();return this.set(sqrt1u1*Math.cos(u2),sqrtu1*Math.sin(u3),sqrtu1*Math.cos(u3),sqrt1u1*Math.sin(u2))}equals(quaternion){return quaternion._x===this._x&&quaternion._y===this._y&&quaternion._z===this._z&&quaternion._w===this._w}fromArray(array,offset=0){return this._x=array[offset],this._y=array[offset+1],this._z=array[offset+2],this._w=array[offset+3],this._onChangeCallback(),this}toArray(array=[],offset=0){return array[offset]=this._x,array[offset+1]=this._y,array[offset+2]=this._z,array[offset+3]=this._w,array}fromBufferAttribute(attribute,index){return this._x=attribute.getX(index),this._y=attribute.getY(index),this._z=attribute.getZ(index),this._w=attribute.getW(index),this}toJSON(){return this.toArray()}_onChange(callback){return this._onChangeCallback=callback,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class Vector3{constructor(x=0,y=0,z=0){Vector3.prototype.isVector3=!0,this.x=x,this.y=y,this.z=z}set(x,y,z){return void 0===z&&(z=this.z),this.x=x,this.y=y,this.z=z,this}setScalar(scalar){return this.x=scalar,this.y=scalar,this.z=scalar,this}setX(x){return this.x=x,this}setY(y){return this.y=y,this}setZ(z){return this.z=z,this}setComponent(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;case 2:this.z=value;break;default:throw new Error("index is out of range: "+index)}return this}getComponent(index){switch(index){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+index)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(v){return this.x=v.x,this.y=v.y,this.z=v.z,this}add(v){return this.x+=v.x,this.y+=v.y,this.z+=v.z,this}addScalar(s){return this.x+=s,this.y+=s,this.z+=s,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this}addScaledVector(v,s){return this.x+=v.x*s,this.y+=v.y*s,this.z+=v.z*s,this}sub(v){return this.x-=v.x,this.y-=v.y,this.z-=v.z,this}subScalar(s){return this.x-=s,this.y-=s,this.z-=s,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this}multiply(v){return this.x*=v.x,this.y*=v.y,this.z*=v.z,this}multiplyScalar(scalar){return this.x*=scalar,this.y*=scalar,this.z*=scalar,this}multiplyVectors(a,b){return this.x=a.x*b.x,this.y=a.y*b.y,this.z=a.z*b.z,this}applyEuler(euler){return this.applyQuaternion(_quaternion$4.setFromEuler(euler))}applyAxisAngle(axis,angle){return this.applyQuaternion(_quaternion$4.setFromAxisAngle(axis,angle))}applyMatrix3(m){const x=this.x,y=this.y,z=this.z,e=m.elements;return this.x=e[0]*x+e[3]*y+e[6]*z,this.y=e[1]*x+e[4]*y+e[7]*z,this.z=e[2]*x+e[5]*y+e[8]*z,this}applyNormalMatrix(m){return this.applyMatrix3(m).normalize()}applyMatrix4(m){const x=this.x,y=this.y,z=this.z,e=m.elements,w=1/(e[3]*x+e[7]*y+e[11]*z+e[15]);return this.x=(e[0]*x+e[4]*y+e[8]*z+e[12])*w,this.y=(e[1]*x+e[5]*y+e[9]*z+e[13])*w,this.z=(e[2]*x+e[6]*y+e[10]*z+e[14])*w,this}applyQuaternion(q){const x=this.x,y=this.y,z=this.z,qx=q.x,qy=q.y,qz=q.z,qw=q.w,ix=qw*x+qy*z-qz*y,iy=qw*y+qz*x-qx*z,iz=qw*z+qx*y-qy*x,iw=-qx*x-qy*y-qz*z;return this.x=ix*qw+iw*-qx+iy*-qz-iz*-qy,this.y=iy*qw+iw*-qy+iz*-qx-ix*-qz,this.z=iz*qw+iw*-qz+ix*-qy-iy*-qx,this}project(camera){return this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix)}unproject(camera){return this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld)}transformDirection(m){const x=this.x,y=this.y,z=this.z,e=m.elements;return this.x=e[0]*x+e[4]*y+e[8]*z,this.y=e[1]*x+e[5]*y+e[9]*z,this.z=e[2]*x+e[6]*y+e[10]*z,this.normalize()}divide(v){return this.x/=v.x,this.y/=v.y,this.z/=v.z,this}divideScalar(scalar){return this.multiplyScalar(1/scalar)}min(v){return this.x=Math.min(this.x,v.x),this.y=Math.min(this.y,v.y),this.z=Math.min(this.z,v.z),this}max(v){return this.x=Math.max(this.x,v.x),this.y=Math.max(this.y,v.y),this.z=Math.max(this.z,v.z),this}clamp(min,max){return this.x=Math.max(min.x,Math.min(max.x,this.x)),this.y=Math.max(min.y,Math.min(max.y,this.y)),this.z=Math.max(min.z,Math.min(max.z,this.z)),this}clampScalar(minVal,maxVal){return this.x=Math.max(minVal,Math.min(maxVal,this.x)),this.y=Math.max(minVal,Math.min(maxVal,this.y)),this.z=Math.max(minVal,Math.min(maxVal,this.z)),this}clampLength(min,max){const length=this.length();return this.divideScalar(length||1).multiplyScalar(Math.max(min,Math.min(max,length)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(v){return this.x*v.x+this.y*v.y+this.z*v.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(length){return this.normalize().multiplyScalar(length)}lerp(v,alpha){return this.x+=(v.x-this.x)*alpha,this.y+=(v.y-this.y)*alpha,this.z+=(v.z-this.z)*alpha,this}lerpVectors(v1,v2,alpha){return this.x=v1.x+(v2.x-v1.x)*alpha,this.y=v1.y+(v2.y-v1.y)*alpha,this.z=v1.z+(v2.z-v1.z)*alpha,this}cross(v){return this.crossVectors(this,v)}crossVectors(a,b){const ax=a.x,ay=a.y,az=a.z,bx=b.x,by=b.y,bz=b.z;return this.x=ay*bz-az*by,this.y=az*bx-ax*bz,this.z=ax*by-ay*bx,this}projectOnVector(v){const denominator=v.lengthSq();if(0===denominator)return this.set(0,0,0);const scalar=v.dot(this)/denominator;return this.copy(v).multiplyScalar(scalar)}projectOnPlane(planeNormal){return _vector$b.copy(this).projectOnVector(planeNormal),this.sub(_vector$b)}reflect(normal){return this.sub(_vector$b.copy(normal).multiplyScalar(2*this.dot(normal)))}angleTo(v){const denominator=Math.sqrt(this.lengthSq()*v.lengthSq());if(0===denominator)return Math.PI/2;const theta=this.dot(v)/denominator;return Math.acos(clamp(theta,-1,1))}distanceTo(v){return Math.sqrt(this.distanceToSquared(v))}distanceToSquared(v){const dx=this.x-v.x,dy=this.y-v.y,dz=this.z-v.z;return dx*dx+dy*dy+dz*dz}manhattanDistanceTo(v){return Math.abs(this.x-v.x)+Math.abs(this.y-v.y)+Math.abs(this.z-v.z)}setFromSpherical(s){return this.setFromSphericalCoords(s.radius,s.phi,s.theta)}setFromSphericalCoords(radius,phi,theta){const sinPhiRadius=Math.sin(phi)*radius;return this.x=sinPhiRadius*Math.sin(theta),this.y=Math.cos(phi)*radius,this.z=sinPhiRadius*Math.cos(theta),this}setFromCylindrical(c){return this.setFromCylindricalCoords(c.radius,c.theta,c.y)}setFromCylindricalCoords(radius,theta,y){return this.x=radius*Math.sin(theta),this.y=y,this.z=radius*Math.cos(theta),this}setFromMatrixPosition(m){const e=m.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(m){const sx=this.setFromMatrixColumn(m,0).length(),sy=this.setFromMatrixColumn(m,1).length(),sz=this.setFromMatrixColumn(m,2).length();return this.x=sx,this.y=sy,this.z=sz,this}setFromMatrixColumn(m,index){return this.fromArray(m.elements,4*index)}setFromMatrix3Column(m,index){return this.fromArray(m.elements,3*index)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(c){return this.x=c.r,this.y=c.g,this.z=c.b,this}equals(v){return v.x===this.x&&v.y===this.y&&v.z===this.z}fromArray(array,offset=0){return this.x=array[offset],this.y=array[offset+1],this.z=array[offset+2],this}toArray(array=[],offset=0){return array[offset]=this.x,array[offset+1]=this.y,array[offset+2]=this.z,array}fromBufferAttribute(attribute,index){return this.x=attribute.getX(index),this.y=attribute.getY(index),this.z=attribute.getZ(index),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const u=2*(Math.random()-.5),t=Math.random()*Math.PI*2,f=Math.sqrt(1-u**2);return this.x=f*Math.cos(t),this.y=f*Math.sin(t),this.z=u,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const _vector$b=new Vector3,_quaternion$4=new Quaternion;class Box3{constructor(min=new Vector3(1/0,1/0,1/0),max=new Vector3(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=min,this.max=max}set(min,max){return this.min.copy(min),this.max.copy(max),this}setFromArray(array){this.makeEmpty();for(let i=0,il=array.length;i<il;i+=3)this.expandByPoint(_vector$a.fromArray(array,i));return this}setFromBufferAttribute(attribute){this.makeEmpty();for(let i=0,il=attribute.count;i<il;i++)this.expandByPoint(_vector$a.fromBufferAttribute(attribute,i));return this}setFromPoints(points){this.makeEmpty();for(let i=0,il=points.length;i<il;i++)this.expandByPoint(points[i]);return this}setFromCenterAndSize(center,size){const halfSize=_vector$a.copy(size).multiplyScalar(.5);return this.min.copy(center).sub(halfSize),this.max.copy(center).add(halfSize),this}setFromObject(object,precise=!1){return this.makeEmpty(),this.expandByObject(object,precise)}clone(){return(new this.constructor).copy(this)}copy(box){return this.min.copy(box.min),this.max.copy(box.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(target){return this.isEmpty()?target.set(0,0,0):target.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(target){return this.isEmpty()?target.set(0,0,0):target.subVectors(this.max,this.min)}expandByPoint(point){return this.min.min(point),this.max.max(point),this}expandByVector(vector){return this.min.sub(vector),this.max.add(vector),this}expandByScalar(scalar){return this.min.addScalar(-scalar),this.max.addScalar(scalar),this}expandByObject(object,precise=!1){if(object.updateWorldMatrix(!1,!1),void 0!==object.boundingBox)null===object.boundingBox&&object.computeBoundingBox(),_box$3.copy(object.boundingBox),_box$3.applyMatrix4(object.matrixWorld),this.union(_box$3);else{const geometry=object.geometry;if(void 0!==geometry)if(precise&&void 0!==geometry.attributes&&void 0!==geometry.attributes.position){const position=geometry.attributes.position;for(let i=0,l=position.count;i<l;i++)_vector$a.fromBufferAttribute(position,i).applyMatrix4(object.matrixWorld),this.expandByPoint(_vector$a)}else null===geometry.boundingBox&&geometry.computeBoundingBox(),_box$3.copy(geometry.boundingBox),_box$3.applyMatrix4(object.matrixWorld),this.union(_box$3)}const children=object.children;for(let i=0,l=children.length;i<l;i++)this.expandByObject(children[i],precise);return this}containsPoint(point){return!(point.x<this.min.x||point.x>this.max.x||point.y<this.min.y||point.y>this.max.y||point.z<this.min.z||point.z>this.max.z)}containsBox(box){return this.min.x<=box.min.x&&box.max.x<=this.max.x&&this.min.y<=box.min.y&&box.max.y<=this.max.y&&this.min.z<=box.min.z&&box.max.z<=this.max.z}getParameter(point,target){return target.set((point.x-this.min.x)/(this.max.x-this.min.x),(point.y-this.min.y)/(this.max.y-this.min.y),(point.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(box){return!(box.max.x<this.min.x||box.min.x>this.max.x||box.max.y<this.min.y||box.min.y>this.max.y||box.max.z<this.min.z||box.min.z>this.max.z)}intersectsSphere(sphere){return this.clampPoint(sphere.center,_vector$a),_vector$a.distanceToSquared(sphere.center)<=sphere.radius*sphere.radius}intersectsPlane(plane){let min,max;return plane.normal.x>0?(min=plane.normal.x*this.min.x,max=plane.normal.x*this.max.x):(min=plane.normal.x*this.max.x,max=plane.normal.x*this.min.x),plane.normal.y>0?(min+=plane.normal.y*this.min.y,max+=plane.normal.y*this.max.y):(min+=plane.normal.y*this.max.y,max+=plane.normal.y*this.min.y),plane.normal.z>0?(min+=plane.normal.z*this.min.z,max+=plane.normal.z*this.max.z):(min+=plane.normal.z*this.max.z,max+=plane.normal.z*this.min.z),min<=-plane.constant&&max>=-plane.constant}intersectsTriangle(triangle){if(this.isEmpty())return!1;this.getCenter(_center),_extents.subVectors(this.max,_center),_v0$2.subVectors(triangle.a,_center),_v1$7.subVectors(triangle.b,_center),_v2$4.subVectors(triangle.c,_center),_f0.subVectors(_v1$7,_v0$2),_f1.subVectors(_v2$4,_v1$7),_f2.subVectors(_v0$2,_v2$4);let axes=[0,-_f0.z,_f0.y,0,-_f1.z,_f1.y,0,-_f2.z,_f2.y,_f0.z,0,-_f0.x,_f1.z,0,-_f1.x,_f2.z,0,-_f2.x,-_f0.y,_f0.x,0,-_f1.y,_f1.x,0,-_f2.y,_f2.x,0];return!!satForAxes(axes,_v0$2,_v1$7,_v2$4,_extents)&&(axes=[1,0,0,0,1,0,0,0,1],!!satForAxes(axes,_v0$2,_v1$7,_v2$4,_extents)&&(_triangleNormal.crossVectors(_f0,_f1),axes=[_triangleNormal.x,_triangleNormal.y,_triangleNormal.z],satForAxes(axes,_v0$2,_v1$7,_v2$4,_extents)))}clampPoint(point,target){return target.copy(point).clamp(this.min,this.max)}distanceToPoint(point){return this.clampPoint(point,_vector$a).distanceTo(point)}getBoundingSphere(target){return this.isEmpty()?target.makeEmpty():(this.getCenter(target.center),target.radius=.5*this.getSize(_vector$a).length()),target}intersect(box){return this.min.max(box.min),this.max.min(box.max),this.isEmpty()&&this.makeEmpty(),this}union(box){return this.min.min(box.min),this.max.max(box.max),this}applyMatrix4(matrix){return this.isEmpty()||(_points[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(matrix),_points[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(matrix),_points[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(matrix),_points[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(matrix),_points[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(matrix),_points[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(matrix),_points[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(matrix),_points[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(matrix),this.setFromPoints(_points)),this}translate(offset){return this.min.add(offset),this.max.add(offset),this}equals(box){return box.min.equals(this.min)&&box.max.equals(this.max)}}const _points=[new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3],_vector$a=new Vector3,_box$3=new Box3,_v0$2=new Vector3,_v1$7=new Vector3,_v2$4=new Vector3,_f0=new Vector3,_f1=new Vector3,_f2=new Vector3,_center=new Vector3,_extents=new Vector3,_triangleNormal=new Vector3,_testAxis=new Vector3;function satForAxes(axes,v0,v1,v2,extents){for(let i=0,j=axes.length-3;i<=j;i+=3){_testAxis.fromArray(axes,i);const r=extents.x*Math.abs(_testAxis.x)+extents.y*Math.abs(_testAxis.y)+extents.z*Math.abs(_testAxis.z),p0=v0.dot(_testAxis),p1=v1.dot(_testAxis),p2=v2.dot(_testAxis);if(Math.max(-Math.max(p0,p1,p2),Math.min(p0,p1,p2))>r)return!1}return!0}const _box$2=new Box3,_v1$6=new Vector3,_v2$3=new Vector3;class Sphere{constructor(center=new Vector3,radius=-1){this.center=center,this.radius=radius}set(center,radius){return this.center.copy(center),this.radius=radius,this}setFromPoints(points,optionalCenter){const center=this.center;void 0!==optionalCenter?center.copy(optionalCenter):_box$2.setFromPoints(points).getCenter(center);let maxRadiusSq=0;for(let i=0,il=points.length;i<il;i++)maxRadiusSq=Math.max(maxRadiusSq,center.distanceToSquared(points[i]));return this.radius=Math.sqrt(maxRadiusSq),this}copy(sphere){return this.center.copy(sphere.center),this.radius=sphere.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(point){return point.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(point){return point.distanceTo(this.center)-this.radius}intersectsSphere(sphere){const radiusSum=this.radius+sphere.radius;return sphere.center.distanceToSquared(this.center)<=radiusSum*radiusSum}intersectsBox(box){return box.intersectsSphere(this)}intersectsPlane(plane){return Math.abs(plane.distanceToPoint(this.center))<=this.radius}clampPoint(point,target){const deltaLengthSq=this.center.distanceToSquared(point);return target.copy(point),deltaLengthSq>this.radius*this.radius&&(target.sub(this.center).normalize(),target.multiplyScalar(this.radius).add(this.center)),target}getBoundingBox(target){return this.isEmpty()?(target.makeEmpty(),target):(target.set(this.center,this.center),target.expandByScalar(this.radius),target)}applyMatrix4(matrix){return this.center.applyMatrix4(matrix),this.radius=this.radius*matrix.getMaxScaleOnAxis(),this}translate(offset){return this.center.add(offset),this}expandByPoint(point){if(this.isEmpty())return this.center.copy(point),this.radius=0,this;_v1$6.subVectors(point,this.center);const lengthSq=_v1$6.lengthSq();if(lengthSq>this.radius*this.radius){const length=Math.sqrt(lengthSq),delta=.5*(length-this.radius);this.center.addScaledVector(_v1$6,delta/length),this.radius+=delta}return this}union(sphere){return sphere.isEmpty()?this:this.isEmpty()?(this.copy(sphere),this):(!0===this.center.equals(sphere.center)?this.radius=Math.max(this.radius,sphere.radius):(_v2$3.subVectors(sphere.center,this.center).setLength(sphere.radius),this.expandByPoint(_v1$6.copy(sphere.center).add(_v2$3)),this.expandByPoint(_v1$6.copy(sphere.center).sub(_v2$3))),this)}equals(sphere){return sphere.center.equals(this.center)&&sphere.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const _vector$9=new Vector3,_segCenter=new Vector3,_segDir=new Vector3,_diff=new Vector3,_edge1=new Vector3,_edge2=new Vector3,_normal$1=new Vector3;class Ray{constructor(origin=new Vector3,direction=new Vector3(0,0,-1)){this.origin=origin,this.direction=direction}set(origin,direction){return this.origin.copy(origin),this.direction.copy(direction),this}copy(ray){return this.origin.copy(ray.origin),this.direction.copy(ray.direction),this}at(t,target){return target.copy(this.origin).addScaledVector(this.direction,t)}lookAt(v){return this.direction.copy(v).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,_vector$9)),this}closestPointToPoint(point,target){target.subVectors(point,this.origin);const directionDistance=target.dot(this.direction);return directionDistance<0?target.copy(this.origin):target.copy(this.origin).addScaledVector(this.direction,directionDistance)}distanceToPoint(point){return Math.sqrt(this.distanceSqToPoint(point))}distanceSqToPoint(point){const directionDistance=_vector$9.subVectors(point,this.origin).dot(this.direction);return directionDistance<0?this.origin.distanceToSquared(point):(_vector$9.copy(this.origin).addScaledVector(this.direction,directionDistance),_vector$9.distanceToSquared(point))}distanceSqToSegment(v0,v1,optionalPointOnRay,optionalPointOnSegment){_segCenter.copy(v0).add(v1).multiplyScalar(.5),_segDir.copy(v1).sub(v0).normalize(),_diff.copy(this.origin).sub(_segCenter);const segExtent=.5*v0.distanceTo(v1),a01=-this.direction.dot(_segDir),b0=_diff.dot(this.direction),b1=-_diff.dot(_segDir),c=_diff.lengthSq(),det=Math.abs(1-a01*a01);let s0,s1,sqrDist,extDet;if(det>0)if(s0=a01*b1-b0,s1=a01*b0-b1,extDet=segExtent*det,s0>=0)if(s1>=-extDet)if(s1<=extDet){const invDet=1/det;s0*=invDet,s1*=invDet,sqrDist=s0*(s0+a01*s1+2*b0)+s1*(a01*s0+s1+2*b1)+c}else s1=segExtent,s0=Math.max(0,-(a01*s1+b0)),sqrDist=-s0*s0+s1*(s1+2*b1)+c;else s1=-segExtent,s0=Math.max(0,-(a01*s1+b0)),sqrDist=-s0*s0+s1*(s1+2*b1)+c;else s1<=-extDet?(s0=Math.max(0,-(-a01*segExtent+b0)),s1=s0>0?-segExtent:Math.min(Math.max(-segExtent,-b1),segExtent),sqrDist=-s0*s0+s1*(s1+2*b1)+c):s1<=extDet?(s0=0,s1=Math.min(Math.max(-segExtent,-b1),segExtent),sqrDist=s1*(s1+2*b1)+c):(s0=Math.max(0,-(a01*segExtent+b0)),s1=s0>0?segExtent:Math.min(Math.max(-segExtent,-b1),segExtent),sqrDist=-s0*s0+s1*(s1+2*b1)+c);else s1=a01>0?-segExtent:segExtent,s0=Math.max(0,-(a01*s1+b0)),sqrDist=-s0*s0+s1*(s1+2*b1)+c;return optionalPointOnRay&&optionalPointOnRay.copy(this.origin).addScaledVector(this.direction,s0),optionalPointOnSegment&&optionalPointOnSegment.copy(_segCenter).addScaledVector(_segDir,s1),sqrDist}intersectSphere(sphere,target){_vector$9.subVectors(sphere.center,this.origin);const tca=_vector$9.dot(this.direction),d2=_vector$9.dot(_vector$9)-tca*tca,radius2=sphere.radius*sphere.radius;if(d2>radius2)return null;const thc=Math.sqrt(radius2-d2),t0=tca-thc,t1=tca+thc;return t1<0?null:t0<0?this.at(t1,target):this.at(t0,target)}intersectsSphere(sphere){return this.distanceSqToPoint(sphere.center)<=sphere.radius*sphere.radius}distanceToPlane(plane){const denominator=plane.normal.dot(this.direction);if(0===denominator)return 0===plane.distanceToPoint(this.origin)?0:null;const t=-(this.origin.dot(plane.normal)+plane.constant)/denominator;return t>=0?t:null}intersectPlane(plane,target){const t=this.distanceToPlane(plane);return null===t?null:this.at(t,target)}intersectsPlane(plane){const distToPoint=plane.distanceToPoint(this.origin);if(0===distToPoint)return!0;return plane.normal.dot(this.direction)*distToPoint<0}intersectBox(box,target){let tmin,tmax,tymin,tymax,tzmin,tzmax;const invdirx=1/this.direction.x,invdiry=1/this.direction.y,invdirz=1/this.direction.z,origin=this.origin;return invdirx>=0?(tmin=(box.min.x-origin.x)*invdirx,tmax=(box.max.x-origin.x)*invdirx):(tmin=(box.max.x-origin.x)*invdirx,tmax=(box.min.x-origin.x)*invdirx),invdiry>=0?(tymin=(box.min.y-origin.y)*invdiry,tymax=(box.max.y-origin.y)*invdiry):(tymin=(box.max.y-origin.y)*invdiry,tymax=(box.min.y-origin.y)*invdiry),tmin>tymax||tymin>tmax?null:((tymin>tmin||isNaN(tmin))&&(tmin=tymin),(tymax<tmax||isNaN(tmax))&&(tmax=tymax),invdirz>=0?(tzmin=(box.min.z-origin.z)*invdirz,tzmax=(box.max.z-origin.z)*invdirz):(tzmin=(box.max.z-origin.z)*invdirz,tzmax=(box.min.z-origin.z)*invdirz),tmin>tzmax||tzmin>tmax?null:((tzmin>tmin||tmin!=tmin)&&(tmin=tzmin),(tzmax<tmax||tmax!=tmax)&&(tmax=tzmax),tmax<0?null:this.at(tmin>=0?tmin:tmax,target)))}intersectsBox(box){return null!==this.intersectBox(box,_vector$9)}intersectTriangle(a,b,c,backfaceCulling,target){_edge1.subVectors(b,a),_edge2.subVectors(c,a),_normal$1.crossVectors(_edge1,_edge2);let sign,DdN=this.direction.dot(_normal$1);if(DdN>0){if(backfaceCulling)return null;sign=1}else{if(!(DdN<0))return null;sign=-1,DdN=-DdN}_diff.subVectors(this.origin,a);const DdQxE2=sign*this.direction.dot(_edge2.crossVectors(_diff,_edge2));if(DdQxE2<0)return null;const DdE1xQ=sign*this.direction.dot(_edge1.cross(_diff));if(DdE1xQ<0)return null;if(DdQxE2+DdE1xQ>DdN)return null;const QdN=-sign*_diff.dot(_normal$1);return QdN<0?null:this.at(QdN/DdN,target)}applyMatrix4(matrix4){return this.origin.applyMatrix4(matrix4),this.direction.transformDirection(matrix4),this}equals(ray){return ray.origin.equals(this.origin)&&ray.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Matrix4{constructor(){Matrix4.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(n11,n12,n13,n14,n21,n22,n23,n24,n31,n32,n33,n34,n41,n42,n43,n44){const te=this.elements;return te[0]=n11,te[4]=n12,te[8]=n13,te[12]=n14,te[1]=n21,te[5]=n22,te[9]=n23,te[13]=n24,te[2]=n31,te[6]=n32,te[10]=n33,te[14]=n34,te[3]=n41,te[7]=n42,te[11]=n43,te[15]=n44,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Matrix4).fromArray(this.elements)}copy(m){const te=this.elements,me=m.elements;return te[0]=me[0],te[1]=me[1],te[2]=me[2],te[3]=me[3],te[4]=me[4],te[5]=me[5],te[6]=me[6],te[7]=me[7],te[8]=me[8],te[9]=me[9],te[10]=me[10],te[11]=me[11],te[12]=me[12],te[13]=me[13],te[14]=me[14],te[15]=me[15],this}copyPosition(m){const te=this.elements,me=m.elements;return te[12]=me[12],te[13]=me[13],te[14]=me[14],this}setFromMatrix3(m){const me=m.elements;return this.set(me[0],me[3],me[6],0,me[1],me[4],me[7],0,me[2],me[5],me[8],0,0,0,0,1),this}extractBasis(xAxis,yAxis,zAxis){return xAxis.setFromMatrixColumn(this,0),yAxis.setFromMatrixColumn(this,1),zAxis.setFromMatrixColumn(this,2),this}makeBasis(xAxis,yAxis,zAxis){return this.set(xAxis.x,yAxis.x,zAxis.x,0,xAxis.y,yAxis.y,zAxis.y,0,xAxis.z,yAxis.z,zAxis.z,0,0,0,0,1),this}extractRotation(m){const te=this.elements,me=m.elements,scaleX=1/_v1$5.setFromMatrixColumn(m,0).length(),scaleY=1/_v1$5.setFromMatrixColumn(m,1).length(),scaleZ=1/_v1$5.setFromMatrixColumn(m,2).length();return te[0]=me[0]*scaleX,te[1]=me[1]*scaleX,te[2]=me[2]*scaleX,te[3]=0,te[4]=me[4]*scaleY,te[5]=me[5]*scaleY,te[6]=me[6]*scaleY,te[7]=0,te[8]=me[8]*scaleZ,te[9]=me[9]*scaleZ,te[10]=me[10]*scaleZ,te[11]=0,te[12]=0,te[13]=0,te[14]=0,te[15]=1,this}makeRotationFromEuler(euler){const te=this.elements,x=euler.x,y=euler.y,z=euler.z,a=Math.cos(x),b=Math.sin(x),c=Math.cos(y),d=Math.sin(y),e=Math.cos(z),f=Math.sin(z);if("XYZ"===euler.order){const ae=a*e,af=a*f,be=b*e,bf=b*f;te[0]=c*e,te[4]=-c*f,te[8]=d,te[1]=af+be*d,te[5]=ae-bf*d,te[9]=-b*c,te[2]=bf-ae*d,te[6]=be+af*d,te[10]=a*c}else if("YXZ"===euler.order){const ce=c*e,cf=c*f,de=d*e,df=d*f;te[0]=ce+df*b,te[4]=de*b-cf,te[8]=a*d,te[1]=a*f,te[5]=a*e,te[9]=-b,te[2]=cf*b-de,te[6]=df+ce*b,te[10]=a*c}else if("ZXY"===euler.order){const ce=c*e,cf=c*f,de=d*e,df=d*f;te[0]=ce-df*b,te[4]=-a*f,te[8]=de+cf*b,te[1]=cf+de*b,te[5]=a*e,te[9]=df-ce*b,te[2]=-a*d,te[6]=b,te[10]=a*c}else if("ZYX"===euler.order){const ae=a*e,af=a*f,be=b*e,bf=b*f;te[0]=c*e,te[4]=be*d-af,te[8]=ae*d+bf,te[1]=c*f,te[5]=bf*d+ae,te[9]=af*d-be,te[2]=-d,te[6]=b*c,te[10]=a*c}else if("YZX"===euler.order){const ac=a*c,ad=a*d,bc=b*c,bd=b*d;te[0]=c*e,te[4]=bd-ac*f,te[8]=bc*f+ad,te[1]=f,te[5]=a*e,te[9]=-b*e,te[2]=-d*e,te[6]=ad*f+bc,te[10]=ac-bd*f}else if("XZY"===euler.order){const ac=a*c,ad=a*d,bc=b*c,bd=b*d;te[0]=c*e,te[4]=-f,te[8]=d*e,te[1]=ac*f+bd,te[5]=a*e,te[9]=ad*f-bc,te[2]=bc*f-ad,te[6]=b*e,te[10]=bd*f+ac}return te[3]=0,te[7]=0,te[11]=0,te[12]=0,te[13]=0,te[14]=0,te[15]=1,this}makeRotationFromQuaternion(q){return this.compose(_zero,q,_one)}lookAt(eye,target,up){const te=this.elements;return _z.subVectors(eye,target),0===_z.lengthSq()&&(_z.z=1),_z.normalize(),_x.crossVectors(up,_z),0===_x.lengthSq()&&(1===Math.abs(up.z)?_z.x+=1e-4:_z.z+=1e-4,_z.normalize(),_x.crossVectors(up,_z)),_x.normalize(),_y.crossVectors(_z,_x),te[0]=_x.x,te[4]=_y.x,te[8]=_z.x,te[1]=_x.y,te[5]=_y.y,te[9]=_z.y,te[2]=_x.z,te[6]=_y.z,te[10]=_z.z,this}multiply(m){return this.multiplyMatrices(this,m)}premultiply(m){return this.multiplyMatrices(m,this)}multiplyMatrices(a,b){const ae=a.elements,be=b.elements,te=this.elements,a11=ae[0],a12=ae[4],a13=ae[8],a14=ae[12],a21=ae[1],a22=ae[5],a23=ae[9],a24=ae[13],a31=ae[2],a32=ae[6],a33=ae[10],a34=ae[14],a41=ae[3],a42=ae[7],a43=ae[11],a44=ae[15],b11=be[0],b12=be[4],b13=be[8],b14=be[12],b21=be[1],b22=be[5],b23=be[9],b24=be[13],b31=be[2],b32=be[6],b33=be[10],b34=be[14],b41=be[3],b42=be[7],b43=be[11],b44=be[15];return te[0]=a11*b11+a12*b21+a13*b31+a14*b41,te[4]=a11*b12+a12*b22+a13*b32+a14*b42,te[8]=a11*b13+a12*b23+a13*b33+a14*b43,te[12]=a11*b14+a12*b24+a13*b34+a14*b44,te[1]=a21*b11+a22*b21+a23*b31+a24*b41,te[5]=a21*b12+a22*b22+a23*b32+a24*b42,te[9]=a21*b13+a22*b23+a23*b33+a24*b43,te[13]=a21*b14+a22*b24+a23*b34+a24*b44,te[2]=a31*b11+a32*b21+a33*b31+a34*b41,te[6]=a31*b12+a32*b22+a33*b32+a34*b42,te[10]=a31*b13+a32*b23+a33*b33+a34*b43,te[14]=a31*b14+a32*b24+a33*b34+a34*b44,te[3]=a41*b11+a42*b21+a43*b31+a44*b41,te[7]=a41*b12+a42*b22+a43*b32+a44*b42,te[11]=a41*b13+a42*b23+a43*b33+a44*b43,te[15]=a41*b14+a42*b24+a43*b34+a44*b44,this}multiplyScalar(s){const te=this.elements;return te[0]*=s,te[4]*=s,te[8]*=s,te[12]*=s,te[1]*=s,te[5]*=s,te[9]*=s,te[13]*=s,te[2]*=s,te[6]*=s,te[10]*=s,te[14]*=s,te[3]*=s,te[7]*=s,te[11]*=s,te[15]*=s,this}determinant(){const te=this.elements,n11=te[0],n12=te[4],n13=te[8],n14=te[12],n21=te[1],n22=te[5],n23=te[9],n24=te[13],n31=te[2],n32=te[6],n33=te[10],n34=te[14];return te[3]*(+n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34)+te[7]*(+n11*n23*n34-n11*n24*n33+n14*n21*n33-n13*n21*n34+n13*n24*n31-n14*n23*n31)+te[11]*(+n11*n24*n32-n11*n22*n34-n14*n21*n32+n12*n21*n34+n14*n22*n31-n12*n24*n31)+te[15]*(-n13*n22*n31-n11*n23*n32+n11*n22*n33+n13*n21*n32-n12*n21*n33+n12*n23*n31)}transpose(){const te=this.elements;let tmp;return tmp=te[1],te[1]=te[4],te[4]=tmp,tmp=te[2],te[2]=te[8],te[8]=tmp,tmp=te[6],te[6]=te[9],te[9]=tmp,tmp=te[3],te[3]=te[12],te[12]=tmp,tmp=te[7],te[7]=te[13],te[13]=tmp,tmp=te[11],te[11]=te[14],te[14]=tmp,this}setPosition(x,y,z){const te=this.elements;return x.isVector3?(te[12]=x.x,te[13]=x.y,te[14]=x.z):(te[12]=x,te[13]=y,te[14]=z),this}invert(){const te=this.elements,n11=te[0],n21=te[1],n31=te[2],n41=te[3],n12=te[4],n22=te[5],n32=te[6],n42=te[7],n13=te[8],n23=te[9],n33=te[10],n43=te[11],n14=te[12],n24=te[13],n34=te[14],n44=te[15],t11=n23*n34*n42-n24*n33*n42+n24*n32*n43-n22*n34*n43-n23*n32*n44+n22*n33*n44,t12=n14*n33*n42-n13*n34*n42-n14*n32*n43+n12*n34*n43+n13*n32*n44-n12*n33*n44,t13=n13*n24*n42-n14*n23*n42+n14*n22*n43-n12*n24*n43-n13*n22*n44+n12*n23*n44,t14=n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34,det=n11*t11+n21*t12+n31*t13+n41*t14;if(0===det)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const detInv=1/det;return te[0]=t11*detInv,te[1]=(n24*n33*n41-n23*n34*n41-n24*n31*n43+n21*n34*n43+n23*n31*n44-n21*n33*n44)*detInv,te[2]=(n22*n34*n41-n24*n32*n41+n24*n31*n42-n21*n34*n42-n22*n31*n44+n21*n32*n44)*detInv,te[3]=(n23*n32*n41-n22*n33*n41-n23*n31*n42+n21*n33*n42+n22*n31*n43-n21*n32*n43)*detInv,te[4]=t12*detInv,te[5]=(n13*n34*n41-n14*n33*n41+n14*n31*n43-n11*n34*n43-n13*n31*n44+n11*n33*n44)*detInv,te[6]=(n14*n32*n41-n12*n34*n41-n14*n31*n42+n11*n34*n42+n12*n31*n44-n11*n32*n44)*detInv,te[7]=(n12*n33*n41-n13*n32*n41+n13*n31*n42-n11*n33*n42-n12*n31*n43+n11*n32*n43)*detInv,te[8]=t13*detInv,te[9]=(n14*n23*n41-n13*n24*n41-n14*n21*n43+n11*n24*n43+n13*n21*n44-n11*n23*n44)*detInv,te[10]=(n12*n24*n41-n14*n22*n41+n14*n21*n42-n11*n24*n42-n12*n21*n44+n11*n22*n44)*detInv,te[11]=(n13*n22*n41-n12*n23*n41-n13*n21*n42+n11*n23*n42+n12*n21*n43-n11*n22*n43)*detInv,te[12]=t14*detInv,te[13]=(n13*n24*n31-n14*n23*n31+n14*n21*n33-n11*n24*n33-n13*n21*n34+n11*n23*n34)*detInv,te[14]=(n14*n22*n31-n12*n24*n31-n14*n21*n32+n11*n24*n32+n12*n21*n34-n11*n22*n34)*detInv,te[15]=(n12*n23*n31-n13*n22*n31+n13*n21*n32-n11*n23*n32-n12*n21*n33+n11*n22*n33)*detInv,this}scale(v){const te=this.elements,x=v.x,y=v.y,z=v.z;return te[0]*=x,te[4]*=y,te[8]*=z,te[1]*=x,te[5]*=y,te[9]*=z,te[2]*=x,te[6]*=y,te[10]*=z,te[3]*=x,te[7]*=y,te[11]*=z,this}getMaxScaleOnAxis(){const te=this.elements,scaleXSq=te[0]*te[0]+te[1]*te[1]+te[2]*te[2],scaleYSq=te[4]*te[4]+te[5]*te[5]+te[6]*te[6],scaleZSq=te[8]*te[8]+te[9]*te[9]+te[10]*te[10];return Math.sqrt(Math.max(scaleXSq,scaleYSq,scaleZSq))}makeTranslation(x,y,z){return this.set(1,0,0,x,0,1,0,y,0,0,1,z,0,0,0,1),this}makeRotationX(theta){const c=Math.cos(theta),s=Math.sin(theta);return this.set(1,0,0,0,0,c,-s,0,0,s,c,0,0,0,0,1),this}makeRotationY(theta){const c=Math.cos(theta),s=Math.sin(theta);return this.set(c,0,s,0,0,1,0,0,-s,0,c,0,0,0,0,1),this}makeRotationZ(theta){const c=Math.cos(theta),s=Math.sin(theta);return this.set(c,-s,0,0,s,c,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(axis,angle){const c=Math.cos(angle),s=Math.sin(angle),t=1-c,x=axis.x,y=axis.y,z=axis.z,tx=t*x,ty=t*y;return this.set(tx*x+c,tx*y-s*z,tx*z+s*y,0,tx*y+s*z,ty*y+c,ty*z-s*x,0,tx*z-s*y,ty*z+s*x,t*z*z+c,0,0,0,0,1),this}makeScale(x,y,z){return this.set(x,0,0,0,0,y,0,0,0,0,z,0,0,0,0,1),this}makeShear(xy,xz,yx,yz,zx,zy){return this.set(1,yx,zx,0,xy,1,zy,0,xz,yz,1,0,0,0,0,1),this}compose(position,quaternion,scale){const te=this.elements,x=quaternion._x,y=quaternion._y,z=quaternion._z,w=quaternion._w,x2=x+x,y2=y+y,z2=z+z,xx=x*x2,xy=x*y2,xz=x*z2,yy=y*y2,yz=y*z2,zz=z*z2,wx=w*x2,wy=w*y2,wz=w*z2,sx=scale.x,sy=scale.y,sz=scale.z;return te[0]=(1-(yy+zz))*sx,te[1]=(xy+wz)*sx,te[2]=(xz-wy)*sx,te[3]=0,te[4]=(xy-wz)*sy,te[5]=(1-(xx+zz))*sy,te[6]=(yz+wx)*sy,te[7]=0,te[8]=(xz+wy)*sz,te[9]=(yz-wx)*sz,te[10]=(1-(xx+yy))*sz,te[11]=0,te[12]=position.x,te[13]=position.y,te[14]=position.z,te[15]=1,this}decompose(position,quaternion,scale){const te=this.elements;let sx=_v1$5.set(te[0],te[1],te[2]).length();const sy=_v1$5.set(te[4],te[5],te[6]).length(),sz=_v1$5.set(te[8],te[9],te[10]).length();this.determinant()<0&&(sx=-sx),position.x=te[12],position.y=te[13],position.z=te[14],_m1$2.copy(this);const invSX=1/sx,invSY=1/sy,invSZ=1/sz;return _m1$2.elements[0]*=invSX,_m1$2.elements[1]*=invSX,_m1$2.elements[2]*=invSX,_m1$2.elements[4]*=invSY,_m1$2.elements[5]*=invSY,_m1$2.elements[6]*=invSY,_m1$2.elements[8]*=invSZ,_m1$2.elements[9]*=invSZ,_m1$2.elements[10]*=invSZ,quaternion.setFromRotationMatrix(_m1$2),scale.x=sx,scale.y=sy,scale.z=sz,this}makePerspective(left,right,top,bottom,near,far){const te=this.elements,x=2*near/(right-left),y=2*near/(top-bottom),a=(right+left)/(right-left),b=(top+bottom)/(top-bottom),c=-(far+near)/(far-near),d=-2*far*near/(far-near);return te[0]=x,te[4]=0,te[8]=a,te[12]=0,te[1]=0,te[5]=y,te[9]=b,te[13]=0,te[2]=0,te[6]=0,te[10]=c,te[14]=d,te[3]=0,te[7]=0,te[11]=-1,te[15]=0,this}makeOrthographic(left,right,top,bottom,near,far){const te=this.elements,w=1/(right-left),h=1/(top-bottom),p=1/(far-near),x=(right+left)*w,y=(top+bottom)*h,z=(far+near)*p;return te[0]=2*w,te[4]=0,te[8]=0,te[12]=-x,te[1]=0,te[5]=2*h,te[9]=0,te[13]=-y,te[2]=0,te[6]=0,te[10]=-2*p,te[14]=-z,te[3]=0,te[7]=0,te[11]=0,te[15]=1,this}equals(matrix){const te=this.elements,me=matrix.elements;for(let i=0;i<16;i++)if(te[i]!==me[i])return!1;return!0}fromArray(array,offset=0){for(let i=0;i<16;i++)this.elements[i]=array[i+offset];return this}toArray(array=[],offset=0){const te=this.elements;return array[offset]=te[0],array[offset+1]=te[1],array[offset+2]=te[2],array[offset+3]=te[3],array[offset+4]=te[4],array[offset+5]=te[5],array[offset+6]=te[6],array[offset+7]=te[7],array[offset+8]=te[8],array[offset+9]=te[9],array[offset+10]=te[10],array[offset+11]=te[11],array[offset+12]=te[12],array[offset+13]=te[13],array[offset+14]=te[14],array[offset+15]=te[15],array}}const _v1$5=new Vector3,_m1$2=new Matrix4,_zero=new Vector3(0,0,0),_one=new Vector3(1,1,1),_x=new Vector3,_y=new Vector3,_z=new Vector3,_matrix=new Matrix4,_quaternion$3=new Quaternion;class Euler{constructor(x=0,y=0,z=0,order=Euler.DEFAULT_ORDER){this.isEuler=!0,this._x=x,this._y=y,this._z=z,this._order=order}get x(){return this._x}set x(value){this._x=value,this._onChangeCallback()}get y(){return this._y}set y(value){this._y=value,this._onChangeCallback()}get z(){return this._z}set z(value){this._z=value,this._onChangeCallback()}get order(){return this._order}set order(value){this._order=value,this._onChangeCallback()}set(x,y,z,order=this._order){return this._x=x,this._y=y,this._z=z,this._order=order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(euler){return this._x=euler._x,this._y=euler._y,this._z=euler._z,this._order=euler._order,this._onChangeCallback(),this}setFromRotationMatrix(m,order=this._order,update=!0){const te=m.elements,m11=te[0],m12=te[4],m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6],m33=te[10];switch(order){case"XYZ":this._y=Math.asin(clamp(m13,-1,1)),Math.abs(m13)<.9999999?(this._x=Math.atan2(-m23,m33),this._z=Math.atan2(-m12,m11)):(this._x=Math.atan2(m32,m22),this._z=0);break;case"YXZ":this._x=Math.asin(-clamp(m23,-1,1)),Math.abs(m23)<.9999999?(this._y=Math.atan2(m13,m33),this._z=Math.atan2(m21,m22)):(this._y=Math.atan2(-m31,m11),this._z=0);break;case"ZXY":this._x=Math.asin(clamp(m32,-1,1)),Math.abs(m32)<.9999999?(this._y=Math.atan2(-m31,m33),this._z=Math.atan2(-m12,m22)):(this._y=0,this._z=Math.atan2(m21,m11));break;case"ZYX":this._y=Math.asin(-clamp(m31,-1,1)),Math.abs(m31)<.9999999?(this._x=Math.atan2(m32,m33),this._z=Math.atan2(m21,m11)):(this._x=0,this._z=Math.atan2(-m12,m22));break;case"YZX":this._z=Math.asin(clamp(m21,-1,1)),Math.abs(m21)<.9999999?(this._x=Math.atan2(-m23,m22),this._y=Math.atan2(-m31,m11)):(this._x=0,this._y=Math.atan2(m13,m33));break;case"XZY":this._z=Math.asin(-clamp(m12,-1,1)),Math.abs(m12)<.9999999?(this._x=Math.atan2(m32,m22),this._y=Math.atan2(m13,m11)):(this._x=Math.atan2(-m23,m33),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+order)}return this._order=order,!0===update&&this._onChangeCallback(),this}setFromQuaternion(q,order,update){return _matrix.makeRotationFromQuaternion(q),this.setFromRotationMatrix(_matrix,order,update)}setFromVector3(v,order=this._order){return this.set(v.x,v.y,v.z,order)}reorder(newOrder){return _quaternion$3.setFromEuler(this),this.setFromQuaternion(_quaternion$3,newOrder)}equals(euler){return euler._x===this._x&&euler._y===this._y&&euler._z===this._z&&euler._order===this._order}fromArray(array){return this._x=array[0],this._y=array[1],this._z=array[2],void 0!==array[3]&&(this._order=array[3]),this._onChangeCallback(),this}toArray(array=[],offset=0){return array[offset]=this._x,array[offset+1]=this._y,array[offset+2]=this._z,array[offset+3]=this._order,array}_onChange(callback){return this._onChangeCallback=callback,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Euler.DEFAULT_ORDER="XYZ";class Layers{constructor(){this.mask=1}set(channel){this.mask=1<<channel>>>0}enable(channel){this.mask|=1<<channel}enableAll(){this.mask=-1}toggle(channel){this.mask^=1<<channel}disable(channel){this.mask&=~(1<<channel)}disableAll(){this.mask=0}test(layers){return!!(this.mask&layers.mask)}isEnabled(channel){return!!(this.mask&1<<channel)}}let _object3DId=0;const _v1$4=new Vector3,_q1=new Quaternion,_m1$1=new Matrix4,_target=new Vector3,_position$3=new Vector3,_scale$2=new Vector3,_quaternion$2=new Quaternion,_xAxis=new Vector3(1,0,0),_yAxis=new Vector3(0,1,0),_zAxis=new Vector3(0,0,1),_addedEvent={type:"added"},_removedEvent={type:"removed"};class Object3D extends EventDispatcher{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:_object3DId++}),this.uuid=generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Object3D.DEFAULT_UP.clone();const position=new Vector3,rotation=new Euler,quaternion=new Quaternion,scale=new Vector3(1,1,1);rotation._onChange((function onRotationChange(){quaternion.setFromEuler(rotation,!1)})),quaternion._onChange((function onQuaternionChange(){rotation.setFromQuaternion(quaternion,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:position},rotation:{configurable:!0,enumerable:!0,value:rotation},quaternion:{configurable:!0,enumerable:!0,value:quaternion},scale:{configurable:!0,enumerable:!0,value:scale},modelViewMatrix:{value:new Matrix4},normalMatrix:{value:new Matrix3}}),this.matrix=new Matrix4,this.matrixWorld=new Matrix4,this.matrixAutoUpdate=Object3D.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new Layers,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(matrix){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(q){return this.quaternion.premultiply(q),this}setRotationFromAxisAngle(axis,angle){this.quaternion.setFromAxisAngle(axis,angle)}setRotationFromEuler(euler){this.quaternion.setFromEuler(euler,!0)}setRotationFromMatrix(m){this.quaternion.setFromRotationMatrix(m)}setRotationFromQuaternion(q){this.quaternion.copy(q)}rotateOnAxis(axis,angle){return _q1.setFromAxisAngle(axis,angle),this.quaternion.multiply(_q1),this}rotateOnWorldAxis(axis,angle){return _q1.setFromAxisAngle(axis,angle),this.quaternion.premultiply(_q1),this}rotateX(angle){return this.rotateOnAxis(_xAxis,angle)}rotateY(angle){return this.rotateOnAxis(_yAxis,angle)}rotateZ(angle){return this.rotateOnAxis(_zAxis,angle)}translateOnAxis(axis,distance){return _v1$4.copy(axis).applyQuaternion(this.quaternion),this.position.add(_v1$4.multiplyScalar(distance)),this}translateX(distance){return this.translateOnAxis(_xAxis,distance)}translateY(distance){return this.translateOnAxis(_yAxis,distance)}translateZ(distance){return this.translateOnAxis(_zAxis,distance)}localToWorld(vector){return this.updateWorldMatrix(!0,!1),vector.applyMatrix4(this.matrixWorld)}worldToLocal(vector){return this.updateWorldMatrix(!0,!1),vector.applyMatrix4(_m1$1.copy(this.matrixWorld).invert())}lookAt(x,y,z){x.isVector3?_target.copy(x):_target.set(x,y,z);const parent=this.parent;this.updateWorldMatrix(!0,!1),_position$3.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?_m1$1.lookAt(_position$3,_target,this.up):_m1$1.lookAt(_target,_position$3,this.up),this.quaternion.setFromRotationMatrix(_m1$1),parent&&(_m1$1.extractRotation(parent.matrixWorld),_q1.setFromRotationMatrix(_m1$1),this.quaternion.premultiply(_q1.invert()))}add(object){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.add(arguments[i]);return this}return object===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",object),this):(object&&object.isObject3D?(null!==object.parent&&object.parent.remove(object),object.parent=this,this.children.push(object),object.dispatchEvent(_addedEvent)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",object),this)}remove(object){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const index=this.children.indexOf(object);return-1!==index&&(object.parent=null,this.children.splice(index,1),object.dispatchEvent(_removedEvent)),this}removeFromParent(){const parent=this.parent;return null!==parent&&parent.remove(this),this}clear(){for(let i=0;i<this.children.length;i++){const object=this.children[i];object.parent=null,object.dispatchEvent(_removedEvent)}return this.children.length=0,this}attach(object){return this.updateWorldMatrix(!0,!1),_m1$1.copy(this.matrixWorld).invert(),null!==object.parent&&(object.parent.updateWorldMatrix(!0,!1),_m1$1.multiply(object.parent.matrixWorld)),object.applyMatrix4(_m1$1),this.add(object),object.updateWorldMatrix(!1,!0),this}getObjectById(id){return this.getObjectByProperty("id",id)}getObjectByName(name){return this.getObjectByProperty("name",name)}getObjectByProperty(name,value){if(this[name]===value)return this;for(let i=0,l=this.children.length;i<l;i++){const object=this.children[i].getObjectByProperty(name,value);if(void 0!==object)return object}}getObjectsByProperty(name,value){let result=[];this[name]===value&&result.push(this);for(let i=0,l=this.children.length;i<l;i++){const childResult=this.children[i].getObjectsByProperty(name,value);childResult.length>0&&(result=result.concat(childResult))}return result}getWorldPosition(target){return this.updateWorldMatrix(!0,!1),target.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(target){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(_position$3,target,_scale$2),target}getWorldScale(target){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(_position$3,_quaternion$2,target),target}getWorldDirection(target){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return target.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(callback){callback(this);const children=this.children;for(let i=0,l=children.length;i<l;i++)children[i].traverse(callback)}traverseVisible(callback){if(!1===this.visible)return;callback(this);const children=this.children;for(let i=0,l=children.length;i<l;i++)children[i].traverseVisible(callback)}traverseAncestors(callback){const parent=this.parent;null!==parent&&(callback(parent),parent.traverseAncestors(callback))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(force){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||force)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,force=!0);const children=this.children;for(let i=0,l=children.length;i<l;i++){const child=children[i];!0!==child.matrixWorldAutoUpdate&&!0!==force||child.updateMatrixWorld(force)}}updateWorldMatrix(updateParents,updateChildren){const parent=this.parent;if(!0===updateParents&&null!==parent&&!0===parent.matrixWorldAutoUpdate&&parent.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===updateChildren){const children=this.children;for(let i=0,l=children.length;i<l;i++){const child=children[i];!0===child.matrixWorldAutoUpdate&&child.updateWorldMatrix(!1,!0)}}}toJSON(meta){const isRootObject=void 0===meta||"string"==typeof meta,output={};isRootObject&&(meta={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},output.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const object={};function serialize(library,element){return void 0===library[element.uuid]&&(library[element.uuid]=element.toJSON(meta)),element.uuid}if(object.uuid=this.uuid,object.type=this.type,""!==this.name&&(object.name=this.name),!0===this.castShadow&&(object.castShadow=!0),!0===this.receiveShadow&&(object.receiveShadow=!0),!1===this.visible&&(object.visible=!1),!1===this.frustumCulled&&(object.frustumCulled=!1),0!==this.renderOrder&&(object.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(object.userData=this.userData),object.layers=this.layers.mask,object.matrix=this.matrix.toArray(),object.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(object.matrixAutoUpdate=!1),this.isInstancedMesh&&(object.type="InstancedMesh",object.count=this.count,object.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(object.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?object.background=this.background.toJSON():this.background.isTexture&&(object.background=this.background.toJSON(meta).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(object.environment=this.environment.toJSON(meta).uuid);else if(this.isMesh||this.isLine||this.isPoints){object.geometry=serialize(meta.geometries,this.geometry);const parameters=this.geometry.parameters;if(void 0!==parameters&&void 0!==parameters.shapes){const shapes=parameters.shapes;if(Array.isArray(shapes))for(let i=0,l=shapes.length;i<l;i++){const shape=shapes[i];serialize(meta.shapes,shape)}else serialize(meta.shapes,shapes)}}if(this.isSkinnedMesh&&(object.bindMode=this.bindMode,object.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(serialize(meta.skeletons,this.skeleton),object.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const uuids=[];for(let i=0,l=this.material.length;i<l;i++)uuids.push(serialize(meta.materials,this.material[i]));object.material=uuids}else object.material=serialize(meta.materials,this.material);if(this.children.length>0){object.children=[];for(let i=0;i<this.children.length;i++)object.children.push(this.children[i].toJSON(meta).object)}if(this.animations.length>0){object.animations=[];for(let i=0;i<this.animations.length;i++){const animation=this.animations[i];object.animations.push(serialize(meta.animations,animation))}}if(isRootObject){const geometries=extractFromCache(meta.geometries),materials=extractFromCache(meta.materials),textures=extractFromCache(meta.textures),images=extractFromCache(meta.images),shapes=extractFromCache(meta.shapes),skeletons=extractFromCache(meta.skeletons),animations=extractFromCache(meta.animations),nodes=extractFromCache(meta.nodes);geometries.length>0&&(output.geometries=geometries),materials.length>0&&(output.materials=materials),textures.length>0&&(output.textures=textures),images.length>0&&(output.images=images),shapes.length>0&&(output.shapes=shapes),skeletons.length>0&&(output.skeletons=skeletons),animations.length>0&&(output.animations=animations),nodes.length>0&&(output.nodes=nodes)}return output.object=object,output;function extractFromCache(cache){const values=[];for(const key in cache){const data=cache[key];delete data.metadata,values.push(data)}return values}}clone(recursive){return(new this.constructor).copy(this,recursive)}copy(source,recursive=!0){if(this.name=source.name,this.up.copy(source.up),this.position.copy(source.position),this.rotation.order=source.rotation.order,this.quaternion.copy(source.quaternion),this.scale.copy(source.scale),this.matrix.copy(source.matrix),this.matrixWorld.copy(source.matrixWorld),this.matrixAutoUpdate=source.matrixAutoUpdate,this.matrixWorldNeedsUpdate=source.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=source.matrixWorldAutoUpdate,this.layers.mask=source.layers.mask,this.visible=source.visible,this.castShadow=source.castShadow,this.receiveShadow=source.receiveShadow,this.frustumCulled=source.frustumCulled,this.renderOrder=source.renderOrder,this.animations=source.animations,this.userData=JSON.parse(JSON.stringify(source.userData)),!0===recursive)for(let i=0;i<source.children.length;i++){const child=source.children[i];this.add(child.clone())}return this}}Object3D.DEFAULT_UP=new Vector3(0,1,0),Object3D.DEFAULT_MATRIX_AUTO_UPDATE=!0,Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const _v0$1=new Vector3,_v1$3=new Vector3,_v2$2=new Vector3,_v3$1=new Vector3,_vab=new Vector3,_vac=new Vector3,_vbc=new Vector3,_vap=new Vector3,_vbp=new Vector3,_vcp=new Vector3;let warnedGetUV=!1;class Triangle{constructor(a=new Vector3,b=new Vector3,c=new Vector3){this.a=a,this.b=b,this.c=c}static getNormal(a,b,c,target){target.subVectors(c,b),_v0$1.subVectors(a,b),target.cross(_v0$1);const targetLengthSq=target.lengthSq();return targetLengthSq>0?target.multiplyScalar(1/Math.sqrt(targetLengthSq)):target.set(0,0,0)}static getBarycoord(point,a,b,c,target){_v0$1.subVectors(c,a),_v1$3.subVectors(b,a),_v2$2.subVectors(point,a);const dot00=_v0$1.dot(_v0$1),dot01=_v0$1.dot(_v1$3),dot02=_v0$1.dot(_v2$2),dot11=_v1$3.dot(_v1$3),dot12=_v1$3.dot(_v2$2),denom=dot00*dot11-dot01*dot01;if(0===denom)return target.set(-2,-1,-1);const invDenom=1/denom,u=(dot11*dot02-dot01*dot12)*invDenom,v=(dot00*dot12-dot01*dot02)*invDenom;return target.set(1-u-v,v,u)}static containsPoint(point,a,b,c){return this.getBarycoord(point,a,b,c,_v3$1),_v3$1.x>=0&&_v3$1.y>=0&&_v3$1.x+_v3$1.y<=1}static getUV(point,p1,p2,p3,uv1,uv2,uv3,target){return!1===warnedGetUV&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),warnedGetUV=!0),this.getInterpolation(point,p1,p2,p3,uv1,uv2,uv3,target)}static getInterpolation(point,p1,p2,p3,v1,v2,v3,target){return this.getBarycoord(point,p1,p2,p3,_v3$1),target.setScalar(0),target.addScaledVector(v1,_v3$1.x),target.addScaledVector(v2,_v3$1.y),target.addScaledVector(v3,_v3$1.z),target}static isFrontFacing(a,b,c,direction){return _v0$1.subVectors(c,b),_v1$3.subVectors(a,b),_v0$1.cross(_v1$3).dot(direction)<0}set(a,b,c){return this.a.copy(a),this.b.copy(b),this.c.copy(c),this}setFromPointsAndIndices(points,i0,i1,i2){return this.a.copy(points[i0]),this.b.copy(points[i1]),this.c.copy(points[i2]),this}setFromAttributeAndIndices(attribute,i0,i1,i2){return this.a.fromBufferAttribute(attribute,i0),this.b.fromBufferAttribute(attribute,i1),this.c.fromBufferAttribute(attribute,i2),this}clone(){return(new this.constructor).copy(this)}copy(triangle){return this.a.copy(triangle.a),this.b.copy(triangle.b),this.c.copy(triangle.c),this}getArea(){return _v0$1.subVectors(this.c,this.b),_v1$3.subVectors(this.a,this.b),.5*_v0$1.cross(_v1$3).length()}getMidpoint(target){return target.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(target){return Triangle.getNormal(this.a,this.b,this.c,target)}getPlane(target){return target.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(point,target){return Triangle.getBarycoord(point,this.a,this.b,this.c,target)}getUV(point,uv1,uv2,uv3,target){return!1===warnedGetUV&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),warnedGetUV=!0),Triangle.getInterpolation(point,this.a,this.b,this.c,uv1,uv2,uv3,target)}getInterpolation(point,v1,v2,v3,target){return Triangle.getInterpolation(point,this.a,this.b,this.c,v1,v2,v3,target)}containsPoint(point){return Triangle.containsPoint(point,this.a,this.b,this.c)}isFrontFacing(direction){return Triangle.isFrontFacing(this.a,this.b,this.c,direction)}intersectsBox(box){return box.intersectsTriangle(this)}closestPointToPoint(p,target){const a=this.a,b=this.b,c=this.c;let v,w;_vab.subVectors(b,a),_vac.subVectors(c,a),_vap.subVectors(p,a);const d1=_vab.dot(_vap),d2=_vac.dot(_vap);if(d1<=0&&d2<=0)return target.copy(a);_vbp.subVectors(p,b);const d3=_vab.dot(_vbp),d4=_vac.dot(_vbp);if(d3>=0&&d4<=d3)return target.copy(b);const vc=d1*d4-d3*d2;if(vc<=0&&d1>=0&&d3<=0)return v=d1/(d1-d3),target.copy(a).addScaledVector(_vab,v);_vcp.subVectors(p,c);const d5=_vab.dot(_vcp),d6=_vac.dot(_vcp);if(d6>=0&&d5<=d6)return target.copy(c);const vb=d5*d2-d1*d6;if(vb<=0&&d2>=0&&d6<=0)return w=d2/(d2-d6),target.copy(a).addScaledVector(_vac,w);const va=d3*d6-d5*d4;if(va<=0&&d4-d3>=0&&d5-d6>=0)return _vbc.subVectors(c,b),w=(d4-d3)/(d4-d3+(d5-d6)),target.copy(b).addScaledVector(_vbc,w);const denom=1/(va+vb+vc);return v=vb*denom,w=vc*denom,target.copy(a).addScaledVector(_vab,v).addScaledVector(_vac,w)}equals(triangle){return triangle.a.equals(this.a)&&triangle.b.equals(this.b)&&triangle.c.equals(this.c)}}let materialId=0;class Material extends EventDispatcher{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:materialId++}),this.uuid=generateUUID(),this.name="",this.type="Material",this.blending=NormalBlending,this.side=FrontSide,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=SrcAlphaFactor,this.blendDst=OneMinusSrcAlphaFactor,this.blendEquation=AddEquation,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=LessEqualDepth,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=AlwaysStencilFunc,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=KeepStencilOp,this.stencilZFail=KeepStencilOp,this.stencilZPass=KeepStencilOp,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(value){this._alphaTest>0!=value>0&&this.version++,this._alphaTest=value}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(values){if(void 0!==values)for(const key in values){const newValue=values[key];if(void 0===newValue){console.warn(`THREE.Material: parameter '${key}' has value of undefined.`);continue}const currentValue=this[key];void 0!==currentValue?currentValue&&currentValue.isColor?currentValue.set(newValue):currentValue&&currentValue.isVector3&&newValue&&newValue.isVector3?currentValue.copy(newValue):this[key]=newValue:console.warn(`THREE.Material: '${key}' is not a property of THREE.${this.type}.`)}}toJSON(meta){const isRootObject=void 0===meta||"string"==typeof meta;isRootObject&&(meta={textures:{},images:{}});const data={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function extractFromCache(cache){const values=[];for(const key in cache){const data=cache[key];delete data.metadata,values.push(data)}return values}if(data.uuid=this.uuid,data.type=this.type,""!==this.name&&(data.name=this.name),this.color&&this.color.isColor&&(data.color=this.color.getHex()),void 0!==this.roughness&&(data.roughness=this.roughness),void 0!==this.metalness&&(data.metalness=this.metalness),void 0!==this.sheen&&(data.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(data.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(data.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(data.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(data.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(data.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(data.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(data.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(data.shininess=this.shininess),void 0!==this.clearcoat&&(data.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(data.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(data.clearcoatMap=this.clearcoatMap.toJSON(meta).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(data.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(meta).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(data.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(meta).uuid,data.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(data.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(data.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(data.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(data.iridescenceMap=this.iridescenceMap.toJSON(meta).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(data.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(meta).uuid),this.map&&this.map.isTexture&&(data.map=this.map.toJSON(meta).uuid),this.matcap&&this.matcap.isTexture&&(data.matcap=this.matcap.toJSON(meta).uuid),this.alphaMap&&this.alphaMap.isTexture&&(data.alphaMap=this.alphaMap.toJSON(meta).uuid),this.lightMap&&this.lightMap.isTexture&&(data.lightMap=this.lightMap.toJSON(meta).uuid,data.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(data.aoMap=this.aoMap.toJSON(meta).uuid,data.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(data.bumpMap=this.bumpMap.toJSON(meta).uuid,data.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(data.normalMap=this.normalMap.toJSON(meta).uuid,data.normalMapType=this.normalMapType,data.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(data.displacementMap=this.displacementMap.toJSON(meta).uuid,data.displacementScale=this.displacementScale,data.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(data.roughnessMap=this.roughnessMap.toJSON(meta).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(data.metalnessMap=this.metalnessMap.toJSON(meta).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(data.emissiveMap=this.emissiveMap.toJSON(meta).uuid),this.specularMap&&this.specularMap.isTexture&&(data.specularMap=this.specularMap.toJSON(meta).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(data.specularIntensityMap=this.specularIntensityMap.toJSON(meta).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(data.specularColorMap=this.specularColorMap.toJSON(meta).uuid),this.envMap&&this.envMap.isTexture&&(data.envMap=this.envMap.toJSON(meta).uuid,void 0!==this.combine&&(data.combine=this.combine)),void 0!==this.envMapIntensity&&(data.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(data.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(data.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(data.gradientMap=this.gradientMap.toJSON(meta).uuid),void 0!==this.transmission&&(data.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(data.transmissionMap=this.transmissionMap.toJSON(meta).uuid),void 0!==this.thickness&&(data.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(data.thicknessMap=this.thicknessMap.toJSON(meta).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(data.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(data.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(data.size=this.size),null!==this.shadowSide&&(data.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(data.sizeAttenuation=this.sizeAttenuation),this.blending!==NormalBlending&&(data.blending=this.blending),this.side!==FrontSide&&(data.side=this.side),this.vertexColors&&(data.vertexColors=!0),this.opacity<1&&(data.opacity=this.opacity),!0===this.transparent&&(data.transparent=this.transparent),data.depthFunc=this.depthFunc,data.depthTest=this.depthTest,data.depthWrite=this.depthWrite,data.colorWrite=this.colorWrite,data.stencilWrite=this.stencilWrite,data.stencilWriteMask=this.stencilWriteMask,data.stencilFunc=this.stencilFunc,data.stencilRef=this.stencilRef,data.stencilFuncMask=this.stencilFuncMask,data.stencilFail=this.stencilFail,data.stencilZFail=this.stencilZFail,data.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(data.rotation=this.rotation),!0===this.polygonOffset&&(data.polygonOffset=!0),0!==this.polygonOffsetFactor&&(data.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(data.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(data.linewidth=this.linewidth),void 0!==this.dashSize&&(data.dashSize=this.dashSize),void 0!==this.gapSize&&(data.gapSize=this.gapSize),void 0!==this.scale&&(data.scale=this.scale),!0===this.dithering&&(data.dithering=!0),this.alphaTest>0&&(data.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(data.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(data.premultipliedAlpha=this.premultipliedAlpha),!0===this.forceSinglePass&&(data.forceSinglePass=this.forceSinglePass),!0===this.wireframe&&(data.wireframe=this.wireframe),this.wireframeLinewidth>1&&(data.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(data.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(data.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(data.flatShading=this.flatShading),!1===this.visible&&(data.visible=!1),!1===this.toneMapped&&(data.toneMapped=!1),!1===this.fog&&(data.fog=!1),Object.keys(this.userData).length>0&&(data.userData=this.userData),isRootObject){const textures=extractFromCache(meta.textures),images=extractFromCache(meta.images);textures.length>0&&(data.textures=textures),images.length>0&&(data.images=images)}return data}clone(){return(new this.constructor).copy(this)}copy(source){this.name=source.name,this.blending=source.blending,this.side=source.side,this.vertexColors=source.vertexColors,this.opacity=source.opacity,this.transparent=source.transparent,this.blendSrc=source.blendSrc,this.blendDst=source.blendDst,this.blendEquation=source.blendEquation,this.blendSrcAlpha=source.blendSrcAlpha,this.blendDstAlpha=source.blendDstAlpha,this.blendEquationAlpha=source.blendEquationAlpha,this.depthFunc=source.depthFunc,this.depthTest=source.depthTest,this.depthWrite=source.depthWrite,this.stencilWriteMask=source.stencilWriteMask,this.stencilFunc=source.stencilFunc,this.stencilRef=source.stencilRef,this.stencilFuncMask=source.stencilFuncMask,this.stencilFail=source.stencilFail,this.stencilZFail=source.stencilZFail,this.stencilZPass=source.stencilZPass,this.stencilWrite=source.stencilWrite;const srcPlanes=source.clippingPlanes;let dstPlanes=null;if(null!==srcPlanes){const n=srcPlanes.length;dstPlanes=new Array(n);for(let i=0;i!==n;++i)dstPlanes[i]=srcPlanes[i].clone()}return this.clippingPlanes=dstPlanes,this.clipIntersection=source.clipIntersection,this.clipShadows=source.clipShadows,this.shadowSide=source.shadowSide,this.colorWrite=source.colorWrite,this.precision=source.precision,this.polygonOffset=source.polygonOffset,this.polygonOffsetFactor=source.polygonOffsetFactor,this.polygonOffsetUnits=source.polygonOffsetUnits,this.dithering=source.dithering,this.alphaTest=source.alphaTest,this.alphaToCoverage=source.alphaToCoverage,this.premultipliedAlpha=source.premultipliedAlpha,this.forceSinglePass=source.forceSinglePass,this.visible=source.visible,this.toneMapped=source.toneMapped,this.userData=JSON.parse(JSON.stringify(source.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(value){!0===value&&this.version++}}const _colorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},_hslA={h:0,s:0,l:0},_hslB={h:0,s:0,l:0};function hue2rgb(p,q,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?p+6*(q-p)*t:t<.5?q:t<2/3?p+6*(q-p)*(2/3-t):p}class Color{constructor(r,g,b){return this.isColor=!0,this.r=1,this.g=1,this.b=1,void 0===g&&void 0===b?this.set(r):this.setRGB(r,g,b)}set(value){return value&&value.isColor?this.copy(value):"number"==typeof value?this.setHex(value):"string"==typeof value&&this.setStyle(value),this}setScalar(scalar){return this.r=scalar,this.g=scalar,this.b=scalar,this}setHex(hex,colorSpace=SRGBColorSpace){return hex=Math.floor(hex),this.r=(hex>>16&255)/255,this.g=(hex>>8&255)/255,this.b=(255&hex)/255,ColorManagement.toWorkingColorSpace(this,colorSpace),this}setRGB(r,g,b,colorSpace=ColorManagement.workingColorSpace){return this.r=r,this.g=g,this.b=b,ColorManagement.toWorkingColorSpace(this,colorSpace),this}setHSL(h,s,l,colorSpace=ColorManagement.workingColorSpace){if(h=euclideanModulo(h,1),s=clamp(s,0,1),l=clamp(l,0,1),0===s)this.r=this.g=this.b=l;else{const p=l<=.5?l*(1+s):l+s-l*s,q=2*l-p;this.r=hue2rgb(q,p,h+1/3),this.g=hue2rgb(q,p,h),this.b=hue2rgb(q,p,h-1/3)}return ColorManagement.toWorkingColorSpace(this,colorSpace),this}setStyle(style,colorSpace=SRGBColorSpace){function handleAlpha(string){void 0!==string&&parseFloat(string)<1&&console.warn("THREE.Color: Alpha component of "+style+" will be ignored.")}let m;if(m=/^(\w+)\(([^\)]*)\)/.exec(style)){let color;const name=m[1],components=m[2];switch(name){case"rgb":case"rgba":if(color=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(components))return handleAlpha(color[4]),this.setRGB(Math.min(255,parseInt(color[1],10))/255,Math.min(255,parseInt(color[2],10))/255,Math.min(255,parseInt(color[3],10))/255,colorSpace);if(color=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(components))return handleAlpha(color[4]),this.setRGB(Math.min(100,parseInt(color[1],10))/100,Math.min(100,parseInt(color[2],10))/100,Math.min(100,parseInt(color[3],10))/100,colorSpace);break;case"hsl":case"hsla":if(color=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(components))return handleAlpha(color[4]),this.setHSL(parseFloat(color[1])/360,parseFloat(color[2])/100,parseFloat(color[3])/100,colorSpace);break;default:console.warn("THREE.Color: Unknown color model "+style)}}else if(m=/^\#([A-Fa-f\d]+)$/.exec(style)){const hex=m[1],size=hex.length;if(3===size)return this.setRGB(parseInt(hex.charAt(0),16)/15,parseInt(hex.charAt(1),16)/15,parseInt(hex.charAt(2),16)/15,colorSpace);if(6===size)return this.setHex(parseInt(hex,16),colorSpace);console.warn("THREE.Color: Invalid hex color "+style)}else if(style&&style.length>0)return this.setColorName(style,colorSpace);return this}setColorName(style,colorSpace=SRGBColorSpace){const hex=_colorKeywords[style.toLowerCase()];return void 0!==hex?this.setHex(hex,colorSpace):console.warn("THREE.Color: Unknown color "+style),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(color){return this.r=color.r,this.g=color.g,this.b=color.b,this}copySRGBToLinear(color){return this.r=SRGBToLinear(color.r),this.g=SRGBToLinear(color.g),this.b=SRGBToLinear(color.b),this}copyLinearToSRGB(color){return this.r=LinearToSRGB(color.r),this.g=LinearToSRGB(color.g),this.b=LinearToSRGB(color.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(colorSpace=SRGBColorSpace){return ColorManagement.fromWorkingColorSpace(_color.copy(this),colorSpace),65536*Math.round(clamp(255*_color.r,0,255))+256*Math.round(clamp(255*_color.g,0,255))+Math.round(clamp(255*_color.b,0,255))}getHexString(colorSpace=SRGBColorSpace){return("000000"+this.getHex(colorSpace).toString(16)).slice(-6)}getHSL(target,colorSpace=ColorManagement.workingColorSpace){ColorManagement.fromWorkingColorSpace(_color.copy(this),colorSpace);const r=_color.r,g=_color.g,b=_color.b,max=Math.max(r,g,b),min=Math.min(r,g,b);let hue,saturation;const lightness=(min+max)/2;if(min===max)hue=0,saturation=0;else{const delta=max-min;switch(saturation=lightness<=.5?delta/(max+min):delta/(2-max-min),max){case r:hue=(g-b)/delta+(g<b?6:0);break;case g:hue=(b-r)/delta+2;break;case b:hue=(r-g)/delta+4}hue/=6}return target.h=hue,target.s=saturation,target.l=lightness,target}getRGB(target,colorSpace=ColorManagement.workingColorSpace){return ColorManagement.fromWorkingColorSpace(_color.copy(this),colorSpace),target.r=_color.r,target.g=_color.g,target.b=_color.b,target}getStyle(colorSpace=SRGBColorSpace){ColorManagement.fromWorkingColorSpace(_color.copy(this),colorSpace);const r=_color.r,g=_color.g,b=_color.b;return colorSpace!==SRGBColorSpace?`color(${colorSpace} ${r.toFixed(3)} ${g.toFixed(3)} ${b.toFixed(3)})`:`rgb(${Math.round(255*r)},${Math.round(255*g)},${Math.round(255*b)})`}offsetHSL(h,s,l){return this.getHSL(_hslA),_hslA.h+=h,_hslA.s+=s,_hslA.l+=l,this.setHSL(_hslA.h,_hslA.s,_hslA.l),this}add(color){return this.r+=color.r,this.g+=color.g,this.b+=color.b,this}addColors(color1,color2){return this.r=color1.r+color2.r,this.g=color1.g+color2.g,this.b=color1.b+color2.b,this}addScalar(s){return this.r+=s,this.g+=s,this.b+=s,this}sub(color){return this.r=Math.max(0,this.r-color.r),this.g=Math.max(0,this.g-color.g),this.b=Math.max(0,this.b-color.b),this}multiply(color){return this.r*=color.r,this.g*=color.g,this.b*=color.b,this}multiplyScalar(s){return this.r*=s,this.g*=s,this.b*=s,this}lerp(color,alpha){return this.r+=(color.r-this.r)*alpha,this.g+=(color.g-this.g)*alpha,this.b+=(color.b-this.b)*alpha,this}lerpColors(color1,color2,alpha){return this.r=color1.r+(color2.r-color1.r)*alpha,this.g=color1.g+(color2.g-color1.g)*alpha,this.b=color1.b+(color2.b-color1.b)*alpha,this}lerpHSL(color,alpha){this.getHSL(_hslA),color.getHSL(_hslB);const h=lerp(_hslA.h,_hslB.h,alpha),s=lerp(_hslA.s,_hslB.s,alpha),l=lerp(_hslA.l,_hslB.l,alpha);return this.setHSL(h,s,l),this}setFromVector3(v){return this.r=v.x,this.g=v.y,this.b=v.z,this}applyMatrix3(m){const r=this.r,g=this.g,b=this.b,e=m.elements;return this.r=e[0]*r+e[3]*g+e[6]*b,this.g=e[1]*r+e[4]*g+e[7]*b,this.b=e[2]*r+e[5]*g+e[8]*b,this}equals(c){return c.r===this.r&&c.g===this.g&&c.b===this.b}fromArray(array,offset=0){return this.r=array[offset],this.g=array[offset+1],this.b=array[offset+2],this}toArray(array=[],offset=0){return array[offset]=this.r,array[offset+1]=this.g,array[offset+2]=this.b,array}fromBufferAttribute(attribute,index){return this.r=attribute.getX(index),this.g=attribute.getY(index),this.b=attribute.getZ(index),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const _color=new Color;Color.NAMES=_colorKeywords;class MeshBasicMaterial extends Material{constructor(parameters){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Color(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(parameters)}copy(source){return super.copy(source),this.color.copy(source.color),this.map=source.map,this.lightMap=source.lightMap,this.lightMapIntensity=source.lightMapIntensity,this.aoMap=source.aoMap,this.aoMapIntensity=source.aoMapIntensity,this.specularMap=source.specularMap,this.alphaMap=source.alphaMap,this.envMap=source.envMap,this.combine=source.combine,this.reflectivity=source.reflectivity,this.refractionRatio=source.refractionRatio,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.wireframeLinecap=source.wireframeLinecap,this.wireframeLinejoin=source.wireframeLinejoin,this.fog=source.fog,this}}const _tables=_generateTables();function _generateTables(){const buffer=new ArrayBuffer(4),floatView=new Float32Array(buffer),uint32View=new Uint32Array(buffer),baseTable=new Uint32Array(512),shiftTable=new Uint32Array(512);for(let i=0;i<256;++i){const e=i-127;e<-27?(baseTable[i]=0,baseTable[256|i]=32768,shiftTable[i]=24,shiftTable[256|i]=24):e<-14?(baseTable[i]=1024>>-e-14,baseTable[256|i]=1024>>-e-14|32768,shiftTable[i]=-e-1,shiftTable[256|i]=-e-1):e<=15?(baseTable[i]=e+15<<10,baseTable[256|i]=e+15<<10|32768,shiftTable[i]=13,shiftTable[256|i]=13):e<128?(baseTable[i]=31744,baseTable[256|i]=64512,shiftTable[i]=24,shiftTable[256|i]=24):(baseTable[i]=31744,baseTable[256|i]=64512,shiftTable[i]=13,shiftTable[256|i]=13)}const mantissaTable=new Uint32Array(2048),exponentTable=new Uint32Array(64),offsetTable=new Uint32Array(64);for(let i=1;i<1024;++i){let m=i<<13,e=0;for(;!(8388608&m);)m<<=1,e-=8388608;m&=-8388609,e+=947912704,mantissaTable[i]=m|e}for(let i=1024;i<2048;++i)mantissaTable[i]=939524096+(i-1024<<13);for(let i=1;i<31;++i)exponentTable[i]=i<<23;exponentTable[31]=1199570944,exponentTable[32]=2147483648;for(let i=33;i<63;++i)exponentTable[i]=2147483648+(i-32<<23);exponentTable[63]=3347054592;for(let i=1;i<64;++i)32!==i&&(offsetTable[i]=1024);return{floatView,uint32View,baseTable,shiftTable,mantissaTable,exponentTable,offsetTable}}function toHalfFloat(val){Math.abs(val)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),val=clamp(val,-65504,65504),_tables.floatView[0]=val;const f=_tables.uint32View[0],e=f>>23&511;return _tables.baseTable[e]+((8388607&f)>>_tables.shiftTable[e])}function fromHalfFloat(val){const m=val>>10;return _tables.uint32View[0]=_tables.mantissaTable[_tables.offsetTable[m]+(1023&val)]+_tables.exponentTable[m],_tables.floatView[0]}const DataUtils={toHalfFloat,fromHalfFloat},_vector$8=new Vector3,_vector2$1=new Vector2;class BufferAttribute{constructor(array,itemSize,normalized=!1){if(Array.isArray(array))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=array,this.itemSize=itemSize,this.count=void 0!==array?array.length/itemSize:0,this.normalized=normalized,this.usage=StaticDrawUsage,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(value){!0===value&&this.version++}setUsage(value){return this.usage=value,this}copy(source){return this.name=source.name,this.array=new source.array.constructor(source.array),this.itemSize=source.itemSize,this.count=source.count,this.normalized=source.normalized,this.usage=source.usage,this}copyAt(index1,attribute,index2){index1*=this.itemSize,index2*=attribute.itemSize;for(let i=0,l=this.itemSize;i<l;i++)this.array[index1+i]=attribute.array[index2+i];return this}copyArray(array){return this.array.set(array),this}applyMatrix3(m){if(2===this.itemSize)for(let i=0,l=this.count;i<l;i++)_vector2$1.fromBufferAttribute(this,i),_vector2$1.applyMatrix3(m),this.setXY(i,_vector2$1.x,_vector2$1.y);else if(3===this.itemSize)for(let i=0,l=this.count;i<l;i++)_vector$8.fromBufferAttribute(this,i),_vector$8.applyMatrix3(m),this.setXYZ(i,_vector$8.x,_vector$8.y,_vector$8.z);return this}applyMatrix4(m){for(let i=0,l=this.count;i<l;i++)_vector$8.fromBufferAttribute(this,i),_vector$8.applyMatrix4(m),this.setXYZ(i,_vector$8.x,_vector$8.y,_vector$8.z);return this}applyNormalMatrix(m){for(let i=0,l=this.count;i<l;i++)_vector$8.fromBufferAttribute(this,i),_vector$8.applyNormalMatrix(m),this.setXYZ(i,_vector$8.x,_vector$8.y,_vector$8.z);return this}transformDirection(m){for(let i=0,l=this.count;i<l;i++)_vector$8.fromBufferAttribute(this,i),_vector$8.transformDirection(m),this.setXYZ(i,_vector$8.x,_vector$8.y,_vector$8.z);return this}set(value,offset=0){return this.array.set(value,offset),this}getX(index){let x=this.array[index*this.itemSize];return this.normalized&&(x=denormalize(x,this.array)),x}setX(index,x){return this.normalized&&(x=normalize(x,this.array)),this.array[index*this.itemSize]=x,this}getY(index){let y=this.array[index*this.itemSize+1];return this.normalized&&(y=denormalize(y,this.array)),y}setY(index,y){return this.normalized&&(y=normalize(y,this.array)),this.array[index*this.itemSize+1]=y,this}getZ(index){let z=this.array[index*this.itemSize+2];return this.normalized&&(z=denormalize(z,this.array)),z}setZ(index,z){return this.normalized&&(z=normalize(z,this.array)),this.array[index*this.itemSize+2]=z,this}getW(index){let w=this.array[index*this.itemSize+3];return this.normalized&&(w=denormalize(w,this.array)),w}setW(index,w){return this.normalized&&(w=normalize(w,this.array)),this.array[index*this.itemSize+3]=w,this}setXY(index,x,y){return index*=this.itemSize,this.normalized&&(x=normalize(x,this.array),y=normalize(y,this.array)),this.array[index+0]=x,this.array[index+1]=y,this}setXYZ(index,x,y,z){return index*=this.itemSize,this.normalized&&(x=normalize(x,this.array),y=normalize(y,this.array),z=normalize(z,this.array)),this.array[index+0]=x,this.array[index+1]=y,this.array[index+2]=z,this}setXYZW(index,x,y,z,w){return index*=this.itemSize,this.normalized&&(x=normalize(x,this.array),y=normalize(y,this.array),z=normalize(z,this.array),w=normalize(w,this.array)),this.array[index+0]=x,this.array[index+1]=y,this.array[index+2]=z,this.array[index+3]=w,this}onUpload(callback){return this.onUploadCallback=callback,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const data={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(data.name=this.name),this.usage!==StaticDrawUsage&&(data.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(data.updateRange=this.updateRange),data}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class Int8BufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized){super(new Int8Array(array),itemSize,normalized)}}class Uint8BufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized){super(new Uint8Array(array),itemSize,normalized)}}class Uint8ClampedBufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized){super(new Uint8ClampedArray(array),itemSize,normalized)}}class Int16BufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized){super(new Int16Array(array),itemSize,normalized)}}class Uint16BufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized){super(new Uint16Array(array),itemSize,normalized)}}class Int32BufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized){super(new Int32Array(array),itemSize,normalized)}}class Uint32BufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized){super(new Uint32Array(array),itemSize,normalized)}}class Float16BufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized){super(new Uint16Array(array),itemSize,normalized),this.isFloat16BufferAttribute=!0}getX(index){let x=fromHalfFloat(this.array[index*this.itemSize]);return this.normalized&&(x=denormalize(x,this.array)),x}setX(index,x){return this.normalized&&(x=normalize(x,this.array)),this.array[index*this.itemSize]=toHalfFloat(x),this}getY(index){let y=fromHalfFloat(this.array[index*this.itemSize+1]);return this.normalized&&(y=denormalize(y,this.array)),y}setY(index,y){return this.normalized&&(y=normalize(y,this.array)),this.array[index*this.itemSize+1]=toHalfFloat(y),this}getZ(index){let z=fromHalfFloat(this.array[index*this.itemSize+2]);return this.normalized&&(z=denormalize(z,this.array)),z}setZ(index,z){return this.normalized&&(z=normalize(z,this.array)),this.array[index*this.itemSize+2]=toHalfFloat(z),this}getW(index){let w=fromHalfFloat(this.array[index*this.itemSize+3]);return this.normalized&&(w=denormalize(w,this.array)),w}setW(index,w){return this.normalized&&(w=normalize(w,this.array)),this.array[index*this.itemSize+3]=toHalfFloat(w),this}setXY(index,x,y){return index*=this.itemSize,this.normalized&&(x=normalize(x,this.array),y=normalize(y,this.array)),this.array[index+0]=toHalfFloat(x),this.array[index+1]=toHalfFloat(y),this}setXYZ(index,x,y,z){return index*=this.itemSize,this.normalized&&(x=normalize(x,this.array),y=normalize(y,this.array),z=normalize(z,this.array)),this.array[index+0]=toHalfFloat(x),this.array[index+1]=toHalfFloat(y),this.array[index+2]=toHalfFloat(z),this}setXYZW(index,x,y,z,w){return index*=this.itemSize,this.normalized&&(x=normalize(x,this.array),y=normalize(y,this.array),z=normalize(z,this.array),w=normalize(w,this.array)),this.array[index+0]=toHalfFloat(x),this.array[index+1]=toHalfFloat(y),this.array[index+2]=toHalfFloat(z),this.array[index+3]=toHalfFloat(w),this}}class Float32BufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized){super(new Float32Array(array),itemSize,normalized)}}class Float64BufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized){super(new Float64Array(array),itemSize,normalized)}}let _id$1=0;const _m1=new Matrix4,_obj=new Object3D,_offset=new Vector3,_box$1=new Box3,_boxMorphTargets=new Box3,_vector$7=new Vector3;class BufferGeometry extends EventDispatcher{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:_id$1++}),this.uuid=generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(index){return Array.isArray(index)?this.index=new(arrayNeedsUint32(index)?Uint32BufferAttribute:Uint16BufferAttribute)(index,1):this.index=index,this}getAttribute(name){return this.attributes[name]}setAttribute(name,attribute){return this.attributes[name]=attribute,this}deleteAttribute(name){return delete this.attributes[name],this}hasAttribute(name){return void 0!==this.attributes[name]}addGroup(start,count,materialIndex=0){this.groups.push({start,count,materialIndex})}clearGroups(){this.groups=[]}setDrawRange(start,count){this.drawRange.start=start,this.drawRange.count=count}applyMatrix4(matrix){const position=this.attributes.position;void 0!==position&&(position.applyMatrix4(matrix),position.needsUpdate=!0);const normal=this.attributes.normal;if(void 0!==normal){const normalMatrix=(new Matrix3).getNormalMatrix(matrix);normal.applyNormalMatrix(normalMatrix),normal.needsUpdate=!0}const tangent=this.attributes.tangent;return void 0!==tangent&&(tangent.transformDirection(matrix),tangent.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(q){return _m1.makeRotationFromQuaternion(q),this.applyMatrix4(_m1),this}rotateX(angle){return _m1.makeRotationX(angle),this.applyMatrix4(_m1),this}rotateY(angle){return _m1.makeRotationY(angle),this.applyMatrix4(_m1),this}rotateZ(angle){return _m1.makeRotationZ(angle),this.applyMatrix4(_m1),this}translate(x,y,z){return _m1.makeTranslation(x,y,z),this.applyMatrix4(_m1),this}scale(x,y,z){return _m1.makeScale(x,y,z),this.applyMatrix4(_m1),this}lookAt(vector){return _obj.lookAt(vector),_obj.updateMatrix(),this.applyMatrix4(_obj.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(_offset).negate(),this.translate(_offset.x,_offset.y,_offset.z),this}setFromPoints(points){const position=[];for(let i=0,l=points.length;i<l;i++){const point=points[i];position.push(point.x,point.y,point.z||0)}return this.setAttribute("position",new Float32BufferAttribute(position,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Box3);const position=this.attributes.position,morphAttributesPosition=this.morphAttributes.position;if(position&&position.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new Vector3(-1/0,-1/0,-1/0),new Vector3(1/0,1/0,1/0));if(void 0!==position){if(this.boundingBox.setFromBufferAttribute(position),morphAttributesPosition)for(let i=0,il=morphAttributesPosition.length;i<il;i++){const morphAttribute=morphAttributesPosition[i];_box$1.setFromBufferAttribute(morphAttribute),this.morphTargetsRelative?(_vector$7.addVectors(this.boundingBox.min,_box$1.min),this.boundingBox.expandByPoint(_vector$7),_vector$7.addVectors(this.boundingBox.max,_box$1.max),this.boundingBox.expandByPoint(_vector$7)):(this.boundingBox.expandByPoint(_box$1.min),this.boundingBox.expandByPoint(_box$1.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Sphere);const position=this.attributes.position,morphAttributesPosition=this.morphAttributes.position;if(position&&position.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new Vector3,1/0);if(position){const center=this.boundingSphere.center;if(_box$1.setFromBufferAttribute(position),morphAttributesPosition)for(let i=0,il=morphAttributesPosition.length;i<il;i++){const morphAttribute=morphAttributesPosition[i];_boxMorphTargets.setFromBufferAttribute(morphAttribute),this.morphTargetsRelative?(_vector$7.addVectors(_box$1.min,_boxMorphTargets.min),_box$1.expandByPoint(_vector$7),_vector$7.addVectors(_box$1.max,_boxMorphTargets.max),_box$1.expandByPoint(_vector$7)):(_box$1.expandByPoint(_boxMorphTargets.min),_box$1.expandByPoint(_boxMorphTargets.max))}_box$1.getCenter(center);let maxRadiusSq=0;for(let i=0,il=position.count;i<il;i++)_vector$7.fromBufferAttribute(position,i),maxRadiusSq=Math.max(maxRadiusSq,center.distanceToSquared(_vector$7));if(morphAttributesPosition)for(let i=0,il=morphAttributesPosition.length;i<il;i++){const morphAttribute=morphAttributesPosition[i],morphTargetsRelative=this.morphTargetsRelative;for(let j=0,jl=morphAttribute.count;j<jl;j++)_vector$7.fromBufferAttribute(morphAttribute,j),morphTargetsRelative&&(_offset.fromBufferAttribute(position,j),_vector$7.add(_offset)),maxRadiusSq=Math.max(maxRadiusSq,center.distanceToSquared(_vector$7))}this.boundingSphere.radius=Math.sqrt(maxRadiusSq),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const index=this.index,attributes=this.attributes;if(null===index||void 0===attributes.position||void 0===attributes.normal||void 0===attributes.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const indices=index.array,positions=attributes.position.array,normals=attributes.normal.array,uvs=attributes.uv.array,nVertices=positions.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new BufferAttribute(new Float32Array(4*nVertices),4));const tangents=this.getAttribute("tangent").array,tan1=[],tan2=[];for(let i=0;i<nVertices;i++)tan1[i]=new Vector3,tan2[i]=new Vector3;const vA=new Vector3,vB=new Vector3,vC=new Vector3,uvA=new Vector2,uvB=new Vector2,uvC=new Vector2,sdir=new Vector3,tdir=new Vector3;function handleTriangle(a,b,c){vA.fromArray(positions,3*a),vB.fromArray(positions,3*b),vC.fromArray(positions,3*c),uvA.fromArray(uvs,2*a),uvB.fromArray(uvs,2*b),uvC.fromArray(uvs,2*c),vB.sub(vA),vC.sub(vA),uvB.sub(uvA),uvC.sub(uvA);const r=1/(uvB.x*uvC.y-uvC.x*uvB.y);isFinite(r)&&(sdir.copy(vB).multiplyScalar(uvC.y).addScaledVector(vC,-uvB.y).multiplyScalar(r),tdir.copy(vC).multiplyScalar(uvB.x).addScaledVector(vB,-uvC.x).multiplyScalar(r),tan1[a].add(sdir),tan1[b].add(sdir),tan1[c].add(sdir),tan2[a].add(tdir),tan2[b].add(tdir),tan2[c].add(tdir))}let groups=this.groups;0===groups.length&&(groups=[{start:0,count:indices.length}]);for(let i=0,il=groups.length;i<il;++i){const group=groups[i],start=group.start;for(let j=start,jl=start+group.count;j<jl;j+=3)handleTriangle(indices[j+0],indices[j+1],indices[j+2])}const tmp=new Vector3,tmp2=new Vector3,n=new Vector3,n2=new Vector3;function handleVertex(v){n.fromArray(normals,3*v),n2.copy(n);const t=tan1[v];tmp.copy(t),tmp.sub(n.multiplyScalar(n.dot(t))).normalize(),tmp2.crossVectors(n2,t);const w=tmp2.dot(tan2[v])<0?-1:1;tangents[4*v]=tmp.x,tangents[4*v+1]=tmp.y,tangents[4*v+2]=tmp.z,tangents[4*v+3]=w}for(let i=0,il=groups.length;i<il;++i){const group=groups[i],start=group.start;for(let j=start,jl=start+group.count;j<jl;j+=3)handleVertex(indices[j+0]),handleVertex(indices[j+1]),handleVertex(indices[j+2])}}computeVertexNormals(){const index=this.index,positionAttribute=this.getAttribute("position");if(void 0!==positionAttribute){let normalAttribute=this.getAttribute("normal");if(void 0===normalAttribute)normalAttribute=new BufferAttribute(new Float32Array(3*positionAttribute.count),3),this.setAttribute("normal",normalAttribute);else for(let i=0,il=normalAttribute.count;i<il;i++)normalAttribute.setXYZ(i,0,0,0);const pA=new Vector3,pB=new Vector3,pC=new Vector3,nA=new Vector3,nB=new Vector3,nC=new Vector3,cb=new Vector3,ab=new Vector3;if(index)for(let i=0,il=index.count;i<il;i+=3){const vA=index.getX(i+0),vB=index.getX(i+1),vC=index.getX(i+2);pA.fromBufferAttribute(positionAttribute,vA),pB.fromBufferAttribute(positionAttribute,vB),pC.fromBufferAttribute(positionAttribute,vC),cb.subVectors(pC,pB),ab.subVectors(pA,pB),cb.cross(ab),nA.fromBufferAttribute(normalAttribute,vA),nB.fromBufferAttribute(normalAttribute,vB),nC.fromBufferAttribute(normalAttribute,vC),nA.add(cb),nB.add(cb),nC.add(cb),normalAttribute.setXYZ(vA,nA.x,nA.y,nA.z),normalAttribute.setXYZ(vB,nB.x,nB.y,nB.z),normalAttribute.setXYZ(vC,nC.x,nC.y,nC.z)}else for(let i=0,il=positionAttribute.count;i<il;i+=3)pA.fromBufferAttribute(positionAttribute,i+0),pB.fromBufferAttribute(positionAttribute,i+1),pC.fromBufferAttribute(positionAttribute,i+2),cb.subVectors(pC,pB),ab.subVectors(pA,pB),cb.cross(ab),normalAttribute.setXYZ(i+0,cb.x,cb.y,cb.z),normalAttribute.setXYZ(i+1,cb.x,cb.y,cb.z),normalAttribute.setXYZ(i+2,cb.x,cb.y,cb.z);this.normalizeNormals(),normalAttribute.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeGeometries() instead."),this}normalizeNormals(){const normals=this.attributes.normal;for(let i=0,il=normals.count;i<il;i++)_vector$7.fromBufferAttribute(normals,i),_vector$7.normalize(),normals.setXYZ(i,_vector$7.x,_vector$7.y,_vector$7.z)}toNonIndexed(){function convertBufferAttribute(attribute,indices){const array=attribute.array,itemSize=attribute.itemSize,normalized=attribute.normalized,array2=new array.constructor(indices.length*itemSize);let index=0,index2=0;for(let i=0,l=indices.length;i<l;i++){index=attribute.isInterleavedBufferAttribute?indices[i]*attribute.data.stride+attribute.offset:indices[i]*itemSize;for(let j=0;j<itemSize;j++)array2[index2++]=array[index++]}return new BufferAttribute(array2,itemSize,normalized)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const geometry2=new BufferGeometry,indices=this.index.array,attributes=this.attributes;for(const name in attributes){const newAttribute=convertBufferAttribute(attributes[name],indices);geometry2.setAttribute(name,newAttribute)}const morphAttributes=this.morphAttributes;for(const name in morphAttributes){const morphArray=[],morphAttribute=morphAttributes[name];for(let i=0,il=morphAttribute.length;i<il;i++){const newAttribute=convertBufferAttribute(morphAttribute[i],indices);morphArray.push(newAttribute)}geometry2.morphAttributes[name]=morphArray}geometry2.morphTargetsRelative=this.morphTargetsRelative;const groups=this.groups;for(let i=0,l=groups.length;i<l;i++){const group=groups[i];geometry2.addGroup(group.start,group.count,group.materialIndex)}return geometry2}toJSON(){const data={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(data.uuid=this.uuid,data.type=this.type,""!==this.name&&(data.name=this.name),Object.keys(this.userData).length>0&&(data.userData=this.userData),void 0!==this.parameters){const parameters=this.parameters;for(const key in parameters)void 0!==parameters[key]&&(data[key]=parameters[key]);return data}data.data={attributes:{}};const index=this.index;null!==index&&(data.data.index={type:index.array.constructor.name,array:Array.prototype.slice.call(index.array)});const attributes=this.attributes;for(const key in attributes){const attribute=attributes[key];data.data.attributes[key]=attribute.toJSON(data.data)}const morphAttributes={};let hasMorphAttributes=!1;for(const key in this.morphAttributes){const attributeArray=this.morphAttributes[key],array=[];for(let i=0,il=attributeArray.length;i<il;i++){const attribute=attributeArray[i];array.push(attribute.toJSON(data.data))}array.length>0&&(morphAttributes[key]=array,hasMorphAttributes=!0)}hasMorphAttributes&&(data.data.morphAttributes=morphAttributes,data.data.morphTargetsRelative=this.morphTargetsRelative);const groups=this.groups;groups.length>0&&(data.data.groups=JSON.parse(JSON.stringify(groups)));const boundingSphere=this.boundingSphere;return null!==boundingSphere&&(data.data.boundingSphere={center:boundingSphere.center.toArray(),radius:boundingSphere.radius}),data}clone(){return(new this.constructor).copy(this)}copy(source){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const data={};this.name=source.name;const index=source.index;null!==index&&this.setIndex(index.clone(data));const attributes=source.attributes;for(const name in attributes){const attribute=attributes[name];this.setAttribute(name,attribute.clone(data))}const morphAttributes=source.morphAttributes;for(const name in morphAttributes){const array=[],morphAttribute=morphAttributes[name];for(let i=0,l=morphAttribute.length;i<l;i++)array.push(morphAttribute[i].clone(data));this.morphAttributes[name]=array}this.morphTargetsRelative=source.morphTargetsRelative;const groups=source.groups;for(let i=0,l=groups.length;i<l;i++){const group=groups[i];this.addGroup(group.start,group.count,group.materialIndex)}const boundingBox=source.boundingBox;null!==boundingBox&&(this.boundingBox=boundingBox.clone());const boundingSphere=source.boundingSphere;return null!==boundingSphere&&(this.boundingSphere=boundingSphere.clone()),this.drawRange.start=source.drawRange.start,this.drawRange.count=source.drawRange.count,this.userData=source.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const _inverseMatrix$2=new Matrix4,_ray$2=new Ray,_sphere$4=new Sphere,_sphereHitAt=new Vector3,_vA$1=new Vector3,_vB$1=new Vector3,_vC$1=new Vector3,_tempA=new Vector3,_morphA=new Vector3,_uvA$1=new Vector2,_uvB$1=new Vector2,_uvC$1=new Vector2,_normalA=new Vector3,_normalB=new Vector3,_normalC=new Vector3,_intersectionPoint=new Vector3,_intersectionPointWorld=new Vector3;class Mesh extends Object3D{constructor(geometry=new BufferGeometry,material=new MeshBasicMaterial){super(),this.isMesh=!0,this.type="Mesh",this.geometry=geometry,this.material=material,this.updateMorphTargets()}copy(source,recursive){return super.copy(source,recursive),void 0!==source.morphTargetInfluences&&(this.morphTargetInfluences=source.morphTargetInfluences.slice()),void 0!==source.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},source.morphTargetDictionary)),this.material=source.material,this.geometry=source.geometry,this}updateMorphTargets(){const morphAttributes=this.geometry.morphAttributes,keys=Object.keys(morphAttributes);if(keys.length>0){const morphAttribute=morphAttributes[keys[0]];if(void 0!==morphAttribute){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let m=0,ml=morphAttribute.length;m<ml;m++){const name=morphAttribute[m].name||String(m);this.morphTargetInfluences.push(0),this.morphTargetDictionary[name]=m}}}}getVertexPosition(index,target){const geometry=this.geometry,position=geometry.attributes.position,morphPosition=geometry.morphAttributes.position,morphTargetsRelative=geometry.morphTargetsRelative;target.fromBufferAttribute(position,index);const morphInfluences=this.morphTargetInfluences;if(morphPosition&&morphInfluences){_morphA.set(0,0,0);for(let i=0,il=morphPosition.length;i<il;i++){const influence=morphInfluences[i],morphAttribute=morphPosition[i];0!==influence&&(_tempA.fromBufferAttribute(morphAttribute,index),morphTargetsRelative?_morphA.addScaledVector(_tempA,influence):_morphA.addScaledVector(_tempA.sub(target),influence))}target.add(_morphA)}return target}raycast(raycaster,intersects){const geometry=this.geometry,material=this.material,matrixWorld=this.matrixWorld;if(void 0!==material){if(null===geometry.boundingSphere&&geometry.computeBoundingSphere(),_sphere$4.copy(geometry.boundingSphere),_sphere$4.applyMatrix4(matrixWorld),_ray$2.copy(raycaster.ray).recast(raycaster.near),!1===_sphere$4.containsPoint(_ray$2.origin)){if(null===_ray$2.intersectSphere(_sphere$4,_sphereHitAt))return;if(_ray$2.origin.distanceToSquared(_sphereHitAt)>(raycaster.far-raycaster.near)**2)return}_inverseMatrix$2.copy(matrixWorld).invert(),_ray$2.copy(raycaster.ray).applyMatrix4(_inverseMatrix$2),null!==geometry.boundingBox&&!1===_ray$2.intersectsBox(geometry.boundingBox)||this._computeIntersections(raycaster,intersects)}}_computeIntersections(raycaster,intersects){let intersection;const geometry=this.geometry,material=this.material,index=geometry.index,position=geometry.attributes.position,uv=geometry.attributes.uv,uv1=geometry.attributes.uv1,normal=geometry.attributes.normal,groups=geometry.groups,drawRange=geometry.drawRange;if(null!==index)if(Array.isArray(material))for(let i=0,il=groups.length;i<il;i++){const group=groups[i],groupMaterial=material[group.materialIndex];for(let j=Math.max(group.start,drawRange.start),jl=Math.min(index.count,Math.min(group.start+group.count,drawRange.start+drawRange.count));j<jl;j+=3){const a=index.getX(j),b=index.getX(j+1),c=index.getX(j+2);intersection=checkGeometryIntersection(this,groupMaterial,raycaster,_ray$2,uv,uv1,normal,a,b,c),intersection&&(intersection.faceIndex=Math.floor(j/3),intersection.face.materialIndex=group.materialIndex,intersects.push(intersection))}}else{for(let i=Math.max(0,drawRange.start),il=Math.min(index.count,drawRange.start+drawRange.count);i<il;i+=3){const a=index.getX(i),b=index.getX(i+1),c=index.getX(i+2);intersection=checkGeometryIntersection(this,material,raycaster,_ray$2,uv,uv1,normal,a,b,c),intersection&&(intersection.faceIndex=Math.floor(i/3),intersects.push(intersection))}}else if(void 0!==position)if(Array.isArray(material))for(let i=0,il=groups.length;i<il;i++){const group=groups[i],groupMaterial=material[group.materialIndex];for(let j=Math.max(group.start,drawRange.start),jl=Math.min(position.count,Math.min(group.start+group.count,drawRange.start+drawRange.count));j<jl;j+=3){intersection=checkGeometryIntersection(this,groupMaterial,raycaster,_ray$2,uv,uv1,normal,j,j+1,j+2),intersection&&(intersection.faceIndex=Math.floor(j/3),intersection.face.materialIndex=group.materialIndex,intersects.push(intersection))}}else{for(let i=Math.max(0,drawRange.start),il=Math.min(position.count,drawRange.start+drawRange.count);i<il;i+=3){intersection=checkGeometryIntersection(this,material,raycaster,_ray$2,uv,uv1,normal,i,i+1,i+2),intersection&&(intersection.faceIndex=Math.floor(i/3),intersects.push(intersection))}}}}function checkGeometryIntersection(object,material,raycaster,ray,uv,uv1,normal,a,b,c){object.getVertexPosition(a,_vA$1),object.getVertexPosition(b,_vB$1),object.getVertexPosition(c,_vC$1);const intersection=function checkIntersection(object,material,raycaster,ray,pA,pB,pC,point){let intersect;if(intersect=material.side===BackSide?ray.intersectTriangle(pC,pB,pA,!0,point):ray.intersectTriangle(pA,pB,pC,material.side===FrontSide,point),null===intersect)return null;_intersectionPointWorld.copy(point),_intersectionPointWorld.applyMatrix4(object.matrixWorld);const distance=raycaster.ray.origin.distanceTo(_intersectionPointWorld);return distance<raycaster.near||distance>raycaster.far?null:{distance,point:_intersectionPointWorld.clone(),object}}(object,material,raycaster,ray,_vA$1,_vB$1,_vC$1,_intersectionPoint);if(intersection){uv&&(_uvA$1.fromBufferAttribute(uv,a),_uvB$1.fromBufferAttribute(uv,b),_uvC$1.fromBufferAttribute(uv,c),intersection.uv=Triangle.getInterpolation(_intersectionPoint,_vA$1,_vB$1,_vC$1,_uvA$1,_uvB$1,_uvC$1,new Vector2)),uv1&&(_uvA$1.fromBufferAttribute(uv1,a),_uvB$1.fromBufferAttribute(uv1,b),_uvC$1.fromBufferAttribute(uv1,c),intersection.uv1=Triangle.getInterpolation(_intersectionPoint,_vA$1,_vB$1,_vC$1,_uvA$1,_uvB$1,_uvC$1,new Vector2),intersection.uv2=intersection.uv1),normal&&(_normalA.fromBufferAttribute(normal,a),_normalB.fromBufferAttribute(normal,b),_normalC.fromBufferAttribute(normal,c),intersection.normal=Triangle.getInterpolation(_intersectionPoint,_vA$1,_vB$1,_vC$1,_normalA,_normalB,_normalC,new Vector3),intersection.normal.dot(ray.direction)>0&&intersection.normal.multiplyScalar(-1));const face={a,b,c,normal:new Vector3,materialIndex:0};Triangle.getNormal(_vA$1,_vB$1,_vC$1,face.normal),intersection.face=face}return intersection}class BoxGeometry extends BufferGeometry{constructor(width=1,height=1,depth=1,widthSegments=1,heightSegments=1,depthSegments=1){super(),this.type="BoxGeometry",this.parameters={width,height,depth,widthSegments,heightSegments,depthSegments};const scope=this;widthSegments=Math.floor(widthSegments),heightSegments=Math.floor(heightSegments),depthSegments=Math.floor(depthSegments);const indices=[],vertices=[],normals=[],uvs=[];let numberOfVertices=0,groupStart=0;function buildPlane(u,v,w,udir,vdir,width,height,depth,gridX,gridY,materialIndex){const segmentWidth=width/gridX,segmentHeight=height/gridY,widthHalf=width/2,heightHalf=height/2,depthHalf=depth/2,gridX1=gridX+1,gridY1=gridY+1;let vertexCounter=0,groupCount=0;const vector=new Vector3;for(let iy=0;iy<gridY1;iy++){const y=iy*segmentHeight-heightHalf;for(let ix=0;ix<gridX1;ix++){const x=ix*segmentWidth-widthHalf;vector[u]=x*udir,vector[v]=y*vdir,vector[w]=depthHalf,vertices.push(vector.x,vector.y,vector.z),vector[u]=0,vector[v]=0,vector[w]=depth>0?1:-1,normals.push(vector.x,vector.y,vector.z),uvs.push(ix/gridX),uvs.push(1-iy/gridY),vertexCounter+=1}}for(let iy=0;iy<gridY;iy++)for(let ix=0;ix<gridX;ix++){const a=numberOfVertices+ix+gridX1*iy,b=numberOfVertices+ix+gridX1*(iy+1),c=numberOfVertices+(ix+1)+gridX1*(iy+1),d=numberOfVertices+(ix+1)+gridX1*iy;indices.push(a,b,d),indices.push(b,c,d),groupCount+=6}scope.addGroup(groupStart,groupCount,materialIndex),groupStart+=groupCount,numberOfVertices+=vertexCounter}buildPlane("z","y","x",-1,-1,depth,height,width,depthSegments,heightSegments,0),buildPlane("z","y","x",1,-1,depth,height,-width,depthSegments,heightSegments,1),buildPlane("x","z","y",1,1,width,depth,height,widthSegments,depthSegments,2),buildPlane("x","z","y",1,-1,width,depth,-height,widthSegments,depthSegments,3),buildPlane("x","y","z",1,-1,width,height,depth,widthSegments,heightSegments,4),buildPlane("x","y","z",-1,-1,width,height,-depth,widthSegments,heightSegments,5),this.setIndex(indices),this.setAttribute("position",new Float32BufferAttribute(vertices,3)),this.setAttribute("normal",new Float32BufferAttribute(normals,3)),this.setAttribute("uv",new Float32BufferAttribute(uvs,2))}copy(source){return super.copy(source),this.parameters=Object.assign({},source.parameters),this}static fromJSON(data){return new BoxGeometry(data.width,data.height,data.depth,data.widthSegments,data.heightSegments,data.depthSegments)}}function cloneUniforms(src){const dst={};for(const u in src){dst[u]={};for(const p in src[u]){const property=src[u][p];property&&(property.isColor||property.isMatrix3||property.isMatrix4||property.isVector2||property.isVector3||property.isVector4||property.isTexture||property.isQuaternion)?property.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),dst[u][p]=null):dst[u][p]=property.clone():Array.isArray(property)?dst[u][p]=property.slice():dst[u][p]=property}}return dst}function mergeUniforms(uniforms){const merged={};for(let u=0;u<uniforms.length;u++){const tmp=cloneUniforms(uniforms[u]);for(const p in tmp)merged[p]=tmp[p]}return merged}function getUnlitUniformColorSpace(renderer){return null===renderer.getRenderTarget()?renderer.outputColorSpace:LinearSRGBColorSpace}const UniformsUtils={clone:cloneUniforms,merge:mergeUniforms};class ShaderMaterial extends Material{constructor(parameters){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==parameters&&this.setValues(parameters)}copy(source){return super.copy(source),this.fragmentShader=source.fragmentShader,this.vertexShader=source.vertexShader,this.uniforms=cloneUniforms(source.uniforms),this.uniformsGroups=function cloneUniformsGroups(src){const dst=[];for(let u=0;u<src.length;u++)dst.push(src[u].clone());return dst}(source.uniformsGroups),this.defines=Object.assign({},source.defines),this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.fog=source.fog,this.lights=source.lights,this.clipping=source.clipping,this.extensions=Object.assign({},source.extensions),this.glslVersion=source.glslVersion,this}toJSON(meta){const data=super.toJSON(meta);data.glslVersion=this.glslVersion,data.uniforms={};for(const name in this.uniforms){const value=this.uniforms[name].value;value&&value.isTexture?data.uniforms[name]={type:"t",value:value.toJSON(meta).uuid}:value&&value.isColor?data.uniforms[name]={type:"c",value:value.getHex()}:value&&value.isVector2?data.uniforms[name]={type:"v2",value:value.toArray()}:value&&value.isVector3?data.uniforms[name]={type:"v3",value:value.toArray()}:value&&value.isVector4?data.uniforms[name]={type:"v4",value:value.toArray()}:value&&value.isMatrix3?data.uniforms[name]={type:"m3",value:value.toArray()}:value&&value.isMatrix4?data.uniforms[name]={type:"m4",value:value.toArray()}:data.uniforms[name]={value}}Object.keys(this.defines).length>0&&(data.defines=this.defines),data.vertexShader=this.vertexShader,data.fragmentShader=this.fragmentShader,data.lights=this.lights,data.clipping=this.clipping;const extensions={};for(const key in this.extensions)!0===this.extensions[key]&&(extensions[key]=!0);return Object.keys(extensions).length>0&&(data.extensions=extensions),data}}class Camera extends Object3D{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Matrix4,this.projectionMatrix=new Matrix4,this.projectionMatrixInverse=new Matrix4}copy(source,recursive){return super.copy(source,recursive),this.matrixWorldInverse.copy(source.matrixWorldInverse),this.projectionMatrix.copy(source.projectionMatrix),this.projectionMatrixInverse.copy(source.projectionMatrixInverse),this}getWorldDirection(target){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return target.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(force){super.updateMatrixWorld(force),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(updateParents,updateChildren){super.updateWorldMatrix(updateParents,updateChildren),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}class PerspectiveCamera extends Camera{constructor(fov=50,aspect=1,near=.1,far=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=fov,this.zoom=1,this.near=near,this.far=far,this.focus=10,this.aspect=aspect,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(source,recursive){return super.copy(source,recursive),this.fov=source.fov,this.zoom=source.zoom,this.near=source.near,this.far=source.far,this.focus=source.focus,this.aspect=source.aspect,this.view=null===source.view?null:Object.assign({},source.view),this.filmGauge=source.filmGauge,this.filmOffset=source.filmOffset,this}setFocalLength(focalLength){const vExtentSlope=.5*this.getFilmHeight()/focalLength;this.fov=2*RAD2DEG*Math.atan(vExtentSlope),this.updateProjectionMatrix()}getFocalLength(){const vExtentSlope=Math.tan(.5*DEG2RAD*this.fov);return.5*this.getFilmHeight()/vExtentSlope}getEffectiveFOV(){return 2*RAD2DEG*Math.atan(Math.tan(.5*DEG2RAD*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(fullWidth,fullHeight,x,y,width,height){this.aspect=fullWidth/fullHeight,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=fullWidth,this.view.fullHeight=fullHeight,this.view.offsetX=x,this.view.offsetY=y,this.view.width=width,this.view.height=height,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const near=this.near;let top=near*Math.tan(.5*DEG2RAD*this.fov)/this.zoom,height=2*top,width=this.aspect*height,left=-.5*width;const view=this.view;if(null!==this.view&&this.view.enabled){const fullWidth=view.fullWidth,fullHeight=view.fullHeight;left+=view.offsetX*width/fullWidth,top-=view.offsetY*height/fullHeight,width*=view.width/fullWidth,height*=view.height/fullHeight}const skew=this.filmOffset;0!==skew&&(left+=near*skew/this.getFilmWidth()),this.projectionMatrix.makePerspective(left,left+width,top,top-height,near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(meta){const data=super.toJSON(meta);return data.object.fov=this.fov,data.object.zoom=this.zoom,data.object.near=this.near,data.object.far=this.far,data.object.focus=this.focus,data.object.aspect=this.aspect,null!==this.view&&(data.object.view=Object.assign({},this.view)),data.object.filmGauge=this.filmGauge,data.object.filmOffset=this.filmOffset,data}}class CubeCamera extends Object3D{constructor(near,far,renderTarget){super(),this.type="CubeCamera",this.renderTarget=renderTarget;const cameraPX=new PerspectiveCamera(-90,1,near,far);cameraPX.layers=this.layers,cameraPX.up.set(0,1,0),cameraPX.lookAt(1,0,0),this.add(cameraPX);const cameraNX=new PerspectiveCamera(-90,1,near,far);cameraNX.layers=this.layers,cameraNX.up.set(0,1,0),cameraNX.lookAt(-1,0,0),this.add(cameraNX);const cameraPY=new PerspectiveCamera(-90,1,near,far);cameraPY.layers=this.layers,cameraPY.up.set(0,0,-1),cameraPY.lookAt(0,1,0),this.add(cameraPY);const cameraNY=new PerspectiveCamera(-90,1,near,far);cameraNY.layers=this.layers,cameraNY.up.set(0,0,1),cameraNY.lookAt(0,-1,0),this.add(cameraNY);const cameraPZ=new PerspectiveCamera(-90,1,near,far);cameraPZ.layers=this.layers,cameraPZ.up.set(0,1,0),cameraPZ.lookAt(0,0,1),this.add(cameraPZ);const cameraNZ=new PerspectiveCamera(-90,1,near,far);cameraNZ.layers=this.layers,cameraNZ.up.set(0,1,0),cameraNZ.lookAt(0,0,-1),this.add(cameraNZ)}update(renderer,scene){null===this.parent&&this.updateMatrixWorld();const renderTarget=this.renderTarget,[cameraPX,cameraNX,cameraPY,cameraNY,cameraPZ,cameraNZ]=this.children,currentRenderTarget=renderer.getRenderTarget(),currentToneMapping=renderer.toneMapping,currentXrEnabled=renderer.xr.enabled;renderer.toneMapping=NoToneMapping,renderer.xr.enabled=!1;const generateMipmaps=renderTarget.texture.generateMipmaps;renderTarget.texture.generateMipmaps=!1,renderer.setRenderTarget(renderTarget,0),renderer.render(scene,cameraPX),renderer.setRenderTarget(renderTarget,1),renderer.render(scene,cameraNX),renderer.setRenderTarget(renderTarget,2),renderer.render(scene,cameraPY),renderer.setRenderTarget(renderTarget,3),renderer.render(scene,cameraNY),renderer.setRenderTarget(renderTarget,4),renderer.render(scene,cameraPZ),renderTarget.texture.generateMipmaps=generateMipmaps,renderer.setRenderTarget(renderTarget,5),renderer.render(scene,cameraNZ),renderer.setRenderTarget(currentRenderTarget),renderer.toneMapping=currentToneMapping,renderer.xr.enabled=currentXrEnabled,renderTarget.texture.needsPMREMUpdate=!0}}class CubeTexture extends Texture{constructor(images,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,colorSpace){super(images=void 0!==images?images:[],mapping=void 0!==mapping?mapping:CubeReflectionMapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,colorSpace),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(value){this.image=value}}class WebGLCubeRenderTarget extends WebGLRenderTarget{constructor(size=1,options={}){super(size,size,options),this.isWebGLCubeRenderTarget=!0;const image={width:size,height:size,depth:1},images=[image,image,image,image,image,image];void 0!==options.encoding&&(warnOnce("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),options.colorSpace=options.encoding===sRGBEncoding?SRGBColorSpace:NoColorSpace),this.texture=new CubeTexture(images,options.mapping,options.wrapS,options.wrapT,options.magFilter,options.minFilter,options.format,options.type,options.anisotropy,options.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==options.generateMipmaps&&options.generateMipmaps,this.texture.minFilter=void 0!==options.minFilter?options.minFilter:LinearFilter}fromEquirectangularTexture(renderer,texture){this.texture.type=texture.type,this.texture.colorSpace=texture.colorSpace,this.texture.generateMipmaps=texture.generateMipmaps,this.texture.minFilter=texture.minFilter,this.texture.magFilter=texture.magFilter;const shader={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"},geometry=new BoxGeometry(5,5,5),material=new ShaderMaterial({name:"CubemapFromEquirect",uniforms:cloneUniforms(shader.uniforms),vertexShader:shader.vertexShader,fragmentShader:shader.fragmentShader,side:BackSide,blending:NoBlending});material.uniforms.tEquirect.value=texture;const mesh=new Mesh(geometry,material),currentMinFilter=texture.minFilter;texture.minFilter===LinearMipmapLinearFilter&&(texture.minFilter=LinearFilter);return new CubeCamera(1,10,this).update(renderer,mesh),texture.minFilter=currentMinFilter,mesh.geometry.dispose(),mesh.material.dispose(),this}clear(renderer,color,depth,stencil){const currentRenderTarget=renderer.getRenderTarget();for(let i=0;i<6;i++)renderer.setRenderTarget(this,i),renderer.clear(color,depth,stencil);renderer.setRenderTarget(currentRenderTarget)}}const _vector1=new Vector3,_vector2=new Vector3,_normalMatrix=new Matrix3;class Plane{constructor(normal=new Vector3(1,0,0),constant=0){this.isPlane=!0,this.normal=normal,this.constant=constant}set(normal,constant){return this.normal.copy(normal),this.constant=constant,this}setComponents(x,y,z,w){return this.normal.set(x,y,z),this.constant=w,this}setFromNormalAndCoplanarPoint(normal,point){return this.normal.copy(normal),this.constant=-point.dot(this.normal),this}setFromCoplanarPoints(a,b,c){const normal=_vector1.subVectors(c,b).cross(_vector2.subVectors(a,b)).normalize();return this.setFromNormalAndCoplanarPoint(normal,a),this}copy(plane){return this.normal.copy(plane.normal),this.constant=plane.constant,this}normalize(){const inverseNormalLength=1/this.normal.length();return this.normal.multiplyScalar(inverseNormalLength),this.constant*=inverseNormalLength,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(point){return this.normal.dot(point)+this.constant}distanceToSphere(sphere){return this.distanceToPoint(sphere.center)-sphere.radius}projectPoint(point,target){return target.copy(point).addScaledVector(this.normal,-this.distanceToPoint(point))}intersectLine(line,target){const direction=line.delta(_vector1),denominator=this.normal.dot(direction);if(0===denominator)return 0===this.distanceToPoint(line.start)?target.copy(line.start):null;const t=-(line.start.dot(this.normal)+this.constant)/denominator;return t<0||t>1?null:target.copy(line.start).addScaledVector(direction,t)}intersectsLine(line){const startSign=this.distanceToPoint(line.start),endSign=this.distanceToPoint(line.end);return startSign<0&&endSign>0||endSign<0&&startSign>0}intersectsBox(box){return box.intersectsPlane(this)}intersectsSphere(sphere){return sphere.intersectsPlane(this)}coplanarPoint(target){return target.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(matrix,optionalNormalMatrix){const normalMatrix=optionalNormalMatrix||_normalMatrix.getNormalMatrix(matrix),referencePoint=this.coplanarPoint(_vector1).applyMatrix4(matrix),normal=this.normal.applyMatrix3(normalMatrix).normalize();return this.constant=-referencePoint.dot(normal),this}translate(offset){return this.constant-=offset.dot(this.normal),this}equals(plane){return plane.normal.equals(this.normal)&&plane.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const _sphere$3=new Sphere,_vector$6=new Vector3;class Frustum{constructor(p0=new Plane,p1=new Plane,p2=new Plane,p3=new Plane,p4=new Plane,p5=new Plane){this.planes=[p0,p1,p2,p3,p4,p5]}set(p0,p1,p2,p3,p4,p5){const planes=this.planes;return planes[0].copy(p0),planes[1].copy(p1),planes[2].copy(p2),planes[3].copy(p3),planes[4].copy(p4),planes[5].copy(p5),this}copy(frustum){const planes=this.planes;for(let i=0;i<6;i++)planes[i].copy(frustum.planes[i]);return this}setFromProjectionMatrix(m){const planes=this.planes,me=m.elements,me0=me[0],me1=me[1],me2=me[2],me3=me[3],me4=me[4],me5=me[5],me6=me[6],me7=me[7],me8=me[8],me9=me[9],me10=me[10],me11=me[11],me12=me[12],me13=me[13],me14=me[14],me15=me[15];return planes[0].setComponents(me3-me0,me7-me4,me11-me8,me15-me12).normalize(),planes[1].setComponents(me3+me0,me7+me4,me11+me8,me15+me12).normalize(),planes[2].setComponents(me3+me1,me7+me5,me11+me9,me15+me13).normalize(),planes[3].setComponents(me3-me1,me7-me5,me11-me9,me15-me13).normalize(),planes[4].setComponents(me3-me2,me7-me6,me11-me10,me15-me14).normalize(),planes[5].setComponents(me3+me2,me7+me6,me11+me10,me15+me14).normalize(),this}intersectsObject(object){if(void 0!==object.boundingSphere)null===object.boundingSphere&&object.computeBoundingSphere(),_sphere$3.copy(object.boundingSphere).applyMatrix4(object.matrixWorld);else{const geometry=object.geometry;null===geometry.boundingSphere&&geometry.computeBoundingSphere(),_sphere$3.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld)}return this.intersectsSphere(_sphere$3)}intersectsSprite(sprite){return _sphere$3.center.set(0,0,0),_sphere$3.radius=.7071067811865476,_sphere$3.applyMatrix4(sprite.matrixWorld),this.intersectsSphere(_sphere$3)}intersectsSphere(sphere){const planes=this.planes,center=sphere.center,negRadius=-sphere.radius;for(let i=0;i<6;i++){if(planes[i].distanceToPoint(center)<negRadius)return!1}return!0}intersectsBox(box){const planes=this.planes;for(let i=0;i<6;i++){const plane=planes[i];if(_vector$6.x=plane.normal.x>0?box.max.x:box.min.x,_vector$6.y=plane.normal.y>0?box.max.y:box.min.y,_vector$6.z=plane.normal.z>0?box.max.z:box.min.z,plane.distanceToPoint(_vector$6)<0)return!1}return!0}containsPoint(point){const planes=this.planes;for(let i=0;i<6;i++)if(planes[i].distanceToPoint(point)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function WebGLAnimation(){let context=null,isAnimating=!1,animationLoop=null,requestId=null;function onAnimationFrame(time,frame){animationLoop(time,frame),requestId=context.requestAnimationFrame(onAnimationFrame)}return{start:function(){!0!==isAnimating&&null!==animationLoop&&(requestId=context.requestAnimationFrame(onAnimationFrame),isAnimating=!0)},stop:function(){context.cancelAnimationFrame(requestId),isAnimating=!1},setAnimationLoop:function(callback){animationLoop=callback},setContext:function(value){context=value}}}function WebGLAttributes(gl,capabilities){const isWebGL2=capabilities.isWebGL2,buffers=new WeakMap;return{get:function get(attribute){return attribute.isInterleavedBufferAttribute&&(attribute=attribute.data),buffers.get(attribute)},remove:function remove(attribute){attribute.isInterleavedBufferAttribute&&(attribute=attribute.data);const data=buffers.get(attribute);data&&(gl.deleteBuffer(data.buffer),buffers.delete(attribute))},update:function update(attribute,bufferType){if(attribute.isGLBufferAttribute){const cached=buffers.get(attribute);return void((!cached||cached.version<attribute.version)&&buffers.set(attribute,{buffer:attribute.buffer,type:attribute.type,bytesPerElement:attribute.elementSize,version:attribute.version}))}attribute.isInterleavedBufferAttribute&&(attribute=attribute.data);const data=buffers.get(attribute);void 0===data?buffers.set(attribute,function createBuffer(attribute,bufferType){const array=attribute.array,usage=attribute.usage,buffer=gl.createBuffer();let type;if(gl.bindBuffer(bufferType,buffer),gl.bufferData(bufferType,array,usage),attribute.onUploadCallback(),array instanceof Float32Array)type=gl.FLOAT;else if(array instanceof Uint16Array)if(attribute.isFloat16BufferAttribute){if(!isWebGL2)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");type=gl.HALF_FLOAT}else type=gl.UNSIGNED_SHORT;else if(array instanceof Int16Array)type=gl.SHORT;else if(array instanceof Uint32Array)type=gl.UNSIGNED_INT;else if(array instanceof Int32Array)type=gl.INT;else if(array instanceof Int8Array)type=gl.BYTE;else if(array instanceof Uint8Array)type=gl.UNSIGNED_BYTE;else{if(!(array instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+array);type=gl.UNSIGNED_BYTE}return{buffer,type,bytesPerElement:array.BYTES_PER_ELEMENT,version:attribute.version}}(attribute,bufferType)):data.version<attribute.version&&(!function updateBuffer(buffer,attribute,bufferType){const array=attribute.array,updateRange=attribute.updateRange;gl.bindBuffer(bufferType,buffer),-1===updateRange.count?gl.bufferSubData(bufferType,0,array):(isWebGL2?gl.bufferSubData(bufferType,updateRange.offset*array.BYTES_PER_ELEMENT,array,updateRange.offset,updateRange.count):gl.bufferSubData(bufferType,updateRange.offset*array.BYTES_PER_ELEMENT,array.subarray(updateRange.offset,updateRange.offset+updateRange.count)),updateRange.count=-1),attribute.onUploadCallback()}(data.buffer,attribute,bufferType),data.version=attribute.version)}}}class PlaneGeometry extends BufferGeometry{constructor(width=1,height=1,widthSegments=1,heightSegments=1){super(),this.type="PlaneGeometry",this.parameters={width,height,widthSegments,heightSegments};const width_half=width/2,height_half=height/2,gridX=Math.floor(widthSegments),gridY=Math.floor(heightSegments),gridX1=gridX+1,gridY1=gridY+1,segment_width=width/gridX,segment_height=height/gridY,indices=[],vertices=[],normals=[],uvs=[];for(let iy=0;iy<gridY1;iy++){const y=iy*segment_height-height_half;for(let ix=0;ix<gridX1;ix++){const x=ix*segment_width-width_half;vertices.push(x,-y,0),normals.push(0,0,1),uvs.push(ix/gridX),uvs.push(1-iy/gridY)}}for(let iy=0;iy<gridY;iy++)for(let ix=0;ix<gridX;ix++){const a=ix+gridX1*iy,b=ix+gridX1*(iy+1),c=ix+1+gridX1*(iy+1),d=ix+1+gridX1*iy;indices.push(a,b,d),indices.push(b,c,d)}this.setIndex(indices),this.setAttribute("position",new Float32BufferAttribute(vertices,3)),this.setAttribute("normal",new Float32BufferAttribute(normals,3)),this.setAttribute("uv",new Float32BufferAttribute(uvs,2))}copy(source){return super.copy(source),this.parameters=Object.assign({},source.parameters),this}static fromJSON(data){return new PlaneGeometry(data.width,data.height,data.widthSegments,data.heightSegments)}}const ShaderChunk={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"float G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n} // validated",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\t return vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat R21 = R12;\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vBumpMapUv );\n\t\tvec2 dSTdy = dFdy( vBumpMapUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos.xyz );\n\t\tvec3 vSigmaY = dFdy( surf_pos.xyz );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n\treturn dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_v0 0.339\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_v1 0.276\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_v4 0.046\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_v5 0.016\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_v6 0.0038\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( LEGACY_LIGHTS )\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#else\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef USE_SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULAR_COLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n\t\t#endif\n\t\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n\t#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_CLEARCOAT\n\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n\t\tvec3 f0 = material.clearcoatF0;\n\t\tfloat f90 = material.clearcoatF90;\n\t\tfloat roughness = material.clearcoatRoughness;\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n\tvec3 f0 = material.specularColor;\n\tfloat f90 = material.specularF90;\n\tfloat roughness = material.roughness;\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t#ifdef USE_IRIDESCENCE\n\t\tF = mix( F, material.iridescenceFresnel, material.iridescence );\n\t#endif\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, vMapUv );\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t#if defined( USE_POINTS_UV )\n\t\tvec2 uv = vUv;\n\t#else\n\t\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_POINTS_UV )\n\tvarying vec2 vUv;\n#else\n\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t\tuniform mat3 uvTransform;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal *= faceDirection;\n\t#endif\n#endif\n#ifdef USE_NORMALMAP_TANGENTSPACE\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn = getTangentFrame( - vViewPosition, normal, vNormalMapUv );\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn[0] *= faceDirection;\n\t\ttbn[1] *= faceDirection;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn2[0] *= faceDirection;\n\t\ttbn2[1] *= faceDirection;\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef USE_NORMALMAP_OBJECTSPACE\n\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\tnormal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( uv.st );\n\t\tvec2 st1 = dFdy( uv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n\t\treturn mat3( T * scale, B * scale, N );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec2 packDepthToRG( in highp float v ) {\n\treturn packDepthToRGBA( v ).yx;\n}\nfloat unpackRGToDepth( const in highp vec2 v ) {\n\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * depth - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n\t\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\tvec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tuniform int boneTextureSize;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tfloat j = i * 4.0;\n\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\ty = dy * ( y + 0.5 );\n\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\treturn bone;\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tfloat w0( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n\t}\n\tfloat w1( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n\t}\n\tfloat w2( float a ){\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n\t}\n\tfloat w3( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * a * a );\n\t}\n\tfloat g0( float a ) {\n\t\treturn w0( a ) + w1( a );\n\t}\n\tfloat g1( float a ) {\n\t\treturn w2( a ) + w3( a );\n\t}\n\tfloat h0( float a ) {\n\t\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n\t}\n\tfloat h1( float a ) {\n\t\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n\t}\n\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n\t\tuv = uv * texelSize.zw + 0.5;\n\t\tvec2 iuv = floor( uv );\n\t\tvec2 fuv = fract( uv );\n\t\tfloat g0x = g0( fuv.x );\n\t\tfloat g1x = g1( fuv.x );\n\t\tfloat h0x = h0( fuv.x );\n\t\tfloat h1x = h1( fuv.x );\n\t\tfloat h0y = h0( fuv.y );\n\t\tfloat h1y = h1( fuv.y );\n\t\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n\t\t\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n\t}\n\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n\t\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n\t\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n\t\tvec2 fLodSizeInv = 1.0 / fLodSize;\n\t\tvec2 cLodSizeInv = 1.0 / cLodSize;\n\t\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n\t\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n\t\treturn mix( fSample, cSample, fract( lod ) );\n\t}\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#ifdef USE_UV\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tuniform mat3 mapTransform;\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform mat3 alphaMapTransform;\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tuniform mat3 lightMapTransform;\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tuniform mat3 aoMapTransform;\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tuniform mat3 bumpMapTransform;\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tuniform mat3 normalMapTransform;\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tuniform mat3 displacementMapTransform;\n\tvarying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tuniform mat3 emissiveMapTransform;\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tuniform mat3 metalnessMapTransform;\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tuniform mat3 roughnessMapTransform;\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tuniform mat3 clearcoatMapTransform;\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform mat3 clearcoatNormalMapTransform;\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform mat3 clearcoatRoughnessMapTransform;\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tuniform mat3 sheenColorMapTransform;\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tuniform mat3 sheenRoughnessMapTransform;\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tuniform mat3 iridescenceMapTransform;\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform mat3 iridescenceThicknessMapTransform;\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tuniform mat3 specularMapTransform;\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tuniform mat3 specularColorMapTransform;\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tuniform mat3 specularIntensityMapTransform;\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef USE_SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULAR_COLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\nvoid main() {\n\t#ifdef USE_POINTS_UV\n\t\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\t#endif\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},UniformsLib={common:{diffuse:{value:new Color(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Matrix3},alphaMap:{value:null},alphaMapTransform:{value:new Matrix3},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Matrix3}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Matrix3}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Matrix3}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Matrix3},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Matrix3},normalScale:{value:new Vector2(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Matrix3},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Matrix3}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Matrix3}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Matrix3}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Color(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Color(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Matrix3}},sprite:{diffuse:{value:new Color(16777215)},opacity:{value:1},center:{value:new Vector2(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Matrix3},alphaMap:{value:null},alphaTest:{value:0}}},ShaderLib={basic:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.fog]),vertexShader:ShaderChunk.meshbasic_vert,fragmentShader:ShaderChunk.meshbasic_frag},lambert:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)}}]),vertexShader:ShaderChunk.meshlambert_vert,fragmentShader:ShaderChunk.meshlambert_frag},phong:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)},specular:{value:new Color(1118481)},shininess:{value:30}}]),vertexShader:ShaderChunk.meshphong_vert,fragmentShader:ShaderChunk.meshphong_frag},standard:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.roughnessmap,UniformsLib.metalnessmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag},toon:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.gradientmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)}}]),vertexShader:ShaderChunk.meshtoon_vert,fragmentShader:ShaderChunk.meshtoon_frag},matcap:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,{matcap:{value:null}}]),vertexShader:ShaderChunk.meshmatcap_vert,fragmentShader:ShaderChunk.meshmatcap_frag},points:{uniforms:mergeUniforms([UniformsLib.points,UniformsLib.fog]),vertexShader:ShaderChunk.points_vert,fragmentShader:ShaderChunk.points_frag},dashed:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ShaderChunk.linedashed_vert,fragmentShader:ShaderChunk.linedashed_frag},depth:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap]),vertexShader:ShaderChunk.depth_vert,fragmentShader:ShaderChunk.depth_frag},normal:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,{opacity:{value:1}}]),vertexShader:ShaderChunk.meshnormal_vert,fragmentShader:ShaderChunk.meshnormal_frag},sprite:{uniforms:mergeUniforms([UniformsLib.sprite,UniformsLib.fog]),vertexShader:ShaderChunk.sprite_vert,fragmentShader:ShaderChunk.sprite_frag},background:{uniforms:{uvTransform:{value:new Matrix3},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:ShaderChunk.background_vert,fragmentShader:ShaderChunk.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:ShaderChunk.backgroundCube_vert,fragmentShader:ShaderChunk.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:ShaderChunk.cube_vert,fragmentShader:ShaderChunk.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ShaderChunk.equirect_vert,fragmentShader:ShaderChunk.equirect_frag},distanceRGBA:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap,{referencePosition:{value:new Vector3},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ShaderChunk.distanceRGBA_vert,fragmentShader:ShaderChunk.distanceRGBA_frag},shadow:{uniforms:mergeUniforms([UniformsLib.lights,UniformsLib.fog,{color:{value:new Color(0)},opacity:{value:1}}]),vertexShader:ShaderChunk.shadow_vert,fragmentShader:ShaderChunk.shadow_frag}};ShaderLib.physical={uniforms:mergeUniforms([ShaderLib.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Matrix3},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Matrix3},clearcoatNormalScale:{value:new Vector2(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Matrix3},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Matrix3},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Matrix3},sheen:{value:0},sheenColor:{value:new Color(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Matrix3},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Matrix3},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Matrix3},transmissionSamplerSize:{value:new Vector2},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Matrix3},attenuationDistance:{value:0},attenuationColor:{value:new Color(0)},specularColor:{value:new Color(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Matrix3},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Matrix3}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag};const _rgb={r:0,b:0,g:0};function WebGLBackground(renderer,cubemaps,cubeuvmaps,state,objects,alpha,premultipliedAlpha){const clearColor=new Color(0);let planeMesh,boxMesh,clearAlpha=!0===alpha?0:1,currentBackground=null,currentBackgroundVersion=0,currentTonemapping=null;function setClear(color,alpha){color.getRGB(_rgb,getUnlitUniformColorSpace(renderer)),state.buffers.color.setClear(_rgb.r,_rgb.g,_rgb.b,alpha,premultipliedAlpha)}return{getClearColor:function(){return clearColor},setClearColor:function(color,alpha=1){clearColor.set(color),clearAlpha=alpha,setClear(clearColor,clearAlpha)},getClearAlpha:function(){return clearAlpha},setClearAlpha:function(alpha){clearAlpha=alpha,setClear(clearColor,clearAlpha)},render:function render(renderList,scene){let forceClear=!1,background=!0===scene.isScene?scene.background:null;if(background&&background.isTexture){background=(scene.backgroundBlurriness>0?cubeuvmaps:cubemaps).get(background)}switch(null===background?setClear(clearColor,clearAlpha):background&&background.isColor&&(setClear(background,1),forceClear=!0),renderer.xr.getEnvironmentBlendMode()){case"opaque":forceClear=!0;break;case"additive":state.buffers.color.setClear(0,0,0,1,premultipliedAlpha),forceClear=!0;break;case"alpha-blend":state.buffers.color.setClear(0,0,0,0,premultipliedAlpha),forceClear=!0}(renderer.autoClear||forceClear)&&renderer.clear(renderer.autoClearColor,renderer.autoClearDepth,renderer.autoClearStencil),background&&(background.isCubeTexture||background.mapping===CubeUVReflectionMapping)?(void 0===boxMesh&&(boxMesh=new Mesh(new BoxGeometry(1,1,1),new ShaderMaterial({name:"BackgroundCubeMaterial",uniforms:cloneUniforms(ShaderLib.backgroundCube.uniforms),vertexShader:ShaderLib.backgroundCube.vertexShader,fragmentShader:ShaderLib.backgroundCube.fragmentShader,side:BackSide,depthTest:!1,depthWrite:!1,fog:!1})),boxMesh.geometry.deleteAttribute("normal"),boxMesh.geometry.deleteAttribute("uv"),boxMesh.onBeforeRender=function(renderer,scene,camera){this.matrixWorld.copyPosition(camera.matrixWorld)},Object.defineProperty(boxMesh.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),objects.update(boxMesh)),boxMesh.material.uniforms.envMap.value=background,boxMesh.material.uniforms.flipEnvMap.value=background.isCubeTexture&&!1===background.isRenderTargetTexture?-1:1,boxMesh.material.uniforms.backgroundBlurriness.value=scene.backgroundBlurriness,boxMesh.material.uniforms.backgroundIntensity.value=scene.backgroundIntensity,boxMesh.material.toneMapped=background.colorSpace!==SRGBColorSpace,currentBackground===background&&currentBackgroundVersion===background.version&&currentTonemapping===renderer.toneMapping||(boxMesh.material.needsUpdate=!0,currentBackground=background,currentBackgroundVersion=background.version,currentTonemapping=renderer.toneMapping),boxMesh.layers.enableAll(),renderList.unshift(boxMesh,boxMesh.geometry,boxMesh.material,0,0,null)):background&&background.isTexture&&(void 0===planeMesh&&(planeMesh=new Mesh(new PlaneGeometry(2,2),new ShaderMaterial({name:"BackgroundMaterial",uniforms:cloneUniforms(ShaderLib.background.uniforms),vertexShader:ShaderLib.background.vertexShader,fragmentShader:ShaderLib.background.fragmentShader,side:FrontSide,depthTest:!1,depthWrite:!1,fog:!1})),planeMesh.geometry.deleteAttribute("normal"),Object.defineProperty(planeMesh.material,"map",{get:function(){return this.uniforms.t2D.value}}),objects.update(planeMesh)),planeMesh.material.uniforms.t2D.value=background,planeMesh.material.uniforms.backgroundIntensity.value=scene.backgroundIntensity,planeMesh.material.toneMapped=background.colorSpace!==SRGBColorSpace,!0===background.matrixAutoUpdate&&background.updateMatrix(),planeMesh.material.uniforms.uvTransform.value.copy(background.matrix),currentBackground===background&&currentBackgroundVersion===background.version&&currentTonemapping===renderer.toneMapping||(planeMesh.material.needsUpdate=!0,currentBackground=background,currentBackgroundVersion=background.version,currentTonemapping=renderer.toneMapping),planeMesh.layers.enableAll(),renderList.unshift(planeMesh,planeMesh.geometry,planeMesh.material,0,0,null))}}}function WebGLBindingStates(gl,extensions,attributes,capabilities){const maxVertexAttributes=gl.getParameter(gl.MAX_VERTEX_ATTRIBS),extension=capabilities.isWebGL2?null:extensions.get("OES_vertex_array_object"),vaoAvailable=capabilities.isWebGL2||null!==extension,bindingStates={},defaultState=createBindingState(null);let currentState=defaultState,forceUpdate=!1;function bindVertexArrayObject(vao){return capabilities.isWebGL2?gl.bindVertexArray(vao):extension.bindVertexArrayOES(vao)}function deleteVertexArrayObject(vao){return capabilities.isWebGL2?gl.deleteVertexArray(vao):extension.deleteVertexArrayOES(vao)}function createBindingState(vao){const newAttributes=[],enabledAttributes=[],attributeDivisors=[];for(let i=0;i<maxVertexAttributes;i++)newAttributes[i]=0,enabledAttributes[i]=0,attributeDivisors[i]=0;return{geometry:null,program:null,wireframe:!1,newAttributes,enabledAttributes,attributeDivisors,object:vao,attributes:{},index:null}}function initAttributes(){const newAttributes=currentState.newAttributes;for(let i=0,il=newAttributes.length;i<il;i++)newAttributes[i]=0}function enableAttribute(attribute){enableAttributeAndDivisor(attribute,0)}function enableAttributeAndDivisor(attribute,meshPerAttribute){const newAttributes=currentState.newAttributes,enabledAttributes=currentState.enabledAttributes,attributeDivisors=currentState.attributeDivisors;if(newAttributes[attribute]=1,0===enabledAttributes[attribute]&&(gl.enableVertexAttribArray(attribute),enabledAttributes[attribute]=1),attributeDivisors[attribute]!==meshPerAttribute){(capabilities.isWebGL2?gl:extensions.get("ANGLE_instanced_arrays"))[capabilities.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](attribute,meshPerAttribute),attributeDivisors[attribute]=meshPerAttribute}}function disableUnusedAttributes(){const newAttributes=currentState.newAttributes,enabledAttributes=currentState.enabledAttributes;for(let i=0,il=enabledAttributes.length;i<il;i++)enabledAttributes[i]!==newAttributes[i]&&(gl.disableVertexAttribArray(i),enabledAttributes[i]=0)}function vertexAttribPointer(index,size,type,normalized,stride,offset){!0!==capabilities.isWebGL2||type!==gl.INT&&type!==gl.UNSIGNED_INT?gl.vertexAttribPointer(index,size,type,normalized,stride,offset):gl.vertexAttribIPointer(index,size,type,stride,offset)}function reset(){resetDefaultState(),forceUpdate=!0,currentState!==defaultState&&(currentState=defaultState,bindVertexArrayObject(currentState.object))}function resetDefaultState(){defaultState.geometry=null,defaultState.program=null,defaultState.wireframe=!1}return{setup:function setup(object,material,program,geometry,index){let updateBuffers=!1;if(vaoAvailable){const state=function getBindingState(geometry,program,material){const wireframe=!0===material.wireframe;let programMap=bindingStates[geometry.id];void 0===programMap&&(programMap={},bindingStates[geometry.id]=programMap);let stateMap=programMap[program.id];void 0===stateMap&&(stateMap={},programMap[program.id]=stateMap);let state=stateMap[wireframe];void 0===state&&(state=createBindingState(function createVertexArrayObject(){return capabilities.isWebGL2?gl.createVertexArray():extension.createVertexArrayOES()}()),stateMap[wireframe]=state);return state}(geometry,program,material);currentState!==state&&(currentState=state,bindVertexArrayObject(currentState.object)),updateBuffers=function needsUpdate(object,geometry,program,index){const cachedAttributes=currentState.attributes,geometryAttributes=geometry.attributes;let attributesNum=0;const programAttributes=program.getAttributes();for(const name in programAttributes){if(programAttributes[name].location>=0){const cachedAttribute=cachedAttributes[name];let geometryAttribute=geometryAttributes[name];if(void 0===geometryAttribute&&("instanceMatrix"===name&&object.instanceMatrix&&(geometryAttribute=object.instanceMatrix),"instanceColor"===name&&object.instanceColor&&(geometryAttribute=object.instanceColor)),void 0===cachedAttribute)return!0;if(cachedAttribute.attribute!==geometryAttribute)return!0;if(geometryAttribute&&cachedAttribute.data!==geometryAttribute.data)return!0;attributesNum++}}return currentState.attributesNum!==attributesNum||currentState.index!==index}(object,geometry,program,index),updateBuffers&&function saveCache(object,geometry,program,index){const cache={},attributes=geometry.attributes;let attributesNum=0;const programAttributes=program.getAttributes();for(const name in programAttributes){if(programAttributes[name].location>=0){let attribute=attributes[name];void 0===attribute&&("instanceMatrix"===name&&object.instanceMatrix&&(attribute=object.instanceMatrix),"instanceColor"===name&&object.instanceColor&&(attribute=object.instanceColor));const data={};data.attribute=attribute,attribute&&attribute.data&&(data.data=attribute.data),cache[name]=data,attributesNum++}}currentState.attributes=cache,currentState.attributesNum=attributesNum,currentState.index=index}(object,geometry,program,index)}else{const wireframe=!0===material.wireframe;currentState.geometry===geometry.id&&currentState.program===program.id&&currentState.wireframe===wireframe||(currentState.geometry=geometry.id,currentState.program=program.id,currentState.wireframe=wireframe,updateBuffers=!0)}null!==index&&attributes.update(index,gl.ELEMENT_ARRAY_BUFFER),(updateBuffers||forceUpdate)&&(forceUpdate=!1,function setupVertexAttributes(object,material,program,geometry){if(!1===capabilities.isWebGL2&&(object.isInstancedMesh||geometry.isInstancedBufferGeometry)&&null===extensions.get("ANGLE_instanced_arrays"))return;initAttributes();const geometryAttributes=geometry.attributes,programAttributes=program.getAttributes(),materialDefaultAttributeValues=material.defaultAttributeValues;for(const name in programAttributes){const programAttribute=programAttributes[name];if(programAttribute.location>=0){let geometryAttribute=geometryAttributes[name];if(void 0===geometryAttribute&&("instanceMatrix"===name&&object.instanceMatrix&&(geometryAttribute=object.instanceMatrix),"instanceColor"===name&&object.instanceColor&&(geometryAttribute=object.instanceColor)),void 0!==geometryAttribute){const normalized=geometryAttribute.normalized,size=geometryAttribute.itemSize,attribute=attributes.get(geometryAttribute);if(void 0===attribute)continue;const buffer=attribute.buffer,type=attribute.type,bytesPerElement=attribute.bytesPerElement;if(geometryAttribute.isInterleavedBufferAttribute){const data=geometryAttribute.data,stride=data.stride,offset=geometryAttribute.offset;if(data.isInstancedInterleavedBuffer){for(let i=0;i<programAttribute.locationSize;i++)enableAttributeAndDivisor(programAttribute.location+i,data.meshPerAttribute);!0!==object.isInstancedMesh&&void 0===geometry._maxInstanceCount&&(geometry._maxInstanceCount=data.meshPerAttribute*data.count)}else for(let i=0;i<programAttribute.locationSize;i++)enableAttribute(programAttribute.location+i);gl.bindBuffer(gl.ARRAY_BUFFER,buffer);for(let i=0;i<programAttribute.locationSize;i++)vertexAttribPointer(programAttribute.location+i,size/programAttribute.locationSize,type,normalized,stride*bytesPerElement,(offset+size/programAttribute.locationSize*i)*bytesPerElement)}else{if(geometryAttribute.isInstancedBufferAttribute){for(let i=0;i<programAttribute.locationSize;i++)enableAttributeAndDivisor(programAttribute.location+i,geometryAttribute.meshPerAttribute);!0!==object.isInstancedMesh&&void 0===geometry._maxInstanceCount&&(geometry._maxInstanceCount=geometryAttribute.meshPerAttribute*geometryAttribute.count)}else for(let i=0;i<programAttribute.locationSize;i++)enableAttribute(programAttribute.location+i);gl.bindBuffer(gl.ARRAY_BUFFER,buffer);for(let i=0;i<programAttribute.locationSize;i++)vertexAttribPointer(programAttribute.location+i,size/programAttribute.locationSize,type,normalized,size*bytesPerElement,size/programAttribute.locationSize*i*bytesPerElement)}}else if(void 0!==materialDefaultAttributeValues){const value=materialDefaultAttributeValues[name];if(void 0!==value)switch(value.length){case 2:gl.vertexAttrib2fv(programAttribute.location,value);break;case 3:gl.vertexAttrib3fv(programAttribute.location,value);break;case 4:gl.vertexAttrib4fv(programAttribute.location,value);break;default:gl.vertexAttrib1fv(programAttribute.location,value)}}}}disableUnusedAttributes()}(object,material,program,geometry),null!==index&&gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,attributes.get(index).buffer))},reset,resetDefaultState,dispose:function dispose(){reset();for(const geometryId in bindingStates){const programMap=bindingStates[geometryId];for(const programId in programMap){const stateMap=programMap[programId];for(const wireframe in stateMap)deleteVertexArrayObject(stateMap[wireframe].object),delete stateMap[wireframe];delete programMap[programId]}delete bindingStates[geometryId]}},releaseStatesOfGeometry:function releaseStatesOfGeometry(geometry){if(void 0===bindingStates[geometry.id])return;const programMap=bindingStates[geometry.id];for(const programId in programMap){const stateMap=programMap[programId];for(const wireframe in stateMap)deleteVertexArrayObject(stateMap[wireframe].object),delete stateMap[wireframe];delete programMap[programId]}delete bindingStates[geometry.id]},releaseStatesOfProgram:function releaseStatesOfProgram(program){for(const geometryId in bindingStates){const programMap=bindingStates[geometryId];if(void 0===programMap[program.id])continue;const stateMap=programMap[program.id];for(const wireframe in stateMap)deleteVertexArrayObject(stateMap[wireframe].object),delete stateMap[wireframe];delete programMap[program.id]}},initAttributes,enableAttribute,disableUnusedAttributes}}function WebGLBufferRenderer(gl,extensions,info,capabilities){const isWebGL2=capabilities.isWebGL2;let mode;this.setMode=function setMode(value){mode=value},this.render=function render(start,count){gl.drawArrays(mode,start,count),info.update(count,mode,1)},this.renderInstances=function renderInstances(start,count,primcount){if(0===primcount)return;let extension,methodName;if(isWebGL2)extension=gl,methodName="drawArraysInstanced";else if(extension=extensions.get("ANGLE_instanced_arrays"),methodName="drawArraysInstancedANGLE",null===extension)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");extension[methodName](mode,start,count,primcount),info.update(count,mode,primcount)}}function WebGLCapabilities(gl,extensions,parameters){let maxAnisotropy;function getMaxPrecision(precision){if("highp"===precision){if(gl.getShaderPrecisionFormat(gl.VERTEX_SHADER,gl.HIGH_FLOAT).precision>0&&gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,gl.HIGH_FLOAT).precision>0)return"highp";precision="mediump"}return"mediump"===precision&&gl.getShaderPrecisionFormat(gl.VERTEX_SHADER,gl.MEDIUM_FLOAT).precision>0&&gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,gl.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const isWebGL2="undefined"!=typeof WebGL2RenderingContext&&"WebGL2RenderingContext"===gl.constructor.name;let precision=void 0!==parameters.precision?parameters.precision:"highp";const maxPrecision=getMaxPrecision(precision);maxPrecision!==precision&&(console.warn("THREE.WebGLRenderer:",precision,"not supported, using",maxPrecision,"instead."),precision=maxPrecision);const drawBuffers=isWebGL2||extensions.has("WEBGL_draw_buffers"),logarithmicDepthBuffer=!0===parameters.logarithmicDepthBuffer,maxTextures=gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS),maxVertexTextures=gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS),maxTextureSize=gl.getParameter(gl.MAX_TEXTURE_SIZE),maxCubemapSize=gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE),maxAttributes=gl.getParameter(gl.MAX_VERTEX_ATTRIBS),maxVertexUniforms=gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS),maxVaryings=gl.getParameter(gl.MAX_VARYING_VECTORS),maxFragmentUniforms=gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS),vertexTextures=maxVertexTextures>0,floatFragmentTextures=isWebGL2||extensions.has("OES_texture_float");return{isWebGL2,drawBuffers,getMaxAnisotropy:function getMaxAnisotropy(){if(void 0!==maxAnisotropy)return maxAnisotropy;if(!0===extensions.has("EXT_texture_filter_anisotropic")){const extension=extensions.get("EXT_texture_filter_anisotropic");maxAnisotropy=gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else maxAnisotropy=0;return maxAnisotropy},getMaxPrecision,precision,logarithmicDepthBuffer,maxTextures,maxVertexTextures,maxTextureSize,maxCubemapSize,maxAttributes,maxVertexUniforms,maxVaryings,maxFragmentUniforms,vertexTextures,floatFragmentTextures,floatVertexTextures:vertexTextures&&floatFragmentTextures,maxSamples:isWebGL2?gl.getParameter(gl.MAX_SAMPLES):0}}function WebGLClipping(properties){const scope=this;let globalState=null,numGlobalPlanes=0,localClippingEnabled=!1,renderingShadows=!1;const plane=new Plane,viewNormalMatrix=new Matrix3,uniform={value:null,needsUpdate:!1};function projectPlanes(planes,camera,dstOffset,skipTransform){const nPlanes=null!==planes?planes.length:0;let dstArray=null;if(0!==nPlanes){if(dstArray=uniform.value,!0!==skipTransform||null===dstArray){const flatSize=dstOffset+4*nPlanes,viewMatrix=camera.matrixWorldInverse;viewNormalMatrix.getNormalMatrix(viewMatrix),(null===dstArray||dstArray.length<flatSize)&&(dstArray=new Float32Array(flatSize));for(let i=0,i4=dstOffset;i!==nPlanes;++i,i4+=4)plane.copy(planes[i]).applyMatrix4(viewMatrix,viewNormalMatrix),plane.normal.toArray(dstArray,i4),dstArray[i4+3]=plane.constant}uniform.value=dstArray,uniform.needsUpdate=!0}return scope.numPlanes=nPlanes,scope.numIntersection=0,dstArray}this.uniform=uniform,this.numPlanes=0,this.numIntersection=0,this.init=function(planes,enableLocalClipping){const enabled=0!==planes.length||enableLocalClipping||0!==numGlobalPlanes||localClippingEnabled;return localClippingEnabled=enableLocalClipping,numGlobalPlanes=planes.length,enabled},this.beginShadows=function(){renderingShadows=!0,projectPlanes(null)},this.endShadows=function(){renderingShadows=!1},this.setGlobalState=function(planes,camera){globalState=projectPlanes(planes,camera,0)},this.setState=function(material,camera,useCache){const planes=material.clippingPlanes,clipIntersection=material.clipIntersection,clipShadows=material.clipShadows,materialProperties=properties.get(material);if(!localClippingEnabled||null===planes||0===planes.length||renderingShadows&&!clipShadows)renderingShadows?projectPlanes(null):function resetGlobalState(){uniform.value!==globalState&&(uniform.value=globalState,uniform.needsUpdate=numGlobalPlanes>0);scope.numPlanes=numGlobalPlanes,scope.numIntersection=0}();else{const nGlobal=renderingShadows?0:numGlobalPlanes,lGlobal=4*nGlobal;let dstArray=materialProperties.clippingState||null;uniform.value=dstArray,dstArray=projectPlanes(planes,camera,lGlobal,useCache);for(let i=0;i!==lGlobal;++i)dstArray[i]=globalState[i];materialProperties.clippingState=dstArray,this.numIntersection=clipIntersection?this.numPlanes:0,this.numPlanes+=nGlobal}}}function WebGLCubeMaps(renderer){let cubemaps=new WeakMap;function mapTextureMapping(texture,mapping){return mapping===EquirectangularReflectionMapping?texture.mapping=CubeReflectionMapping:mapping===EquirectangularRefractionMapping&&(texture.mapping=CubeRefractionMapping),texture}function onTextureDispose(event){const texture=event.target;texture.removeEventListener("dispose",onTextureDispose);const cubemap=cubemaps.get(texture);void 0!==cubemap&&(cubemaps.delete(texture),cubemap.dispose())}return{get:function get(texture){if(texture&&texture.isTexture&&!1===texture.isRenderTargetTexture){const mapping=texture.mapping;if(mapping===EquirectangularReflectionMapping||mapping===EquirectangularRefractionMapping){if(cubemaps.has(texture)){return mapTextureMapping(cubemaps.get(texture).texture,texture.mapping)}{const image=texture.image;if(image&&image.height>0){const renderTarget=new WebGLCubeRenderTarget(image.height/2);return renderTarget.fromEquirectangularTexture(renderer,texture),cubemaps.set(texture,renderTarget),texture.addEventListener("dispose",onTextureDispose),mapTextureMapping(renderTarget.texture,texture.mapping)}return null}}}return texture},dispose:function dispose(){cubemaps=new WeakMap}}}class OrthographicCamera extends Camera{constructor(left=-1,right=1,top=1,bottom=-1,near=.1,far=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=left,this.right=right,this.top=top,this.bottom=bottom,this.near=near,this.far=far,this.updateProjectionMatrix()}copy(source,recursive){return super.copy(source,recursive),this.left=source.left,this.right=source.right,this.top=source.top,this.bottom=source.bottom,this.near=source.near,this.far=source.far,this.zoom=source.zoom,this.view=null===source.view?null:Object.assign({},source.view),this}setViewOffset(fullWidth,fullHeight,x,y,width,height){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=fullWidth,this.view.fullHeight=fullHeight,this.view.offsetX=x,this.view.offsetY=y,this.view.width=width,this.view.height=height,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const dx=(this.right-this.left)/(2*this.zoom),dy=(this.top-this.bottom)/(2*this.zoom),cx=(this.right+this.left)/2,cy=(this.top+this.bottom)/2;let left=cx-dx,right=cx+dx,top=cy+dy,bottom=cy-dy;if(null!==this.view&&this.view.enabled){const scaleW=(this.right-this.left)/this.view.fullWidth/this.zoom,scaleH=(this.top-this.bottom)/this.view.fullHeight/this.zoom;left+=scaleW*this.view.offsetX,right=left+scaleW*this.view.width,top-=scaleH*this.view.offsetY,bottom=top-scaleH*this.view.height}this.projectionMatrix.makeOrthographic(left,right,top,bottom,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(meta){const data=super.toJSON(meta);return data.object.zoom=this.zoom,data.object.left=this.left,data.object.right=this.right,data.object.top=this.top,data.object.bottom=this.bottom,data.object.near=this.near,data.object.far=this.far,null!==this.view&&(data.object.view=Object.assign({},this.view)),data}}const EXTRA_LOD_SIGMA=[.125,.215,.35,.446,.526,.582],_flatCamera=new OrthographicCamera,_clearColor=new Color;let _oldTarget=null;const PHI=(1+Math.sqrt(5))/2,INV_PHI=1/PHI,_axisDirections=[new Vector3(1,1,1),new Vector3(-1,1,1),new Vector3(1,1,-1),new Vector3(-1,1,-1),new Vector3(0,PHI,INV_PHI),new Vector3(0,PHI,-INV_PHI),new Vector3(INV_PHI,0,PHI),new Vector3(-INV_PHI,0,PHI),new Vector3(PHI,INV_PHI,0),new Vector3(-PHI,INV_PHI,0)];class PMREMGenerator{constructor(renderer){this._renderer=renderer,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(scene,sigma=0,near=.1,far=100){_oldTarget=this._renderer.getRenderTarget(),this._setSize(256);const cubeUVRenderTarget=this._allocateTargets();return cubeUVRenderTarget.depthBuffer=!0,this._sceneToCubeUV(scene,near,far,cubeUVRenderTarget),sigma>0&&this._blur(cubeUVRenderTarget,0,0,sigma),this._applyPMREM(cubeUVRenderTarget),this._cleanup(cubeUVRenderTarget),cubeUVRenderTarget}fromEquirectangular(equirectangular,renderTarget=null){return this._fromTexture(equirectangular,renderTarget)}fromCubemap(cubemap,renderTarget=null){return this._fromTexture(cubemap,renderTarget)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=_getCubemapMaterial(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=_getEquirectMaterial(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(cubeSize){this._lodMax=Math.floor(Math.log2(cubeSize)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let i=0;i<this._lodPlanes.length;i++)this._lodPlanes[i].dispose()}_cleanup(outputTarget){this._renderer.setRenderTarget(_oldTarget),outputTarget.scissorTest=!1,_setViewport(outputTarget,0,0,outputTarget.width,outputTarget.height)}_fromTexture(texture,renderTarget){texture.mapping===CubeReflectionMapping||texture.mapping===CubeRefractionMapping?this._setSize(0===texture.image.length?16:texture.image[0].width||texture.image[0].image.width):this._setSize(texture.image.width/4),_oldTarget=this._renderer.getRenderTarget();const cubeUVRenderTarget=renderTarget||this._allocateTargets();return this._textureToCubeUV(texture,cubeUVRenderTarget),this._applyPMREM(cubeUVRenderTarget),this._cleanup(cubeUVRenderTarget),cubeUVRenderTarget}_allocateTargets(){const width=3*Math.max(this._cubeSize,112),height=4*this._cubeSize,params={magFilter:LinearFilter,minFilter:LinearFilter,generateMipmaps:!1,type:HalfFloatType,format:RGBAFormat,colorSpace:LinearSRGBColorSpace,depthBuffer:!1},cubeUVRenderTarget=_createRenderTarget(width,height,params);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==width||this._pingPongRenderTarget.height!==height){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=_createRenderTarget(width,height,params);const{_lodMax}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function _createPlanes(lodMax){const lodPlanes=[],sizeLods=[],sigmas=[];let lod=lodMax;const totalLods=lodMax-4+1+EXTRA_LOD_SIGMA.length;for(let i=0;i<totalLods;i++){const sizeLod=Math.pow(2,lod);sizeLods.push(sizeLod);let sigma=1/sizeLod;i>lodMax-4?sigma=EXTRA_LOD_SIGMA[i-lodMax+4-1]:0===i&&(sigma=0),sigmas.push(sigma);const texelSize=1/(sizeLod-2),min=-texelSize,max=1+texelSize,uv1=[min,min,max,min,max,max,min,min,max,max,min,max],cubeFaces=6,vertices=6,positionSize=3,uvSize=2,faceIndexSize=1,position=new Float32Array(positionSize*vertices*cubeFaces),uv=new Float32Array(uvSize*vertices*cubeFaces),faceIndex=new Float32Array(faceIndexSize*vertices*cubeFaces);for(let face=0;face<cubeFaces;face++){const x=face%3*2/3-1,y=face>2?0:-1,coordinates=[x,y,0,x+2/3,y,0,x+2/3,y+1,0,x,y,0,x+2/3,y+1,0,x,y+1,0];position.set(coordinates,positionSize*vertices*face),uv.set(uv1,uvSize*vertices*face);const fill=[face,face,face,face,face,face];faceIndex.set(fill,faceIndexSize*vertices*face)}const planes=new BufferGeometry;planes.setAttribute("position",new BufferAttribute(position,positionSize)),planes.setAttribute("uv",new BufferAttribute(uv,uvSize)),planes.setAttribute("faceIndex",new BufferAttribute(faceIndex,faceIndexSize)),lodPlanes.push(planes),lod>4&&lod--}return{lodPlanes,sizeLods,sigmas}}(_lodMax)),this._blurMaterial=function _getBlurShader(lodMax,width,height){const weights=new Float32Array(20),poleAxis=new Vector3(0,1,0),shaderMaterial=new ShaderMaterial({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/width,CUBEUV_TEXEL_HEIGHT:1/height,CUBEUV_MAX_MIP:`${lodMax}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:weights},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:poleAxis}},vertexShader:_getCommonVertexShader(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:NoBlending,depthTest:!1,depthWrite:!1});return shaderMaterial}(_lodMax,width,height)}return cubeUVRenderTarget}_compileMaterial(material){const tmpMesh=new Mesh(this._lodPlanes[0],material);this._renderer.compile(tmpMesh,_flatCamera)}_sceneToCubeUV(scene,near,far,cubeUVRenderTarget){const cubeCamera=new PerspectiveCamera(90,1,near,far),upSign=[1,-1,1,1,1,1],forwardSign=[1,1,1,-1,-1,-1],renderer=this._renderer,originalAutoClear=renderer.autoClear,toneMapping=renderer.toneMapping;renderer.getClearColor(_clearColor),renderer.toneMapping=NoToneMapping,renderer.autoClear=!1;const backgroundMaterial=new MeshBasicMaterial({name:"PMREM.Background",side:BackSide,depthWrite:!1,depthTest:!1}),backgroundBox=new Mesh(new BoxGeometry,backgroundMaterial);let useSolidColor=!1;const background=scene.background;background?background.isColor&&(backgroundMaterial.color.copy(background),scene.background=null,useSolidColor=!0):(backgroundMaterial.color.copy(_clearColor),useSolidColor=!0);for(let i=0;i<6;i++){const col=i%3;0===col?(cubeCamera.up.set(0,upSign[i],0),cubeCamera.lookAt(forwardSign[i],0,0)):1===col?(cubeCamera.up.set(0,0,upSign[i]),cubeCamera.lookAt(0,forwardSign[i],0)):(cubeCamera.up.set(0,upSign[i],0),cubeCamera.lookAt(0,0,forwardSign[i]));const size=this._cubeSize;_setViewport(cubeUVRenderTarget,col*size,i>2?size:0,size,size),renderer.setRenderTarget(cubeUVRenderTarget),useSolidColor&&renderer.render(backgroundBox,cubeCamera),renderer.render(scene,cubeCamera)}backgroundBox.geometry.dispose(),backgroundBox.material.dispose(),renderer.toneMapping=toneMapping,renderer.autoClear=originalAutoClear,scene.background=background}_textureToCubeUV(texture,cubeUVRenderTarget){const renderer=this._renderer,isCubeTexture=texture.mapping===CubeReflectionMapping||texture.mapping===CubeRefractionMapping;isCubeTexture?(null===this._cubemapMaterial&&(this._cubemapMaterial=_getCubemapMaterial()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===texture.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=_getEquirectMaterial());const material=isCubeTexture?this._cubemapMaterial:this._equirectMaterial,mesh=new Mesh(this._lodPlanes[0],material);material.uniforms.envMap.value=texture;const size=this._cubeSize;_setViewport(cubeUVRenderTarget,0,0,3*size,2*size),renderer.setRenderTarget(cubeUVRenderTarget),renderer.render(mesh,_flatCamera)}_applyPMREM(cubeUVRenderTarget){const renderer=this._renderer,autoClear=renderer.autoClear;renderer.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const sigma=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),poleAxis=_axisDirections[(i-1)%_axisDirections.length];this._blur(cubeUVRenderTarget,i-1,i,sigma,poleAxis)}renderer.autoClear=autoClear}_blur(cubeUVRenderTarget,lodIn,lodOut,sigma,poleAxis){const pingPongRenderTarget=this._pingPongRenderTarget;this._halfBlur(cubeUVRenderTarget,pingPongRenderTarget,lodIn,lodOut,sigma,"latitudinal",poleAxis),this._halfBlur(pingPongRenderTarget,cubeUVRenderTarget,lodOut,lodOut,sigma,"longitudinal",poleAxis)}_halfBlur(targetIn,targetOut,lodIn,lodOut,sigmaRadians,direction,poleAxis){const renderer=this._renderer,blurMaterial=this._blurMaterial;"latitudinal"!==direction&&"longitudinal"!==direction&&console.error("blur direction must be either latitudinal or longitudinal!");const blurMesh=new Mesh(this._lodPlanes[lodOut],blurMaterial),blurUniforms=blurMaterial.uniforms,pixels=this._sizeLods[lodIn]-1,radiansPerPixel=isFinite(sigmaRadians)?Math.PI/(2*pixels):2*Math.PI/39,sigmaPixels=sigmaRadians/radiansPerPixel,samples=isFinite(sigmaRadians)?1+Math.floor(3*sigmaPixels):20;samples>20&&console.warn(`sigmaRadians, ${sigmaRadians}, is too large and will clip, as it requested ${samples} samples when the maximum is set to 20`);const weights=[];let sum=0;for(let i=0;i<20;++i){const x=i/sigmaPixels,weight=Math.exp(-x*x/2);weights.push(weight),0===i?sum+=weight:i<samples&&(sum+=2*weight)}for(let i=0;i<weights.length;i++)weights[i]=weights[i]/sum;blurUniforms.envMap.value=targetIn.texture,blurUniforms.samples.value=samples,blurUniforms.weights.value=weights,blurUniforms.latitudinal.value="latitudinal"===direction,poleAxis&&(blurUniforms.poleAxis.value=poleAxis);const{_lodMax}=this;blurUniforms.dTheta.value=radiansPerPixel,blurUniforms.mipInt.value=_lodMax-lodIn;const outputSize=this._sizeLods[lodOut];_setViewport(targetOut,3*outputSize*(lodOut>_lodMax-4?lodOut-_lodMax+4:0),4*(this._cubeSize-outputSize),3*outputSize,2*outputSize),renderer.setRenderTarget(targetOut),renderer.render(blurMesh,_flatCamera)}}function _createRenderTarget(width,height,params){const cubeUVRenderTarget=new WebGLRenderTarget(width,height,params);return cubeUVRenderTarget.texture.mapping=CubeUVReflectionMapping,cubeUVRenderTarget.texture.name="PMREM.cubeUv",cubeUVRenderTarget.scissorTest=!0,cubeUVRenderTarget}function _setViewport(target,x,y,width,height){target.viewport.set(x,y,width,height),target.scissor.set(x,y,width,height)}function _getEquirectMaterial(){return new ShaderMaterial({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:_getCommonVertexShader(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:NoBlending,depthTest:!1,depthWrite:!1})}function _getCubemapMaterial(){return new ShaderMaterial({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:_getCommonVertexShader(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:NoBlending,depthTest:!1,depthWrite:!1})}function _getCommonVertexShader(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function WebGLCubeUVMaps(renderer){let cubeUVmaps=new WeakMap,pmremGenerator=null;function onTextureDispose(event){const texture=event.target;texture.removeEventListener("dispose",onTextureDispose);const cubemapUV=cubeUVmaps.get(texture);void 0!==cubemapUV&&(cubeUVmaps.delete(texture),cubemapUV.dispose())}return{get:function get(texture){if(texture&&texture.isTexture){const mapping=texture.mapping,isEquirectMap=mapping===EquirectangularReflectionMapping||mapping===EquirectangularRefractionMapping,isCubeMap=mapping===CubeReflectionMapping||mapping===CubeRefractionMapping;if(isEquirectMap||isCubeMap){if(texture.isRenderTargetTexture&&!0===texture.needsPMREMUpdate){texture.needsPMREMUpdate=!1;let renderTarget=cubeUVmaps.get(texture);return null===pmremGenerator&&(pmremGenerator=new PMREMGenerator(renderer)),renderTarget=isEquirectMap?pmremGenerator.fromEquirectangular(texture,renderTarget):pmremGenerator.fromCubemap(texture,renderTarget),cubeUVmaps.set(texture,renderTarget),renderTarget.texture}if(cubeUVmaps.has(texture))return cubeUVmaps.get(texture).texture;{const image=texture.image;if(isEquirectMap&&image&&image.height>0||isCubeMap&&image&&function isCubeTextureComplete(image){let count=0;const length=6;for(let i=0;i<length;i++)void 0!==image[i]&&count++;return count===length}(image)){null===pmremGenerator&&(pmremGenerator=new PMREMGenerator(renderer));const renderTarget=isEquirectMap?pmremGenerator.fromEquirectangular(texture):pmremGenerator.fromCubemap(texture);return cubeUVmaps.set(texture,renderTarget),texture.addEventListener("dispose",onTextureDispose),renderTarget.texture}return null}}}return texture},dispose:function dispose(){cubeUVmaps=new WeakMap,null!==pmremGenerator&&(pmremGenerator.dispose(),pmremGenerator=null)}}}function WebGLExtensions(gl){const extensions={};function getExtension(name){if(void 0!==extensions[name])return extensions[name];let extension;switch(name){case"WEBGL_depth_texture":extension=gl.getExtension("WEBGL_depth_texture")||gl.getExtension("MOZ_WEBGL_depth_texture")||gl.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":extension=gl.getExtension("EXT_texture_filter_anisotropic")||gl.getExtension("MOZ_EXT_texture_filter_anisotropic")||gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":extension=gl.getExtension("WEBGL_compressed_texture_s3tc")||gl.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||gl.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":extension=gl.getExtension("WEBGL_compressed_texture_pvrtc")||gl.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:extension=gl.getExtension(name)}return extensions[name]=extension,extension}return{has:function(name){return null!==getExtension(name)},init:function(capabilities){capabilities.isWebGL2?getExtension("EXT_color_buffer_float"):(getExtension("WEBGL_depth_texture"),getExtension("OES_texture_float"),getExtension("OES_texture_half_float"),getExtension("OES_texture_half_float_linear"),getExtension("OES_standard_derivatives"),getExtension("OES_element_index_uint"),getExtension("OES_vertex_array_object"),getExtension("ANGLE_instanced_arrays")),getExtension("OES_texture_float_linear"),getExtension("EXT_color_buffer_half_float"),getExtension("WEBGL_multisampled_render_to_texture")},get:function(name){const extension=getExtension(name);return null===extension&&console.warn("THREE.WebGLRenderer: "+name+" extension not supported."),extension}}}function WebGLGeometries(gl,attributes,info,bindingStates){const geometries={},wireframeAttributes=new WeakMap;function onGeometryDispose(event){const geometry=event.target;null!==geometry.index&&attributes.remove(geometry.index);for(const name in geometry.attributes)attributes.remove(geometry.attributes[name]);geometry.removeEventListener("dispose",onGeometryDispose),delete geometries[geometry.id];const attribute=wireframeAttributes.get(geometry);attribute&&(attributes.remove(attribute),wireframeAttributes.delete(geometry)),bindingStates.releaseStatesOfGeometry(geometry),!0===geometry.isInstancedBufferGeometry&&delete geometry._maxInstanceCount,info.memory.geometries--}function updateWireframeAttribute(geometry){const indices=[],geometryIndex=geometry.index,geometryPosition=geometry.attributes.position;let version=0;if(null!==geometryIndex){const array=geometryIndex.array;version=geometryIndex.version;for(let i=0,l=array.length;i<l;i+=3){const a=array[i+0],b=array[i+1],c=array[i+2];indices.push(a,b,b,c,c,a)}}else{const array=geometryPosition.array;version=geometryPosition.version;for(let i=0,l=array.length/3-1;i<l;i+=3){const a=i+0,b=i+1,c=i+2;indices.push(a,b,b,c,c,a)}}const attribute=new(arrayNeedsUint32(indices)?Uint32BufferAttribute:Uint16BufferAttribute)(indices,1);attribute.version=version;const previousAttribute=wireframeAttributes.get(geometry);previousAttribute&&attributes.remove(previousAttribute),wireframeAttributes.set(geometry,attribute)}return{get:function get(object,geometry){return!0===geometries[geometry.id]||(geometry.addEventListener("dispose",onGeometryDispose),geometries[geometry.id]=!0,info.memory.geometries++),geometry},update:function update(geometry){const geometryAttributes=geometry.attributes;for(const name in geometryAttributes)attributes.update(geometryAttributes[name],gl.ARRAY_BUFFER);const morphAttributes=geometry.morphAttributes;for(const name in morphAttributes){const array=morphAttributes[name];for(let i=0,l=array.length;i<l;i++)attributes.update(array[i],gl.ARRAY_BUFFER)}},getWireframeAttribute:function getWireframeAttribute(geometry){const currentAttribute=wireframeAttributes.get(geometry);if(currentAttribute){const geometryIndex=geometry.index;null!==geometryIndex&&currentAttribute.version<geometryIndex.version&&updateWireframeAttribute(geometry)}else updateWireframeAttribute(geometry);return wireframeAttributes.get(geometry)}}}function WebGLIndexedBufferRenderer(gl,extensions,info,capabilities){const isWebGL2=capabilities.isWebGL2;let mode,type,bytesPerElement;this.setMode=function setMode(value){mode=value},this.setIndex=function setIndex(value){type=value.type,bytesPerElement=value.bytesPerElement},this.render=function render(start,count){gl.drawElements(mode,count,type,start*bytesPerElement),info.update(count,mode,1)},this.renderInstances=function renderInstances(start,count,primcount){if(0===primcount)return;let extension,methodName;if(isWebGL2)extension=gl,methodName="drawElementsInstanced";else if(extension=extensions.get("ANGLE_instanced_arrays"),methodName="drawElementsInstancedANGLE",null===extension)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");extension[methodName](mode,count,type,start*bytesPerElement,primcount),info.update(count,mode,primcount)}}function WebGLInfo(gl){const render={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render,programs:null,autoReset:!0,reset:function reset(){render.frame++,render.calls=0,render.triangles=0,render.points=0,render.lines=0},update:function update(count,mode,instanceCount){switch(render.calls++,mode){case gl.TRIANGLES:render.triangles+=instanceCount*(count/3);break;case gl.LINES:render.lines+=instanceCount*(count/2);break;case gl.LINE_STRIP:render.lines+=instanceCount*(count-1);break;case gl.LINE_LOOP:render.lines+=instanceCount*count;break;case gl.POINTS:render.points+=instanceCount*count;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",mode)}}}}function numericalSort(a,b){return a[0]-b[0]}function absNumericalSort(a,b){return Math.abs(b[1])-Math.abs(a[1])}function WebGLMorphtargets(gl,capabilities,textures){const influencesList={},morphInfluences=new Float32Array(8),morphTextures=new WeakMap,morph=new Vector4,workInfluences=[];for(let i=0;i<8;i++)workInfluences[i]=[i,0];return{update:function update(object,geometry,program){const objectInfluences=object.morphTargetInfluences;if(!0===capabilities.isWebGL2){const morphAttribute=geometry.morphAttributes.position||geometry.morphAttributes.normal||geometry.morphAttributes.color,morphTargetsCount=void 0!==morphAttribute?morphAttribute.length:0;let entry=morphTextures.get(geometry);if(void 0===entry||entry.count!==morphTargetsCount){void 0!==entry&&entry.texture.dispose();const hasMorphPosition=void 0!==geometry.morphAttributes.position,hasMorphNormals=void 0!==geometry.morphAttributes.normal,hasMorphColors=void 0!==geometry.morphAttributes.color,morphTargets=geometry.morphAttributes.position||[],morphNormals=geometry.morphAttributes.normal||[],morphColors=geometry.morphAttributes.color||[];let vertexDataCount=0;!0===hasMorphPosition&&(vertexDataCount=1),!0===hasMorphNormals&&(vertexDataCount=2),!0===hasMorphColors&&(vertexDataCount=3);let width=geometry.attributes.position.count*vertexDataCount,height=1;width>capabilities.maxTextureSize&&(height=Math.ceil(width/capabilities.maxTextureSize),width=capabilities.maxTextureSize);const buffer=new Float32Array(width*height*4*morphTargetsCount),texture=new DataArrayTexture(buffer,width,height,morphTargetsCount);texture.type=FloatType,texture.needsUpdate=!0;const vertexDataStride=4*vertexDataCount;for(let i=0;i<morphTargetsCount;i++){const morphTarget=morphTargets[i],morphNormal=morphNormals[i],morphColor=morphColors[i],offset=width*height*4*i;for(let j=0;j<morphTarget.count;j++){const stride=j*vertexDataStride;!0===hasMorphPosition&&(morph.fromBufferAttribute(morphTarget,j),buffer[offset+stride+0]=morph.x,buffer[offset+stride+1]=morph.y,buffer[offset+stride+2]=morph.z,buffer[offset+stride+3]=0),!0===hasMorphNormals&&(morph.fromBufferAttribute(morphNormal,j),buffer[offset+stride+4]=morph.x,buffer[offset+stride+5]=morph.y,buffer[offset+stride+6]=morph.z,buffer[offset+stride+7]=0),!0===hasMorphColors&&(morph.fromBufferAttribute(morphColor,j),buffer[offset+stride+8]=morph.x,buffer[offset+stride+9]=morph.y,buffer[offset+stride+10]=morph.z,buffer[offset+stride+11]=4===morphColor.itemSize?morph.w:1)}}function disposeTexture(){texture.dispose(),morphTextures.delete(geometry),geometry.removeEventListener("dispose",disposeTexture)}entry={count:morphTargetsCount,texture,size:new Vector2(width,height)},morphTextures.set(geometry,entry),geometry.addEventListener("dispose",disposeTexture)}let morphInfluencesSum=0;for(let i=0;i<objectInfluences.length;i++)morphInfluencesSum+=objectInfluences[i];const morphBaseInfluence=geometry.morphTargetsRelative?1:1-morphInfluencesSum;program.getUniforms().setValue(gl,"morphTargetBaseInfluence",morphBaseInfluence),program.getUniforms().setValue(gl,"morphTargetInfluences",objectInfluences),program.getUniforms().setValue(gl,"morphTargetsTexture",entry.texture,textures),program.getUniforms().setValue(gl,"morphTargetsTextureSize",entry.size)}else{const length=void 0===objectInfluences?0:objectInfluences.length;let influences=influencesList[geometry.id];if(void 0===influences||influences.length!==length){influences=[];for(let i=0;i<length;i++)influences[i]=[i,0];influencesList[geometry.id]=influences}for(let i=0;i<length;i++){const influence=influences[i];influence[0]=i,influence[1]=objectInfluences[i]}influences.sort(absNumericalSort);for(let i=0;i<8;i++)i<length&&influences[i][1]?(workInfluences[i][0]=influences[i][0],workInfluences[i][1]=influences[i][1]):(workInfluences[i][0]=Number.MAX_SAFE_INTEGER,workInfluences[i][1]=0);workInfluences.sort(numericalSort);const morphTargets=geometry.morphAttributes.position,morphNormals=geometry.morphAttributes.normal;let morphInfluencesSum=0;for(let i=0;i<8;i++){const influence=workInfluences[i],index=influence[0],value=influence[1];index!==Number.MAX_SAFE_INTEGER&&value?(morphTargets&&geometry.getAttribute("morphTarget"+i)!==morphTargets[index]&&geometry.setAttribute("morphTarget"+i,morphTargets[index]),morphNormals&&geometry.getAttribute("morphNormal"+i)!==morphNormals[index]&&geometry.setAttribute("morphNormal"+i,morphNormals[index]),morphInfluences[i]=value,morphInfluencesSum+=value):(morphTargets&&!0===geometry.hasAttribute("morphTarget"+i)&&geometry.deleteAttribute("morphTarget"+i),morphNormals&&!0===geometry.hasAttribute("morphNormal"+i)&&geometry.deleteAttribute("morphNormal"+i),morphInfluences[i]=0)}const morphBaseInfluence=geometry.morphTargetsRelative?1:1-morphInfluencesSum;program.getUniforms().setValue(gl,"morphTargetBaseInfluence",morphBaseInfluence),program.getUniforms().setValue(gl,"morphTargetInfluences",morphInfluences)}}}}function WebGLObjects(gl,geometries,attributes,info){let updateMap=new WeakMap;function onInstancedMeshDispose(event){const instancedMesh=event.target;instancedMesh.removeEventListener("dispose",onInstancedMeshDispose),attributes.remove(instancedMesh.instanceMatrix),null!==instancedMesh.instanceColor&&attributes.remove(instancedMesh.instanceColor)}return{update:function update(object){const frame=info.render.frame,geometry=object.geometry,buffergeometry=geometries.get(object,geometry);return updateMap.get(buffergeometry)!==frame&&(geometries.update(buffergeometry),updateMap.set(buffergeometry,frame)),object.isInstancedMesh&&(!1===object.hasEventListener("dispose",onInstancedMeshDispose)&&object.addEventListener("dispose",onInstancedMeshDispose),attributes.update(object.instanceMatrix,gl.ARRAY_BUFFER),null!==object.instanceColor&&attributes.update(object.instanceColor,gl.ARRAY_BUFFER)),buffergeometry},dispose:function dispose(){updateMap=new WeakMap}}}const emptyTexture=new Texture,emptyArrayTexture=new DataArrayTexture,empty3dTexture=new Data3DTexture,emptyCubeTexture=new CubeTexture,arrayCacheF32=[],arrayCacheI32=[],mat4array=new Float32Array(16),mat3array=new Float32Array(9),mat2array=new Float32Array(4);function flatten(array,nBlocks,blockSize){const firstElem=array[0];if(firstElem<=0||firstElem>0)return array;const n=nBlocks*blockSize;let r=arrayCacheF32[n];if(void 0===r&&(r=new Float32Array(n),arrayCacheF32[n]=r),0!==nBlocks){firstElem.toArray(r,0);for(let i=1,offset=0;i!==nBlocks;++i)offset+=blockSize,array[i].toArray(r,offset)}return r}function arraysEqual(a,b){if(a.length!==b.length)return!1;for(let i=0,l=a.length;i<l;i++)if(a[i]!==b[i])return!1;return!0}function copyArray(a,b){for(let i=0,l=b.length;i<l;i++)a[i]=b[i]}function allocTexUnits(textures,n){let r=arrayCacheI32[n];void 0===r&&(r=new Int32Array(n),arrayCacheI32[n]=r);for(let i=0;i!==n;++i)r[i]=textures.allocateTextureUnit();return r}function setValueV1f(gl,v){const cache=this.cache;cache[0]!==v&&(gl.uniform1f(this.addr,v),cache[0]=v)}function setValueV2f(gl,v){const cache=this.cache;if(void 0!==v.x)cache[0]===v.x&&cache[1]===v.y||(gl.uniform2f(this.addr,v.x,v.y),cache[0]=v.x,cache[1]=v.y);else{if(arraysEqual(cache,v))return;gl.uniform2fv(this.addr,v),copyArray(cache,v)}}function setValueV3f(gl,v){const cache=this.cache;if(void 0!==v.x)cache[0]===v.x&&cache[1]===v.y&&cache[2]===v.z||(gl.uniform3f(this.addr,v.x,v.y,v.z),cache[0]=v.x,cache[1]=v.y,cache[2]=v.z);else if(void 0!==v.r)cache[0]===v.r&&cache[1]===v.g&&cache[2]===v.b||(gl.uniform3f(this.addr,v.r,v.g,v.b),cache[0]=v.r,cache[1]=v.g,cache[2]=v.b);else{if(arraysEqual(cache,v))return;gl.uniform3fv(this.addr,v),copyArray(cache,v)}}function setValueV4f(gl,v){const cache=this.cache;if(void 0!==v.x)cache[0]===v.x&&cache[1]===v.y&&cache[2]===v.z&&cache[3]===v.w||(gl.uniform4f(this.addr,v.x,v.y,v.z,v.w),cache[0]=v.x,cache[1]=v.y,cache[2]=v.z,cache[3]=v.w);else{if(arraysEqual(cache,v))return;gl.uniform4fv(this.addr,v),copyArray(cache,v)}}function setValueM2(gl,v){const cache=this.cache,elements=v.elements;if(void 0===elements){if(arraysEqual(cache,v))return;gl.uniformMatrix2fv(this.addr,!1,v),copyArray(cache,v)}else{if(arraysEqual(cache,elements))return;mat2array.set(elements),gl.uniformMatrix2fv(this.addr,!1,mat2array),copyArray(cache,elements)}}function setValueM3(gl,v){const cache=this.cache,elements=v.elements;if(void 0===elements){if(arraysEqual(cache,v))return;gl.uniformMatrix3fv(this.addr,!1,v),copyArray(cache,v)}else{if(arraysEqual(cache,elements))return;mat3array.set(elements),gl.uniformMatrix3fv(this.addr,!1,mat3array),copyArray(cache,elements)}}function setValueM4(gl,v){const cache=this.cache,elements=v.elements;if(void 0===elements){if(arraysEqual(cache,v))return;gl.uniformMatrix4fv(this.addr,!1,v),copyArray(cache,v)}else{if(arraysEqual(cache,elements))return;mat4array.set(elements),gl.uniformMatrix4fv(this.addr,!1,mat4array),copyArray(cache,elements)}}function setValueV1i(gl,v){const cache=this.cache;cache[0]!==v&&(gl.uniform1i(this.addr,v),cache[0]=v)}function setValueV2i(gl,v){const cache=this.cache;if(void 0!==v.x)cache[0]===v.x&&cache[1]===v.y||(gl.uniform2i(this.addr,v.x,v.y),cache[0]=v.x,cache[1]=v.y);else{if(arraysEqual(cache,v))return;gl.uniform2iv(this.addr,v),copyArray(cache,v)}}function setValueV3i(gl,v){const cache=this.cache;if(void 0!==v.x)cache[0]===v.x&&cache[1]===v.y&&cache[2]===v.z||(gl.uniform3i(this.addr,v.x,v.y,v.z),cache[0]=v.x,cache[1]=v.y,cache[2]=v.z);else{if(arraysEqual(cache,v))return;gl.uniform3iv(this.addr,v),copyArray(cache,v)}}function setValueV4i(gl,v){const cache=this.cache;if(void 0!==v.x)cache[0]===v.x&&cache[1]===v.y&&cache[2]===v.z&&cache[3]===v.w||(gl.uniform4i(this.addr,v.x,v.y,v.z,v.w),cache[0]=v.x,cache[1]=v.y,cache[2]=v.z,cache[3]=v.w);else{if(arraysEqual(cache,v))return;gl.uniform4iv(this.addr,v),copyArray(cache,v)}}function setValueV1ui(gl,v){const cache=this.cache;cache[0]!==v&&(gl.uniform1ui(this.addr,v),cache[0]=v)}function setValueV2ui(gl,v){const cache=this.cache;if(void 0!==v.x)cache[0]===v.x&&cache[1]===v.y||(gl.uniform2ui(this.addr,v.x,v.y),cache[0]=v.x,cache[1]=v.y);else{if(arraysEqual(cache,v))return;gl.uniform2uiv(this.addr,v),copyArray(cache,v)}}function setValueV3ui(gl,v){const cache=this.cache;if(void 0!==v.x)cache[0]===v.x&&cache[1]===v.y&&cache[2]===v.z||(gl.uniform3ui(this.addr,v.x,v.y,v.z),cache[0]=v.x,cache[1]=v.y,cache[2]=v.z);else{if(arraysEqual(cache,v))return;gl.uniform3uiv(this.addr,v),copyArray(cache,v)}}function setValueV4ui(gl,v){const cache=this.cache;if(void 0!==v.x)cache[0]===v.x&&cache[1]===v.y&&cache[2]===v.z&&cache[3]===v.w||(gl.uniform4ui(this.addr,v.x,v.y,v.z,v.w),cache[0]=v.x,cache[1]=v.y,cache[2]=v.z,cache[3]=v.w);else{if(arraysEqual(cache,v))return;gl.uniform4uiv(this.addr,v),copyArray(cache,v)}}function setValueT1(gl,v,textures){const cache=this.cache,unit=textures.allocateTextureUnit();cache[0]!==unit&&(gl.uniform1i(this.addr,unit),cache[0]=unit),textures.setTexture2D(v||emptyTexture,unit)}function setValueT3D1(gl,v,textures){const cache=this.cache,unit=textures.allocateTextureUnit();cache[0]!==unit&&(gl.uniform1i(this.addr,unit),cache[0]=unit),textures.setTexture3D(v||empty3dTexture,unit)}function setValueT6(gl,v,textures){const cache=this.cache,unit=textures.allocateTextureUnit();cache[0]!==unit&&(gl.uniform1i(this.addr,unit),cache[0]=unit),textures.setTextureCube(v||emptyCubeTexture,unit)}function setValueT2DArray1(gl,v,textures){const cache=this.cache,unit=textures.allocateTextureUnit();cache[0]!==unit&&(gl.uniform1i(this.addr,unit),cache[0]=unit),textures.setTexture2DArray(v||emptyArrayTexture,unit)}function setValueV1fArray(gl,v){gl.uniform1fv(this.addr,v)}function setValueV2fArray(gl,v){const data=flatten(v,this.size,2);gl.uniform2fv(this.addr,data)}function setValueV3fArray(gl,v){const data=flatten(v,this.size,3);gl.uniform3fv(this.addr,data)}function setValueV4fArray(gl,v){const data=flatten(v,this.size,4);gl.uniform4fv(this.addr,data)}function setValueM2Array(gl,v){const data=flatten(v,this.size,4);gl.uniformMatrix2fv(this.addr,!1,data)}function setValueM3Array(gl,v){const data=flatten(v,this.size,9);gl.uniformMatrix3fv(this.addr,!1,data)}function setValueM4Array(gl,v){const data=flatten(v,this.size,16);gl.uniformMatrix4fv(this.addr,!1,data)}function setValueV1iArray(gl,v){gl.uniform1iv(this.addr,v)}function setValueV2iArray(gl,v){gl.uniform2iv(this.addr,v)}function setValueV3iArray(gl,v){gl.uniform3iv(this.addr,v)}function setValueV4iArray(gl,v){gl.uniform4iv(this.addr,v)}function setValueV1uiArray(gl,v){gl.uniform1uiv(this.addr,v)}function setValueV2uiArray(gl,v){gl.uniform2uiv(this.addr,v)}function setValueV3uiArray(gl,v){gl.uniform3uiv(this.addr,v)}function setValueV4uiArray(gl,v){gl.uniform4uiv(this.addr,v)}function setValueT1Array(gl,v,textures){const cache=this.cache,n=v.length,units=allocTexUnits(textures,n);arraysEqual(cache,units)||(gl.uniform1iv(this.addr,units),copyArray(cache,units));for(let i=0;i!==n;++i)textures.setTexture2D(v[i]||emptyTexture,units[i])}function setValueT3DArray(gl,v,textures){const cache=this.cache,n=v.length,units=allocTexUnits(textures,n);arraysEqual(cache,units)||(gl.uniform1iv(this.addr,units),copyArray(cache,units));for(let i=0;i!==n;++i)textures.setTexture3D(v[i]||empty3dTexture,units[i])}function setValueT6Array(gl,v,textures){const cache=this.cache,n=v.length,units=allocTexUnits(textures,n);arraysEqual(cache,units)||(gl.uniform1iv(this.addr,units),copyArray(cache,units));for(let i=0;i!==n;++i)textures.setTextureCube(v[i]||emptyCubeTexture,units[i])}function setValueT2DArrayArray(gl,v,textures){const cache=this.cache,n=v.length,units=allocTexUnits(textures,n);arraysEqual(cache,units)||(gl.uniform1iv(this.addr,units),copyArray(cache,units));for(let i=0;i!==n;++i)textures.setTexture2DArray(v[i]||emptyArrayTexture,units[i])}class SingleUniform{constructor(id,activeInfo,addr){this.id=id,this.addr=addr,this.cache=[],this.setValue=function getSingularSetter(type){switch(type){case 5126:return setValueV1f;case 35664:return setValueV2f;case 35665:return setValueV3f;case 35666:return setValueV4f;case 35674:return setValueM2;case 35675:return setValueM3;case 35676:return setValueM4;case 5124:case 35670:return setValueV1i;case 35667:case 35671:return setValueV2i;case 35668:case 35672:return setValueV3i;case 35669:case 35673:return setValueV4i;case 5125:return setValueV1ui;case 36294:return setValueV2ui;case 36295:return setValueV3ui;case 36296:return setValueV4ui;case 35678:case 36198:case 36298:case 36306:case 35682:return setValueT1;case 35679:case 36299:case 36307:return setValueT3D1;case 35680:case 36300:case 36308:case 36293:return setValueT6;case 36289:case 36303:case 36311:case 36292:return setValueT2DArray1}}(activeInfo.type)}}class PureArrayUniform{constructor(id,activeInfo,addr){this.id=id,this.addr=addr,this.cache=[],this.size=activeInfo.size,this.setValue=function getPureArraySetter(type){switch(type){case 5126:return setValueV1fArray;case 35664:return setValueV2fArray;case 35665:return setValueV3fArray;case 35666:return setValueV4fArray;case 35674:return setValueM2Array;case 35675:return setValueM3Array;case 35676:return setValueM4Array;case 5124:case 35670:return setValueV1iArray;case 35667:case 35671:return setValueV2iArray;case 35668:case 35672:return setValueV3iArray;case 35669:case 35673:return setValueV4iArray;case 5125:return setValueV1uiArray;case 36294:return setValueV2uiArray;case 36295:return setValueV3uiArray;case 36296:return setValueV4uiArray;case 35678:case 36198:case 36298:case 36306:case 35682:return setValueT1Array;case 35679:case 36299:case 36307:return setValueT3DArray;case 35680:case 36300:case 36308:case 36293:return setValueT6Array;case 36289:case 36303:case 36311:case 36292:return setValueT2DArrayArray}}(activeInfo.type)}}class StructuredUniform{constructor(id){this.id=id,this.seq=[],this.map={}}setValue(gl,value,textures){const seq=this.seq;for(let i=0,n=seq.length;i!==n;++i){const u=seq[i];u.setValue(gl,value[u.id],textures)}}}const RePathPart=/(\w+)(\])?(\[|\.)?/g;function addUniform(container,uniformObject){container.seq.push(uniformObject),container.map[uniformObject.id]=uniformObject}function parseUniform(activeInfo,addr,container){const path=activeInfo.name,pathLength=path.length;for(RePathPart.lastIndex=0;;){const match=RePathPart.exec(path),matchEnd=RePathPart.lastIndex;let id=match[1];const idIsIndex="]"===match[2],subscript=match[3];if(idIsIndex&&(id|=0),void 0===subscript||"["===subscript&&matchEnd+2===pathLength){addUniform(container,void 0===subscript?new SingleUniform(id,activeInfo,addr):new PureArrayUniform(id,activeInfo,addr));break}{let next=container.map[id];void 0===next&&(next=new StructuredUniform(id),addUniform(container,next)),container=next}}}class WebGLUniforms{constructor(gl,program){this.seq=[],this.map={};const n=gl.getProgramParameter(program,gl.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const info=gl.getActiveUniform(program,i);parseUniform(info,gl.getUniformLocation(program,info.name),this)}}setValue(gl,name,value,textures){const u=this.map[name];void 0!==u&&u.setValue(gl,value,textures)}setOptional(gl,object,name){const v=object[name];void 0!==v&&this.setValue(gl,name,v)}static upload(gl,seq,values,textures){for(let i=0,n=seq.length;i!==n;++i){const u=seq[i],v=values[u.id];!1!==v.needsUpdate&&u.setValue(gl,v.value,textures)}}static seqWithValue(seq,values){const r=[];for(let i=0,n=seq.length;i!==n;++i){const u=seq[i];u.id in values&&r.push(u)}return r}}function WebGLShader(gl,type,string){const shader=gl.createShader(type);return gl.shaderSource(shader,string),gl.compileShader(shader),shader}let programIdCount=0;function getShaderErrors(gl,shader,type){const status=gl.getShaderParameter(shader,gl.COMPILE_STATUS),errors=gl.getShaderInfoLog(shader).trim();if(status&&""===errors)return"";const errorMatches=/ERROR: 0:(\d+)/.exec(errors);if(errorMatches){const errorLine=parseInt(errorMatches[1]);return type.toUpperCase()+"\n\n"+errors+"\n\n"+function handleSource(string,errorLine){const lines=string.split("\n"),lines2=[],from=Math.max(errorLine-6,0),to=Math.min(errorLine+6,lines.length);for(let i=from;i<to;i++){const line=i+1;lines2.push(`${line===errorLine?">":" "} ${line}: ${lines[i]}`)}return lines2.join("\n")}(gl.getShaderSource(shader),errorLine)}return errors}function getTexelEncodingFunction(functionName,colorSpace){const components=function getEncodingComponents(colorSpace){switch(colorSpace){case LinearSRGBColorSpace:return["Linear","( value )"];case SRGBColorSpace:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",colorSpace),["Linear","( value )"]}}(colorSpace);return"vec4 "+functionName+"( vec4 value ) { return LinearTo"+components[0]+components[1]+"; }"}function getToneMappingFunction(functionName,toneMapping){let toneMappingName;switch(toneMapping){case LinearToneMapping:toneMappingName="Linear";break;case ReinhardToneMapping:toneMappingName="Reinhard";break;case CineonToneMapping:toneMappingName="OptimizedCineon";break;case ACESFilmicToneMapping:toneMappingName="ACESFilmic";break;case CustomToneMapping:toneMappingName="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",toneMapping),toneMappingName="Linear"}return"vec3 "+functionName+"( vec3 color ) { return "+toneMappingName+"ToneMapping( color ); }"}function filterEmptyLine(string){return""!==string}function replaceLightNums(string,parameters){const numSpotLightCoords=parameters.numSpotLightShadows+parameters.numSpotLightMaps-parameters.numSpotLightShadowsWithMaps;return string.replace(/NUM_DIR_LIGHTS/g,parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g,parameters.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,parameters.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,numSpotLightCoords).replace(/NUM_RECT_AREA_LIGHTS/g,parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g,parameters.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,parameters.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,parameters.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,parameters.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,parameters.numPointLightShadows)}function replaceClippingPlaneNums(string,parameters){return string.replace(/NUM_CLIPPING_PLANES/g,parameters.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,parameters.numClippingPlanes-parameters.numClipIntersection)}const includePattern=/^[ \t]*#include +<([\w\d./]+)>/gm;function resolveIncludes(string){return string.replace(includePattern,includeReplacer)}function includeReplacer(match,include){const string=ShaderChunk[include];if(void 0===string)throw new Error("Can not resolve #include <"+include+">");return resolveIncludes(string)}const unrollLoopPattern=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function unrollLoops(string){return string.replace(unrollLoopPattern,loopReplacer)}function loopReplacer(match,start,end,snippet){let string="";for(let i=parseInt(start);i<parseInt(end);i++)string+=snippet.replace(/\[\s*i\s*\]/g,"[ "+i+" ]").replace(/UNROLLED_LOOP_INDEX/g,i);return string}function generatePrecision(parameters){let precisionstring="precision "+parameters.precision+" float;\nprecision "+parameters.precision+" int;";return"highp"===parameters.precision?precisionstring+="\n#define HIGH_PRECISION":"mediump"===parameters.precision?precisionstring+="\n#define MEDIUM_PRECISION":"lowp"===parameters.precision&&(precisionstring+="\n#define LOW_PRECISION"),precisionstring}function WebGLProgram(renderer,cacheKey,parameters,bindingStates){const gl=renderer.getContext(),defines=parameters.defines;let vertexShader=parameters.vertexShader,fragmentShader=parameters.fragmentShader;const shadowMapTypeDefine=function generateShadowMapTypeDefine(parameters){let shadowMapTypeDefine="SHADOWMAP_TYPE_BASIC";return parameters.shadowMapType===PCFShadowMap?shadowMapTypeDefine="SHADOWMAP_TYPE_PCF":parameters.shadowMapType===PCFSoftShadowMap?shadowMapTypeDefine="SHADOWMAP_TYPE_PCF_SOFT":parameters.shadowMapType===VSMShadowMap&&(shadowMapTypeDefine="SHADOWMAP_TYPE_VSM"),shadowMapTypeDefine}(parameters),envMapTypeDefine=function generateEnvMapTypeDefine(parameters){let envMapTypeDefine="ENVMAP_TYPE_CUBE";if(parameters.envMap)switch(parameters.envMapMode){case CubeReflectionMapping:case CubeRefractionMapping:envMapTypeDefine="ENVMAP_TYPE_CUBE";break;case CubeUVReflectionMapping:envMapTypeDefine="ENVMAP_TYPE_CUBE_UV"}return envMapTypeDefine}(parameters),envMapModeDefine=function generateEnvMapModeDefine(parameters){let envMapModeDefine="ENVMAP_MODE_REFLECTION";parameters.envMap&&parameters.envMapMode===CubeRefractionMapping&&(envMapModeDefine="ENVMAP_MODE_REFRACTION");return envMapModeDefine}(parameters),envMapBlendingDefine=function generateEnvMapBlendingDefine(parameters){let envMapBlendingDefine="ENVMAP_BLENDING_NONE";if(parameters.envMap)switch(parameters.combine){case MultiplyOperation:envMapBlendingDefine="ENVMAP_BLENDING_MULTIPLY";break;case MixOperation:envMapBlendingDefine="ENVMAP_BLENDING_MIX";break;case AddOperation:envMapBlendingDefine="ENVMAP_BLENDING_ADD"}return envMapBlendingDefine}(parameters),envMapCubeUVSize=function generateCubeUVSize(parameters){const imageHeight=parameters.envMapCubeUVHeight;if(null===imageHeight)return null;const maxMip=Math.log2(imageHeight)-2,texelHeight=1/imageHeight;return{texelWidth:1/(3*Math.max(Math.pow(2,maxMip),112)),texelHeight,maxMip}}(parameters),customExtensions=parameters.isWebGL2?"":function generateExtensions(parameters){return[parameters.extensionDerivatives||parameters.envMapCubeUVHeight||parameters.bumpMap||parameters.normalMapTangentSpace||parameters.clearcoatNormalMap||parameters.flatShading||"physical"===parameters.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(parameters.extensionFragDepth||parameters.logarithmicDepthBuffer)&&parameters.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",parameters.extensionDrawBuffers&&parameters.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(parameters.extensionShaderTextureLOD||parameters.envMap||parameters.transmission)&&parameters.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(filterEmptyLine).join("\n")}(parameters),customDefines=function generateDefines(defines){const chunks=[];for(const name in defines){const value=defines[name];!1!==value&&chunks.push("#define "+name+" "+value)}return chunks.join("\n")}(defines),program=gl.createProgram();let prefixVertex,prefixFragment,versionString=parameters.glslVersion?"#version "+parameters.glslVersion+"\n":"";parameters.isRawShaderMaterial?(prefixVertex=[customDefines].filter(filterEmptyLine).join("\n"),prefixVertex.length>0&&(prefixVertex+="\n"),prefixFragment=[customExtensions,customDefines].filter(filterEmptyLine).join("\n"),prefixFragment.length>0&&(prefixFragment+="\n")):(prefixVertex=[generatePrecision(parameters),"#define SHADER_NAME "+parameters.shaderName,customDefines,parameters.instancing?"#define USE_INSTANCING":"",parameters.instancingColor?"#define USE_INSTANCING_COLOR":"",parameters.useFog&&parameters.fog?"#define USE_FOG":"",parameters.useFog&&parameters.fogExp2?"#define FOG_EXP2":"",parameters.map?"#define USE_MAP":"",parameters.envMap?"#define USE_ENVMAP":"",parameters.envMap?"#define "+envMapModeDefine:"",parameters.lightMap?"#define USE_LIGHTMAP":"",parameters.aoMap?"#define USE_AOMAP":"",parameters.bumpMap?"#define USE_BUMPMAP":"",parameters.normalMap?"#define USE_NORMALMAP":"",parameters.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",parameters.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",parameters.displacementMap?"#define USE_DISPLACEMENTMAP":"",parameters.emissiveMap?"#define USE_EMISSIVEMAP":"",parameters.clearcoatMap?"#define USE_CLEARCOATMAP":"",parameters.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",parameters.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",parameters.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",parameters.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",parameters.specularMap?"#define USE_SPECULARMAP":"",parameters.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",parameters.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",parameters.roughnessMap?"#define USE_ROUGHNESSMAP":"",parameters.metalnessMap?"#define USE_METALNESSMAP":"",parameters.alphaMap?"#define USE_ALPHAMAP":"",parameters.transmission?"#define USE_TRANSMISSION":"",parameters.transmissionMap?"#define USE_TRANSMISSIONMAP":"",parameters.thicknessMap?"#define USE_THICKNESSMAP":"",parameters.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",parameters.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",parameters.mapUv?"#define MAP_UV "+parameters.mapUv:"",parameters.alphaMapUv?"#define ALPHAMAP_UV "+parameters.alphaMapUv:"",parameters.lightMapUv?"#define LIGHTMAP_UV "+parameters.lightMapUv:"",parameters.aoMapUv?"#define AOMAP_UV "+parameters.aoMapUv:"",parameters.emissiveMapUv?"#define EMISSIVEMAP_UV "+parameters.emissiveMapUv:"",parameters.bumpMapUv?"#define BUMPMAP_UV "+parameters.bumpMapUv:"",parameters.normalMapUv?"#define NORMALMAP_UV "+parameters.normalMapUv:"",parameters.displacementMapUv?"#define DISPLACEMENTMAP_UV "+parameters.displacementMapUv:"",parameters.metalnessMapUv?"#define METALNESSMAP_UV "+parameters.metalnessMapUv:"",parameters.roughnessMapUv?"#define ROUGHNESSMAP_UV "+parameters.roughnessMapUv:"",parameters.clearcoatMapUv?"#define CLEARCOATMAP_UV "+parameters.clearcoatMapUv:"",parameters.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+parameters.clearcoatNormalMapUv:"",parameters.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+parameters.clearcoatRoughnessMapUv:"",parameters.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+parameters.iridescenceMapUv:"",parameters.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+parameters.iridescenceThicknessMapUv:"",parameters.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+parameters.sheenColorMapUv:"",parameters.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+parameters.sheenRoughnessMapUv:"",parameters.specularMapUv?"#define SPECULARMAP_UV "+parameters.specularMapUv:"",parameters.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+parameters.specularColorMapUv:"",parameters.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+parameters.specularIntensityMapUv:"",parameters.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+parameters.transmissionMapUv:"",parameters.thicknessMapUv?"#define THICKNESSMAP_UV "+parameters.thicknessMapUv:"",parameters.vertexTangents?"#define USE_TANGENT":"",parameters.vertexColors?"#define USE_COLOR":"",parameters.vertexAlphas?"#define USE_COLOR_ALPHA":"",parameters.vertexUv1s?"#define USE_UV1":"",parameters.vertexUv2s?"#define USE_UV2":"",parameters.vertexUv3s?"#define USE_UV3":"",parameters.pointsUvs?"#define USE_POINTS_UV":"",parameters.flatShading?"#define FLAT_SHADED":"",parameters.skinning?"#define USE_SKINNING":"",parameters.morphTargets?"#define USE_MORPHTARGETS":"",parameters.morphNormals&&!1===parameters.flatShading?"#define USE_MORPHNORMALS":"",parameters.morphColors&&parameters.isWebGL2?"#define USE_MORPHCOLORS":"",parameters.morphTargetsCount>0&&parameters.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",parameters.morphTargetsCount>0&&parameters.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+parameters.morphTextureStride:"",parameters.morphTargetsCount>0&&parameters.isWebGL2?"#define MORPHTARGETS_COUNT "+parameters.morphTargetsCount:"",parameters.doubleSided?"#define DOUBLE_SIDED":"",parameters.flipSided?"#define FLIP_SIDED":"",parameters.shadowMapEnabled?"#define USE_SHADOWMAP":"",parameters.shadowMapEnabled?"#define "+shadowMapTypeDefine:"",parameters.sizeAttenuation?"#define USE_SIZEATTENUATION":"",parameters.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",parameters.logarithmicDepthBuffer&&parameters.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","\tattribute vec2 uv1;","#endif","#ifdef USE_UV2","\tattribute vec2 uv2;","#endif","#ifdef USE_UV3","\tattribute vec2 uv3;","#endif","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(filterEmptyLine).join("\n"),prefixFragment=[customExtensions,generatePrecision(parameters),"#define SHADER_NAME "+parameters.shaderName,customDefines,parameters.useFog&&parameters.fog?"#define USE_FOG":"",parameters.useFog&&parameters.fogExp2?"#define FOG_EXP2":"",parameters.map?"#define USE_MAP":"",parameters.matcap?"#define USE_MATCAP":"",parameters.envMap?"#define USE_ENVMAP":"",parameters.envMap?"#define "+envMapTypeDefine:"",parameters.envMap?"#define "+envMapModeDefine:"",parameters.envMap?"#define "+envMapBlendingDefine:"",envMapCubeUVSize?"#define CUBEUV_TEXEL_WIDTH "+envMapCubeUVSize.texelWidth:"",envMapCubeUVSize?"#define CUBEUV_TEXEL_HEIGHT "+envMapCubeUVSize.texelHeight:"",envMapCubeUVSize?"#define CUBEUV_MAX_MIP "+envMapCubeUVSize.maxMip+".0":"",parameters.lightMap?"#define USE_LIGHTMAP":"",parameters.aoMap?"#define USE_AOMAP":"",parameters.bumpMap?"#define USE_BUMPMAP":"",parameters.normalMap?"#define USE_NORMALMAP":"",parameters.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",parameters.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",parameters.emissiveMap?"#define USE_EMISSIVEMAP":"",parameters.clearcoat?"#define USE_CLEARCOAT":"",parameters.clearcoatMap?"#define USE_CLEARCOATMAP":"",parameters.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",parameters.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",parameters.iridescence?"#define USE_IRIDESCENCE":"",parameters.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",parameters.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",parameters.specularMap?"#define USE_SPECULARMAP":"",parameters.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",parameters.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",parameters.roughnessMap?"#define USE_ROUGHNESSMAP":"",parameters.metalnessMap?"#define USE_METALNESSMAP":"",parameters.alphaMap?"#define USE_ALPHAMAP":"",parameters.alphaTest?"#define USE_ALPHATEST":"",parameters.sheen?"#define USE_SHEEN":"",parameters.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",parameters.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",parameters.transmission?"#define USE_TRANSMISSION":"",parameters.transmissionMap?"#define USE_TRANSMISSIONMAP":"",parameters.thicknessMap?"#define USE_THICKNESSMAP":"",parameters.vertexTangents?"#define USE_TANGENT":"",parameters.vertexColors||parameters.instancingColor?"#define USE_COLOR":"",parameters.vertexAlphas?"#define USE_COLOR_ALPHA":"",parameters.vertexUv1s?"#define USE_UV1":"",parameters.vertexUv2s?"#define USE_UV2":"",parameters.vertexUv3s?"#define USE_UV3":"",parameters.pointsUvs?"#define USE_POINTS_UV":"",parameters.gradientMap?"#define USE_GRADIENTMAP":"",parameters.flatShading?"#define FLAT_SHADED":"",parameters.doubleSided?"#define DOUBLE_SIDED":"",parameters.flipSided?"#define FLIP_SIDED":"",parameters.shadowMapEnabled?"#define USE_SHADOWMAP":"",parameters.shadowMapEnabled?"#define "+shadowMapTypeDefine:"",parameters.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",parameters.useLegacyLights?"#define LEGACY_LIGHTS":"",parameters.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",parameters.logarithmicDepthBuffer&&parameters.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",parameters.toneMapping!==NoToneMapping?"#define TONE_MAPPING":"",parameters.toneMapping!==NoToneMapping?ShaderChunk.tonemapping_pars_fragment:"",parameters.toneMapping!==NoToneMapping?getToneMappingFunction("toneMapping",parameters.toneMapping):"",parameters.dithering?"#define DITHERING":"",parameters.opaque?"#define OPAQUE":"",ShaderChunk.encodings_pars_fragment,getTexelEncodingFunction("linearToOutputTexel",parameters.outputColorSpace),parameters.useDepthPacking?"#define DEPTH_PACKING "+parameters.depthPacking:"","\n"].filter(filterEmptyLine).join("\n")),vertexShader=resolveIncludes(vertexShader),vertexShader=replaceLightNums(vertexShader,parameters),vertexShader=replaceClippingPlaneNums(vertexShader,parameters),fragmentShader=resolveIncludes(fragmentShader),fragmentShader=replaceLightNums(fragmentShader,parameters),fragmentShader=replaceClippingPlaneNums(fragmentShader,parameters),vertexShader=unrollLoops(vertexShader),fragmentShader=unrollLoops(fragmentShader),parameters.isWebGL2&&!0!==parameters.isRawShaderMaterial&&(versionString="#version 300 es\n",prefixVertex=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+prefixVertex,prefixFragment=["#define varying in",parameters.glslVersion===GLSL3?"":"layout(location = 0) out highp vec4 pc_fragColor;",parameters.glslVersion===GLSL3?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+prefixFragment);const vertexGlsl=versionString+prefixVertex+vertexShader,fragmentGlsl=versionString+prefixFragment+fragmentShader,glVertexShader=WebGLShader(gl,gl.VERTEX_SHADER,vertexGlsl),glFragmentShader=WebGLShader(gl,gl.FRAGMENT_SHADER,fragmentGlsl);if(gl.attachShader(program,glVertexShader),gl.attachShader(program,glFragmentShader),void 0!==parameters.index0AttributeName?gl.bindAttribLocation(program,0,parameters.index0AttributeName):!0===parameters.morphTargets&&gl.bindAttribLocation(program,0,"position"),gl.linkProgram(program),renderer.debug.checkShaderErrors){const programLog=gl.getProgramInfoLog(program).trim(),vertexLog=gl.getShaderInfoLog(glVertexShader).trim(),fragmentLog=gl.getShaderInfoLog(glFragmentShader).trim();let runnable=!0,haveDiagnostics=!0;if(!1===gl.getProgramParameter(program,gl.LINK_STATUS))if(runnable=!1,"function"==typeof renderer.debug.onShaderError)renderer.debug.onShaderError(gl,program,glVertexShader,glFragmentShader);else{const vertexErrors=getShaderErrors(gl,glVertexShader,"vertex"),fragmentErrors=getShaderErrors(gl,glFragmentShader,"fragment");console.error("THREE.WebGLProgram: Shader Error "+gl.getError()+" - VALIDATE_STATUS "+gl.getProgramParameter(program,gl.VALIDATE_STATUS)+"\n\nProgram Info Log: "+programLog+"\n"+vertexErrors+"\n"+fragmentErrors)}else""!==programLog?console.warn("THREE.WebGLProgram: Program Info Log:",programLog):""!==vertexLog&&""!==fragmentLog||(haveDiagnostics=!1);haveDiagnostics&&(this.diagnostics={runnable,programLog,vertexShader:{log:vertexLog,prefix:prefixVertex},fragmentShader:{log:fragmentLog,prefix:prefixFragment}})}let cachedUniforms,cachedAttributes;return gl.deleteShader(glVertexShader),gl.deleteShader(glFragmentShader),this.getUniforms=function(){return void 0===cachedUniforms&&(cachedUniforms=new WebGLUniforms(gl,program)),cachedUniforms},this.getAttributes=function(){return void 0===cachedAttributes&&(cachedAttributes=function fetchAttributeLocations(gl,program){const attributes={},n=gl.getProgramParameter(program,gl.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const info=gl.getActiveAttrib(program,i),name=info.name;let locationSize=1;info.type===gl.FLOAT_MAT2&&(locationSize=2),info.type===gl.FLOAT_MAT3&&(locationSize=3),info.type===gl.FLOAT_MAT4&&(locationSize=4),attributes[name]={type:info.type,location:gl.getAttribLocation(program,name),locationSize}}return attributes}(gl,program)),cachedAttributes},this.destroy=function(){bindingStates.releaseStatesOfProgram(this),gl.deleteProgram(program),this.program=void 0},this.name=parameters.shaderName,this.id=programIdCount++,this.cacheKey=cacheKey,this.usedTimes=1,this.program=program,this.vertexShader=glVertexShader,this.fragmentShader=glFragmentShader,this}let _id=0;class WebGLShaderCache{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(material){const vertexShader=material.vertexShader,fragmentShader=material.fragmentShader,vertexShaderStage=this._getShaderStage(vertexShader),fragmentShaderStage=this._getShaderStage(fragmentShader),materialShaders=this._getShaderCacheForMaterial(material);return!1===materialShaders.has(vertexShaderStage)&&(materialShaders.add(vertexShaderStage),vertexShaderStage.usedTimes++),!1===materialShaders.has(fragmentShaderStage)&&(materialShaders.add(fragmentShaderStage),fragmentShaderStage.usedTimes++),this}remove(material){const materialShaders=this.materialCache.get(material);for(const shaderStage of materialShaders)shaderStage.usedTimes--,0===shaderStage.usedTimes&&this.shaderCache.delete(shaderStage.code);return this.materialCache.delete(material),this}getVertexShaderID(material){return this._getShaderStage(material.vertexShader).id}getFragmentShaderID(material){return this._getShaderStage(material.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(material){const cache=this.materialCache;let set=cache.get(material);return void 0===set&&(set=new Set,cache.set(material,set)),set}_getShaderStage(code){const cache=this.shaderCache;let stage=cache.get(code);return void 0===stage&&(stage=new WebGLShaderStage(code),cache.set(code,stage)),stage}}class WebGLShaderStage{constructor(code){this.id=_id++,this.code=code,this.usedTimes=0}}function WebGLPrograms(renderer,cubemaps,cubeuvmaps,extensions,capabilities,bindingStates,clipping){const _programLayers=new Layers,_customShaders=new WebGLShaderCache,programs=[],IS_WEBGL2=capabilities.isWebGL2,logarithmicDepthBuffer=capabilities.logarithmicDepthBuffer,SUPPORTS_VERTEX_TEXTURES=capabilities.vertexTextures;let precision=capabilities.precision;const shaderIDs={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function getChannel(value){return 1===value?"uv1":2===value?"uv2":3===value?"uv3":"uv"}return{getParameters:function getParameters(material,lights,shadows,scene,object){const fog=scene.fog,geometry=object.geometry,environment=material.isMeshStandardMaterial?scene.environment:null,envMap=(material.isMeshStandardMaterial?cubeuvmaps:cubemaps).get(material.envMap||environment),envMapCubeUVHeight=envMap&&envMap.mapping===CubeUVReflectionMapping?envMap.image.height:null,shaderID=shaderIDs[material.type];null!==material.precision&&(precision=capabilities.getMaxPrecision(material.precision),precision!==material.precision&&console.warn("THREE.WebGLProgram.getParameters:",material.precision,"not supported, using",precision,"instead."));const morphAttribute=geometry.morphAttributes.position||geometry.morphAttributes.normal||geometry.morphAttributes.color,morphTargetsCount=void 0!==morphAttribute?morphAttribute.length:0;let vertexShader,fragmentShader,customVertexShaderID,customFragmentShaderID,morphTextureStride=0;if(void 0!==geometry.morphAttributes.position&&(morphTextureStride=1),void 0!==geometry.morphAttributes.normal&&(morphTextureStride=2),void 0!==geometry.morphAttributes.color&&(morphTextureStride=3),shaderID){const shader=ShaderLib[shaderID];vertexShader=shader.vertexShader,fragmentShader=shader.fragmentShader}else vertexShader=material.vertexShader,fragmentShader=material.fragmentShader,_customShaders.update(material),customVertexShaderID=_customShaders.getVertexShaderID(material),customFragmentShaderID=_customShaders.getFragmentShaderID(material);const currentRenderTarget=renderer.getRenderTarget(),IS_INSTANCEDMESH=!0===object.isInstancedMesh,HAS_MAP=!!material.map,HAS_MATCAP=!!material.matcap,HAS_ENVMAP=!!envMap,HAS_AOMAP=!!material.aoMap,HAS_LIGHTMAP=!!material.lightMap,HAS_BUMPMAP=!!material.bumpMap,HAS_NORMALMAP=!!material.normalMap,HAS_DISPLACEMENTMAP=!!material.displacementMap,HAS_EMISSIVEMAP=!!material.emissiveMap,HAS_METALNESSMAP=!!material.metalnessMap,HAS_ROUGHNESSMAP=!!material.roughnessMap,HAS_CLEARCOAT=material.clearcoat>0,HAS_IRIDESCENCE=material.iridescence>0,HAS_SHEEN=material.sheen>0,HAS_TRANSMISSION=material.transmission>0,HAS_CLEARCOATMAP=HAS_CLEARCOAT&&!!material.clearcoatMap,HAS_CLEARCOAT_NORMALMAP=HAS_CLEARCOAT&&!!material.clearcoatNormalMap,HAS_CLEARCOAT_ROUGHNESSMAP=HAS_CLEARCOAT&&!!material.clearcoatRoughnessMap,HAS_IRIDESCENCEMAP=HAS_IRIDESCENCE&&!!material.iridescenceMap,HAS_IRIDESCENCE_THICKNESSMAP=HAS_IRIDESCENCE&&!!material.iridescenceThicknessMap,HAS_SHEEN_COLORMAP=HAS_SHEEN&&!!material.sheenColorMap,HAS_SHEEN_ROUGHNESSMAP=HAS_SHEEN&&!!material.sheenRoughnessMap,HAS_SPECULARMAP=!!material.specularMap,HAS_SPECULAR_COLORMAP=!!material.specularColorMap,HAS_SPECULAR_INTENSITYMAP=!!material.specularIntensityMap,HAS_TRANSMISSIONMAP=HAS_TRANSMISSION&&!!material.transmissionMap,HAS_THICKNESSMAP=HAS_TRANSMISSION&&!!material.thicknessMap,HAS_GRADIENTMAP=!!material.gradientMap,HAS_ALPHAMAP=!!material.alphaMap,HAS_ALPHATEST=material.alphaTest>0,HAS_EXTENSIONS=!!material.extensions,HAS_ATTRIBUTE_UV1=!!geometry.attributes.uv1,HAS_ATTRIBUTE_UV2=!!geometry.attributes.uv2,HAS_ATTRIBUTE_UV3=!!geometry.attributes.uv3;return{isWebGL2:IS_WEBGL2,shaderID,shaderName:material.type,vertexShader,fragmentShader,defines:material.defines,customVertexShaderID,customFragmentShaderID,isRawShaderMaterial:!0===material.isRawShaderMaterial,glslVersion:material.glslVersion,precision,instancing:IS_INSTANCEDMESH,instancingColor:IS_INSTANCEDMESH&&null!==object.instanceColor,supportsVertexTextures:SUPPORTS_VERTEX_TEXTURES,outputColorSpace:null===currentRenderTarget?renderer.outputColorSpace:!0===currentRenderTarget.isXRRenderTarget?currentRenderTarget.texture.colorSpace:LinearSRGBColorSpace,map:HAS_MAP,matcap:HAS_MATCAP,envMap:HAS_ENVMAP,envMapMode:HAS_ENVMAP&&envMap.mapping,envMapCubeUVHeight,aoMap:HAS_AOMAP,lightMap:HAS_LIGHTMAP,bumpMap:HAS_BUMPMAP,normalMap:HAS_NORMALMAP,displacementMap:SUPPORTS_VERTEX_TEXTURES&&HAS_DISPLACEMENTMAP,emissiveMap:HAS_EMISSIVEMAP,normalMapObjectSpace:HAS_NORMALMAP&&material.normalMapType===ObjectSpaceNormalMap,normalMapTangentSpace:HAS_NORMALMAP&&material.normalMapType===TangentSpaceNormalMap,metalnessMap:HAS_METALNESSMAP,roughnessMap:HAS_ROUGHNESSMAP,clearcoat:HAS_CLEARCOAT,clearcoatMap:HAS_CLEARCOATMAP,clearcoatNormalMap:HAS_CLEARCOAT_NORMALMAP,clearcoatRoughnessMap:HAS_CLEARCOAT_ROUGHNESSMAP,iridescence:HAS_IRIDESCENCE,iridescenceMap:HAS_IRIDESCENCEMAP,iridescenceThicknessMap:HAS_IRIDESCENCE_THICKNESSMAP,sheen:HAS_SHEEN,sheenColorMap:HAS_SHEEN_COLORMAP,sheenRoughnessMap:HAS_SHEEN_ROUGHNESSMAP,specularMap:HAS_SPECULARMAP,specularColorMap:HAS_SPECULAR_COLORMAP,specularIntensityMap:HAS_SPECULAR_INTENSITYMAP,transmission:HAS_TRANSMISSION,transmissionMap:HAS_TRANSMISSIONMAP,thicknessMap:HAS_THICKNESSMAP,gradientMap:HAS_GRADIENTMAP,opaque:!1===material.transparent&&material.blending===NormalBlending,alphaMap:HAS_ALPHAMAP,alphaTest:HAS_ALPHATEST,combine:material.combine,mapUv:HAS_MAP&&getChannel(material.map.channel),aoMapUv:HAS_AOMAP&&getChannel(material.aoMap.channel),lightMapUv:HAS_LIGHTMAP&&getChannel(material.lightMap.channel),bumpMapUv:HAS_BUMPMAP&&getChannel(material.bumpMap.channel),normalMapUv:HAS_NORMALMAP&&getChannel(material.normalMap.channel),displacementMapUv:HAS_DISPLACEMENTMAP&&getChannel(material.displacementMap.channel),emissiveMapUv:HAS_EMISSIVEMAP&&getChannel(material.emissiveMap.channel),metalnessMapUv:HAS_METALNESSMAP&&getChannel(material.metalnessMap.channel),roughnessMapUv:HAS_ROUGHNESSMAP&&getChannel(material.roughnessMap.channel),clearcoatMapUv:HAS_CLEARCOATMAP&&getChannel(material.clearcoatMap.channel),clearcoatNormalMapUv:HAS_CLEARCOAT_NORMALMAP&&getChannel(material.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:HAS_CLEARCOAT_ROUGHNESSMAP&&getChannel(material.clearcoatRoughnessMap.channel),iridescenceMapUv:HAS_IRIDESCENCEMAP&&getChannel(material.iridescenceMap.channel),iridescenceThicknessMapUv:HAS_IRIDESCENCE_THICKNESSMAP&&getChannel(material.iridescenceThicknessMap.channel),sheenColorMapUv:HAS_SHEEN_COLORMAP&&getChannel(material.sheenColorMap.channel),sheenRoughnessMapUv:HAS_SHEEN_ROUGHNESSMAP&&getChannel(material.sheenRoughnessMap.channel),specularMapUv:HAS_SPECULARMAP&&getChannel(material.specularMap.channel),specularColorMapUv:HAS_SPECULAR_COLORMAP&&getChannel(material.specularColorMap.channel),specularIntensityMapUv:HAS_SPECULAR_INTENSITYMAP&&getChannel(material.specularIntensityMap.channel),transmissionMapUv:HAS_TRANSMISSIONMAP&&getChannel(material.transmissionMap.channel),thicknessMapUv:HAS_THICKNESSMAP&&getChannel(material.thicknessMap.channel),alphaMapUv:HAS_ALPHAMAP&&getChannel(material.alphaMap.channel),vertexTangents:HAS_NORMALMAP&&!!geometry.attributes.tangent,vertexColors:material.vertexColors,vertexAlphas:!0===material.vertexColors&&!!geometry.attributes.color&&4===geometry.attributes.color.itemSize,vertexUv1s:HAS_ATTRIBUTE_UV1,vertexUv2s:HAS_ATTRIBUTE_UV2,vertexUv3s:HAS_ATTRIBUTE_UV3,pointsUvs:!0===object.isPoints&&!!geometry.attributes.uv&&(HAS_MAP||HAS_ALPHAMAP),fog:!!fog,useFog:!0===material.fog,fogExp2:fog&&fog.isFogExp2,flatShading:!0===material.flatShading,sizeAttenuation:!0===material.sizeAttenuation,logarithmicDepthBuffer,skinning:!0===object.isSkinnedMesh,morphTargets:void 0!==geometry.morphAttributes.position,morphNormals:void 0!==geometry.morphAttributes.normal,morphColors:void 0!==geometry.morphAttributes.color,morphTargetsCount,morphTextureStride,numDirLights:lights.directional.length,numPointLights:lights.point.length,numSpotLights:lights.spot.length,numSpotLightMaps:lights.spotLightMap.length,numRectAreaLights:lights.rectArea.length,numHemiLights:lights.hemi.length,numDirLightShadows:lights.directionalShadowMap.length,numPointLightShadows:lights.pointShadowMap.length,numSpotLightShadows:lights.spotShadowMap.length,numSpotLightShadowsWithMaps:lights.numSpotLightShadowsWithMaps,numClippingPlanes:clipping.numPlanes,numClipIntersection:clipping.numIntersection,dithering:material.dithering,shadowMapEnabled:renderer.shadowMap.enabled&&shadows.length>0,shadowMapType:renderer.shadowMap.type,toneMapping:material.toneMapped?renderer.toneMapping:NoToneMapping,useLegacyLights:renderer.useLegacyLights,premultipliedAlpha:material.premultipliedAlpha,doubleSided:material.side===DoubleSide,flipSided:material.side===BackSide,useDepthPacking:material.depthPacking>=0,depthPacking:material.depthPacking||0,index0AttributeName:material.index0AttributeName,extensionDerivatives:HAS_EXTENSIONS&&!0===material.extensions.derivatives,extensionFragDepth:HAS_EXTENSIONS&&!0===material.extensions.fragDepth,extensionDrawBuffers:HAS_EXTENSIONS&&!0===material.extensions.drawBuffers,extensionShaderTextureLOD:HAS_EXTENSIONS&&!0===material.extensions.shaderTextureLOD,rendererExtensionFragDepth:IS_WEBGL2||extensions.has("EXT_frag_depth"),rendererExtensionDrawBuffers:IS_WEBGL2||extensions.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:IS_WEBGL2||extensions.has("EXT_shader_texture_lod"),customProgramCacheKey:material.customProgramCacheKey()}},getProgramCacheKey:function getProgramCacheKey(parameters){const array=[];if(parameters.shaderID?array.push(parameters.shaderID):(array.push(parameters.customVertexShaderID),array.push(parameters.customFragmentShaderID)),void 0!==parameters.defines)for(const name in parameters.defines)array.push(name),array.push(parameters.defines[name]);return!1===parameters.isRawShaderMaterial&&(!function getProgramCacheKeyParameters(array,parameters){array.push(parameters.precision),array.push(parameters.outputColorSpace),array.push(parameters.envMapMode),array.push(parameters.envMapCubeUVHeight),array.push(parameters.mapUv),array.push(parameters.alphaMapUv),array.push(parameters.lightMapUv),array.push(parameters.aoMapUv),array.push(parameters.bumpMapUv),array.push(parameters.normalMapUv),array.push(parameters.displacementMapUv),array.push(parameters.emissiveMapUv),array.push(parameters.metalnessMapUv),array.push(parameters.roughnessMapUv),array.push(parameters.clearcoatMapUv),array.push(parameters.clearcoatNormalMapUv),array.push(parameters.clearcoatRoughnessMapUv),array.push(parameters.iridescenceMapUv),array.push(parameters.iridescenceThicknessMapUv),array.push(parameters.sheenColorMapUv),array.push(parameters.sheenRoughnessMapUv),array.push(parameters.specularMapUv),array.push(parameters.specularColorMapUv),array.push(parameters.specularIntensityMapUv),array.push(parameters.transmissionMapUv),array.push(parameters.thicknessMapUv),array.push(parameters.combine),array.push(parameters.fogExp2),array.push(parameters.sizeAttenuation),array.push(parameters.morphTargetsCount),array.push(parameters.morphAttributeCount),array.push(parameters.numDirLights),array.push(parameters.numPointLights),array.push(parameters.numSpotLights),array.push(parameters.numSpotLightMaps),array.push(parameters.numHemiLights),array.push(parameters.numRectAreaLights),array.push(parameters.numDirLightShadows),array.push(parameters.numPointLightShadows),array.push(parameters.numSpotLightShadows),array.push(parameters.numSpotLightShadowsWithMaps),array.push(parameters.shadowMapType),array.push(parameters.toneMapping),array.push(parameters.numClippingPlanes),array.push(parameters.numClipIntersection),array.push(parameters.depthPacking)}(array,parameters),function getProgramCacheKeyBooleans(array,parameters){_programLayers.disableAll(),parameters.isWebGL2&&_programLayers.enable(0);parameters.supportsVertexTextures&&_programLayers.enable(1);parameters.instancing&&_programLayers.enable(2);parameters.instancingColor&&_programLayers.enable(3);parameters.matcap&&_programLayers.enable(4);parameters.envMap&&_programLayers.enable(5);parameters.normalMapObjectSpace&&_programLayers.enable(6);parameters.normalMapTangentSpace&&_programLayers.enable(7);parameters.clearcoat&&_programLayers.enable(8);parameters.iridescence&&_programLayers.enable(9);parameters.alphaTest&&_programLayers.enable(10);parameters.vertexColors&&_programLayers.enable(11);parameters.vertexAlphas&&_programLayers.enable(12);parameters.vertexUv1s&&_programLayers.enable(13);parameters.vertexUv2s&&_programLayers.enable(14);parameters.vertexUv3s&&_programLayers.enable(15);parameters.vertexTangents&&_programLayers.enable(16);array.push(_programLayers.mask),_programLayers.disableAll(),parameters.fog&&_programLayers.enable(0);parameters.useFog&&_programLayers.enable(1);parameters.flatShading&&_programLayers.enable(2);parameters.logarithmicDepthBuffer&&_programLayers.enable(3);parameters.skinning&&_programLayers.enable(4);parameters.morphTargets&&_programLayers.enable(5);parameters.morphNormals&&_programLayers.enable(6);parameters.morphColors&&_programLayers.enable(7);parameters.premultipliedAlpha&&_programLayers.enable(8);parameters.shadowMapEnabled&&_programLayers.enable(9);parameters.useLegacyLights&&_programLayers.enable(10);parameters.doubleSided&&_programLayers.enable(11);parameters.flipSided&&_programLayers.enable(12);parameters.useDepthPacking&&_programLayers.enable(13);parameters.dithering&&_programLayers.enable(14);parameters.transmission&&_programLayers.enable(15);parameters.sheen&&_programLayers.enable(16);parameters.opaque&&_programLayers.enable(17);parameters.pointsUvs&&_programLayers.enable(18);array.push(_programLayers.mask)}(array,parameters),array.push(renderer.outputColorSpace)),array.push(parameters.customProgramCacheKey),array.join()},getUniforms:function getUniforms(material){const shaderID=shaderIDs[material.type];let uniforms;if(shaderID){const shader=ShaderLib[shaderID];uniforms=UniformsUtils.clone(shader.uniforms)}else uniforms=material.uniforms;return uniforms},acquireProgram:function acquireProgram(parameters,cacheKey){let program;for(let p=0,pl=programs.length;p<pl;p++){const preexistingProgram=programs[p];if(preexistingProgram.cacheKey===cacheKey){program=preexistingProgram,++program.usedTimes;break}}return void 0===program&&(program=new WebGLProgram(renderer,cacheKey,parameters,bindingStates),programs.push(program)),program},releaseProgram:function releaseProgram(program){if(0==--program.usedTimes){const i=programs.indexOf(program);programs[i]=programs[programs.length-1],programs.pop(),program.destroy()}},releaseShaderCache:function releaseShaderCache(material){_customShaders.remove(material)},programs,dispose:function dispose(){_customShaders.dispose()}}}function WebGLProperties(){let properties=new WeakMap;return{get:function get(object){let map=properties.get(object);return void 0===map&&(map={},properties.set(object,map)),map},remove:function remove(object){properties.delete(object)},update:function update(object,key,value){properties.get(object)[key]=value},dispose:function dispose(){properties=new WeakMap}}}function painterSortStable(a,b){return a.groupOrder!==b.groupOrder?a.groupOrder-b.groupOrder:a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.material.id!==b.material.id?a.material.id-b.material.id:a.z!==b.z?a.z-b.z:a.id-b.id}function reversePainterSortStable(a,b){return a.groupOrder!==b.groupOrder?a.groupOrder-b.groupOrder:a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}function WebGLRenderList(){const renderItems=[];let renderItemsIndex=0;const opaque=[],transmissive=[],transparent=[];function getNextRenderItem(object,geometry,material,groupOrder,z,group){let renderItem=renderItems[renderItemsIndex];return void 0===renderItem?(renderItem={id:object.id,object,geometry,material,groupOrder,renderOrder:object.renderOrder,z,group},renderItems[renderItemsIndex]=renderItem):(renderItem.id=object.id,renderItem.object=object,renderItem.geometry=geometry,renderItem.material=material,renderItem.groupOrder=groupOrder,renderItem.renderOrder=object.renderOrder,renderItem.z=z,renderItem.group=group),renderItemsIndex++,renderItem}return{opaque,transmissive,transparent,init:function init(){renderItemsIndex=0,opaque.length=0,transmissive.length=0,transparent.length=0},push:function push(object,geometry,material,groupOrder,z,group){const renderItem=getNextRenderItem(object,geometry,material,groupOrder,z,group);material.transmission>0?transmissive.push(renderItem):!0===material.transparent?transparent.push(renderItem):opaque.push(renderItem)},unshift:function unshift(object,geometry,material,groupOrder,z,group){const renderItem=getNextRenderItem(object,geometry,material,groupOrder,z,group);material.transmission>0?transmissive.unshift(renderItem):!0===material.transparent?transparent.unshift(renderItem):opaque.unshift(renderItem)},finish:function finish(){for(let i=renderItemsIndex,il=renderItems.length;i<il;i++){const renderItem=renderItems[i];if(null===renderItem.id)break;renderItem.id=null,renderItem.object=null,renderItem.geometry=null,renderItem.material=null,renderItem.group=null}},sort:function sort(customOpaqueSort,customTransparentSort){opaque.length>1&&opaque.sort(customOpaqueSort||painterSortStable),transmissive.length>1&&transmissive.sort(customTransparentSort||reversePainterSortStable),transparent.length>1&&transparent.sort(customTransparentSort||reversePainterSortStable)}}}function WebGLRenderLists(){let lists=new WeakMap;return{get:function get(scene,renderCallDepth){const listArray=lists.get(scene);let list;return void 0===listArray?(list=new WebGLRenderList,lists.set(scene,[list])):renderCallDepth>=listArray.length?(list=new WebGLRenderList,listArray.push(list)):list=listArray[renderCallDepth],list},dispose:function dispose(){lists=new WeakMap}}}function UniformsCache(){const lights={};return{get:function(light){if(void 0!==lights[light.id])return lights[light.id];let uniforms;switch(light.type){case"DirectionalLight":uniforms={direction:new Vector3,color:new Color};break;case"SpotLight":uniforms={position:new Vector3,direction:new Vector3,color:new Color,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":uniforms={position:new Vector3,color:new Color,distance:0,decay:0};break;case"HemisphereLight":uniforms={direction:new Vector3,skyColor:new Color,groundColor:new Color};break;case"RectAreaLight":uniforms={color:new Color,position:new Vector3,halfWidth:new Vector3,halfHeight:new Vector3}}return lights[light.id]=uniforms,uniforms}}}let nextVersion=0;function shadowCastingAndTexturingLightsFirst(lightA,lightB){return(lightB.castShadow?2:0)-(lightA.castShadow?2:0)+(lightB.map?1:0)-(lightA.map?1:0)}function WebGLLights(extensions,capabilities){const cache=new UniformsCache,shadowCache=function ShadowUniformsCache(){const lights={};return{get:function(light){if(void 0!==lights[light.id])return lights[light.id];let uniforms;switch(light.type){case"DirectionalLight":case"SpotLight":uniforms={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2};break;case"PointLight":uniforms={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2,shadowCameraNear:1,shadowCameraFar:1e3}}return lights[light.id]=uniforms,uniforms}}}(),state={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let i=0;i<9;i++)state.probe.push(new Vector3);const vector3=new Vector3,matrix4=new Matrix4,matrix42=new Matrix4;return{setup:function setup(lights,useLegacyLights){let r=0,g=0,b=0;for(let i=0;i<9;i++)state.probe[i].set(0,0,0);let directionalLength=0,pointLength=0,spotLength=0,rectAreaLength=0,hemiLength=0,numDirectionalShadows=0,numPointShadows=0,numSpotShadows=0,numSpotMaps=0,numSpotShadowsWithMaps=0;lights.sort(shadowCastingAndTexturingLightsFirst);const scaleFactor=!0===useLegacyLights?Math.PI:1;for(let i=0,l=lights.length;i<l;i++){const light=lights[i],color=light.color,intensity=light.intensity,distance=light.distance,shadowMap=light.shadow&&light.shadow.map?light.shadow.map.texture:null;if(light.isAmbientLight)r+=color.r*intensity*scaleFactor,g+=color.g*intensity*scaleFactor,b+=color.b*intensity*scaleFactor;else if(light.isLightProbe)for(let j=0;j<9;j++)state.probe[j].addScaledVector(light.sh.coefficients[j],intensity);else if(light.isDirectionalLight){const uniforms=cache.get(light);if(uniforms.color.copy(light.color).multiplyScalar(light.intensity*scaleFactor),light.castShadow){const shadow=light.shadow,shadowUniforms=shadowCache.get(light);shadowUniforms.shadowBias=shadow.bias,shadowUniforms.shadowNormalBias=shadow.normalBias,shadowUniforms.shadowRadius=shadow.radius,shadowUniforms.shadowMapSize=shadow.mapSize,state.directionalShadow[directionalLength]=shadowUniforms,state.directionalShadowMap[directionalLength]=shadowMap,state.directionalShadowMatrix[directionalLength]=light.shadow.matrix,numDirectionalShadows++}state.directional[directionalLength]=uniforms,directionalLength++}else if(light.isSpotLight){const uniforms=cache.get(light);uniforms.position.setFromMatrixPosition(light.matrixWorld),uniforms.color.copy(color).multiplyScalar(intensity*scaleFactor),uniforms.distance=distance,uniforms.coneCos=Math.cos(light.angle),uniforms.penumbraCos=Math.cos(light.angle*(1-light.penumbra)),uniforms.decay=light.decay,state.spot[spotLength]=uniforms;const shadow=light.shadow;if(light.map&&(state.spotLightMap[numSpotMaps]=light.map,numSpotMaps++,shadow.updateMatrices(light),light.castShadow&&numSpotShadowsWithMaps++),state.spotLightMatrix[spotLength]=shadow.matrix,light.castShadow){const shadowUniforms=shadowCache.get(light);shadowUniforms.shadowBias=shadow.bias,shadowUniforms.shadowNormalBias=shadow.normalBias,shadowUniforms.shadowRadius=shadow.radius,shadowUniforms.shadowMapSize=shadow.mapSize,state.spotShadow[spotLength]=shadowUniforms,state.spotShadowMap[spotLength]=shadowMap,numSpotShadows++}spotLength++}else if(light.isRectAreaLight){const uniforms=cache.get(light);uniforms.color.copy(color).multiplyScalar(intensity),uniforms.halfWidth.set(.5*light.width,0,0),uniforms.halfHeight.set(0,.5*light.height,0),state.rectArea[rectAreaLength]=uniforms,rectAreaLength++}else if(light.isPointLight){const uniforms=cache.get(light);if(uniforms.color.copy(light.color).multiplyScalar(light.intensity*scaleFactor),uniforms.distance=light.distance,uniforms.decay=light.decay,light.castShadow){const shadow=light.shadow,shadowUniforms=shadowCache.get(light);shadowUniforms.shadowBias=shadow.bias,shadowUniforms.shadowNormalBias=shadow.normalBias,shadowUniforms.shadowRadius=shadow.radius,shadowUniforms.shadowMapSize=shadow.mapSize,shadowUniforms.shadowCameraNear=shadow.camera.near,shadowUniforms.shadowCameraFar=shadow.camera.far,state.pointShadow[pointLength]=shadowUniforms,state.pointShadowMap[pointLength]=shadowMap,state.pointShadowMatrix[pointLength]=light.shadow.matrix,numPointShadows++}state.point[pointLength]=uniforms,pointLength++}else if(light.isHemisphereLight){const uniforms=cache.get(light);uniforms.skyColor.copy(light.color).multiplyScalar(intensity*scaleFactor),uniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity*scaleFactor),state.hemi[hemiLength]=uniforms,hemiLength++}}rectAreaLength>0&&(capabilities.isWebGL2||!0===extensions.has("OES_texture_float_linear")?(state.rectAreaLTC1=UniformsLib.LTC_FLOAT_1,state.rectAreaLTC2=UniformsLib.LTC_FLOAT_2):!0===extensions.has("OES_texture_half_float_linear")?(state.rectAreaLTC1=UniformsLib.LTC_HALF_1,state.rectAreaLTC2=UniformsLib.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),state.ambient[0]=r,state.ambient[1]=g,state.ambient[2]=b;const hash=state.hash;hash.directionalLength===directionalLength&&hash.pointLength===pointLength&&hash.spotLength===spotLength&&hash.rectAreaLength===rectAreaLength&&hash.hemiLength===hemiLength&&hash.numDirectionalShadows===numDirectionalShadows&&hash.numPointShadows===numPointShadows&&hash.numSpotShadows===numSpotShadows&&hash.numSpotMaps===numSpotMaps||(state.directional.length=directionalLength,state.spot.length=spotLength,state.rectArea.length=rectAreaLength,state.point.length=pointLength,state.hemi.length=hemiLength,state.directionalShadow.length=numDirectionalShadows,state.directionalShadowMap.length=numDirectionalShadows,state.pointShadow.length=numPointShadows,state.pointShadowMap.length=numPointShadows,state.spotShadow.length=numSpotShadows,state.spotShadowMap.length=numSpotShadows,state.directionalShadowMatrix.length=numDirectionalShadows,state.pointShadowMatrix.length=numPointShadows,state.spotLightMatrix.length=numSpotShadows+numSpotMaps-numSpotShadowsWithMaps,state.spotLightMap.length=numSpotMaps,state.numSpotLightShadowsWithMaps=numSpotShadowsWithMaps,hash.directionalLength=directionalLength,hash.pointLength=pointLength,hash.spotLength=spotLength,hash.rectAreaLength=rectAreaLength,hash.hemiLength=hemiLength,hash.numDirectionalShadows=numDirectionalShadows,hash.numPointShadows=numPointShadows,hash.numSpotShadows=numSpotShadows,hash.numSpotMaps=numSpotMaps,state.version=nextVersion++)},setupView:function setupView(lights,camera){let directionalLength=0,pointLength=0,spotLength=0,rectAreaLength=0,hemiLength=0;const viewMatrix=camera.matrixWorldInverse;for(let i=0,l=lights.length;i<l;i++){const light=lights[i];if(light.isDirectionalLight){const uniforms=state.directional[directionalLength];uniforms.direction.setFromMatrixPosition(light.matrixWorld),vector3.setFromMatrixPosition(light.target.matrixWorld),uniforms.direction.sub(vector3),uniforms.direction.transformDirection(viewMatrix),directionalLength++}else if(light.isSpotLight){const uniforms=state.spot[spotLength];uniforms.position.setFromMatrixPosition(light.matrixWorld),uniforms.position.applyMatrix4(viewMatrix),uniforms.direction.setFromMatrixPosition(light.matrixWorld),vector3.setFromMatrixPosition(light.target.matrixWorld),uniforms.direction.sub(vector3),uniforms.direction.transformDirection(viewMatrix),spotLength++}else if(light.isRectAreaLight){const uniforms=state.rectArea[rectAreaLength];uniforms.position.setFromMatrixPosition(light.matrixWorld),uniforms.position.applyMatrix4(viewMatrix),matrix42.identity(),matrix4.copy(light.matrixWorld),matrix4.premultiply(viewMatrix),matrix42.extractRotation(matrix4),uniforms.halfWidth.set(.5*light.width,0,0),uniforms.halfHeight.set(0,.5*light.height,0),uniforms.halfWidth.applyMatrix4(matrix42),uniforms.halfHeight.applyMatrix4(matrix42),rectAreaLength++}else if(light.isPointLight){const uniforms=state.point[pointLength];uniforms.position.setFromMatrixPosition(light.matrixWorld),uniforms.position.applyMatrix4(viewMatrix),pointLength++}else if(light.isHemisphereLight){const uniforms=state.hemi[hemiLength];uniforms.direction.setFromMatrixPosition(light.matrixWorld),uniforms.direction.transformDirection(viewMatrix),hemiLength++}}},state}}function WebGLRenderState(extensions,capabilities){const lights=new WebGLLights(extensions,capabilities),lightsArray=[],shadowsArray=[];return{init:function init(){lightsArray.length=0,shadowsArray.length=0},state:{lightsArray,shadowsArray,lights},setupLights:function setupLights(useLegacyLights){lights.setup(lightsArray,useLegacyLights)},setupLightsView:function setupLightsView(camera){lights.setupView(lightsArray,camera)},pushLight:function pushLight(light){lightsArray.push(light)},pushShadow:function pushShadow(shadowLight){shadowsArray.push(shadowLight)}}}function WebGLRenderStates(extensions,capabilities){let renderStates=new WeakMap;return{get:function get(scene,renderCallDepth=0){const renderStateArray=renderStates.get(scene);let renderState;return void 0===renderStateArray?(renderState=new WebGLRenderState(extensions,capabilities),renderStates.set(scene,[renderState])):renderCallDepth>=renderStateArray.length?(renderState=new WebGLRenderState(extensions,capabilities),renderStateArray.push(renderState)):renderState=renderStateArray[renderCallDepth],renderState},dispose:function dispose(){renderStates=new WeakMap}}}class MeshDepthMaterial extends Material{constructor(parameters){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=BasicDepthPacking,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(parameters)}copy(source){return super.copy(source),this.depthPacking=source.depthPacking,this.map=source.map,this.alphaMap=source.alphaMap,this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this}}class MeshDistanceMaterial extends Material{constructor(parameters){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(parameters)}copy(source){return super.copy(source),this.map=source.map,this.alphaMap=source.alphaMap,this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this}}function WebGLShadowMap(_renderer,_objects,_capabilities){let _frustum=new Frustum;const _shadowMapSize=new Vector2,_viewportSize=new Vector2,_viewport=new Vector4,_depthMaterial=new MeshDepthMaterial({depthPacking:RGBADepthPacking}),_distanceMaterial=new MeshDistanceMaterial,_materialCache={},_maxTextureSize=_capabilities.maxTextureSize,shadowSide={[FrontSide]:BackSide,[BackSide]:FrontSide,[DoubleSide]:DoubleSide},shadowMaterialVertical=new ShaderMaterial({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Vector2},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),shadowMaterialHorizontal=shadowMaterialVertical.clone();shadowMaterialHorizontal.defines.HORIZONTAL_PASS=1;const fullScreenTri=new BufferGeometry;fullScreenTri.setAttribute("position",new BufferAttribute(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const fullScreenMesh=new Mesh(fullScreenTri,shadowMaterialVertical),scope=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=PCFShadowMap;let _previousType=this.type;function VSMPass(shadow,camera){const geometry=_objects.update(fullScreenMesh);shadowMaterialVertical.defines.VSM_SAMPLES!==shadow.blurSamples&&(shadowMaterialVertical.defines.VSM_SAMPLES=shadow.blurSamples,shadowMaterialHorizontal.defines.VSM_SAMPLES=shadow.blurSamples,shadowMaterialVertical.needsUpdate=!0,shadowMaterialHorizontal.needsUpdate=!0),null===shadow.mapPass&&(shadow.mapPass=new WebGLRenderTarget(_shadowMapSize.x,_shadowMapSize.y)),shadowMaterialVertical.uniforms.shadow_pass.value=shadow.map.texture,shadowMaterialVertical.uniforms.resolution.value=shadow.mapSize,shadowMaterialVertical.uniforms.radius.value=shadow.radius,_renderer.setRenderTarget(shadow.mapPass),_renderer.clear(),_renderer.renderBufferDirect(camera,null,geometry,shadowMaterialVertical,fullScreenMesh,null),shadowMaterialHorizontal.uniforms.shadow_pass.value=shadow.mapPass.texture,shadowMaterialHorizontal.uniforms.resolution.value=shadow.mapSize,shadowMaterialHorizontal.uniforms.radius.value=shadow.radius,_renderer.setRenderTarget(shadow.map),_renderer.clear(),_renderer.renderBufferDirect(camera,null,geometry,shadowMaterialHorizontal,fullScreenMesh,null)}function getDepthMaterial(object,material,light,type){let result=null;const customMaterial=!0===light.isPointLight?object.customDistanceMaterial:object.customDepthMaterial;if(void 0!==customMaterial)result=customMaterial;else if(result=!0===light.isPointLight?_distanceMaterial:_depthMaterial,_renderer.localClippingEnabled&&!0===material.clipShadows&&Array.isArray(material.clippingPlanes)&&0!==material.clippingPlanes.length||material.displacementMap&&0!==material.displacementScale||material.alphaMap&&material.alphaTest>0||material.map&&material.alphaTest>0){const keyA=result.uuid,keyB=material.uuid;let materialsForVariant=_materialCache[keyA];void 0===materialsForVariant&&(materialsForVariant={},_materialCache[keyA]=materialsForVariant);let cachedMaterial=materialsForVariant[keyB];void 0===cachedMaterial&&(cachedMaterial=result.clone(),materialsForVariant[keyB]=cachedMaterial),result=cachedMaterial}if(result.visible=material.visible,result.wireframe=material.wireframe,result.side=type===VSMShadowMap?null!==material.shadowSide?material.shadowSide:material.side:null!==material.shadowSide?material.shadowSide:shadowSide[material.side],result.alphaMap=material.alphaMap,result.alphaTest=material.alphaTest,result.map=material.map,result.clipShadows=material.clipShadows,result.clippingPlanes=material.clippingPlanes,result.clipIntersection=material.clipIntersection,result.displacementMap=material.displacementMap,result.displacementScale=material.displacementScale,result.displacementBias=material.displacementBias,result.wireframeLinewidth=material.wireframeLinewidth,result.linewidth=material.linewidth,!0===light.isPointLight&&!0===result.isMeshDistanceMaterial){_renderer.properties.get(result).light=light}return result}function renderObject(object,camera,shadowCamera,light,type){if(!1===object.visible)return;if(object.layers.test(camera.layers)&&(object.isMesh||object.isLine||object.isPoints)&&(object.castShadow||object.receiveShadow&&type===VSMShadowMap)&&(!object.frustumCulled||_frustum.intersectsObject(object))){object.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse,object.matrixWorld);const geometry=_objects.update(object),material=object.material;if(Array.isArray(material)){const groups=geometry.groups;for(let k=0,kl=groups.length;k<kl;k++){const group=groups[k],groupMaterial=material[group.materialIndex];if(groupMaterial&&groupMaterial.visible){const depthMaterial=getDepthMaterial(object,groupMaterial,light,type);_renderer.renderBufferDirect(shadowCamera,null,geometry,depthMaterial,object,group)}}}else if(material.visible){const depthMaterial=getDepthMaterial(object,material,light,type);_renderer.renderBufferDirect(shadowCamera,null,geometry,depthMaterial,object,null)}}const children=object.children;for(let i=0,l=children.length;i<l;i++)renderObject(children[i],camera,shadowCamera,light,type)}this.render=function(lights,scene,camera){if(!1===scope.enabled)return;if(!1===scope.autoUpdate&&!1===scope.needsUpdate)return;if(0===lights.length)return;const currentRenderTarget=_renderer.getRenderTarget(),activeCubeFace=_renderer.getActiveCubeFace(),activeMipmapLevel=_renderer.getActiveMipmapLevel(),_state=_renderer.state;_state.setBlending(NoBlending),_state.buffers.color.setClear(1,1,1,1),_state.buffers.depth.setTest(!0),_state.setScissorTest(!1);const toVSM=_previousType!==VSMShadowMap&&this.type===VSMShadowMap,fromVSM=_previousType===VSMShadowMap&&this.type!==VSMShadowMap;for(let i=0,il=lights.length;i<il;i++){const light=lights[i],shadow=light.shadow;if(void 0===shadow){console.warn("THREE.WebGLShadowMap:",light,"has no shadow.");continue}if(!1===shadow.autoUpdate&&!1===shadow.needsUpdate)continue;_shadowMapSize.copy(shadow.mapSize);const shadowFrameExtents=shadow.getFrameExtents();if(_shadowMapSize.multiply(shadowFrameExtents),_viewportSize.copy(shadow.mapSize),(_shadowMapSize.x>_maxTextureSize||_shadowMapSize.y>_maxTextureSize)&&(_shadowMapSize.x>_maxTextureSize&&(_viewportSize.x=Math.floor(_maxTextureSize/shadowFrameExtents.x),_shadowMapSize.x=_viewportSize.x*shadowFrameExtents.x,shadow.mapSize.x=_viewportSize.x),_shadowMapSize.y>_maxTextureSize&&(_viewportSize.y=Math.floor(_maxTextureSize/shadowFrameExtents.y),_shadowMapSize.y=_viewportSize.y*shadowFrameExtents.y,shadow.mapSize.y=_viewportSize.y)),null===shadow.map||!0===toVSM||!0===fromVSM){const pars=this.type!==VSMShadowMap?{minFilter:NearestFilter,magFilter:NearestFilter}:{};null!==shadow.map&&shadow.map.dispose(),shadow.map=new WebGLRenderTarget(_shadowMapSize.x,_shadowMapSize.y,pars),shadow.map.texture.name=light.name+".shadowMap",shadow.camera.updateProjectionMatrix()}_renderer.setRenderTarget(shadow.map),_renderer.clear();const viewportCount=shadow.getViewportCount();for(let vp=0;vp<viewportCount;vp++){const viewport=shadow.getViewport(vp);_viewport.set(_viewportSize.x*viewport.x,_viewportSize.y*viewport.y,_viewportSize.x*viewport.z,_viewportSize.y*viewport.w),_state.viewport(_viewport),shadow.updateMatrices(light,vp),_frustum=shadow.getFrustum(),renderObject(scene,camera,shadow.camera,light,this.type)}!0!==shadow.isPointLightShadow&&this.type===VSMShadowMap&&VSMPass(shadow,camera),shadow.needsUpdate=!1}_previousType=this.type,scope.needsUpdate=!1,_renderer.setRenderTarget(currentRenderTarget,activeCubeFace,activeMipmapLevel)}}function WebGLState(gl,extensions,capabilities){const isWebGL2=capabilities.isWebGL2;const colorBuffer=new function ColorBuffer(){let locked=!1;const color=new Vector4;let currentColorMask=null;const currentColorClear=new Vector4(0,0,0,0);return{setMask:function(colorMask){currentColorMask===colorMask||locked||(gl.colorMask(colorMask,colorMask,colorMask,colorMask),currentColorMask=colorMask)},setLocked:function(lock){locked=lock},setClear:function(r,g,b,a,premultipliedAlpha){!0===premultipliedAlpha&&(r*=a,g*=a,b*=a),color.set(r,g,b,a),!1===currentColorClear.equals(color)&&(gl.clearColor(r,g,b,a),currentColorClear.copy(color))},reset:function(){locked=!1,currentColorMask=null,currentColorClear.set(-1,0,0,0)}}},depthBuffer=new function DepthBuffer(){let locked=!1,currentDepthMask=null,currentDepthFunc=null,currentDepthClear=null;return{setTest:function(depthTest){depthTest?enable(gl.DEPTH_TEST):disable(gl.DEPTH_TEST)},setMask:function(depthMask){currentDepthMask===depthMask||locked||(gl.depthMask(depthMask),currentDepthMask=depthMask)},setFunc:function(depthFunc){if(currentDepthFunc!==depthFunc){switch(depthFunc){case NeverDepth:gl.depthFunc(gl.NEVER);break;case AlwaysDepth:gl.depthFunc(gl.ALWAYS);break;case LessDepth:gl.depthFunc(gl.LESS);break;case LessEqualDepth:gl.depthFunc(gl.LEQUAL);break;case EqualDepth:gl.depthFunc(gl.EQUAL);break;case GreaterEqualDepth:gl.depthFunc(gl.GEQUAL);break;case GreaterDepth:gl.depthFunc(gl.GREATER);break;case NotEqualDepth:gl.depthFunc(gl.NOTEQUAL);break;default:gl.depthFunc(gl.LEQUAL)}currentDepthFunc=depthFunc}},setLocked:function(lock){locked=lock},setClear:function(depth){currentDepthClear!==depth&&(gl.clearDepth(depth),currentDepthClear=depth)},reset:function(){locked=!1,currentDepthMask=null,currentDepthFunc=null,currentDepthClear=null}}},stencilBuffer=new function StencilBuffer(){let locked=!1,currentStencilMask=null,currentStencilFunc=null,currentStencilRef=null,currentStencilFuncMask=null,currentStencilFail=null,currentStencilZFail=null,currentStencilZPass=null,currentStencilClear=null;return{setTest:function(stencilTest){locked||(stencilTest?enable(gl.STENCIL_TEST):disable(gl.STENCIL_TEST))},setMask:function(stencilMask){currentStencilMask===stencilMask||locked||(gl.stencilMask(stencilMask),currentStencilMask=stencilMask)},setFunc:function(stencilFunc,stencilRef,stencilMask){currentStencilFunc===stencilFunc&&currentStencilRef===stencilRef&&currentStencilFuncMask===stencilMask||(gl.stencilFunc(stencilFunc,stencilRef,stencilMask),currentStencilFunc=stencilFunc,currentStencilRef=stencilRef,currentStencilFuncMask=stencilMask)},setOp:function(stencilFail,stencilZFail,stencilZPass){currentStencilFail===stencilFail&&currentStencilZFail===stencilZFail&&currentStencilZPass===stencilZPass||(gl.stencilOp(stencilFail,stencilZFail,stencilZPass),currentStencilFail=stencilFail,currentStencilZFail=stencilZFail,currentStencilZPass=stencilZPass)},setLocked:function(lock){locked=lock},setClear:function(stencil){currentStencilClear!==stencil&&(gl.clearStencil(stencil),currentStencilClear=stencil)},reset:function(){locked=!1,currentStencilMask=null,currentStencilFunc=null,currentStencilRef=null,currentStencilFuncMask=null,currentStencilFail=null,currentStencilZFail=null,currentStencilZPass=null,currentStencilClear=null}}},uboBindings=new WeakMap,uboProgramMap=new WeakMap;let enabledCapabilities={},currentBoundFramebuffers={},currentDrawbuffers=new WeakMap,defaultDrawbuffers=[],currentProgram=null,currentBlendingEnabled=!1,currentBlending=null,currentBlendEquation=null,currentBlendSrc=null,currentBlendDst=null,currentBlendEquationAlpha=null,currentBlendSrcAlpha=null,currentBlendDstAlpha=null,currentPremultipledAlpha=!1,currentFlipSided=null,currentCullFace=null,currentLineWidth=null,currentPolygonOffsetFactor=null,currentPolygonOffsetUnits=null;const maxTextures=gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let lineWidthAvailable=!1,version=0;const glVersion=gl.getParameter(gl.VERSION);-1!==glVersion.indexOf("WebGL")?(version=parseFloat(/^WebGL (\d)/.exec(glVersion)[1]),lineWidthAvailable=version>=1):-1!==glVersion.indexOf("OpenGL ES")&&(version=parseFloat(/^OpenGL ES (\d)/.exec(glVersion)[1]),lineWidthAvailable=version>=2);let currentTextureSlot=null,currentBoundTextures={};const scissorParam=gl.getParameter(gl.SCISSOR_BOX),viewportParam=gl.getParameter(gl.VIEWPORT),currentScissor=(new Vector4).fromArray(scissorParam),currentViewport=(new Vector4).fromArray(viewportParam);function createTexture(type,target,count,dimensions){const data=new Uint8Array(4),texture=gl.createTexture();gl.bindTexture(type,texture),gl.texParameteri(type,gl.TEXTURE_MIN_FILTER,gl.NEAREST),gl.texParameteri(type,gl.TEXTURE_MAG_FILTER,gl.NEAREST);for(let i=0;i<count;i++)!isWebGL2||type!==gl.TEXTURE_3D&&type!==gl.TEXTURE_2D_ARRAY?gl.texImage2D(target+i,0,gl.RGBA,1,1,0,gl.RGBA,gl.UNSIGNED_BYTE,data):gl.texImage3D(target,0,gl.RGBA,1,1,dimensions,0,gl.RGBA,gl.UNSIGNED_BYTE,data);return texture}const emptyTextures={};function enable(id){!0!==enabledCapabilities[id]&&(gl.enable(id),enabledCapabilities[id]=!0)}function disable(id){!1!==enabledCapabilities[id]&&(gl.disable(id),enabledCapabilities[id]=!1)}emptyTextures[gl.TEXTURE_2D]=createTexture(gl.TEXTURE_2D,gl.TEXTURE_2D,1),emptyTextures[gl.TEXTURE_CUBE_MAP]=createTexture(gl.TEXTURE_CUBE_MAP,gl.TEXTURE_CUBE_MAP_POSITIVE_X,6),isWebGL2&&(emptyTextures[gl.TEXTURE_2D_ARRAY]=createTexture(gl.TEXTURE_2D_ARRAY,gl.TEXTURE_2D_ARRAY,1,1),emptyTextures[gl.TEXTURE_3D]=createTexture(gl.TEXTURE_3D,gl.TEXTURE_3D,1,1)),colorBuffer.setClear(0,0,0,1),depthBuffer.setClear(1),stencilBuffer.setClear(0),enable(gl.DEPTH_TEST),depthBuffer.setFunc(LessEqualDepth),setFlipSided(!1),setCullFace(CullFaceBack),enable(gl.CULL_FACE),setBlending(NoBlending);const equationToGL={[AddEquation]:gl.FUNC_ADD,[SubtractEquation]:gl.FUNC_SUBTRACT,[ReverseSubtractEquation]:gl.FUNC_REVERSE_SUBTRACT};if(isWebGL2)equationToGL[MinEquation]=gl.MIN,equationToGL[MaxEquation]=gl.MAX;else{const extension=extensions.get("EXT_blend_minmax");null!==extension&&(equationToGL[MinEquation]=extension.MIN_EXT,equationToGL[MaxEquation]=extension.MAX_EXT)}const factorToGL={[ZeroFactor]:gl.ZERO,[OneFactor]:gl.ONE,[SrcColorFactor]:gl.SRC_COLOR,[SrcAlphaFactor]:gl.SRC_ALPHA,[SrcAlphaSaturateFactor]:gl.SRC_ALPHA_SATURATE,[DstColorFactor]:gl.DST_COLOR,[DstAlphaFactor]:gl.DST_ALPHA,[OneMinusSrcColorFactor]:gl.ONE_MINUS_SRC_COLOR,[OneMinusSrcAlphaFactor]:gl.ONE_MINUS_SRC_ALPHA,[OneMinusDstColorFactor]:gl.ONE_MINUS_DST_COLOR,[OneMinusDstAlphaFactor]:gl.ONE_MINUS_DST_ALPHA};function setBlending(blending,blendEquation,blendSrc,blendDst,blendEquationAlpha,blendSrcAlpha,blendDstAlpha,premultipliedAlpha){if(blending!==NoBlending){if(!1===currentBlendingEnabled&&(enable(gl.BLEND),currentBlendingEnabled=!0),blending===CustomBlending)blendEquationAlpha=blendEquationAlpha||blendEquation,blendSrcAlpha=blendSrcAlpha||blendSrc,blendDstAlpha=blendDstAlpha||blendDst,blendEquation===currentBlendEquation&&blendEquationAlpha===currentBlendEquationAlpha||(gl.blendEquationSeparate(equationToGL[blendEquation],equationToGL[blendEquationAlpha]),currentBlendEquation=blendEquation,currentBlendEquationAlpha=blendEquationAlpha),blendSrc===currentBlendSrc&&blendDst===currentBlendDst&&blendSrcAlpha===currentBlendSrcAlpha&&blendDstAlpha===currentBlendDstAlpha||(gl.blendFuncSeparate(factorToGL[blendSrc],factorToGL[blendDst],factorToGL[blendSrcAlpha],factorToGL[blendDstAlpha]),currentBlendSrc=blendSrc,currentBlendDst=blendDst,currentBlendSrcAlpha=blendSrcAlpha,currentBlendDstAlpha=blendDstAlpha),currentBlending=blending,currentPremultipledAlpha=!1;else if(blending!==currentBlending||premultipliedAlpha!==currentPremultipledAlpha){if(currentBlendEquation===AddEquation&&currentBlendEquationAlpha===AddEquation||(gl.blendEquation(gl.FUNC_ADD),currentBlendEquation=AddEquation,currentBlendEquationAlpha=AddEquation),premultipliedAlpha)switch(blending){case NormalBlending:gl.blendFuncSeparate(gl.ONE,gl.ONE_MINUS_SRC_ALPHA,gl.ONE,gl.ONE_MINUS_SRC_ALPHA);break;case AdditiveBlending:gl.blendFunc(gl.ONE,gl.ONE);break;case SubtractiveBlending:gl.blendFuncSeparate(gl.ZERO,gl.ONE_MINUS_SRC_COLOR,gl.ZERO,gl.ONE);break;case MultiplyBlending:gl.blendFuncSeparate(gl.ZERO,gl.SRC_COLOR,gl.ZERO,gl.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",blending)}else switch(blending){case NormalBlending:gl.blendFuncSeparate(gl.SRC_ALPHA,gl.ONE_MINUS_SRC_ALPHA,gl.ONE,gl.ONE_MINUS_SRC_ALPHA);break;case AdditiveBlending:gl.blendFunc(gl.SRC_ALPHA,gl.ONE);break;case SubtractiveBlending:gl.blendFuncSeparate(gl.ZERO,gl.ONE_MINUS_SRC_COLOR,gl.ZERO,gl.ONE);break;case MultiplyBlending:gl.blendFunc(gl.ZERO,gl.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",blending)}currentBlendSrc=null,currentBlendDst=null,currentBlendSrcAlpha=null,currentBlendDstAlpha=null,currentBlending=blending,currentPremultipledAlpha=premultipliedAlpha}}else!0===currentBlendingEnabled&&(disable(gl.BLEND),currentBlendingEnabled=!1)}function setFlipSided(flipSided){currentFlipSided!==flipSided&&(flipSided?gl.frontFace(gl.CW):gl.frontFace(gl.CCW),currentFlipSided=flipSided)}function setCullFace(cullFace){cullFace!==CullFaceNone?(enable(gl.CULL_FACE),cullFace!==currentCullFace&&(cullFace===CullFaceBack?gl.cullFace(gl.BACK):cullFace===CullFaceFront?gl.cullFace(gl.FRONT):gl.cullFace(gl.FRONT_AND_BACK))):disable(gl.CULL_FACE),currentCullFace=cullFace}function setPolygonOffset(polygonOffset,factor,units){polygonOffset?(enable(gl.POLYGON_OFFSET_FILL),currentPolygonOffsetFactor===factor&&currentPolygonOffsetUnits===units||(gl.polygonOffset(factor,units),currentPolygonOffsetFactor=factor,currentPolygonOffsetUnits=units)):disable(gl.POLYGON_OFFSET_FILL)}return{buffers:{color:colorBuffer,depth:depthBuffer,stencil:stencilBuffer},enable,disable,bindFramebuffer:function bindFramebuffer(target,framebuffer){return currentBoundFramebuffers[target]!==framebuffer&&(gl.bindFramebuffer(target,framebuffer),currentBoundFramebuffers[target]=framebuffer,isWebGL2&&(target===gl.DRAW_FRAMEBUFFER&&(currentBoundFramebuffers[gl.FRAMEBUFFER]=framebuffer),target===gl.FRAMEBUFFER&&(currentBoundFramebuffers[gl.DRAW_FRAMEBUFFER]=framebuffer)),!0)},drawBuffers:function drawBuffers(renderTarget,framebuffer){let drawBuffers=defaultDrawbuffers,needsUpdate=!1;if(renderTarget)if(drawBuffers=currentDrawbuffers.get(framebuffer),void 0===drawBuffers&&(drawBuffers=[],currentDrawbuffers.set(framebuffer,drawBuffers)),renderTarget.isWebGLMultipleRenderTargets){const textures=renderTarget.texture;if(drawBuffers.length!==textures.length||drawBuffers[0]!==gl.COLOR_ATTACHMENT0){for(let i=0,il=textures.length;i<il;i++)drawBuffers[i]=gl.COLOR_ATTACHMENT0+i;drawBuffers.length=textures.length,needsUpdate=!0}}else drawBuffers[0]!==gl.COLOR_ATTACHMENT0&&(drawBuffers[0]=gl.COLOR_ATTACHMENT0,needsUpdate=!0);else drawBuffers[0]!==gl.BACK&&(drawBuffers[0]=gl.BACK,needsUpdate=!0);needsUpdate&&(capabilities.isWebGL2?gl.drawBuffers(drawBuffers):extensions.get("WEBGL_draw_buffers").drawBuffersWEBGL(drawBuffers))},useProgram:function useProgram(program){return currentProgram!==program&&(gl.useProgram(program),currentProgram=program,!0)},setBlending,setMaterial:function setMaterial(material,frontFaceCW){material.side===DoubleSide?disable(gl.CULL_FACE):enable(gl.CULL_FACE);let flipSided=material.side===BackSide;frontFaceCW&&(flipSided=!flipSided),setFlipSided(flipSided),material.blending===NormalBlending&&!1===material.transparent?setBlending(NoBlending):setBlending(material.blending,material.blendEquation,material.blendSrc,material.blendDst,material.blendEquationAlpha,material.blendSrcAlpha,material.blendDstAlpha,material.premultipliedAlpha),depthBuffer.setFunc(material.depthFunc),depthBuffer.setTest(material.depthTest),depthBuffer.setMask(material.depthWrite),colorBuffer.setMask(material.colorWrite);const stencilWrite=material.stencilWrite;stencilBuffer.setTest(stencilWrite),stencilWrite&&(stencilBuffer.setMask(material.stencilWriteMask),stencilBuffer.setFunc(material.stencilFunc,material.stencilRef,material.stencilFuncMask),stencilBuffer.setOp(material.stencilFail,material.stencilZFail,material.stencilZPass)),setPolygonOffset(material.polygonOffset,material.polygonOffsetFactor,material.polygonOffsetUnits),!0===material.alphaToCoverage?enable(gl.SAMPLE_ALPHA_TO_COVERAGE):disable(gl.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided,setCullFace,setLineWidth:function setLineWidth(width){width!==currentLineWidth&&(lineWidthAvailable&&gl.lineWidth(width),currentLineWidth=width)},setPolygonOffset,setScissorTest:function setScissorTest(scissorTest){scissorTest?enable(gl.SCISSOR_TEST):disable(gl.SCISSOR_TEST)},activeTexture:function activeTexture(webglSlot){void 0===webglSlot&&(webglSlot=gl.TEXTURE0+maxTextures-1),currentTextureSlot!==webglSlot&&(gl.activeTexture(webglSlot),currentTextureSlot=webglSlot)},bindTexture:function bindTexture(webglType,webglTexture,webglSlot){void 0===webglSlot&&(webglSlot=null===currentTextureSlot?gl.TEXTURE0+maxTextures-1:currentTextureSlot);let boundTexture=currentBoundTextures[webglSlot];void 0===boundTexture&&(boundTexture={type:void 0,texture:void 0},currentBoundTextures[webglSlot]=boundTexture),boundTexture.type===webglType&&boundTexture.texture===webglTexture||(currentTextureSlot!==webglSlot&&(gl.activeTexture(webglSlot),currentTextureSlot=webglSlot),gl.bindTexture(webglType,webglTexture||emptyTextures[webglType]),boundTexture.type=webglType,boundTexture.texture=webglTexture)},unbindTexture:function unbindTexture(){const boundTexture=currentBoundTextures[currentTextureSlot];void 0!==boundTexture&&void 0!==boundTexture.type&&(gl.bindTexture(boundTexture.type,null),boundTexture.type=void 0,boundTexture.texture=void 0)},compressedTexImage2D:function compressedTexImage2D(){try{gl.compressedTexImage2D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",error)}},compressedTexImage3D:function compressedTexImage3D(){try{gl.compressedTexImage3D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",error)}},texImage2D:function texImage2D(){try{gl.texImage2D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",error)}},texImage3D:function texImage3D(){try{gl.texImage3D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",error)}},updateUBOMapping:function updateUBOMapping(uniformsGroup,program){let mapping=uboProgramMap.get(program);void 0===mapping&&(mapping=new WeakMap,uboProgramMap.set(program,mapping));let blockIndex=mapping.get(uniformsGroup);void 0===blockIndex&&(blockIndex=gl.getUniformBlockIndex(program,uniformsGroup.name),mapping.set(uniformsGroup,blockIndex))},uniformBlockBinding:function uniformBlockBinding(uniformsGroup,program){const blockIndex=uboProgramMap.get(program).get(uniformsGroup);uboBindings.get(program)!==blockIndex&&(gl.uniformBlockBinding(program,blockIndex,uniformsGroup.__bindingPointIndex),uboBindings.set(program,blockIndex))},texStorage2D:function texStorage2D(){try{gl.texStorage2D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",error)}},texStorage3D:function texStorage3D(){try{gl.texStorage3D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",error)}},texSubImage2D:function texSubImage2D(){try{gl.texSubImage2D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",error)}},texSubImage3D:function texSubImage3D(){try{gl.texSubImage3D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",error)}},compressedTexSubImage2D:function compressedTexSubImage2D(){try{gl.compressedTexSubImage2D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",error)}},compressedTexSubImage3D:function compressedTexSubImage3D(){try{gl.compressedTexSubImage3D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",error)}},scissor:function scissor(scissor){!1===currentScissor.equals(scissor)&&(gl.scissor(scissor.x,scissor.y,scissor.z,scissor.w),currentScissor.copy(scissor))},viewport:function viewport(viewport){!1===currentViewport.equals(viewport)&&(gl.viewport(viewport.x,viewport.y,viewport.z,viewport.w),currentViewport.copy(viewport))},reset:function reset(){gl.disable(gl.BLEND),gl.disable(gl.CULL_FACE),gl.disable(gl.DEPTH_TEST),gl.disable(gl.POLYGON_OFFSET_FILL),gl.disable(gl.SCISSOR_TEST),gl.disable(gl.STENCIL_TEST),gl.disable(gl.SAMPLE_ALPHA_TO_COVERAGE),gl.blendEquation(gl.FUNC_ADD),gl.blendFunc(gl.ONE,gl.ZERO),gl.blendFuncSeparate(gl.ONE,gl.ZERO,gl.ONE,gl.ZERO),gl.colorMask(!0,!0,!0,!0),gl.clearColor(0,0,0,0),gl.depthMask(!0),gl.depthFunc(gl.LESS),gl.clearDepth(1),gl.stencilMask(4294967295),gl.stencilFunc(gl.ALWAYS,0,4294967295),gl.stencilOp(gl.KEEP,gl.KEEP,gl.KEEP),gl.clearStencil(0),gl.cullFace(gl.BACK),gl.frontFace(gl.CCW),gl.polygonOffset(0,0),gl.activeTexture(gl.TEXTURE0),gl.bindFramebuffer(gl.FRAMEBUFFER,null),!0===isWebGL2&&(gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER,null),gl.bindFramebuffer(gl.READ_FRAMEBUFFER,null)),gl.useProgram(null),gl.lineWidth(1),gl.scissor(0,0,gl.canvas.width,gl.canvas.height),gl.viewport(0,0,gl.canvas.width,gl.canvas.height),enabledCapabilities={},currentTextureSlot=null,currentBoundTextures={},currentBoundFramebuffers={},currentDrawbuffers=new WeakMap,defaultDrawbuffers=[],currentProgram=null,currentBlendingEnabled=!1,currentBlending=null,currentBlendEquation=null,currentBlendSrc=null,currentBlendDst=null,currentBlendEquationAlpha=null,currentBlendSrcAlpha=null,currentBlendDstAlpha=null,currentPremultipledAlpha=!1,currentFlipSided=null,currentCullFace=null,currentLineWidth=null,currentPolygonOffsetFactor=null,currentPolygonOffsetUnits=null,currentScissor.set(0,0,gl.canvas.width,gl.canvas.height),currentViewport.set(0,0,gl.canvas.width,gl.canvas.height),colorBuffer.reset(),depthBuffer.reset(),stencilBuffer.reset()}}}function WebGLTextures(_gl,extensions,state,properties,capabilities,utils,info){const isWebGL2=capabilities.isWebGL2,maxTextures=capabilities.maxTextures,maxCubemapSize=capabilities.maxCubemapSize,maxTextureSize=capabilities.maxTextureSize,maxSamples=capabilities.maxSamples,multisampledRTTExt=extensions.has("WEBGL_multisampled_render_to_texture")?extensions.get("WEBGL_multisampled_render_to_texture"):null,supportsInvalidateFramebuffer="undefined"!=typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),_videoTextures=new WeakMap;let _canvas;const _sources=new WeakMap;let useOffscreenCanvas=!1;try{useOffscreenCanvas="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(err){}function createCanvas(width,height){return useOffscreenCanvas?new OffscreenCanvas(width,height):createElementNS("canvas")}function resizeImage(image,needsPowerOfTwo,needsNewCanvas,maxSize){let scale=1;if((image.width>maxSize||image.height>maxSize)&&(scale=maxSize/Math.max(image.width,image.height)),scale<1||!0===needsPowerOfTwo){if("undefined"!=typeof HTMLImageElement&&image instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&image instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&image instanceof ImageBitmap){const floor=needsPowerOfTwo?floorPowerOfTwo:Math.floor,width=floor(scale*image.width),height=floor(scale*image.height);void 0===_canvas&&(_canvas=createCanvas(width,height));const canvas=needsNewCanvas?createCanvas(width,height):_canvas;canvas.width=width,canvas.height=height;return canvas.getContext("2d").drawImage(image,0,0,width,height),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+image.width+"x"+image.height+") to ("+width+"x"+height+")."),canvas}return"data"in image&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+image.width+"x"+image.height+")."),image}return image}function isPowerOfTwo$1(image){return isPowerOfTwo(image.width)&&isPowerOfTwo(image.height)}function textureNeedsGenerateMipmaps(texture,supportsMips){return texture.generateMipmaps&&supportsMips&&texture.minFilter!==NearestFilter&&texture.minFilter!==LinearFilter}function generateMipmap(target){_gl.generateMipmap(target)}function getInternalFormat(internalFormatName,glFormat,glType,colorSpace,forceLinearTransfer=!1){if(!1===isWebGL2)return glFormat;if(null!==internalFormatName){if(void 0!==_gl[internalFormatName])return _gl[internalFormatName];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+internalFormatName+"'")}let internalFormat=glFormat;return glFormat===_gl.RED&&(glType===_gl.FLOAT&&(internalFormat=_gl.R32F),glType===_gl.HALF_FLOAT&&(internalFormat=_gl.R16F),glType===_gl.UNSIGNED_BYTE&&(internalFormat=_gl.R8)),glFormat===_gl.RG&&(glType===_gl.FLOAT&&(internalFormat=_gl.RG32F),glType===_gl.HALF_FLOAT&&(internalFormat=_gl.RG16F),glType===_gl.UNSIGNED_BYTE&&(internalFormat=_gl.RG8)),glFormat===_gl.RGBA&&(glType===_gl.FLOAT&&(internalFormat=_gl.RGBA32F),glType===_gl.HALF_FLOAT&&(internalFormat=_gl.RGBA16F),glType===_gl.UNSIGNED_BYTE&&(internalFormat=colorSpace===SRGBColorSpace&&!1===forceLinearTransfer?_gl.SRGB8_ALPHA8:_gl.RGBA8),glType===_gl.UNSIGNED_SHORT_4_4_4_4&&(internalFormat=_gl.RGBA4),glType===_gl.UNSIGNED_SHORT_5_5_5_1&&(internalFormat=_gl.RGB5_A1)),internalFormat!==_gl.R16F&&internalFormat!==_gl.R32F&&internalFormat!==_gl.RG16F&&internalFormat!==_gl.RG32F&&internalFormat!==_gl.RGBA16F&&internalFormat!==_gl.RGBA32F||extensions.get("EXT_color_buffer_float"),internalFormat}function getMipLevels(texture,image,supportsMips){return!0===textureNeedsGenerateMipmaps(texture,supportsMips)||texture.isFramebufferTexture&&texture.minFilter!==NearestFilter&&texture.minFilter!==LinearFilter?Math.log2(Math.max(image.width,image.height))+1:void 0!==texture.mipmaps&&texture.mipmaps.length>0?texture.mipmaps.length:texture.isCompressedTexture&&Array.isArray(texture.image)?image.mipmaps.length:1}function filterFallback(f){return f===NearestFilter||f===NearestMipmapNearestFilter||f===NearestMipmapLinearFilter?_gl.NEAREST:_gl.LINEAR}function onTextureDispose(event){const texture=event.target;texture.removeEventListener("dispose",onTextureDispose),function deallocateTexture(texture){const textureProperties=properties.get(texture);if(void 0===textureProperties.__webglInit)return;const source=texture.source,webglTextures=_sources.get(source);if(webglTextures){const webglTexture=webglTextures[textureProperties.__cacheKey];webglTexture.usedTimes--,0===webglTexture.usedTimes&&deleteTexture(texture),0===Object.keys(webglTextures).length&&_sources.delete(source)}properties.remove(texture)}(texture),texture.isVideoTexture&&_videoTextures.delete(texture)}function onRenderTargetDispose(event){const renderTarget=event.target;renderTarget.removeEventListener("dispose",onRenderTargetDispose),function deallocateRenderTarget(renderTarget){const texture=renderTarget.texture,renderTargetProperties=properties.get(renderTarget),textureProperties=properties.get(texture);void 0!==textureProperties.__webglTexture&&(_gl.deleteTexture(textureProperties.__webglTexture),info.memory.textures--);renderTarget.depthTexture&&renderTarget.depthTexture.dispose();if(renderTarget.isWebGLCubeRenderTarget)for(let i=0;i<6;i++)_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]),renderTargetProperties.__webglDepthbuffer&&_gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);else{if(_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer),renderTargetProperties.__webglDepthbuffer&&_gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer),renderTargetProperties.__webglMultisampledFramebuffer&&_gl.deleteFramebuffer(renderTargetProperties.__webglMultisampledFramebuffer),renderTargetProperties.__webglColorRenderbuffer)for(let i=0;i<renderTargetProperties.__webglColorRenderbuffer.length;i++)renderTargetProperties.__webglColorRenderbuffer[i]&&_gl.deleteRenderbuffer(renderTargetProperties.__webglColorRenderbuffer[i]);renderTargetProperties.__webglDepthRenderbuffer&&_gl.deleteRenderbuffer(renderTargetProperties.__webglDepthRenderbuffer)}if(renderTarget.isWebGLMultipleRenderTargets)for(let i=0,il=texture.length;i<il;i++){const attachmentProperties=properties.get(texture[i]);attachmentProperties.__webglTexture&&(_gl.deleteTexture(attachmentProperties.__webglTexture),info.memory.textures--),properties.remove(texture[i])}properties.remove(texture),properties.remove(renderTarget)}(renderTarget)}function deleteTexture(texture){const textureProperties=properties.get(texture);_gl.deleteTexture(textureProperties.__webglTexture);const source=texture.source;delete _sources.get(source)[textureProperties.__cacheKey],info.memory.textures--}let textureUnits=0;function setTexture2D(texture,slot){const textureProperties=properties.get(texture);if(texture.isVideoTexture&&function updateVideoTexture(texture){const frame=info.render.frame;_videoTextures.get(texture)!==frame&&(_videoTextures.set(texture,frame),texture.update())}(texture),!1===texture.isRenderTargetTexture&&texture.version>0&&textureProperties.__version!==texture.version){const image=texture.image;if(null===image)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==image.complete)return void uploadTexture(textureProperties,texture,slot);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}state.bindTexture(_gl.TEXTURE_2D,textureProperties.__webglTexture,_gl.TEXTURE0+slot)}const wrappingToGL={[RepeatWrapping]:_gl.REPEAT,[ClampToEdgeWrapping]:_gl.CLAMP_TO_EDGE,[MirroredRepeatWrapping]:_gl.MIRRORED_REPEAT},filterToGL={[NearestFilter]:_gl.NEAREST,[NearestMipmapNearestFilter]:_gl.NEAREST_MIPMAP_NEAREST,[NearestMipmapLinearFilter]:_gl.NEAREST_MIPMAP_LINEAR,[LinearFilter]:_gl.LINEAR,[LinearMipmapNearestFilter]:_gl.LINEAR_MIPMAP_NEAREST,[LinearMipmapLinearFilter]:_gl.LINEAR_MIPMAP_LINEAR};function setTextureParameters(textureType,texture,supportsMips){if(supportsMips?(_gl.texParameteri(textureType,_gl.TEXTURE_WRAP_S,wrappingToGL[texture.wrapS]),_gl.texParameteri(textureType,_gl.TEXTURE_WRAP_T,wrappingToGL[texture.wrapT]),textureType!==_gl.TEXTURE_3D&&textureType!==_gl.TEXTURE_2D_ARRAY||_gl.texParameteri(textureType,_gl.TEXTURE_WRAP_R,wrappingToGL[texture.wrapR]),_gl.texParameteri(textureType,_gl.TEXTURE_MAG_FILTER,filterToGL[texture.magFilter]),_gl.texParameteri(textureType,_gl.TEXTURE_MIN_FILTER,filterToGL[texture.minFilter])):(_gl.texParameteri(textureType,_gl.TEXTURE_WRAP_S,_gl.CLAMP_TO_EDGE),_gl.texParameteri(textureType,_gl.TEXTURE_WRAP_T,_gl.CLAMP_TO_EDGE),textureType!==_gl.TEXTURE_3D&&textureType!==_gl.TEXTURE_2D_ARRAY||_gl.texParameteri(textureType,_gl.TEXTURE_WRAP_R,_gl.CLAMP_TO_EDGE),texture.wrapS===ClampToEdgeWrapping&&texture.wrapT===ClampToEdgeWrapping||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),_gl.texParameteri(textureType,_gl.TEXTURE_MAG_FILTER,filterFallback(texture.magFilter)),_gl.texParameteri(textureType,_gl.TEXTURE_MIN_FILTER,filterFallback(texture.minFilter)),texture.minFilter!==NearestFilter&&texture.minFilter!==LinearFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===extensions.has("EXT_texture_filter_anisotropic")){const extension=extensions.get("EXT_texture_filter_anisotropic");if(texture.magFilter===NearestFilter)return;if(texture.minFilter!==NearestMipmapLinearFilter&&texture.minFilter!==LinearMipmapLinearFilter)return;if(texture.type===FloatType&&!1===extensions.has("OES_texture_float_linear"))return;if(!1===isWebGL2&&texture.type===HalfFloatType&&!1===extensions.has("OES_texture_half_float_linear"))return;(texture.anisotropy>1||properties.get(texture).__currentAnisotropy)&&(_gl.texParameterf(textureType,extension.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(texture.anisotropy,capabilities.getMaxAnisotropy())),properties.get(texture).__currentAnisotropy=texture.anisotropy)}}function initTexture(textureProperties,texture){let forceUpload=!1;void 0===textureProperties.__webglInit&&(textureProperties.__webglInit=!0,texture.addEventListener("dispose",onTextureDispose));const source=texture.source;let webglTextures=_sources.get(source);void 0===webglTextures&&(webglTextures={},_sources.set(source,webglTextures));const textureCacheKey=function getTextureCacheKey(texture){const array=[];return array.push(texture.wrapS),array.push(texture.wrapT),array.push(texture.wrapR||0),array.push(texture.magFilter),array.push(texture.minFilter),array.push(texture.anisotropy),array.push(texture.internalFormat),array.push(texture.format),array.push(texture.type),array.push(texture.generateMipmaps),array.push(texture.premultiplyAlpha),array.push(texture.flipY),array.push(texture.unpackAlignment),array.push(texture.colorSpace),array.join()}(texture);if(textureCacheKey!==textureProperties.__cacheKey){void 0===webglTextures[textureCacheKey]&&(webglTextures[textureCacheKey]={texture:_gl.createTexture(),usedTimes:0},info.memory.textures++,forceUpload=!0),webglTextures[textureCacheKey].usedTimes++;const webglTexture=webglTextures[textureProperties.__cacheKey];void 0!==webglTexture&&(webglTextures[textureProperties.__cacheKey].usedTimes--,0===webglTexture.usedTimes&&deleteTexture(texture)),textureProperties.__cacheKey=textureCacheKey,textureProperties.__webglTexture=webglTextures[textureCacheKey].texture}return forceUpload}function uploadTexture(textureProperties,texture,slot){let textureType=_gl.TEXTURE_2D;(texture.isDataArrayTexture||texture.isCompressedArrayTexture)&&(textureType=_gl.TEXTURE_2D_ARRAY),texture.isData3DTexture&&(textureType=_gl.TEXTURE_3D);const forceUpload=initTexture(textureProperties,texture),source=texture.source;state.bindTexture(textureType,textureProperties.__webglTexture,_gl.TEXTURE0+slot);const sourceProperties=properties.get(source);if(source.version!==sourceProperties.__version||!0===forceUpload){state.activeTexture(_gl.TEXTURE0+slot),_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL,texture.flipY),_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,texture.premultiplyAlpha),_gl.pixelStorei(_gl.UNPACK_ALIGNMENT,texture.unpackAlignment),_gl.pixelStorei(_gl.UNPACK_COLORSPACE_CONVERSION_WEBGL,_gl.NONE);const needsPowerOfTwo=function textureNeedsPowerOfTwo(texture){return!isWebGL2&&(texture.wrapS!==ClampToEdgeWrapping||texture.wrapT!==ClampToEdgeWrapping||texture.minFilter!==NearestFilter&&texture.minFilter!==LinearFilter)}(texture)&&!1===isPowerOfTwo$1(texture.image);let image=resizeImage(texture.image,needsPowerOfTwo,!1,maxTextureSize);image=verifyColorSpace(texture,image);const supportsMips=isPowerOfTwo$1(image)||isWebGL2,glFormat=utils.convert(texture.format,texture.colorSpace);let mipmap,glType=utils.convert(texture.type),glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType,texture.colorSpace);setTextureParameters(textureType,texture,supportsMips);const mipmaps=texture.mipmaps,useTexStorage=isWebGL2&&!0!==texture.isVideoTexture,allocateMemory=void 0===sourceProperties.__version||!0===forceUpload,levels=getMipLevels(texture,image,supportsMips);if(texture.isDepthTexture)glInternalFormat=_gl.DEPTH_COMPONENT,isWebGL2?glInternalFormat=texture.type===FloatType?_gl.DEPTH_COMPONENT32F:texture.type===UnsignedIntType?_gl.DEPTH_COMPONENT24:texture.type===UnsignedInt248Type?_gl.DEPTH24_STENCIL8:_gl.DEPTH_COMPONENT16:texture.type===FloatType&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),texture.format===DepthFormat&&glInternalFormat===_gl.DEPTH_COMPONENT&&texture.type!==UnsignedShortType&&texture.type!==UnsignedIntType&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),texture.type=UnsignedIntType,glType=utils.convert(texture.type)),texture.format===DepthStencilFormat&&glInternalFormat===_gl.DEPTH_COMPONENT&&(glInternalFormat=_gl.DEPTH_STENCIL,texture.type!==UnsignedInt248Type&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),texture.type=UnsignedInt248Type,glType=utils.convert(texture.type))),allocateMemory&&(useTexStorage?state.texStorage2D(_gl.TEXTURE_2D,1,glInternalFormat,image.width,image.height):state.texImage2D(_gl.TEXTURE_2D,0,glInternalFormat,image.width,image.height,0,glFormat,glType,null));else if(texture.isDataTexture)if(mipmaps.length>0&&supportsMips){useTexStorage&&allocateMemory&&state.texStorage2D(_gl.TEXTURE_2D,levels,glInternalFormat,mipmaps[0].width,mipmaps[0].height);for(let i=0,il=mipmaps.length;i<il;i++)mipmap=mipmaps[i],useTexStorage?state.texSubImage2D(_gl.TEXTURE_2D,i,0,0,mipmap.width,mipmap.height,glFormat,glType,mipmap.data):state.texImage2D(_gl.TEXTURE_2D,i,glInternalFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data);texture.generateMipmaps=!1}else useTexStorage?(allocateMemory&&state.texStorage2D(_gl.TEXTURE_2D,levels,glInternalFormat,image.width,image.height),state.texSubImage2D(_gl.TEXTURE_2D,0,0,0,image.width,image.height,glFormat,glType,image.data)):state.texImage2D(_gl.TEXTURE_2D,0,glInternalFormat,image.width,image.height,0,glFormat,glType,image.data);else if(texture.isCompressedTexture)if(texture.isCompressedArrayTexture){useTexStorage&&allocateMemory&&state.texStorage3D(_gl.TEXTURE_2D_ARRAY,levels,glInternalFormat,mipmaps[0].width,mipmaps[0].height,image.depth);for(let i=0,il=mipmaps.length;i<il;i++)mipmap=mipmaps[i],texture.format!==RGBAFormat?null!==glFormat?useTexStorage?state.compressedTexSubImage3D(_gl.TEXTURE_2D_ARRAY,i,0,0,0,mipmap.width,mipmap.height,image.depth,glFormat,mipmap.data,0,0):state.compressedTexImage3D(_gl.TEXTURE_2D_ARRAY,i,glInternalFormat,mipmap.width,mipmap.height,image.depth,0,mipmap.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):useTexStorage?state.texSubImage3D(_gl.TEXTURE_2D_ARRAY,i,0,0,0,mipmap.width,mipmap.height,image.depth,glFormat,glType,mipmap.data):state.texImage3D(_gl.TEXTURE_2D_ARRAY,i,glInternalFormat,mipmap.width,mipmap.height,image.depth,0,glFormat,glType,mipmap.data)}else{useTexStorage&&allocateMemory&&state.texStorage2D(_gl.TEXTURE_2D,levels,glInternalFormat,mipmaps[0].width,mipmaps[0].height);for(let i=0,il=mipmaps.length;i<il;i++)mipmap=mipmaps[i],texture.format!==RGBAFormat?null!==glFormat?useTexStorage?state.compressedTexSubImage2D(_gl.TEXTURE_2D,i,0,0,mipmap.width,mipmap.height,glFormat,mipmap.data):state.compressedTexImage2D(_gl.TEXTURE_2D,i,glInternalFormat,mipmap.width,mipmap.height,0,mipmap.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):useTexStorage?state.texSubImage2D(_gl.TEXTURE_2D,i,0,0,mipmap.width,mipmap.height,glFormat,glType,mipmap.data):state.texImage2D(_gl.TEXTURE_2D,i,glInternalFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data)}else if(texture.isDataArrayTexture)useTexStorage?(allocateMemory&&state.texStorage3D(_gl.TEXTURE_2D_ARRAY,levels,glInternalFormat,image.width,image.height,image.depth),state.texSubImage3D(_gl.TEXTURE_2D_ARRAY,0,0,0,0,image.width,image.height,image.depth,glFormat,glType,image.data)):state.texImage3D(_gl.TEXTURE_2D_ARRAY,0,glInternalFormat,image.width,image.height,image.depth,0,glFormat,glType,image.data);else if(texture.isData3DTexture)useTexStorage?(allocateMemory&&state.texStorage3D(_gl.TEXTURE_3D,levels,glInternalFormat,image.width,image.height,image.depth),state.texSubImage3D(_gl.TEXTURE_3D,0,0,0,0,image.width,image.height,image.depth,glFormat,glType,image.data)):state.texImage3D(_gl.TEXTURE_3D,0,glInternalFormat,image.width,image.height,image.depth,0,glFormat,glType,image.data);else if(texture.isFramebufferTexture){if(allocateMemory)if(useTexStorage)state.texStorage2D(_gl.TEXTURE_2D,levels,glInternalFormat,image.width,image.height);else{let width=image.width,height=image.height;for(let i=0;i<levels;i++)state.texImage2D(_gl.TEXTURE_2D,i,glInternalFormat,width,height,0,glFormat,glType,null),width>>=1,height>>=1}}else if(mipmaps.length>0&&supportsMips){useTexStorage&&allocateMemory&&state.texStorage2D(_gl.TEXTURE_2D,levels,glInternalFormat,mipmaps[0].width,mipmaps[0].height);for(let i=0,il=mipmaps.length;i<il;i++)mipmap=mipmaps[i],useTexStorage?state.texSubImage2D(_gl.TEXTURE_2D,i,0,0,glFormat,glType,mipmap):state.texImage2D(_gl.TEXTURE_2D,i,glInternalFormat,glFormat,glType,mipmap);texture.generateMipmaps=!1}else useTexStorage?(allocateMemory&&state.texStorage2D(_gl.TEXTURE_2D,levels,glInternalFormat,image.width,image.height),state.texSubImage2D(_gl.TEXTURE_2D,0,0,0,glFormat,glType,image)):state.texImage2D(_gl.TEXTURE_2D,0,glInternalFormat,glFormat,glType,image);textureNeedsGenerateMipmaps(texture,supportsMips)&&generateMipmap(textureType),sourceProperties.__version=source.version,texture.onUpdate&&texture.onUpdate(texture)}textureProperties.__version=texture.version}function setupFrameBufferTexture(framebuffer,renderTarget,texture,attachment,textureTarget){const glFormat=utils.convert(texture.format,texture.colorSpace),glType=utils.convert(texture.type),glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType,texture.colorSpace);properties.get(renderTarget).__hasExternalTextures||(textureTarget===_gl.TEXTURE_3D||textureTarget===_gl.TEXTURE_2D_ARRAY?state.texImage3D(textureTarget,0,glInternalFormat,renderTarget.width,renderTarget.height,renderTarget.depth,0,glFormat,glType,null):state.texImage2D(textureTarget,0,glInternalFormat,renderTarget.width,renderTarget.height,0,glFormat,glType,null)),state.bindFramebuffer(_gl.FRAMEBUFFER,framebuffer),useMultisampledRTT(renderTarget)?multisampledRTTExt.framebufferTexture2DMultisampleEXT(_gl.FRAMEBUFFER,attachment,textureTarget,properties.get(texture).__webglTexture,0,getRenderTargetSamples(renderTarget)):(textureTarget===_gl.TEXTURE_2D||textureTarget>=_gl.TEXTURE_CUBE_MAP_POSITIVE_X&&textureTarget<=_gl.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&_gl.framebufferTexture2D(_gl.FRAMEBUFFER,attachment,textureTarget,properties.get(texture).__webglTexture,0),state.bindFramebuffer(_gl.FRAMEBUFFER,null)}function setupRenderBufferStorage(renderbuffer,renderTarget,isMultisample){if(_gl.bindRenderbuffer(_gl.RENDERBUFFER,renderbuffer),renderTarget.depthBuffer&&!renderTarget.stencilBuffer){let glInternalFormat=_gl.DEPTH_COMPONENT16;if(isMultisample||useMultisampledRTT(renderTarget)){const depthTexture=renderTarget.depthTexture;depthTexture&&depthTexture.isDepthTexture&&(depthTexture.type===FloatType?glInternalFormat=_gl.DEPTH_COMPONENT32F:depthTexture.type===UnsignedIntType&&(glInternalFormat=_gl.DEPTH_COMPONENT24));const samples=getRenderTargetSamples(renderTarget);useMultisampledRTT(renderTarget)?multisampledRTTExt.renderbufferStorageMultisampleEXT(_gl.RENDERBUFFER,samples,glInternalFormat,renderTarget.width,renderTarget.height):_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER,samples,glInternalFormat,renderTarget.width,renderTarget.height)}else _gl.renderbufferStorage(_gl.RENDERBUFFER,glInternalFormat,renderTarget.width,renderTarget.height);_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER,_gl.DEPTH_ATTACHMENT,_gl.RENDERBUFFER,renderbuffer)}else if(renderTarget.depthBuffer&&renderTarget.stencilBuffer){const samples=getRenderTargetSamples(renderTarget);isMultisample&&!1===useMultisampledRTT(renderTarget)?_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER,samples,_gl.DEPTH24_STENCIL8,renderTarget.width,renderTarget.height):useMultisampledRTT(renderTarget)?multisampledRTTExt.renderbufferStorageMultisampleEXT(_gl.RENDERBUFFER,samples,_gl.DEPTH24_STENCIL8,renderTarget.width,renderTarget.height):_gl.renderbufferStorage(_gl.RENDERBUFFER,_gl.DEPTH_STENCIL,renderTarget.width,renderTarget.height),_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER,_gl.DEPTH_STENCIL_ATTACHMENT,_gl.RENDERBUFFER,renderbuffer)}else{const textures=!0===renderTarget.isWebGLMultipleRenderTargets?renderTarget.texture:[renderTarget.texture];for(let i=0;i<textures.length;i++){const texture=textures[i],glFormat=utils.convert(texture.format,texture.colorSpace),glType=utils.convert(texture.type),glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType,texture.colorSpace),samples=getRenderTargetSamples(renderTarget);isMultisample&&!1===useMultisampledRTT(renderTarget)?_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER,samples,glInternalFormat,renderTarget.width,renderTarget.height):useMultisampledRTT(renderTarget)?multisampledRTTExt.renderbufferStorageMultisampleEXT(_gl.RENDERBUFFER,samples,glInternalFormat,renderTarget.width,renderTarget.height):_gl.renderbufferStorage(_gl.RENDERBUFFER,glInternalFormat,renderTarget.width,renderTarget.height)}}_gl.bindRenderbuffer(_gl.RENDERBUFFER,null)}function setupDepthRenderbuffer(renderTarget){const renderTargetProperties=properties.get(renderTarget),isCube=!0===renderTarget.isWebGLCubeRenderTarget;if(renderTarget.depthTexture&&!renderTargetProperties.__autoAllocateDepthBuffer){if(isCube)throw new Error("target.depthTexture not supported in Cube render targets");!function setupDepthTexture(framebuffer,renderTarget){if(renderTarget&&renderTarget.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(state.bindFramebuffer(_gl.FRAMEBUFFER,framebuffer),!renderTarget.depthTexture||!renderTarget.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");properties.get(renderTarget.depthTexture).__webglTexture&&renderTarget.depthTexture.image.width===renderTarget.width&&renderTarget.depthTexture.image.height===renderTarget.height||(renderTarget.depthTexture.image.width=renderTarget.width,renderTarget.depthTexture.image.height=renderTarget.height,renderTarget.depthTexture.needsUpdate=!0),setTexture2D(renderTarget.depthTexture,0);const webglDepthTexture=properties.get(renderTarget.depthTexture).__webglTexture,samples=getRenderTargetSamples(renderTarget);if(renderTarget.depthTexture.format===DepthFormat)useMultisampledRTT(renderTarget)?multisampledRTTExt.framebufferTexture2DMultisampleEXT(_gl.FRAMEBUFFER,_gl.DEPTH_ATTACHMENT,_gl.TEXTURE_2D,webglDepthTexture,0,samples):_gl.framebufferTexture2D(_gl.FRAMEBUFFER,_gl.DEPTH_ATTACHMENT,_gl.TEXTURE_2D,webglDepthTexture,0);else{if(renderTarget.depthTexture.format!==DepthStencilFormat)throw new Error("Unknown depthTexture format");useMultisampledRTT(renderTarget)?multisampledRTTExt.framebufferTexture2DMultisampleEXT(_gl.FRAMEBUFFER,_gl.DEPTH_STENCIL_ATTACHMENT,_gl.TEXTURE_2D,webglDepthTexture,0,samples):_gl.framebufferTexture2D(_gl.FRAMEBUFFER,_gl.DEPTH_STENCIL_ATTACHMENT,_gl.TEXTURE_2D,webglDepthTexture,0)}}(renderTargetProperties.__webglFramebuffer,renderTarget)}else if(isCube){renderTargetProperties.__webglDepthbuffer=[];for(let i=0;i<6;i++)state.bindFramebuffer(_gl.FRAMEBUFFER,renderTargetProperties.__webglFramebuffer[i]),renderTargetProperties.__webglDepthbuffer[i]=_gl.createRenderbuffer(),setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[i],renderTarget,!1)}else state.bindFramebuffer(_gl.FRAMEBUFFER,renderTargetProperties.__webglFramebuffer),renderTargetProperties.__webglDepthbuffer=_gl.createRenderbuffer(),setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer,renderTarget,!1);state.bindFramebuffer(_gl.FRAMEBUFFER,null)}function getRenderTargetSamples(renderTarget){return Math.min(maxSamples,renderTarget.samples)}function useMultisampledRTT(renderTarget){const renderTargetProperties=properties.get(renderTarget);return isWebGL2&&renderTarget.samples>0&&!0===extensions.has("WEBGL_multisampled_render_to_texture")&&!1!==renderTargetProperties.__useRenderToTexture}function verifyColorSpace(texture,image){const colorSpace=texture.colorSpace,format=texture.format,type=texture.type;return!0===texture.isCompressedTexture||texture.format===_SRGBAFormat||colorSpace!==LinearSRGBColorSpace&&colorSpace!==NoColorSpace&&(colorSpace===SRGBColorSpace?!1===isWebGL2?!0===extensions.has("EXT_sRGB")&&format===RGBAFormat?(texture.format=_SRGBAFormat,texture.minFilter=LinearFilter,texture.generateMipmaps=!1):image=ImageUtils.sRGBToLinear(image):format===RGBAFormat&&type===UnsignedByteType||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",colorSpace)),image}this.allocateTextureUnit=function allocateTextureUnit(){const textureUnit=textureUnits;return textureUnit>=maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+textureUnit+" texture units while this GPU supports only "+maxTextures),textureUnits+=1,textureUnit},this.resetTextureUnits=function resetTextureUnits(){textureUnits=0},this.setTexture2D=setTexture2D,this.setTexture2DArray=function setTexture2DArray(texture,slot){const textureProperties=properties.get(texture);texture.version>0&&textureProperties.__version!==texture.version?uploadTexture(textureProperties,texture,slot):state.bindTexture(_gl.TEXTURE_2D_ARRAY,textureProperties.__webglTexture,_gl.TEXTURE0+slot)},this.setTexture3D=function setTexture3D(texture,slot){const textureProperties=properties.get(texture);texture.version>0&&textureProperties.__version!==texture.version?uploadTexture(textureProperties,texture,slot):state.bindTexture(_gl.TEXTURE_3D,textureProperties.__webglTexture,_gl.TEXTURE0+slot)},this.setTextureCube=function setTextureCube(texture,slot){const textureProperties=properties.get(texture);texture.version>0&&textureProperties.__version!==texture.version?function uploadCubeTexture(textureProperties,texture,slot){if(6!==texture.image.length)return;const forceUpload=initTexture(textureProperties,texture),source=texture.source;state.bindTexture(_gl.TEXTURE_CUBE_MAP,textureProperties.__webglTexture,_gl.TEXTURE0+slot);const sourceProperties=properties.get(source);if(source.version!==sourceProperties.__version||!0===forceUpload){state.activeTexture(_gl.TEXTURE0+slot),_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL,texture.flipY),_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,texture.premultiplyAlpha),_gl.pixelStorei(_gl.UNPACK_ALIGNMENT,texture.unpackAlignment),_gl.pixelStorei(_gl.UNPACK_COLORSPACE_CONVERSION_WEBGL,_gl.NONE);const isCompressed=texture.isCompressedTexture||texture.image[0].isCompressedTexture,isDataTexture=texture.image[0]&&texture.image[0].isDataTexture,cubeImage=[];for(let i=0;i<6;i++)cubeImage[i]=isCompressed||isDataTexture?isDataTexture?texture.image[i].image:texture.image[i]:resizeImage(texture.image[i],!1,!0,maxCubemapSize),cubeImage[i]=verifyColorSpace(texture,cubeImage[i]);const image=cubeImage[0],supportsMips=isPowerOfTwo$1(image)||isWebGL2,glFormat=utils.convert(texture.format,texture.colorSpace),glType=utils.convert(texture.type),glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType,texture.colorSpace),useTexStorage=isWebGL2&&!0!==texture.isVideoTexture,allocateMemory=void 0===sourceProperties.__version||!0===forceUpload;let mipmaps,levels=getMipLevels(texture,image,supportsMips);if(setTextureParameters(_gl.TEXTURE_CUBE_MAP,texture,supportsMips),isCompressed){useTexStorage&&allocateMemory&&state.texStorage2D(_gl.TEXTURE_CUBE_MAP,levels,glInternalFormat,image.width,image.height);for(let i=0;i<6;i++){mipmaps=cubeImage[i].mipmaps;for(let j=0;j<mipmaps.length;j++){const mipmap=mipmaps[j];texture.format!==RGBAFormat?null!==glFormat?useTexStorage?state.compressedTexSubImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i,j,0,0,mipmap.width,mipmap.height,glFormat,mipmap.data):state.compressedTexImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i,j,glInternalFormat,mipmap.width,mipmap.height,0,mipmap.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):useTexStorage?state.texSubImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i,j,0,0,mipmap.width,mipmap.height,glFormat,glType,mipmap.data):state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i,j,glInternalFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data)}}}else{mipmaps=texture.mipmaps,useTexStorage&&allocateMemory&&(mipmaps.length>0&&levels++,state.texStorage2D(_gl.TEXTURE_CUBE_MAP,levels,glInternalFormat,cubeImage[0].width,cubeImage[0].height));for(let i=0;i<6;i++)if(isDataTexture){useTexStorage?state.texSubImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i,0,0,0,cubeImage[i].width,cubeImage[i].height,glFormat,glType,cubeImage[i].data):state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i,0,glInternalFormat,cubeImage[i].width,cubeImage[i].height,0,glFormat,glType,cubeImage[i].data);for(let j=0;j<mipmaps.length;j++){const mipmapImage=mipmaps[j].image[i].image;useTexStorage?state.texSubImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i,j+1,0,0,mipmapImage.width,mipmapImage.height,glFormat,glType,mipmapImage.data):state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i,j+1,glInternalFormat,mipmapImage.width,mipmapImage.height,0,glFormat,glType,mipmapImage.data)}}else{useTexStorage?state.texSubImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i,0,0,0,glFormat,glType,cubeImage[i]):state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i,0,glInternalFormat,glFormat,glType,cubeImage[i]);for(let j=0;j<mipmaps.length;j++){const mipmap=mipmaps[j];useTexStorage?state.texSubImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i,j+1,0,0,glFormat,glType,mipmap.image[i]):state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i,j+1,glInternalFormat,glFormat,glType,mipmap.image[i])}}}textureNeedsGenerateMipmaps(texture,supportsMips)&&generateMipmap(_gl.TEXTURE_CUBE_MAP),sourceProperties.__version=source.version,texture.onUpdate&&texture.onUpdate(texture)}textureProperties.__version=texture.version}(textureProperties,texture,slot):state.bindTexture(_gl.TEXTURE_CUBE_MAP,textureProperties.__webglTexture,_gl.TEXTURE0+slot)},this.rebindTextures=function rebindTextures(renderTarget,colorTexture,depthTexture){const renderTargetProperties=properties.get(renderTarget);void 0!==colorTexture&&setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer,renderTarget,renderTarget.texture,_gl.COLOR_ATTACHMENT0,_gl.TEXTURE_2D),void 0!==depthTexture&&setupDepthRenderbuffer(renderTarget)},this.setupRenderTarget=function setupRenderTarget(renderTarget){const texture=renderTarget.texture,renderTargetProperties=properties.get(renderTarget),textureProperties=properties.get(texture);renderTarget.addEventListener("dispose",onRenderTargetDispose),!0!==renderTarget.isWebGLMultipleRenderTargets&&(void 0===textureProperties.__webglTexture&&(textureProperties.__webglTexture=_gl.createTexture()),textureProperties.__version=texture.version,info.memory.textures++);const isCube=!0===renderTarget.isWebGLCubeRenderTarget,isMultipleRenderTargets=!0===renderTarget.isWebGLMultipleRenderTargets,supportsMips=isPowerOfTwo$1(renderTarget)||isWebGL2;if(isCube){renderTargetProperties.__webglFramebuffer=[];for(let i=0;i<6;i++)renderTargetProperties.__webglFramebuffer[i]=_gl.createFramebuffer()}else{if(renderTargetProperties.__webglFramebuffer=_gl.createFramebuffer(),isMultipleRenderTargets)if(capabilities.drawBuffers){const textures=renderTarget.texture;for(let i=0,il=textures.length;i<il;i++){const attachmentProperties=properties.get(textures[i]);void 0===attachmentProperties.__webglTexture&&(attachmentProperties.__webglTexture=_gl.createTexture(),info.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(isWebGL2&&renderTarget.samples>0&&!1===useMultisampledRTT(renderTarget)){const textures=isMultipleRenderTargets?texture:[texture];renderTargetProperties.__webglMultisampledFramebuffer=_gl.createFramebuffer(),renderTargetProperties.__webglColorRenderbuffer=[],state.bindFramebuffer(_gl.FRAMEBUFFER,renderTargetProperties.__webglMultisampledFramebuffer);for(let i=0;i<textures.length;i++){const texture=textures[i];renderTargetProperties.__webglColorRenderbuffer[i]=_gl.createRenderbuffer(),_gl.bindRenderbuffer(_gl.RENDERBUFFER,renderTargetProperties.__webglColorRenderbuffer[i]);const glFormat=utils.convert(texture.format,texture.colorSpace),glType=utils.convert(texture.type),glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType,texture.colorSpace,!0===renderTarget.isXRRenderTarget),samples=getRenderTargetSamples(renderTarget);_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER,samples,glInternalFormat,renderTarget.width,renderTarget.height),_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER,_gl.COLOR_ATTACHMENT0+i,_gl.RENDERBUFFER,renderTargetProperties.__webglColorRenderbuffer[i])}_gl.bindRenderbuffer(_gl.RENDERBUFFER,null),renderTarget.depthBuffer&&(renderTargetProperties.__webglDepthRenderbuffer=_gl.createRenderbuffer(),setupRenderBufferStorage(renderTargetProperties.__webglDepthRenderbuffer,renderTarget,!0)),state.bindFramebuffer(_gl.FRAMEBUFFER,null)}}if(isCube){state.bindTexture(_gl.TEXTURE_CUBE_MAP,textureProperties.__webglTexture),setTextureParameters(_gl.TEXTURE_CUBE_MAP,texture,supportsMips);for(let i=0;i<6;i++)setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[i],renderTarget,texture,_gl.COLOR_ATTACHMENT0,_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i);textureNeedsGenerateMipmaps(texture,supportsMips)&&generateMipmap(_gl.TEXTURE_CUBE_MAP),state.unbindTexture()}else if(isMultipleRenderTargets){const textures=renderTarget.texture;for(let i=0,il=textures.length;i<il;i++){const attachment=textures[i],attachmentProperties=properties.get(attachment);state.bindTexture(_gl.TEXTURE_2D,attachmentProperties.__webglTexture),setTextureParameters(_gl.TEXTURE_2D,attachment,supportsMips),setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer,renderTarget,attachment,_gl.COLOR_ATTACHMENT0+i,_gl.TEXTURE_2D),textureNeedsGenerateMipmaps(attachment,supportsMips)&&generateMipmap(_gl.TEXTURE_2D)}state.unbindTexture()}else{let glTextureType=_gl.TEXTURE_2D;(renderTarget.isWebGL3DRenderTarget||renderTarget.isWebGLArrayRenderTarget)&&(isWebGL2?glTextureType=renderTarget.isWebGL3DRenderTarget?_gl.TEXTURE_3D:_gl.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),state.bindTexture(glTextureType,textureProperties.__webglTexture),setTextureParameters(glTextureType,texture,supportsMips),setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer,renderTarget,texture,_gl.COLOR_ATTACHMENT0,glTextureType),textureNeedsGenerateMipmaps(texture,supportsMips)&&generateMipmap(glTextureType),state.unbindTexture()}renderTarget.depthBuffer&&setupDepthRenderbuffer(renderTarget)},this.updateRenderTargetMipmap=function updateRenderTargetMipmap(renderTarget){const supportsMips=isPowerOfTwo$1(renderTarget)||isWebGL2,textures=!0===renderTarget.isWebGLMultipleRenderTargets?renderTarget.texture:[renderTarget.texture];for(let i=0,il=textures.length;i<il;i++){const texture=textures[i];if(textureNeedsGenerateMipmaps(texture,supportsMips)){const target=renderTarget.isWebGLCubeRenderTarget?_gl.TEXTURE_CUBE_MAP:_gl.TEXTURE_2D,webglTexture=properties.get(texture).__webglTexture;state.bindTexture(target,webglTexture),generateMipmap(target),state.unbindTexture()}}},this.updateMultisampleRenderTarget=function updateMultisampleRenderTarget(renderTarget){if(isWebGL2&&renderTarget.samples>0&&!1===useMultisampledRTT(renderTarget)){const textures=renderTarget.isWebGLMultipleRenderTargets?renderTarget.texture:[renderTarget.texture],width=renderTarget.width,height=renderTarget.height;let mask=_gl.COLOR_BUFFER_BIT;const invalidationArray=[],depthStyle=renderTarget.stencilBuffer?_gl.DEPTH_STENCIL_ATTACHMENT:_gl.DEPTH_ATTACHMENT,renderTargetProperties=properties.get(renderTarget),isMultipleRenderTargets=!0===renderTarget.isWebGLMultipleRenderTargets;if(isMultipleRenderTargets)for(let i=0;i<textures.length;i++)state.bindFramebuffer(_gl.FRAMEBUFFER,renderTargetProperties.__webglMultisampledFramebuffer),_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER,_gl.COLOR_ATTACHMENT0+i,_gl.RENDERBUFFER,null),state.bindFramebuffer(_gl.FRAMEBUFFER,renderTargetProperties.__webglFramebuffer),_gl.framebufferTexture2D(_gl.DRAW_FRAMEBUFFER,_gl.COLOR_ATTACHMENT0+i,_gl.TEXTURE_2D,null,0);state.bindFramebuffer(_gl.READ_FRAMEBUFFER,renderTargetProperties.__webglMultisampledFramebuffer),state.bindFramebuffer(_gl.DRAW_FRAMEBUFFER,renderTargetProperties.__webglFramebuffer);for(let i=0;i<textures.length;i++){invalidationArray.push(_gl.COLOR_ATTACHMENT0+i),renderTarget.depthBuffer&&invalidationArray.push(depthStyle);const ignoreDepthValues=void 0!==renderTargetProperties.__ignoreDepthValues&&renderTargetProperties.__ignoreDepthValues;if(!1===ignoreDepthValues&&(renderTarget.depthBuffer&&(mask|=_gl.DEPTH_BUFFER_BIT),renderTarget.stencilBuffer&&(mask|=_gl.STENCIL_BUFFER_BIT)),isMultipleRenderTargets&&_gl.framebufferRenderbuffer(_gl.READ_FRAMEBUFFER,_gl.COLOR_ATTACHMENT0,_gl.RENDERBUFFER,renderTargetProperties.__webglColorRenderbuffer[i]),!0===ignoreDepthValues&&(_gl.invalidateFramebuffer(_gl.READ_FRAMEBUFFER,[depthStyle]),_gl.invalidateFramebuffer(_gl.DRAW_FRAMEBUFFER,[depthStyle])),isMultipleRenderTargets){const webglTexture=properties.get(textures[i]).__webglTexture;_gl.framebufferTexture2D(_gl.DRAW_FRAMEBUFFER,_gl.COLOR_ATTACHMENT0,_gl.TEXTURE_2D,webglTexture,0)}_gl.blitFramebuffer(0,0,width,height,0,0,width,height,mask,_gl.NEAREST),supportsInvalidateFramebuffer&&_gl.invalidateFramebuffer(_gl.READ_FRAMEBUFFER,invalidationArray)}if(state.bindFramebuffer(_gl.READ_FRAMEBUFFER,null),state.bindFramebuffer(_gl.DRAW_FRAMEBUFFER,null),isMultipleRenderTargets)for(let i=0;i<textures.length;i++){state.bindFramebuffer(_gl.FRAMEBUFFER,renderTargetProperties.__webglMultisampledFramebuffer),_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER,_gl.COLOR_ATTACHMENT0+i,_gl.RENDERBUFFER,renderTargetProperties.__webglColorRenderbuffer[i]);const webglTexture=properties.get(textures[i]).__webglTexture;state.bindFramebuffer(_gl.FRAMEBUFFER,renderTargetProperties.__webglFramebuffer),_gl.framebufferTexture2D(_gl.DRAW_FRAMEBUFFER,_gl.COLOR_ATTACHMENT0+i,_gl.TEXTURE_2D,webglTexture,0)}state.bindFramebuffer(_gl.DRAW_FRAMEBUFFER,renderTargetProperties.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=setupDepthRenderbuffer,this.setupFrameBufferTexture=setupFrameBufferTexture,this.useMultisampledRTT=useMultisampledRTT}function WebGLUtils(gl,extensions,capabilities){const isWebGL2=capabilities.isWebGL2;return{convert:function convert(p,colorSpace=NoColorSpace){let extension;if(p===UnsignedByteType)return gl.UNSIGNED_BYTE;if(p===UnsignedShort4444Type)return gl.UNSIGNED_SHORT_4_4_4_4;if(p===UnsignedShort5551Type)return gl.UNSIGNED_SHORT_5_5_5_1;if(p===ByteType)return gl.BYTE;if(p===ShortType)return gl.SHORT;if(p===UnsignedShortType)return gl.UNSIGNED_SHORT;if(p===IntType)return gl.INT;if(p===UnsignedIntType)return gl.UNSIGNED_INT;if(p===FloatType)return gl.FLOAT;if(p===HalfFloatType)return isWebGL2?gl.HALF_FLOAT:(extension=extensions.get("OES_texture_half_float"),null!==extension?extension.HALF_FLOAT_OES:null);if(p===AlphaFormat)return gl.ALPHA;if(p===RGBAFormat)return gl.RGBA;if(p===LuminanceFormat)return gl.LUMINANCE;if(p===LuminanceAlphaFormat)return gl.LUMINANCE_ALPHA;if(p===DepthFormat)return gl.DEPTH_COMPONENT;if(p===DepthStencilFormat)return gl.DEPTH_STENCIL;if(p===_SRGBAFormat)return extension=extensions.get("EXT_sRGB"),null!==extension?extension.SRGB_ALPHA_EXT:null;if(p===RedFormat)return gl.RED;if(p===RedIntegerFormat)return gl.RED_INTEGER;if(p===RGFormat)return gl.RG;if(p===RGIntegerFormat)return gl.RG_INTEGER;if(p===RGBAIntegerFormat)return gl.RGBA_INTEGER;if(p===RGB_S3TC_DXT1_Format||p===RGBA_S3TC_DXT1_Format||p===RGBA_S3TC_DXT3_Format||p===RGBA_S3TC_DXT5_Format)if(colorSpace===SRGBColorSpace){if(extension=extensions.get("WEBGL_compressed_texture_s3tc_srgb"),null===extension)return null;if(p===RGB_S3TC_DXT1_Format)return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(p===RGBA_S3TC_DXT1_Format)return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(p===RGBA_S3TC_DXT3_Format)return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(p===RGBA_S3TC_DXT5_Format)return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(extension=extensions.get("WEBGL_compressed_texture_s3tc"),null===extension)return null;if(p===RGB_S3TC_DXT1_Format)return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;if(p===RGBA_S3TC_DXT1_Format)return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(p===RGBA_S3TC_DXT3_Format)return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(p===RGBA_S3TC_DXT5_Format)return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(p===RGB_PVRTC_4BPPV1_Format||p===RGB_PVRTC_2BPPV1_Format||p===RGBA_PVRTC_4BPPV1_Format||p===RGBA_PVRTC_2BPPV1_Format){if(extension=extensions.get("WEBGL_compressed_texture_pvrtc"),null===extension)return null;if(p===RGB_PVRTC_4BPPV1_Format)return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(p===RGB_PVRTC_2BPPV1_Format)return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(p===RGBA_PVRTC_4BPPV1_Format)return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(p===RGBA_PVRTC_2BPPV1_Format)return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(p===RGB_ETC1_Format)return extension=extensions.get("WEBGL_compressed_texture_etc1"),null!==extension?extension.COMPRESSED_RGB_ETC1_WEBGL:null;if(p===RGB_ETC2_Format||p===RGBA_ETC2_EAC_Format){if(extension=extensions.get("WEBGL_compressed_texture_etc"),null===extension)return null;if(p===RGB_ETC2_Format)return colorSpace===SRGBColorSpace?extension.COMPRESSED_SRGB8_ETC2:extension.COMPRESSED_RGB8_ETC2;if(p===RGBA_ETC2_EAC_Format)return colorSpace===SRGBColorSpace?extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:extension.COMPRESSED_RGBA8_ETC2_EAC}if(p===RGBA_ASTC_4x4_Format||p===RGBA_ASTC_5x4_Format||p===RGBA_ASTC_5x5_Format||p===RGBA_ASTC_6x5_Format||p===RGBA_ASTC_6x6_Format||p===RGBA_ASTC_8x5_Format||p===RGBA_ASTC_8x6_Format||p===RGBA_ASTC_8x8_Format||p===RGBA_ASTC_10x5_Format||p===RGBA_ASTC_10x6_Format||p===RGBA_ASTC_10x8_Format||p===RGBA_ASTC_10x10_Format||p===RGBA_ASTC_12x10_Format||p===RGBA_ASTC_12x12_Format){if(extension=extensions.get("WEBGL_compressed_texture_astc"),null===extension)return null;if(p===RGBA_ASTC_4x4_Format)return colorSpace===SRGBColorSpace?extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:extension.COMPRESSED_RGBA_ASTC_4x4_KHR;if(p===RGBA_ASTC_5x4_Format)return colorSpace===SRGBColorSpace?extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:extension.COMPRESSED_RGBA_ASTC_5x4_KHR;if(p===RGBA_ASTC_5x5_Format)return colorSpace===SRGBColorSpace?extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:extension.COMPRESSED_RGBA_ASTC_5x5_KHR;if(p===RGBA_ASTC_6x5_Format)return colorSpace===SRGBColorSpace?extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:extension.COMPRESSED_RGBA_ASTC_6x5_KHR;if(p===RGBA_ASTC_6x6_Format)return colorSpace===SRGBColorSpace?extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:extension.COMPRESSED_RGBA_ASTC_6x6_KHR;if(p===RGBA_ASTC_8x5_Format)return colorSpace===SRGBColorSpace?extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:extension.COMPRESSED_RGBA_ASTC_8x5_KHR;if(p===RGBA_ASTC_8x6_Format)return colorSpace===SRGBColorSpace?extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:extension.COMPRESSED_RGBA_ASTC_8x6_KHR;if(p===RGBA_ASTC_8x8_Format)return colorSpace===SRGBColorSpace?extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:extension.COMPRESSED_RGBA_ASTC_8x8_KHR;if(p===RGBA_ASTC_10x5_Format)return colorSpace===SRGBColorSpace?extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:extension.COMPRESSED_RGBA_ASTC_10x5_KHR;if(p===RGBA_ASTC_10x6_Format)return colorSpace===SRGBColorSpace?extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:extension.COMPRESSED_RGBA_ASTC_10x6_KHR;if(p===RGBA_ASTC_10x8_Format)return colorSpace===SRGBColorSpace?extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:extension.COMPRESSED_RGBA_ASTC_10x8_KHR;if(p===RGBA_ASTC_10x10_Format)return colorSpace===SRGBColorSpace?extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:extension.COMPRESSED_RGBA_ASTC_10x10_KHR;if(p===RGBA_ASTC_12x10_Format)return colorSpace===SRGBColorSpace?extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:extension.COMPRESSED_RGBA_ASTC_12x10_KHR;if(p===RGBA_ASTC_12x12_Format)return colorSpace===SRGBColorSpace?extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:extension.COMPRESSED_RGBA_ASTC_12x12_KHR}if(p===RGBA_BPTC_Format){if(extension=extensions.get("EXT_texture_compression_bptc"),null===extension)return null;if(p===RGBA_BPTC_Format)return colorSpace===SRGBColorSpace?extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:extension.COMPRESSED_RGBA_BPTC_UNORM_EXT}if(p===RED_RGTC1_Format||p===SIGNED_RED_RGTC1_Format||p===RED_GREEN_RGTC2_Format||p===SIGNED_RED_GREEN_RGTC2_Format){if(extension=extensions.get("EXT_texture_compression_rgtc"),null===extension)return null;if(p===RGBA_BPTC_Format)return extension.COMPRESSED_RED_RGTC1_EXT;if(p===SIGNED_RED_RGTC1_Format)return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(p===RED_GREEN_RGTC2_Format)return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;if(p===SIGNED_RED_GREEN_RGTC2_Format)return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return p===UnsignedInt248Type?isWebGL2?gl.UNSIGNED_INT_24_8:(extension=extensions.get("WEBGL_depth_texture"),null!==extension?extension.UNSIGNED_INT_24_8_WEBGL:null):void 0!==gl[p]?gl[p]:null}}}class ArrayCamera extends PerspectiveCamera{constructor(array=[]){super(),this.isArrayCamera=!0,this.cameras=array}}class Group extends Object3D{constructor(){super(),this.isGroup=!0,this.type="Group"}}const _moveEvent={type:"move"};class WebXRController{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new Group,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new Group,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Vector3,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Vector3),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new Group,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Vector3,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Vector3),this._grip}dispatchEvent(event){return null!==this._targetRay&&this._targetRay.dispatchEvent(event),null!==this._grip&&this._grip.dispatchEvent(event),null!==this._hand&&this._hand.dispatchEvent(event),this}connect(inputSource){if(inputSource&&inputSource.hand){const hand=this._hand;if(hand)for(const inputjoint of inputSource.hand.values())this._getHandJoint(hand,inputjoint)}return this.dispatchEvent({type:"connected",data:inputSource}),this}disconnect(inputSource){return this.dispatchEvent({type:"disconnected",data:inputSource}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(inputSource,frame,referenceSpace){let inputPose=null,gripPose=null,handPose=null;const targetRay=this._targetRay,grip=this._grip,hand=this._hand;if(inputSource&&"visible-blurred"!==frame.session.visibilityState){if(hand&&inputSource.hand){handPose=!0;for(const inputjoint of inputSource.hand.values()){const jointPose=frame.getJointPose(inputjoint,referenceSpace),joint=this._getHandJoint(hand,inputjoint);null!==jointPose&&(joint.matrix.fromArray(jointPose.transform.matrix),joint.matrix.decompose(joint.position,joint.rotation,joint.scale),joint.matrixWorldNeedsUpdate=!0,joint.jointRadius=jointPose.radius),joint.visible=null!==jointPose}const indexTip=hand.joints["index-finger-tip"],thumbTip=hand.joints["thumb-tip"],distance=indexTip.position.distanceTo(thumbTip.position),distanceToPinch=.02,threshold=.005;hand.inputState.pinching&&distance>distanceToPinch+threshold?(hand.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:inputSource.handedness,target:this})):!hand.inputState.pinching&&distance<=distanceToPinch-threshold&&(hand.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:inputSource.handedness,target:this}))}else null!==grip&&inputSource.gripSpace&&(gripPose=frame.getPose(inputSource.gripSpace,referenceSpace),null!==gripPose&&(grip.matrix.fromArray(gripPose.transform.matrix),grip.matrix.decompose(grip.position,grip.rotation,grip.scale),grip.matrixWorldNeedsUpdate=!0,gripPose.linearVelocity?(grip.hasLinearVelocity=!0,grip.linearVelocity.copy(gripPose.linearVelocity)):grip.hasLinearVelocity=!1,gripPose.angularVelocity?(grip.hasAngularVelocity=!0,grip.angularVelocity.copy(gripPose.angularVelocity)):grip.hasAngularVelocity=!1));null!==targetRay&&(inputPose=frame.getPose(inputSource.targetRaySpace,referenceSpace),null===inputPose&&null!==gripPose&&(inputPose=gripPose),null!==inputPose&&(targetRay.matrix.fromArray(inputPose.transform.matrix),targetRay.matrix.decompose(targetRay.position,targetRay.rotation,targetRay.scale),targetRay.matrixWorldNeedsUpdate=!0,inputPose.linearVelocity?(targetRay.hasLinearVelocity=!0,targetRay.linearVelocity.copy(inputPose.linearVelocity)):targetRay.hasLinearVelocity=!1,inputPose.angularVelocity?(targetRay.hasAngularVelocity=!0,targetRay.angularVelocity.copy(inputPose.angularVelocity)):targetRay.hasAngularVelocity=!1,this.dispatchEvent(_moveEvent)))}return null!==targetRay&&(targetRay.visible=null!==inputPose),null!==grip&&(grip.visible=null!==gripPose),null!==hand&&(hand.visible=null!==handPose),this}_getHandJoint(hand,inputjoint){if(void 0===hand.joints[inputjoint.jointName]){const joint=new Group;joint.matrixAutoUpdate=!1,joint.visible=!1,hand.joints[inputjoint.jointName]=joint,hand.add(joint)}return hand.joints[inputjoint.jointName]}}class DepthTexture extends Texture{constructor(width,height,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy,format){if((format=void 0!==format?format:DepthFormat)!==DepthFormat&&format!==DepthStencilFormat)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===type&&format===DepthFormat&&(type=UnsignedIntType),void 0===type&&format===DepthStencilFormat&&(type=UnsignedInt248Type),super(null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy),this.isDepthTexture=!0,this.image={width,height},this.magFilter=void 0!==magFilter?magFilter:NearestFilter,this.minFilter=void 0!==minFilter?minFilter:NearestFilter,this.flipY=!1,this.generateMipmaps=!1}}class WebXRManager extends EventDispatcher{constructor(renderer,gl){super();const scope=this;let session=null,framebufferScaleFactor=1,referenceSpace=null,referenceSpaceType="local-floor",foveation=1,customReferenceSpace=null,pose=null,glBinding=null,glProjLayer=null,glBaseLayer=null,xrFrame=null;const attributes=gl.getContextAttributes();let initialRenderTarget=null,newRenderTarget=null;const controllers=[],controllerInputSources=[],planes=new Set,planesLastChangedTimes=new Map,cameraL=new PerspectiveCamera;cameraL.layers.enable(1),cameraL.viewport=new Vector4;const cameraR=new PerspectiveCamera;cameraR.layers.enable(2),cameraR.viewport=new Vector4;const cameras=[cameraL,cameraR],cameraVR=new ArrayCamera;cameraVR.layers.enable(1),cameraVR.layers.enable(2);let _currentDepthNear=null,_currentDepthFar=null;function onSessionEvent(event){const controllerIndex=controllerInputSources.indexOf(event.inputSource);if(-1===controllerIndex)return;const controller=controllers[controllerIndex];void 0!==controller&&(controller.update(event.inputSource,event.frame,customReferenceSpace||referenceSpace),controller.dispatchEvent({type:event.type,data:event.inputSource}))}function onSessionEnd(){session.removeEventListener("select",onSessionEvent),session.removeEventListener("selectstart",onSessionEvent),session.removeEventListener("selectend",onSessionEvent),session.removeEventListener("squeeze",onSessionEvent),session.removeEventListener("squeezestart",onSessionEvent),session.removeEventListener("squeezeend",onSessionEvent),session.removeEventListener("end",onSessionEnd),session.removeEventListener("inputsourceschange",onInputSourcesChange);for(let i=0;i<controllers.length;i++){const inputSource=controllerInputSources[i];null!==inputSource&&(controllerInputSources[i]=null,controllers[i].disconnect(inputSource))}_currentDepthNear=null,_currentDepthFar=null,renderer.setRenderTarget(initialRenderTarget),glBaseLayer=null,glProjLayer=null,glBinding=null,session=null,newRenderTarget=null,animation.stop(),scope.isPresenting=!1,scope.dispatchEvent({type:"sessionend"})}function onInputSourcesChange(event){for(let i=0;i<event.removed.length;i++){const inputSource=event.removed[i],index=controllerInputSources.indexOf(inputSource);index>=0&&(controllerInputSources[index]=null,controllers[index].disconnect(inputSource))}for(let i=0;i<event.added.length;i++){const inputSource=event.added[i];let controllerIndex=controllerInputSources.indexOf(inputSource);if(-1===controllerIndex){for(let i=0;i<controllers.length;i++){if(i>=controllerInputSources.length){controllerInputSources.push(inputSource),controllerIndex=i;break}if(null===controllerInputSources[i]){controllerInputSources[i]=inputSource,controllerIndex=i;break}}if(-1===controllerIndex)break}const controller=controllers[controllerIndex];controller&&controller.connect(inputSource)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(index){let controller=controllers[index];return void 0===controller&&(controller=new WebXRController,controllers[index]=controller),controller.getTargetRaySpace()},this.getControllerGrip=function(index){let controller=controllers[index];return void 0===controller&&(controller=new WebXRController,controllers[index]=controller),controller.getGripSpace()},this.getHand=function(index){let controller=controllers[index];return void 0===controller&&(controller=new WebXRController,controllers[index]=controller),controller.getHandSpace()},this.setFramebufferScaleFactor=function(value){framebufferScaleFactor=value,!0===scope.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(value){referenceSpaceType=value,!0===scope.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return customReferenceSpace||referenceSpace},this.setReferenceSpace=function(space){customReferenceSpace=space},this.getBaseLayer=function(){return null!==glProjLayer?glProjLayer:glBaseLayer},this.getBinding=function(){return glBinding},this.getFrame=function(){return xrFrame},this.getSession=function(){return session},this.setSession=function(){var _ref=(0,_home_runner_work_ng_components_ng_components_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__.A)((function*(value){if(session=value,null!==session){if(initialRenderTarget=renderer.getRenderTarget(),session.addEventListener("select",onSessionEvent),session.addEventListener("selectstart",onSessionEvent),session.addEventListener("selectend",onSessionEvent),session.addEventListener("squeeze",onSessionEvent),session.addEventListener("squeezestart",onSessionEvent),session.addEventListener("squeezeend",onSessionEvent),session.addEventListener("end",onSessionEnd),session.addEventListener("inputsourceschange",onInputSourcesChange),!0!==attributes.xrCompatible&&(yield gl.makeXRCompatible()),void 0===session.renderState.layers||!1===renderer.capabilities.isWebGL2){const layerInit={antialias:void 0!==session.renderState.layers||attributes.antialias,alpha:!0,depth:attributes.depth,stencil:attributes.stencil,framebufferScaleFactor};glBaseLayer=new XRWebGLLayer(session,gl,layerInit),session.updateRenderState({baseLayer:glBaseLayer}),newRenderTarget=new WebGLRenderTarget(glBaseLayer.framebufferWidth,glBaseLayer.framebufferHeight,{format:RGBAFormat,type:UnsignedByteType,colorSpace:renderer.outputColorSpace,stencilBuffer:attributes.stencil})}else{let depthFormat=null,depthType=null,glDepthFormat=null;attributes.depth&&(glDepthFormat=attributes.stencil?gl.DEPTH24_STENCIL8:gl.DEPTH_COMPONENT24,depthFormat=attributes.stencil?DepthStencilFormat:DepthFormat,depthType=attributes.stencil?UnsignedInt248Type:UnsignedIntType);const projectionlayerInit={colorFormat:gl.RGBA8,depthFormat:glDepthFormat,scaleFactor:framebufferScaleFactor};glBinding=new XRWebGLBinding(session,gl),glProjLayer=glBinding.createProjectionLayer(projectionlayerInit),session.updateRenderState({layers:[glProjLayer]}),newRenderTarget=new WebGLRenderTarget(glProjLayer.textureWidth,glProjLayer.textureHeight,{format:RGBAFormat,type:UnsignedByteType,depthTexture:new DepthTexture(glProjLayer.textureWidth,glProjLayer.textureHeight,depthType,void 0,void 0,void 0,void 0,void 0,void 0,depthFormat),stencilBuffer:attributes.stencil,colorSpace:renderer.outputColorSpace,samples:attributes.antialias?4:0});renderer.properties.get(newRenderTarget).__ignoreDepthValues=glProjLayer.ignoreDepthValues}newRenderTarget.isXRRenderTarget=!0,this.setFoveation(foveation),customReferenceSpace=null,referenceSpace=yield session.requestReferenceSpace(referenceSpaceType),animation.setContext(session),animation.start(),scope.isPresenting=!0,scope.dispatchEvent({type:"sessionstart"})}}));return function(_x2){return _ref.apply(this,arguments)}}(),this.getEnvironmentBlendMode=function(){if(null!==session)return session.environmentBlendMode};const cameraLPos=new Vector3,cameraRPos=new Vector3;function updateCamera(camera,parent){null===parent?camera.matrixWorld.copy(camera.matrix):camera.matrixWorld.multiplyMatrices(parent.matrixWorld,camera.matrix),camera.matrixWorldInverse.copy(camera.matrixWorld).invert()}this.updateCamera=function(camera){if(null===session)return;cameraVR.near=cameraR.near=cameraL.near=camera.near,cameraVR.far=cameraR.far=cameraL.far=camera.far,_currentDepthNear===cameraVR.near&&_currentDepthFar===cameraVR.far||(session.updateRenderState({depthNear:cameraVR.near,depthFar:cameraVR.far}),_currentDepthNear=cameraVR.near,_currentDepthFar=cameraVR.far);const parent=camera.parent,cameras=cameraVR.cameras;updateCamera(cameraVR,parent);for(let i=0;i<cameras.length;i++)updateCamera(cameras[i],parent);2===cameras.length?function setProjectionFromUnion(camera,cameraL,cameraR){cameraLPos.setFromMatrixPosition(cameraL.matrixWorld),cameraRPos.setFromMatrixPosition(cameraR.matrixWorld);const ipd=cameraLPos.distanceTo(cameraRPos),projL=cameraL.projectionMatrix.elements,projR=cameraR.projectionMatrix.elements,near=projL[14]/(projL[10]-1),far=projL[14]/(projL[10]+1),topFov=(projL[9]+1)/projL[5],bottomFov=(projL[9]-1)/projL[5],leftFov=(projL[8]-1)/projL[0],rightFov=(projR[8]+1)/projR[0],left=near*leftFov,right=near*rightFov,zOffset=ipd/(-leftFov+rightFov),xOffset=zOffset*-leftFov;cameraL.matrixWorld.decompose(camera.position,camera.quaternion,camera.scale),camera.translateX(xOffset),camera.translateZ(zOffset),camera.matrixWorld.compose(camera.position,camera.quaternion,camera.scale),camera.matrixWorldInverse.copy(camera.matrixWorld).invert();const near2=near+zOffset,far2=far+zOffset,left2=left-xOffset,right2=right+(ipd-xOffset),top2=topFov*far/far2*near2,bottom2=bottomFov*far/far2*near2;camera.projectionMatrix.makePerspective(left2,right2,top2,bottom2,near2,far2),camera.projectionMatrixInverse.copy(camera.projectionMatrix).invert()}(cameraVR,cameraL,cameraR):cameraVR.projectionMatrix.copy(cameraL.projectionMatrix),function updateUserCamera(camera,cameraVR,parent){null===parent?camera.matrix.copy(cameraVR.matrixWorld):(camera.matrix.copy(parent.matrixWorld),camera.matrix.invert(),camera.matrix.multiply(cameraVR.matrixWorld));camera.matrix.decompose(camera.position,camera.quaternion,camera.scale),camera.updateMatrixWorld(!0);const children=camera.children;for(let i=0,l=children.length;i<l;i++)children[i].updateMatrixWorld(!0);camera.projectionMatrix.copy(cameraVR.projectionMatrix),camera.projectionMatrixInverse.copy(cameraVR.projectionMatrixInverse),camera.isPerspectiveCamera&&(camera.fov=2*RAD2DEG*Math.atan(1/camera.projectionMatrix.elements[5]),camera.zoom=1)}(camera,cameraVR,parent)},this.getCamera=function(){return cameraVR},this.getFoveation=function(){if(null!==glProjLayer||null!==glBaseLayer)return foveation},this.setFoveation=function(value){foveation=value,null!==glProjLayer&&(glProjLayer.fixedFoveation=value),null!==glBaseLayer&&void 0!==glBaseLayer.fixedFoveation&&(glBaseLayer.fixedFoveation=value)},this.getPlanes=function(){return planes};let onAnimationFrameCallback=null;const animation=new WebGLAnimation;animation.setAnimationLoop((function onAnimationFrame(time,frame){if(pose=frame.getViewerPose(customReferenceSpace||referenceSpace),xrFrame=frame,null!==pose){const views=pose.views;null!==glBaseLayer&&(renderer.setRenderTargetFramebuffer(newRenderTarget,glBaseLayer.framebuffer),renderer.setRenderTarget(newRenderTarget));let cameraVRNeedsUpdate=!1;views.length!==cameraVR.cameras.length&&(cameraVR.cameras.length=0,cameraVRNeedsUpdate=!0);for(let i=0;i<views.length;i++){const view=views[i];let viewport=null;if(null!==glBaseLayer)viewport=glBaseLayer.getViewport(view);else{const glSubImage=glBinding.getViewSubImage(glProjLayer,view);viewport=glSubImage.viewport,0===i&&(renderer.setRenderTargetTextures(newRenderTarget,glSubImage.colorTexture,glProjLayer.ignoreDepthValues?void 0:glSubImage.depthStencilTexture),renderer.setRenderTarget(newRenderTarget))}let camera=cameras[i];void 0===camera&&(camera=new PerspectiveCamera,camera.layers.enable(i),camera.viewport=new Vector4,cameras[i]=camera),camera.matrix.fromArray(view.transform.matrix),camera.matrix.decompose(camera.position,camera.quaternion,camera.scale),camera.projectionMatrix.fromArray(view.projectionMatrix),camera.projectionMatrixInverse.copy(camera.projectionMatrix).invert(),camera.viewport.set(viewport.x,viewport.y,viewport.width,viewport.height),0===i&&(cameraVR.matrix.copy(camera.matrix),cameraVR.matrix.decompose(cameraVR.position,cameraVR.quaternion,cameraVR.scale)),!0===cameraVRNeedsUpdate&&cameraVR.cameras.push(camera)}}for(let i=0;i<controllers.length;i++){const inputSource=controllerInputSources[i],controller=controllers[i];null!==inputSource&&void 0!==controller&&controller.update(inputSource,frame,customReferenceSpace||referenceSpace)}if(onAnimationFrameCallback&&onAnimationFrameCallback(time,frame),frame.detectedPlanes){scope.dispatchEvent({type:"planesdetected",data:frame.detectedPlanes});let planesToRemove=null;for(const plane of planes)frame.detectedPlanes.has(plane)||(null===planesToRemove&&(planesToRemove=[]),planesToRemove.push(plane));if(null!==planesToRemove)for(const plane of planesToRemove)planes.delete(plane),planesLastChangedTimes.delete(plane),scope.dispatchEvent({type:"planeremoved",data:plane});for(const plane of frame.detectedPlanes)if(planes.has(plane)){const lastKnownTime=planesLastChangedTimes.get(plane);plane.lastChangedTime>lastKnownTime&&(planesLastChangedTimes.set(plane,plane.lastChangedTime),scope.dispatchEvent({type:"planechanged",data:plane}))}else planes.add(plane),planesLastChangedTimes.set(plane,frame.lastChangedTime),scope.dispatchEvent({type:"planeadded",data:plane})}xrFrame=null})),this.setAnimationLoop=function(callback){onAnimationFrameCallback=callback},this.dispose=function(){}}}function WebGLMaterials(renderer,properties){function refreshTransformUniform(map,uniform){!0===map.matrixAutoUpdate&&map.updateMatrix(),uniform.value.copy(map.matrix)}function refreshUniformsCommon(uniforms,material){uniforms.opacity.value=material.opacity,material.color&&uniforms.diffuse.value.copy(material.color),material.emissive&&uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity),material.map&&(uniforms.map.value=material.map,refreshTransformUniform(material.map,uniforms.mapTransform)),material.alphaMap&&(uniforms.alphaMap.value=material.alphaMap,refreshTransformUniform(material.alphaMap,uniforms.alphaMapTransform)),material.bumpMap&&(uniforms.bumpMap.value=material.bumpMap,refreshTransformUniform(material.bumpMap,uniforms.bumpMapTransform),uniforms.bumpScale.value=material.bumpScale,material.side===BackSide&&(uniforms.bumpScale.value*=-1)),material.normalMap&&(uniforms.normalMap.value=material.normalMap,refreshTransformUniform(material.normalMap,uniforms.normalMapTransform),uniforms.normalScale.value.copy(material.normalScale),material.side===BackSide&&uniforms.normalScale.value.negate()),material.displacementMap&&(uniforms.displacementMap.value=material.displacementMap,refreshTransformUniform(material.displacementMap,uniforms.displacementMapTransform),uniforms.displacementScale.value=material.displacementScale,uniforms.displacementBias.value=material.displacementBias),material.emissiveMap&&(uniforms.emissiveMap.value=material.emissiveMap,refreshTransformUniform(material.emissiveMap,uniforms.emissiveMapTransform)),material.specularMap&&(uniforms.specularMap.value=material.specularMap,refreshTransformUniform(material.specularMap,uniforms.specularMapTransform)),material.alphaTest>0&&(uniforms.alphaTest.value=material.alphaTest);const envMap=properties.get(material).envMap;if(envMap&&(uniforms.envMap.value=envMap,uniforms.flipEnvMap.value=envMap.isCubeTexture&&!1===envMap.isRenderTargetTexture?-1:1,uniforms.reflectivity.value=material.reflectivity,uniforms.ior.value=material.ior,uniforms.refractionRatio.value=material.refractionRatio),material.lightMap){uniforms.lightMap.value=material.lightMap;const scaleFactor=!0===renderer.useLegacyLights?Math.PI:1;uniforms.lightMapIntensity.value=material.lightMapIntensity*scaleFactor,refreshTransformUniform(material.lightMap,uniforms.lightMapTransform)}material.aoMap&&(uniforms.aoMap.value=material.aoMap,uniforms.aoMapIntensity.value=material.aoMapIntensity,refreshTransformUniform(material.aoMap,uniforms.aoMapTransform))}return{refreshFogUniforms:function refreshFogUniforms(uniforms,fog){fog.color.getRGB(uniforms.fogColor.value,getUnlitUniformColorSpace(renderer)),fog.isFog?(uniforms.fogNear.value=fog.near,uniforms.fogFar.value=fog.far):fog.isFogExp2&&(uniforms.fogDensity.value=fog.density)},refreshMaterialUniforms:function refreshMaterialUniforms(uniforms,material,pixelRatio,height,transmissionRenderTarget){material.isMeshBasicMaterial||material.isMeshLambertMaterial?refreshUniformsCommon(uniforms,material):material.isMeshToonMaterial?(refreshUniformsCommon(uniforms,material),function refreshUniformsToon(uniforms,material){material.gradientMap&&(uniforms.gradientMap.value=material.gradientMap)}(uniforms,material)):material.isMeshPhongMaterial?(refreshUniformsCommon(uniforms,material),function refreshUniformsPhong(uniforms,material){uniforms.specular.value.copy(material.specular),uniforms.shininess.value=Math.max(material.shininess,1e-4)}(uniforms,material)):material.isMeshStandardMaterial?(refreshUniformsCommon(uniforms,material),function refreshUniformsStandard(uniforms,material){uniforms.metalness.value=material.metalness,material.metalnessMap&&(uniforms.metalnessMap.value=material.metalnessMap,refreshTransformUniform(material.metalnessMap,uniforms.metalnessMapTransform));uniforms.roughness.value=material.roughness,material.roughnessMap&&(uniforms.roughnessMap.value=material.roughnessMap,refreshTransformUniform(material.roughnessMap,uniforms.roughnessMapTransform));const envMap=properties.get(material).envMap;envMap&&(uniforms.envMapIntensity.value=material.envMapIntensity)}(uniforms,material),material.isMeshPhysicalMaterial&&function refreshUniformsPhysical(uniforms,material,transmissionRenderTarget){uniforms.ior.value=material.ior,material.sheen>0&&(uniforms.sheenColor.value.copy(material.sheenColor).multiplyScalar(material.sheen),uniforms.sheenRoughness.value=material.sheenRoughness,material.sheenColorMap&&(uniforms.sheenColorMap.value=material.sheenColorMap,refreshTransformUniform(material.sheenColorMap,uniforms.sheenColorMapTransform)),material.sheenRoughnessMap&&(uniforms.sheenRoughnessMap.value=material.sheenRoughnessMap,refreshTransformUniform(material.sheenRoughnessMap,uniforms.sheenRoughnessMapTransform)));material.clearcoat>0&&(uniforms.clearcoat.value=material.clearcoat,uniforms.clearcoatRoughness.value=material.clearcoatRoughness,material.clearcoatMap&&(uniforms.clearcoatMap.value=material.clearcoatMap,refreshTransformUniform(material.clearcoatMap,uniforms.clearcoatMapTransform)),material.clearcoatRoughnessMap&&(uniforms.clearcoatRoughnessMap.value=material.clearcoatRoughnessMap,refreshTransformUniform(material.clearcoatRoughnessMap,uniforms.clearcoatRoughnessMapTransform)),material.clearcoatNormalMap&&(uniforms.clearcoatNormalMap.value=material.clearcoatNormalMap,refreshTransformUniform(material.clearcoatNormalMap,uniforms.clearcoatNormalMapTransform),uniforms.clearcoatNormalScale.value.copy(material.clearcoatNormalScale),material.side===BackSide&&uniforms.clearcoatNormalScale.value.negate()));material.iridescence>0&&(uniforms.iridescence.value=material.iridescence,uniforms.iridescenceIOR.value=material.iridescenceIOR,uniforms.iridescenceThicknessMinimum.value=material.iridescenceThicknessRange[0],uniforms.iridescenceThicknessMaximum.value=material.iridescenceThicknessRange[1],material.iridescenceMap&&(uniforms.iridescenceMap.value=material.iridescenceMap,refreshTransformUniform(material.iridescenceMap,uniforms.iridescenceMapTransform)),material.iridescenceThicknessMap&&(uniforms.iridescenceThicknessMap.value=material.iridescenceThicknessMap,refreshTransformUniform(material.iridescenceThicknessMap,uniforms.iridescenceThicknessMapTransform)));material.transmission>0&&(uniforms.transmission.value=material.transmission,uniforms.transmissionSamplerMap.value=transmissionRenderTarget.texture,uniforms.transmissionSamplerSize.value.set(transmissionRenderTarget.width,transmissionRenderTarget.height),material.transmissionMap&&(uniforms.transmissionMap.value=material.transmissionMap,refreshTransformUniform(material.transmissionMap,uniforms.transmissionMapTransform)),uniforms.thickness.value=material.thickness,material.thicknessMap&&(uniforms.thicknessMap.value=material.thicknessMap,refreshTransformUniform(material.thicknessMap,uniforms.thicknessMapTransform)),uniforms.attenuationDistance.value=material.attenuationDistance,uniforms.attenuationColor.value.copy(material.attenuationColor));uniforms.specularIntensity.value=material.specularIntensity,uniforms.specularColor.value.copy(material.specularColor),material.specularColorMap&&(uniforms.specularColorMap.value=material.specularColorMap,refreshTransformUniform(material.specularColorMap,uniforms.specularColorMapTransform));material.specularIntensityMap&&(uniforms.specularIntensityMap.value=material.specularIntensityMap,refreshTransformUniform(material.specularIntensityMap,uniforms.specularIntensityMapTransform))}(uniforms,material,transmissionRenderTarget)):material.isMeshMatcapMaterial?(refreshUniformsCommon(uniforms,material),function refreshUniformsMatcap(uniforms,material){material.matcap&&(uniforms.matcap.value=material.matcap)}(uniforms,material)):material.isMeshDepthMaterial?refreshUniformsCommon(uniforms,material):material.isMeshDistanceMaterial?(refreshUniformsCommon(uniforms,material),function refreshUniformsDistance(uniforms,material){const light=properties.get(material).light;uniforms.referencePosition.value.setFromMatrixPosition(light.matrixWorld),uniforms.nearDistance.value=light.shadow.camera.near,uniforms.farDistance.value=light.shadow.camera.far}(uniforms,material)):material.isMeshNormalMaterial?refreshUniformsCommon(uniforms,material):material.isLineBasicMaterial?(!function refreshUniformsLine(uniforms,material){uniforms.diffuse.value.copy(material.color),uniforms.opacity.value=material.opacity,material.map&&(uniforms.map.value=material.map,refreshTransformUniform(material.map,uniforms.mapTransform))}(uniforms,material),material.isLineDashedMaterial&&function refreshUniformsDash(uniforms,material){uniforms.dashSize.value=material.dashSize,uniforms.totalSize.value=material.dashSize+material.gapSize,uniforms.scale.value=material.scale}(uniforms,material)):material.isPointsMaterial?function refreshUniformsPoints(uniforms,material,pixelRatio,height){uniforms.diffuse.value.copy(material.color),uniforms.opacity.value=material.opacity,uniforms.size.value=material.size*pixelRatio,uniforms.scale.value=.5*height,material.map&&(uniforms.map.value=material.map,refreshTransformUniform(material.map,uniforms.uvTransform));material.alphaMap&&(uniforms.alphaMap.value=material.alphaMap);material.alphaTest>0&&(uniforms.alphaTest.value=material.alphaTest)}(uniforms,material,pixelRatio,height):material.isSpriteMaterial?function refreshUniformsSprites(uniforms,material){uniforms.diffuse.value.copy(material.color),uniforms.opacity.value=material.opacity,uniforms.rotation.value=material.rotation,material.map&&(uniforms.map.value=material.map,refreshTransformUniform(material.map,uniforms.mapTransform));material.alphaMap&&(uniforms.alphaMap.value=material.alphaMap);material.alphaTest>0&&(uniforms.alphaTest.value=material.alphaTest)}(uniforms,material):material.isShadowMaterial?(uniforms.color.value.copy(material.color),uniforms.opacity.value=material.opacity):material.isShaderMaterial&&(material.uniformsNeedUpdate=!1)}}}function WebGLUniformsGroups(gl,info,capabilities,state){let buffers={},updateList={},allocatedBindingPoints=[];const maxBindingPoints=capabilities.isWebGL2?gl.getParameter(gl.MAX_UNIFORM_BUFFER_BINDINGS):0;function hasUniformChanged(uniform,index,cache){const value=uniform.value;if(void 0===cache[index]){if("number"==typeof value)cache[index]=value;else{const values=Array.isArray(value)?value:[value],tempValues=[];for(let i=0;i<values.length;i++)tempValues.push(values[i].clone());cache[index]=tempValues}return!0}if("number"==typeof value){if(cache[index]!==value)return cache[index]=value,!0}else{const cachedObjects=Array.isArray(cache[index])?cache[index]:[cache[index]],values=Array.isArray(value)?value:[value];for(let i=0;i<cachedObjects.length;i++){const cachedObject=cachedObjects[i];if(!1===cachedObject.equals(values[i]))return cachedObject.copy(values[i]),!0}}return!1}function getUniformSize(value){const info={boundary:0,storage:0};return"number"==typeof value?(info.boundary=4,info.storage=4):value.isVector2?(info.boundary=8,info.storage=8):value.isVector3||value.isColor?(info.boundary=16,info.storage=12):value.isVector4?(info.boundary=16,info.storage=16):value.isMatrix3?(info.boundary=48,info.storage=48):value.isMatrix4?(info.boundary=64,info.storage=64):value.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",value),info}function onUniformsGroupsDispose(event){const uniformsGroup=event.target;uniformsGroup.removeEventListener("dispose",onUniformsGroupsDispose);const index=allocatedBindingPoints.indexOf(uniformsGroup.__bindingPointIndex);allocatedBindingPoints.splice(index,1),gl.deleteBuffer(buffers[uniformsGroup.id]),delete buffers[uniformsGroup.id],delete updateList[uniformsGroup.id]}return{bind:function bind(uniformsGroup,program){const webglProgram=program.program;state.uniformBlockBinding(uniformsGroup,webglProgram)},update:function update(uniformsGroup,program){let buffer=buffers[uniformsGroup.id];void 0===buffer&&(!function prepareUniformsGroup(uniformsGroup){const uniforms=uniformsGroup.uniforms;let offset=0;const chunkSize=16;let chunkOffset=0;for(let i=0,l=uniforms.length;i<l;i++){const uniform=uniforms[i],infos={boundary:0,storage:0},values=Array.isArray(uniform.value)?uniform.value:[uniform.value];for(let j=0,jl=values.length;j<jl;j++){const info=getUniformSize(values[j]);infos.boundary+=info.boundary,infos.storage+=info.storage}if(uniform.__data=new Float32Array(infos.storage/Float32Array.BYTES_PER_ELEMENT),uniform.__offset=offset,i>0){chunkOffset=offset%chunkSize;0!==chunkOffset&&chunkSize-chunkOffset-infos.boundary<0&&(offset+=chunkSize-chunkOffset,uniform.__offset=offset)}offset+=infos.storage}chunkOffset=offset%chunkSize,chunkOffset>0&&(offset+=chunkSize-chunkOffset);return uniformsGroup.__size=offset,uniformsGroup.__cache={},this}(uniformsGroup),buffer=function createBuffer(uniformsGroup){const bindingPointIndex=function allocateBindingPointIndex(){for(let i=0;i<maxBindingPoints;i++)if(-1===allocatedBindingPoints.indexOf(i))return allocatedBindingPoints.push(i),i;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();uniformsGroup.__bindingPointIndex=bindingPointIndex;const buffer=gl.createBuffer(),size=uniformsGroup.__size,usage=uniformsGroup.usage;return gl.bindBuffer(gl.UNIFORM_BUFFER,buffer),gl.bufferData(gl.UNIFORM_BUFFER,size,usage),gl.bindBuffer(gl.UNIFORM_BUFFER,null),gl.bindBufferBase(gl.UNIFORM_BUFFER,bindingPointIndex,buffer),buffer}(uniformsGroup),buffers[uniformsGroup.id]=buffer,uniformsGroup.addEventListener("dispose",onUniformsGroupsDispose));const webglProgram=program.program;state.updateUBOMapping(uniformsGroup,webglProgram);const frame=info.render.frame;updateList[uniformsGroup.id]!==frame&&(!function updateBufferData(uniformsGroup){const buffer=buffers[uniformsGroup.id],uniforms=uniformsGroup.uniforms,cache=uniformsGroup.__cache;gl.bindBuffer(gl.UNIFORM_BUFFER,buffer);for(let i=0,il=uniforms.length;i<il;i++){const uniform=uniforms[i];if(!0===hasUniformChanged(uniform,i,cache)){const offset=uniform.__offset,values=Array.isArray(uniform.value)?uniform.value:[uniform.value];let arrayOffset=0;for(let i=0;i<values.length;i++){const value=values[i],info=getUniformSize(value);"number"==typeof value?(uniform.__data[0]=value,gl.bufferSubData(gl.UNIFORM_BUFFER,offset+arrayOffset,uniform.__data)):value.isMatrix3?(uniform.__data[0]=value.elements[0],uniform.__data[1]=value.elements[1],uniform.__data[2]=value.elements[2],uniform.__data[3]=value.elements[0],uniform.__data[4]=value.elements[3],uniform.__data[5]=value.elements[4],uniform.__data[6]=value.elements[5],uniform.__data[7]=value.elements[0],uniform.__data[8]=value.elements[6],uniform.__data[9]=value.elements[7],uniform.__data[10]=value.elements[8],uniform.__data[11]=value.elements[0]):(value.toArray(uniform.__data,arrayOffset),arrayOffset+=info.storage/Float32Array.BYTES_PER_ELEMENT)}gl.bufferSubData(gl.UNIFORM_BUFFER,offset,uniform.__data)}}gl.bindBuffer(gl.UNIFORM_BUFFER,null)}(uniformsGroup),updateList[uniformsGroup.id]=frame)},dispose:function dispose(){for(const id in buffers)gl.deleteBuffer(buffers[id]);allocatedBindingPoints=[],buffers={},updateList={}}}}function createCanvasElement(){const canvas=createElementNS("canvas");return canvas.style.display="block",canvas}class WebGLRenderer{constructor(parameters={}){const{canvas=createCanvasElement(),context=null,depth=!0,stencil=!0,alpha=!1,antialias=!1,premultipliedAlpha=!0,preserveDrawingBuffer=!1,powerPreference="default",failIfMajorPerformanceCaveat=!1}=parameters;let _alpha;this.isWebGLRenderer=!0,_alpha=null!==context?context.getContextAttributes().alpha:alpha;let currentRenderList=null,currentRenderState=null;const renderListStack=[],renderStateStack=[];this.domElement=canvas,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputColorSpace=SRGBColorSpace,this.useLegacyLights=!0,this.toneMapping=NoToneMapping,this.toneMappingExposure=1;const _this=this;let _isContextLost=!1,_currentActiveCubeFace=0,_currentActiveMipmapLevel=0,_currentRenderTarget=null,_currentMaterialId=-1,_currentCamera=null;const _currentViewport=new Vector4,_currentScissor=new Vector4;let _currentScissorTest=null,_width=canvas.width,_height=canvas.height,_pixelRatio=1,_opaqueSort=null,_transparentSort=null;const _viewport=new Vector4(0,0,_width,_height),_scissor=new Vector4(0,0,_width,_height);let _scissorTest=!1;const _frustum=new Frustum;let _clippingEnabled=!1,_localClippingEnabled=!1,_transmissionRenderTarget=null;const _projScreenMatrix=new Matrix4,_vector3=new Vector3,_emptyScene={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function getTargetPixelRatio(){return null===_currentRenderTarget?_pixelRatio:1}let extensions,capabilities,state,info,properties,textures,cubemaps,cubeuvmaps,attributes,geometries,objects,programCache,materials,renderLists,renderStates,clipping,shadowMap,background,morphtargets,bufferRenderer,indexedBufferRenderer,utils,bindingStates,uniformsGroups,_gl=context;function getContext(contextNames,contextAttributes){for(let i=0;i<contextNames.length;i++){const contextName=contextNames[i],context=canvas.getContext(contextName,contextAttributes);if(null!==context)return context}return null}try{const contextAttributes={alpha:!0,depth,stencil,antialias,premultipliedAlpha,preserveDrawingBuffer,powerPreference,failIfMajorPerformanceCaveat};if("setAttribute"in canvas&&canvas.setAttribute("data-engine",`three.js r${REVISION}`),canvas.addEventListener("webglcontextlost",onContextLost,!1),canvas.addEventListener("webglcontextrestored",onContextRestore,!1),canvas.addEventListener("webglcontextcreationerror",onContextCreationError,!1),null===_gl){const contextNames=["webgl2","webgl","experimental-webgl"];if(!0===_this.isWebGL1Renderer&&contextNames.shift(),_gl=getContext(contextNames,contextAttributes),null===_gl)throw getContext(contextNames)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===_gl.getShaderPrecisionFormat&&(_gl.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(error){throw console.error("THREE.WebGLRenderer: "+error.message),error}function initGLContext(){extensions=new WebGLExtensions(_gl),capabilities=new WebGLCapabilities(_gl,extensions,parameters),extensions.init(capabilities),utils=new WebGLUtils(_gl,extensions,capabilities),state=new WebGLState(_gl,extensions,capabilities),info=new WebGLInfo(_gl),properties=new WebGLProperties,textures=new WebGLTextures(_gl,extensions,state,properties,capabilities,utils,info),cubemaps=new WebGLCubeMaps(_this),cubeuvmaps=new WebGLCubeUVMaps(_this),attributes=new WebGLAttributes(_gl,capabilities),bindingStates=new WebGLBindingStates(_gl,extensions,attributes,capabilities),geometries=new WebGLGeometries(_gl,attributes,info,bindingStates),objects=new WebGLObjects(_gl,geometries,attributes,info),morphtargets=new WebGLMorphtargets(_gl,capabilities,textures),clipping=new WebGLClipping(properties),programCache=new WebGLPrograms(_this,cubemaps,cubeuvmaps,extensions,capabilities,bindingStates,clipping),materials=new WebGLMaterials(_this,properties),renderLists=new WebGLRenderLists,renderStates=new WebGLRenderStates(extensions,capabilities),background=new WebGLBackground(_this,cubemaps,cubeuvmaps,state,objects,_alpha,premultipliedAlpha),shadowMap=new WebGLShadowMap(_this,objects,capabilities),uniformsGroups=new WebGLUniformsGroups(_gl,info,capabilities,state),bufferRenderer=new WebGLBufferRenderer(_gl,extensions,info,capabilities),indexedBufferRenderer=new WebGLIndexedBufferRenderer(_gl,extensions,info,capabilities),info.programs=programCache.programs,_this.capabilities=capabilities,_this.extensions=extensions,_this.properties=properties,_this.renderLists=renderLists,_this.shadowMap=shadowMap,_this.state=state,_this.info=info}initGLContext();const xr=new WebXRManager(_this,_gl);function onContextLost(event){event.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),_isContextLost=!0}function onContextRestore(){console.log("THREE.WebGLRenderer: Context Restored."),_isContextLost=!1;const infoAutoReset=info.autoReset,shadowMapEnabled=shadowMap.enabled,shadowMapAutoUpdate=shadowMap.autoUpdate,shadowMapNeedsUpdate=shadowMap.needsUpdate,shadowMapType=shadowMap.type;initGLContext(),info.autoReset=infoAutoReset,shadowMap.enabled=shadowMapEnabled,shadowMap.autoUpdate=shadowMapAutoUpdate,shadowMap.needsUpdate=shadowMapNeedsUpdate,shadowMap.type=shadowMapType}function onContextCreationError(event){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",event.statusMessage)}function onMaterialDispose(event){const material=event.target;material.removeEventListener("dispose",onMaterialDispose),function deallocateMaterial(material){(function releaseMaterialProgramReferences(material){const programs=properties.get(material).programs;void 0!==programs&&(programs.forEach((function(program){programCache.releaseProgram(program)})),material.isShaderMaterial&&programCache.releaseShaderCache(material))})(material),properties.remove(material)}(material)}this.xr=xr,this.getContext=function(){return _gl},this.getContextAttributes=function(){return _gl.getContextAttributes()},this.forceContextLoss=function(){const extension=extensions.get("WEBGL_lose_context");extension&&extension.loseContext()},this.forceContextRestore=function(){const extension=extensions.get("WEBGL_lose_context");extension&&extension.restoreContext()},this.getPixelRatio=function(){return _pixelRatio},this.setPixelRatio=function(value){void 0!==value&&(_pixelRatio=value,this.setSize(_width,_height,!1))},this.getSize=function(target){return target.set(_width,_height)},this.setSize=function(width,height,updateStyle=!0){xr.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(_width=width,_height=height,canvas.width=Math.floor(width*_pixelRatio),canvas.height=Math.floor(height*_pixelRatio),!0===updateStyle&&(canvas.style.width=width+"px",canvas.style.height=height+"px"),this.setViewport(0,0,width,height))},this.getDrawingBufferSize=function(target){return target.set(_width*_pixelRatio,_height*_pixelRatio).floor()},this.setDrawingBufferSize=function(width,height,pixelRatio){_width=width,_height=height,_pixelRatio=pixelRatio,canvas.width=Math.floor(width*pixelRatio),canvas.height=Math.floor(height*pixelRatio),this.setViewport(0,0,width,height)},this.getCurrentViewport=function(target){return target.copy(_currentViewport)},this.getViewport=function(target){return target.copy(_viewport)},this.setViewport=function(x,y,width,height){x.isVector4?_viewport.set(x.x,x.y,x.z,x.w):_viewport.set(x,y,width,height),state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor())},this.getScissor=function(target){return target.copy(_scissor)},this.setScissor=function(x,y,width,height){x.isVector4?_scissor.set(x.x,x.y,x.z,x.w):_scissor.set(x,y,width,height),state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor())},this.getScissorTest=function(){return _scissorTest},this.setScissorTest=function(boolean){state.setScissorTest(_scissorTest=boolean)},this.setOpaqueSort=function(method){_opaqueSort=method},this.setTransparentSort=function(method){_transparentSort=method},this.getClearColor=function(target){return target.copy(background.getClearColor())},this.setClearColor=function(){background.setClearColor.apply(background,arguments)},this.getClearAlpha=function(){return background.getClearAlpha()},this.setClearAlpha=function(){background.setClearAlpha.apply(background,arguments)},this.clear=function(color=!0,depth=!0,stencil=!0){let bits=0;color&&(bits|=_gl.COLOR_BUFFER_BIT),depth&&(bits|=_gl.DEPTH_BUFFER_BIT),stencil&&(bits|=_gl.STENCIL_BUFFER_BIT),_gl.clear(bits)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){canvas.removeEventListener("webglcontextlost",onContextLost,!1),canvas.removeEventListener("webglcontextrestored",onContextRestore,!1),canvas.removeEventListener("webglcontextcreationerror",onContextCreationError,!1),renderLists.dispose(),renderStates.dispose(),properties.dispose(),cubemaps.dispose(),cubeuvmaps.dispose(),objects.dispose(),bindingStates.dispose(),uniformsGroups.dispose(),programCache.dispose(),xr.dispose(),xr.removeEventListener("sessionstart",onXRSessionStart),xr.removeEventListener("sessionend",onXRSessionEnd),_transmissionRenderTarget&&(_transmissionRenderTarget.dispose(),_transmissionRenderTarget=null),animation.stop()},this.renderBufferDirect=function(camera,scene,geometry,material,object,group){null===scene&&(scene=_emptyScene);const frontFaceCW=object.isMesh&&object.matrixWorld.determinant()<0,program=function setProgram(camera,scene,geometry,material,object){!0!==scene.isScene&&(scene=_emptyScene);textures.resetTextureUnits();const fog=scene.fog,environment=material.isMeshStandardMaterial?scene.environment:null,colorSpace=null===_currentRenderTarget?_this.outputColorSpace:!0===_currentRenderTarget.isXRRenderTarget?_currentRenderTarget.texture.colorSpace:LinearSRGBColorSpace,envMap=(material.isMeshStandardMaterial?cubeuvmaps:cubemaps).get(material.envMap||environment),vertexAlphas=!0===material.vertexColors&&!!geometry.attributes.color&&4===geometry.attributes.color.itemSize,vertexTangents=!!material.normalMap&&!!geometry.attributes.tangent,morphTargets=!!geometry.morphAttributes.position,morphNormals=!!geometry.morphAttributes.normal,morphColors=!!geometry.morphAttributes.color,toneMapping=material.toneMapped?_this.toneMapping:NoToneMapping,morphAttribute=geometry.morphAttributes.position||geometry.morphAttributes.normal||geometry.morphAttributes.color,morphTargetsCount=void 0!==morphAttribute?morphAttribute.length:0,materialProperties=properties.get(material),lights=currentRenderState.state.lights;if(!0===_clippingEnabled&&(!0===_localClippingEnabled||camera!==_currentCamera)){const useCache=camera===_currentCamera&&material.id===_currentMaterialId;clipping.setState(material,camera,useCache)}let needsProgramChange=!1;material.version===materialProperties.__version?materialProperties.needsLights&&materialProperties.lightsStateVersion!==lights.state.version||materialProperties.outputColorSpace!==colorSpace||object.isInstancedMesh&&!1===materialProperties.instancing?needsProgramChange=!0:object.isInstancedMesh||!0!==materialProperties.instancing?object.isSkinnedMesh&&!1===materialProperties.skinning?needsProgramChange=!0:object.isSkinnedMesh||!0!==materialProperties.skinning?materialProperties.envMap!==envMap||!0===material.fog&&materialProperties.fog!==fog?needsProgramChange=!0:void 0===materialProperties.numClippingPlanes||materialProperties.numClippingPlanes===clipping.numPlanes&&materialProperties.numIntersection===clipping.numIntersection?(materialProperties.vertexAlphas!==vertexAlphas||materialProperties.vertexTangents!==vertexTangents||materialProperties.morphTargets!==morphTargets||materialProperties.morphNormals!==morphNormals||materialProperties.morphColors!==morphColors||materialProperties.toneMapping!==toneMapping||!0===capabilities.isWebGL2&&materialProperties.morphTargetsCount!==morphTargetsCount)&&(needsProgramChange=!0):needsProgramChange=!0:needsProgramChange=!0:needsProgramChange=!0:(needsProgramChange=!0,materialProperties.__version=material.version);let program=materialProperties.currentProgram;!0===needsProgramChange&&(program=getProgram(material,scene,object));let refreshProgram=!1,refreshMaterial=!1,refreshLights=!1;const p_uniforms=program.getUniforms(),m_uniforms=materialProperties.uniforms;state.useProgram(program.program)&&(refreshProgram=!0,refreshMaterial=!0,refreshLights=!0);material.id!==_currentMaterialId&&(_currentMaterialId=material.id,refreshMaterial=!0);if(refreshProgram||_currentCamera!==camera){if(p_uniforms.setValue(_gl,"projectionMatrix",camera.projectionMatrix),capabilities.logarithmicDepthBuffer&&p_uniforms.setValue(_gl,"logDepthBufFC",2/(Math.log(camera.far+1)/Math.LN2)),_currentCamera!==camera&&(_currentCamera=camera,refreshMaterial=!0,refreshLights=!0),material.isShaderMaterial||material.isMeshPhongMaterial||material.isMeshToonMaterial||material.isMeshStandardMaterial||material.envMap){const uCamPos=p_uniforms.map.cameraPosition;void 0!==uCamPos&&uCamPos.setValue(_gl,_vector3.setFromMatrixPosition(camera.matrixWorld))}(material.isMeshPhongMaterial||material.isMeshToonMaterial||material.isMeshLambertMaterial||material.isMeshBasicMaterial||material.isMeshStandardMaterial||material.isShaderMaterial)&&p_uniforms.setValue(_gl,"isOrthographic",!0===camera.isOrthographicCamera),(material.isMeshPhongMaterial||material.isMeshToonMaterial||material.isMeshLambertMaterial||material.isMeshBasicMaterial||material.isMeshStandardMaterial||material.isShaderMaterial||material.isShadowMaterial||object.isSkinnedMesh)&&p_uniforms.setValue(_gl,"viewMatrix",camera.matrixWorldInverse)}if(object.isSkinnedMesh){p_uniforms.setOptional(_gl,object,"bindMatrix"),p_uniforms.setOptional(_gl,object,"bindMatrixInverse");const skeleton=object.skeleton;skeleton&&(capabilities.floatVertexTextures?(null===skeleton.boneTexture&&skeleton.computeBoneTexture(),p_uniforms.setValue(_gl,"boneTexture",skeleton.boneTexture,textures),p_uniforms.setValue(_gl,"boneTextureSize",skeleton.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const morphAttributes=geometry.morphAttributes;(void 0!==morphAttributes.position||void 0!==morphAttributes.normal||void 0!==morphAttributes.color&&!0===capabilities.isWebGL2)&&morphtargets.update(object,geometry,program);(refreshMaterial||materialProperties.receiveShadow!==object.receiveShadow)&&(materialProperties.receiveShadow=object.receiveShadow,p_uniforms.setValue(_gl,"receiveShadow",object.receiveShadow));material.isMeshGouraudMaterial&&null!==material.envMap&&(m_uniforms.envMap.value=envMap,m_uniforms.flipEnvMap.value=envMap.isCubeTexture&&!1===envMap.isRenderTargetTexture?-1:1);refreshMaterial&&(p_uniforms.setValue(_gl,"toneMappingExposure",_this.toneMappingExposure),materialProperties.needsLights&&function markUniformsLightsNeedsUpdate(uniforms,value){uniforms.ambientLightColor.needsUpdate=value,uniforms.lightProbe.needsUpdate=value,uniforms.directionalLights.needsUpdate=value,uniforms.directionalLightShadows.needsUpdate=value,uniforms.pointLights.needsUpdate=value,uniforms.pointLightShadows.needsUpdate=value,uniforms.spotLights.needsUpdate=value,uniforms.spotLightShadows.needsUpdate=value,uniforms.rectAreaLights.needsUpdate=value,uniforms.hemisphereLights.needsUpdate=value}(m_uniforms,refreshLights),fog&&!0===material.fog&&materials.refreshFogUniforms(m_uniforms,fog),materials.refreshMaterialUniforms(m_uniforms,material,_pixelRatio,_height,_transmissionRenderTarget),WebGLUniforms.upload(_gl,materialProperties.uniformsList,m_uniforms,textures));material.isShaderMaterial&&!0===material.uniformsNeedUpdate&&(WebGLUniforms.upload(_gl,materialProperties.uniformsList,m_uniforms,textures),material.uniformsNeedUpdate=!1);material.isSpriteMaterial&&p_uniforms.setValue(_gl,"center",object.center);if(p_uniforms.setValue(_gl,"modelViewMatrix",object.modelViewMatrix),p_uniforms.setValue(_gl,"normalMatrix",object.normalMatrix),p_uniforms.setValue(_gl,"modelMatrix",object.matrixWorld),material.isShaderMaterial||material.isRawShaderMaterial){const groups=material.uniformsGroups;for(let i=0,l=groups.length;i<l;i++)if(capabilities.isWebGL2){const group=groups[i];uniformsGroups.update(group,program),uniformsGroups.bind(group,program)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return program}(camera,scene,geometry,material,object);state.setMaterial(material,frontFaceCW);let index=geometry.index,rangeFactor=1;!0===material.wireframe&&(index=geometries.getWireframeAttribute(geometry),rangeFactor=2);const drawRange=geometry.drawRange,position=geometry.attributes.position;let drawStart=drawRange.start*rangeFactor,drawEnd=(drawRange.start+drawRange.count)*rangeFactor;null!==group&&(drawStart=Math.max(drawStart,group.start*rangeFactor),drawEnd=Math.min(drawEnd,(group.start+group.count)*rangeFactor)),null!==index?(drawStart=Math.max(drawStart,0),drawEnd=Math.min(drawEnd,index.count)):null!=position&&(drawStart=Math.max(drawStart,0),drawEnd=Math.min(drawEnd,position.count));const drawCount=drawEnd-drawStart;if(drawCount<0||drawCount===1/0)return;let attribute;bindingStates.setup(object,material,program,geometry,index);let renderer=bufferRenderer;if(null!==index&&(attribute=attributes.get(index),renderer=indexedBufferRenderer,renderer.setIndex(attribute)),object.isMesh)!0===material.wireframe?(state.setLineWidth(material.wireframeLinewidth*getTargetPixelRatio()),renderer.setMode(_gl.LINES)):renderer.setMode(_gl.TRIANGLES);else if(object.isLine){let lineWidth=material.linewidth;void 0===lineWidth&&(lineWidth=1),state.setLineWidth(lineWidth*getTargetPixelRatio()),object.isLineSegments?renderer.setMode(_gl.LINES):object.isLineLoop?renderer.setMode(_gl.LINE_LOOP):renderer.setMode(_gl.LINE_STRIP)}else object.isPoints?renderer.setMode(_gl.POINTS):object.isSprite&&renderer.setMode(_gl.TRIANGLES);if(object.isInstancedMesh)renderer.renderInstances(drawStart,drawCount,object.count);else if(geometry.isInstancedBufferGeometry){const maxInstanceCount=void 0!==geometry._maxInstanceCount?geometry._maxInstanceCount:1/0,instanceCount=Math.min(geometry.instanceCount,maxInstanceCount);renderer.renderInstances(drawStart,drawCount,instanceCount)}else renderer.render(drawStart,drawCount)},this.compile=function(scene,camera){function prepare(material,scene,object){!0===material.transparent&&material.side===DoubleSide&&!1===material.forceSinglePass?(material.side=BackSide,material.needsUpdate=!0,getProgram(material,scene,object),material.side=FrontSide,material.needsUpdate=!0,getProgram(material,scene,object),material.side=DoubleSide):getProgram(material,scene,object)}currentRenderState=renderStates.get(scene),currentRenderState.init(),renderStateStack.push(currentRenderState),scene.traverseVisible((function(object){object.isLight&&object.layers.test(camera.layers)&&(currentRenderState.pushLight(object),object.castShadow&&currentRenderState.pushShadow(object))})),currentRenderState.setupLights(_this.useLegacyLights),scene.traverse((function(object){const material=object.material;if(material)if(Array.isArray(material))for(let i=0;i<material.length;i++){prepare(material[i],scene,object)}else prepare(material,scene,object)})),renderStateStack.pop(),currentRenderState=null};let onAnimationFrameCallback=null;function onXRSessionStart(){animation.stop()}function onXRSessionEnd(){animation.start()}const animation=new WebGLAnimation;function projectObject(object,camera,groupOrder,sortObjects){if(!1===object.visible)return;if(object.layers.test(camera.layers))if(object.isGroup)groupOrder=object.renderOrder;else if(object.isLOD)!0===object.autoUpdate&&object.update(camera);else if(object.isLight)currentRenderState.pushLight(object),object.castShadow&&currentRenderState.pushShadow(object);else if(object.isSprite){if(!object.frustumCulled||_frustum.intersectsSprite(object)){sortObjects&&_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);const geometry=objects.update(object),material=object.material;material.visible&&currentRenderList.push(object,geometry,material,groupOrder,_vector3.z,null)}}else if((object.isMesh||object.isLine||object.isPoints)&&(!object.frustumCulled||_frustum.intersectsObject(object))){object.isSkinnedMesh&&object.skeleton.frame!==info.render.frame&&(object.skeleton.update(),object.skeleton.frame=info.render.frame);const geometry=objects.update(object),material=object.material;if(sortObjects&&(null===geometry.boundingSphere&&geometry.computeBoundingSphere(),_vector3.copy(geometry.boundingSphere.center).applyMatrix4(object.matrixWorld).applyMatrix4(_projScreenMatrix)),Array.isArray(material)){const groups=geometry.groups;for(let i=0,l=groups.length;i<l;i++){const group=groups[i],groupMaterial=material[group.materialIndex];groupMaterial&&groupMaterial.visible&&currentRenderList.push(object,geometry,groupMaterial,groupOrder,_vector3.z,group)}}else material.visible&&currentRenderList.push(object,geometry,material,groupOrder,_vector3.z,null)}const children=object.children;for(let i=0,l=children.length;i<l;i++)projectObject(children[i],camera,groupOrder,sortObjects)}function renderScene(currentRenderList,scene,camera,viewport){const opaqueObjects=currentRenderList.opaque,transmissiveObjects=currentRenderList.transmissive,transparentObjects=currentRenderList.transparent;currentRenderState.setupLightsView(camera),!0===_clippingEnabled&&clipping.setGlobalState(_this.clippingPlanes,camera),transmissiveObjects.length>0&&function renderTransmissionPass(opaqueObjects,transmissiveObjects,scene,camera){if(null===_transmissionRenderTarget){const isWebGL2=capabilities.isWebGL2;_transmissionRenderTarget=new WebGLRenderTarget(1024,1024,{generateMipmaps:!0,type:extensions.has("EXT_color_buffer_half_float")?HalfFloatType:UnsignedByteType,minFilter:LinearMipmapLinearFilter,samples:isWebGL2&&!0===antialias?4:0})}const currentRenderTarget=_this.getRenderTarget();_this.setRenderTarget(_transmissionRenderTarget),_this.clear();const currentToneMapping=_this.toneMapping;_this.toneMapping=NoToneMapping,renderObjects(opaqueObjects,scene,camera),textures.updateMultisampleRenderTarget(_transmissionRenderTarget),textures.updateRenderTargetMipmap(_transmissionRenderTarget);let renderTargetNeedsUpdate=!1;for(let i=0,l=transmissiveObjects.length;i<l;i++){const renderItem=transmissiveObjects[i],object=renderItem.object,geometry=renderItem.geometry,material=renderItem.material,group=renderItem.group;if(material.side===DoubleSide&&object.layers.test(camera.layers)){const currentSide=material.side;material.side=BackSide,material.needsUpdate=!0,renderObject(object,scene,camera,geometry,material,group),material.side=currentSide,material.needsUpdate=!0,renderTargetNeedsUpdate=!0}}!0===renderTargetNeedsUpdate&&(textures.updateMultisampleRenderTarget(_transmissionRenderTarget),textures.updateRenderTargetMipmap(_transmissionRenderTarget));_this.setRenderTarget(currentRenderTarget),_this.toneMapping=currentToneMapping}(opaqueObjects,transmissiveObjects,scene,camera),viewport&&state.viewport(_currentViewport.copy(viewport)),opaqueObjects.length>0&&renderObjects(opaqueObjects,scene,camera),transmissiveObjects.length>0&&renderObjects(transmissiveObjects,scene,camera),transparentObjects.length>0&&renderObjects(transparentObjects,scene,camera),state.buffers.depth.setTest(!0),state.buffers.depth.setMask(!0),state.buffers.color.setMask(!0),state.setPolygonOffset(!1)}function renderObjects(renderList,scene,camera){const overrideMaterial=!0===scene.isScene?scene.overrideMaterial:null;for(let i=0,l=renderList.length;i<l;i++){const renderItem=renderList[i],object=renderItem.object,geometry=renderItem.geometry,material=null===overrideMaterial?renderItem.material:overrideMaterial,group=renderItem.group;object.layers.test(camera.layers)&&renderObject(object,scene,camera,geometry,material,group)}}function renderObject(object,scene,camera,geometry,material,group){object.onBeforeRender(_this,scene,camera,geometry,material,group),object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse,object.matrixWorld),object.normalMatrix.getNormalMatrix(object.modelViewMatrix),material.onBeforeRender(_this,scene,camera,geometry,object,group),!0===material.transparent&&material.side===DoubleSide&&!1===material.forceSinglePass?(material.side=BackSide,material.needsUpdate=!0,_this.renderBufferDirect(camera,scene,geometry,material,object,group),material.side=FrontSide,material.needsUpdate=!0,_this.renderBufferDirect(camera,scene,geometry,material,object,group),material.side=DoubleSide):_this.renderBufferDirect(camera,scene,geometry,material,object,group),object.onAfterRender(_this,scene,camera,geometry,material,group)}function getProgram(material,scene,object){!0!==scene.isScene&&(scene=_emptyScene);const materialProperties=properties.get(material),lights=currentRenderState.state.lights,shadowsArray=currentRenderState.state.shadowsArray,lightsStateVersion=lights.state.version,parameters=programCache.getParameters(material,lights.state,shadowsArray,scene,object),programCacheKey=programCache.getProgramCacheKey(parameters);let programs=materialProperties.programs;materialProperties.environment=material.isMeshStandardMaterial?scene.environment:null,materialProperties.fog=scene.fog,materialProperties.envMap=(material.isMeshStandardMaterial?cubeuvmaps:cubemaps).get(material.envMap||materialProperties.environment),void 0===programs&&(material.addEventListener("dispose",onMaterialDispose),programs=new Map,materialProperties.programs=programs);let program=programs.get(programCacheKey);if(void 0!==program){if(materialProperties.currentProgram===program&&materialProperties.lightsStateVersion===lightsStateVersion)return updateCommonMaterialProperties(material,parameters),program}else parameters.uniforms=programCache.getUniforms(material),material.onBuild(object,parameters,_this),material.onBeforeCompile(parameters,_this),program=programCache.acquireProgram(parameters,programCacheKey),programs.set(programCacheKey,program),materialProperties.uniforms=parameters.uniforms;const uniforms=materialProperties.uniforms;(material.isShaderMaterial||material.isRawShaderMaterial)&&!0!==material.clipping||(uniforms.clippingPlanes=clipping.uniform),updateCommonMaterialProperties(material,parameters),materialProperties.needsLights=function materialNeedsLights(material){return material.isMeshLambertMaterial||material.isMeshToonMaterial||material.isMeshPhongMaterial||material.isMeshStandardMaterial||material.isShadowMaterial||material.isShaderMaterial&&!0===material.lights}(material),materialProperties.lightsStateVersion=lightsStateVersion,materialProperties.needsLights&&(uniforms.ambientLightColor.value=lights.state.ambient,uniforms.lightProbe.value=lights.state.probe,uniforms.directionalLights.value=lights.state.directional,uniforms.directionalLightShadows.value=lights.state.directionalShadow,uniforms.spotLights.value=lights.state.spot,uniforms.spotLightShadows.value=lights.state.spotShadow,uniforms.rectAreaLights.value=lights.state.rectArea,uniforms.ltc_1.value=lights.state.rectAreaLTC1,uniforms.ltc_2.value=lights.state.rectAreaLTC2,uniforms.pointLights.value=lights.state.point,uniforms.pointLightShadows.value=lights.state.pointShadow,uniforms.hemisphereLights.value=lights.state.hemi,uniforms.directionalShadowMap.value=lights.state.directionalShadowMap,uniforms.directionalShadowMatrix.value=lights.state.directionalShadowMatrix,uniforms.spotShadowMap.value=lights.state.spotShadowMap,uniforms.spotLightMatrix.value=lights.state.spotLightMatrix,uniforms.spotLightMap.value=lights.state.spotLightMap,uniforms.pointShadowMap.value=lights.state.pointShadowMap,uniforms.pointShadowMatrix.value=lights.state.pointShadowMatrix);const progUniforms=program.getUniforms(),uniformsList=WebGLUniforms.seqWithValue(progUniforms.seq,uniforms);return materialProperties.currentProgram=program,materialProperties.uniformsList=uniformsList,program}function updateCommonMaterialProperties(material,parameters){const materialProperties=properties.get(material);materialProperties.outputColorSpace=parameters.outputColorSpace,materialProperties.instancing=parameters.instancing,materialProperties.skinning=parameters.skinning,materialProperties.morphTargets=parameters.morphTargets,materialProperties.morphNormals=parameters.morphNormals,materialProperties.morphColors=parameters.morphColors,materialProperties.morphTargetsCount=parameters.morphTargetsCount,materialProperties.numClippingPlanes=parameters.numClippingPlanes,materialProperties.numIntersection=parameters.numClipIntersection,materialProperties.vertexAlphas=parameters.vertexAlphas,materialProperties.vertexTangents=parameters.vertexTangents,materialProperties.toneMapping=parameters.toneMapping}animation.setAnimationLoop((function onAnimationFrame(time){onAnimationFrameCallback&&onAnimationFrameCallback(time)})),"undefined"!=typeof self&&animation.setContext(self),this.setAnimationLoop=function(callback){onAnimationFrameCallback=callback,xr.setAnimationLoop(callback),null===callback?animation.stop():animation.start()},xr.addEventListener("sessionstart",onXRSessionStart),xr.addEventListener("sessionend",onXRSessionEnd),this.render=function(scene,camera){if(void 0!==camera&&!0!==camera.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===_isContextLost)return;!0===scene.matrixWorldAutoUpdate&&scene.updateMatrixWorld(),null===camera.parent&&!0===camera.matrixWorldAutoUpdate&&camera.updateMatrixWorld(),!0===xr.enabled&&!0===xr.isPresenting&&(!0===xr.cameraAutoUpdate&&xr.updateCamera(camera),camera=xr.getCamera()),!0===scene.isScene&&scene.onBeforeRender(_this,scene,camera,_currentRenderTarget),currentRenderState=renderStates.get(scene,renderStateStack.length),currentRenderState.init(),renderStateStack.push(currentRenderState),_projScreenMatrix.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse),_frustum.setFromProjectionMatrix(_projScreenMatrix),_localClippingEnabled=this.localClippingEnabled,_clippingEnabled=clipping.init(this.clippingPlanes,_localClippingEnabled),currentRenderList=renderLists.get(scene,renderListStack.length),currentRenderList.init(),renderListStack.push(currentRenderList),projectObject(scene,camera,0,_this.sortObjects),currentRenderList.finish(),!0===_this.sortObjects&&currentRenderList.sort(_opaqueSort,_transparentSort),!0===_clippingEnabled&&clipping.beginShadows();const shadowsArray=currentRenderState.state.shadowsArray;if(shadowMap.render(shadowsArray,scene,camera),!0===_clippingEnabled&&clipping.endShadows(),!0===this.info.autoReset&&this.info.reset(),background.render(currentRenderList,scene),currentRenderState.setupLights(_this.useLegacyLights),camera.isArrayCamera){const cameras=camera.cameras;for(let i=0,l=cameras.length;i<l;i++){const camera2=cameras[i];renderScene(currentRenderList,scene,camera2,camera2.viewport)}}else renderScene(currentRenderList,scene,camera);null!==_currentRenderTarget&&(textures.updateMultisampleRenderTarget(_currentRenderTarget),textures.updateRenderTargetMipmap(_currentRenderTarget)),!0===scene.isScene&&scene.onAfterRender(_this,scene,camera),bindingStates.resetDefaultState(),_currentMaterialId=-1,_currentCamera=null,renderStateStack.pop(),currentRenderState=renderStateStack.length>0?renderStateStack[renderStateStack.length-1]:null,renderListStack.pop(),currentRenderList=renderListStack.length>0?renderListStack[renderListStack.length-1]:null},this.getActiveCubeFace=function(){return _currentActiveCubeFace},this.getActiveMipmapLevel=function(){return _currentActiveMipmapLevel},this.getRenderTarget=function(){return _currentRenderTarget},this.setRenderTargetTextures=function(renderTarget,colorTexture,depthTexture){properties.get(renderTarget.texture).__webglTexture=colorTexture,properties.get(renderTarget.depthTexture).__webglTexture=depthTexture;const renderTargetProperties=properties.get(renderTarget);renderTargetProperties.__hasExternalTextures=!0,renderTargetProperties.__hasExternalTextures&&(renderTargetProperties.__autoAllocateDepthBuffer=void 0===depthTexture,renderTargetProperties.__autoAllocateDepthBuffer||!0===extensions.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),renderTargetProperties.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(renderTarget,defaultFramebuffer){const renderTargetProperties=properties.get(renderTarget);renderTargetProperties.__webglFramebuffer=defaultFramebuffer,renderTargetProperties.__useDefaultFramebuffer=void 0===defaultFramebuffer},this.setRenderTarget=function(renderTarget,activeCubeFace=0,activeMipmapLevel=0){_currentRenderTarget=renderTarget,_currentActiveCubeFace=activeCubeFace,_currentActiveMipmapLevel=activeMipmapLevel;let useDefaultFramebuffer=!0,framebuffer=null,isCube=!1,isRenderTarget3D=!1;if(renderTarget){const renderTargetProperties=properties.get(renderTarget);void 0!==renderTargetProperties.__useDefaultFramebuffer?(state.bindFramebuffer(_gl.FRAMEBUFFER,null),useDefaultFramebuffer=!1):void 0===renderTargetProperties.__webglFramebuffer?textures.setupRenderTarget(renderTarget):renderTargetProperties.__hasExternalTextures&&textures.rebindTextures(renderTarget,properties.get(renderTarget.texture).__webglTexture,properties.get(renderTarget.depthTexture).__webglTexture);const texture=renderTarget.texture;(texture.isData3DTexture||texture.isDataArrayTexture||texture.isCompressedArrayTexture)&&(isRenderTarget3D=!0);const __webglFramebuffer=properties.get(renderTarget).__webglFramebuffer;renderTarget.isWebGLCubeRenderTarget?(framebuffer=__webglFramebuffer[activeCubeFace],isCube=!0):framebuffer=capabilities.isWebGL2&&renderTarget.samples>0&&!1===textures.useMultisampledRTT(renderTarget)?properties.get(renderTarget).__webglMultisampledFramebuffer:__webglFramebuffer,_currentViewport.copy(renderTarget.viewport),_currentScissor.copy(renderTarget.scissor),_currentScissorTest=renderTarget.scissorTest}else _currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor(),_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor(),_currentScissorTest=_scissorTest;if(state.bindFramebuffer(_gl.FRAMEBUFFER,framebuffer)&&capabilities.drawBuffers&&useDefaultFramebuffer&&state.drawBuffers(renderTarget,framebuffer),state.viewport(_currentViewport),state.scissor(_currentScissor),state.setScissorTest(_currentScissorTest),isCube){const textureProperties=properties.get(renderTarget.texture);_gl.framebufferTexture2D(_gl.FRAMEBUFFER,_gl.COLOR_ATTACHMENT0,_gl.TEXTURE_CUBE_MAP_POSITIVE_X+activeCubeFace,textureProperties.__webglTexture,activeMipmapLevel)}else if(isRenderTarget3D){const textureProperties=properties.get(renderTarget.texture),layer=activeCubeFace||0;_gl.framebufferTextureLayer(_gl.FRAMEBUFFER,_gl.COLOR_ATTACHMENT0,textureProperties.__webglTexture,activeMipmapLevel||0,layer)}_currentMaterialId=-1},this.readRenderTargetPixels=function(renderTarget,x,y,width,height,buffer,activeCubeFaceIndex){if(!renderTarget||!renderTarget.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let framebuffer=properties.get(renderTarget).__webglFramebuffer;if(renderTarget.isWebGLCubeRenderTarget&&void 0!==activeCubeFaceIndex&&(framebuffer=framebuffer[activeCubeFaceIndex]),framebuffer){state.bindFramebuffer(_gl.FRAMEBUFFER,framebuffer);try{const texture=renderTarget.texture,textureFormat=texture.format,textureType=texture.type;if(textureFormat!==RGBAFormat&&utils.convert(textureFormat)!==_gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const halfFloatSupportedByExt=textureType===HalfFloatType&&(extensions.has("EXT_color_buffer_half_float")||capabilities.isWebGL2&&extensions.has("EXT_color_buffer_float"));if(!(textureType===UnsignedByteType||utils.convert(textureType)===_gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_TYPE)||textureType===FloatType&&(capabilities.isWebGL2||extensions.has("OES_texture_float")||extensions.has("WEBGL_color_buffer_float"))||halfFloatSupportedByExt))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");x>=0&&x<=renderTarget.width-width&&y>=0&&y<=renderTarget.height-height&&_gl.readPixels(x,y,width,height,utils.convert(textureFormat),utils.convert(textureType),buffer)}finally{const framebuffer=null!==_currentRenderTarget?properties.get(_currentRenderTarget).__webglFramebuffer:null;state.bindFramebuffer(_gl.FRAMEBUFFER,framebuffer)}}},this.copyFramebufferToTexture=function(position,texture,level=0){const levelScale=Math.pow(2,-level),width=Math.floor(texture.image.width*levelScale),height=Math.floor(texture.image.height*levelScale);textures.setTexture2D(texture,0),_gl.copyTexSubImage2D(_gl.TEXTURE_2D,level,0,0,position.x,position.y,width,height),state.unbindTexture()},this.copyTextureToTexture=function(position,srcTexture,dstTexture,level=0){const width=srcTexture.image.width,height=srcTexture.image.height,glFormat=utils.convert(dstTexture.format),glType=utils.convert(dstTexture.type);textures.setTexture2D(dstTexture,0),_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL,dstTexture.flipY),_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,dstTexture.premultiplyAlpha),_gl.pixelStorei(_gl.UNPACK_ALIGNMENT,dstTexture.unpackAlignment),srcTexture.isDataTexture?_gl.texSubImage2D(_gl.TEXTURE_2D,level,position.x,position.y,width,height,glFormat,glType,srcTexture.image.data):srcTexture.isCompressedTexture?_gl.compressedTexSubImage2D(_gl.TEXTURE_2D,level,position.x,position.y,srcTexture.mipmaps[0].width,srcTexture.mipmaps[0].height,glFormat,srcTexture.mipmaps[0].data):_gl.texSubImage2D(_gl.TEXTURE_2D,level,position.x,position.y,glFormat,glType,srcTexture.image),0===level&&dstTexture.generateMipmaps&&_gl.generateMipmap(_gl.TEXTURE_2D),state.unbindTexture()},this.copyTextureToTexture3D=function(sourceBox,position,srcTexture,dstTexture,level=0){if(_this.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const width=sourceBox.max.x-sourceBox.min.x+1,height=sourceBox.max.y-sourceBox.min.y+1,depth=sourceBox.max.z-sourceBox.min.z+1,glFormat=utils.convert(dstTexture.format),glType=utils.convert(dstTexture.type);let glTarget;if(dstTexture.isData3DTexture)textures.setTexture3D(dstTexture,0),glTarget=_gl.TEXTURE_3D;else{if(!dstTexture.isDataArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");textures.setTexture2DArray(dstTexture,0),glTarget=_gl.TEXTURE_2D_ARRAY}_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL,dstTexture.flipY),_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,dstTexture.premultiplyAlpha),_gl.pixelStorei(_gl.UNPACK_ALIGNMENT,dstTexture.unpackAlignment);const unpackRowLen=_gl.getParameter(_gl.UNPACK_ROW_LENGTH),unpackImageHeight=_gl.getParameter(_gl.UNPACK_IMAGE_HEIGHT),unpackSkipPixels=_gl.getParameter(_gl.UNPACK_SKIP_PIXELS),unpackSkipRows=_gl.getParameter(_gl.UNPACK_SKIP_ROWS),unpackSkipImages=_gl.getParameter(_gl.UNPACK_SKIP_IMAGES),image=srcTexture.isCompressedTexture?srcTexture.mipmaps[0]:srcTexture.image;_gl.pixelStorei(_gl.UNPACK_ROW_LENGTH,image.width),_gl.pixelStorei(_gl.UNPACK_IMAGE_HEIGHT,image.height),_gl.pixelStorei(_gl.UNPACK_SKIP_PIXELS,sourceBox.min.x),_gl.pixelStorei(_gl.UNPACK_SKIP_ROWS,sourceBox.min.y),_gl.pixelStorei(_gl.UNPACK_SKIP_IMAGES,sourceBox.min.z),srcTexture.isDataTexture||srcTexture.isData3DTexture?_gl.texSubImage3D(glTarget,level,position.x,position.y,position.z,width,height,depth,glFormat,glType,image.data):srcTexture.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),_gl.compressedTexSubImage3D(glTarget,level,position.x,position.y,position.z,width,height,depth,glFormat,image.data)):_gl.texSubImage3D(glTarget,level,position.x,position.y,position.z,width,height,depth,glFormat,glType,image),_gl.pixelStorei(_gl.UNPACK_ROW_LENGTH,unpackRowLen),_gl.pixelStorei(_gl.UNPACK_IMAGE_HEIGHT,unpackImageHeight),_gl.pixelStorei(_gl.UNPACK_SKIP_PIXELS,unpackSkipPixels),_gl.pixelStorei(_gl.UNPACK_SKIP_ROWS,unpackSkipRows),_gl.pixelStorei(_gl.UNPACK_SKIP_IMAGES,unpackSkipImages),0===level&&dstTexture.generateMipmaps&&_gl.generateMipmap(glTarget),state.unbindTexture()},this.initTexture=function(texture){texture.isCubeTexture?textures.setTextureCube(texture,0):texture.isData3DTexture?textures.setTexture3D(texture,0):texture.isDataArrayTexture||texture.isCompressedArrayTexture?textures.setTexture2DArray(texture,0):textures.setTexture2D(texture,0),state.unbindTexture()},this.resetState=function(){_currentActiveCubeFace=0,_currentActiveMipmapLevel=0,_currentRenderTarget=null,state.reset(),bindingStates.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(value){console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!value}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===SRGBColorSpace?sRGBEncoding:LinearEncoding}set outputEncoding(encoding){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=encoding===sRGBEncoding?SRGBColorSpace:LinearSRGBColorSpace}}class WebGL1Renderer extends WebGLRenderer{}WebGL1Renderer.prototype.isWebGL1Renderer=!0;class FogExp2{constructor(color,density=25e-5){this.isFogExp2=!0,this.name="",this.color=new Color(color),this.density=density}clone(){return new FogExp2(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class Fog{constructor(color,near=1,far=1e3){this.isFog=!0,this.name="",this.color=new Color(color),this.near=near,this.far=far}clone(){return new Fog(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class Scene extends Object3D{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(source,recursive){return super.copy(source,recursive),null!==source.background&&(this.background=source.background.clone()),null!==source.environment&&(this.environment=source.environment.clone()),null!==source.fog&&(this.fog=source.fog.clone()),this.backgroundBlurriness=source.backgroundBlurriness,this.backgroundIntensity=source.backgroundIntensity,null!==source.overrideMaterial&&(this.overrideMaterial=source.overrideMaterial.clone()),this.matrixAutoUpdate=source.matrixAutoUpdate,this}toJSON(meta){const data=super.toJSON(meta);return null!==this.fog&&(data.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(data.object.backgroundBlurriness=this.backgroundBlurriness),1!==this.backgroundIntensity&&(data.object.backgroundIntensity=this.backgroundIntensity),data}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(value){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=value}}class InterleavedBuffer{constructor(array,stride){this.isInterleavedBuffer=!0,this.array=array,this.stride=stride,this.count=void 0!==array?array.length/stride:0,this.usage=StaticDrawUsage,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=generateUUID()}onUploadCallback(){}set needsUpdate(value){!0===value&&this.version++}setUsage(value){return this.usage=value,this}copy(source){return this.array=new source.array.constructor(source.array),this.count=source.count,this.stride=source.stride,this.usage=source.usage,this}copyAt(index1,attribute,index2){index1*=this.stride,index2*=attribute.stride;for(let i=0,l=this.stride;i<l;i++)this.array[index1+i]=attribute.array[index2+i];return this}set(value,offset=0){return this.array.set(value,offset),this}clone(data){void 0===data.arrayBuffers&&(data.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=generateUUID()),void 0===data.arrayBuffers[this.array.buffer._uuid]&&(data.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const array=new this.array.constructor(data.arrayBuffers[this.array.buffer._uuid]),ib=new this.constructor(array,this.stride);return ib.setUsage(this.usage),ib}onUpload(callback){return this.onUploadCallback=callback,this}toJSON(data){return void 0===data.arrayBuffers&&(data.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=generateUUID()),void 0===data.arrayBuffers[this.array.buffer._uuid]&&(data.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const _vector$5=new Vector3;class InterleavedBufferAttribute{constructor(interleavedBuffer,itemSize,offset,normalized=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=interleavedBuffer,this.itemSize=itemSize,this.offset=offset,this.normalized=normalized}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(value){this.data.needsUpdate=value}applyMatrix4(m){for(let i=0,l=this.data.count;i<l;i++)_vector$5.fromBufferAttribute(this,i),_vector$5.applyMatrix4(m),this.setXYZ(i,_vector$5.x,_vector$5.y,_vector$5.z);return this}applyNormalMatrix(m){for(let i=0,l=this.count;i<l;i++)_vector$5.fromBufferAttribute(this,i),_vector$5.applyNormalMatrix(m),this.setXYZ(i,_vector$5.x,_vector$5.y,_vector$5.z);return this}transformDirection(m){for(let i=0,l=this.count;i<l;i++)_vector$5.fromBufferAttribute(this,i),_vector$5.transformDirection(m),this.setXYZ(i,_vector$5.x,_vector$5.y,_vector$5.z);return this}setX(index,x){return this.normalized&&(x=normalize(x,this.array)),this.data.array[index*this.data.stride+this.offset]=x,this}setY(index,y){return this.normalized&&(y=normalize(y,this.array)),this.data.array[index*this.data.stride+this.offset+1]=y,this}setZ(index,z){return this.normalized&&(z=normalize(z,this.array)),this.data.array[index*this.data.stride+this.offset+2]=z,this}setW(index,w){return this.normalized&&(w=normalize(w,this.array)),this.data.array[index*this.data.stride+this.offset+3]=w,this}getX(index){let x=this.data.array[index*this.data.stride+this.offset];return this.normalized&&(x=denormalize(x,this.array)),x}getY(index){let y=this.data.array[index*this.data.stride+this.offset+1];return this.normalized&&(y=denormalize(y,this.array)),y}getZ(index){let z=this.data.array[index*this.data.stride+this.offset+2];return this.normalized&&(z=denormalize(z,this.array)),z}getW(index){let w=this.data.array[index*this.data.stride+this.offset+3];return this.normalized&&(w=denormalize(w,this.array)),w}setXY(index,x,y){return index=index*this.data.stride+this.offset,this.normalized&&(x=normalize(x,this.array),y=normalize(y,this.array)),this.data.array[index+0]=x,this.data.array[index+1]=y,this}setXYZ(index,x,y,z){return index=index*this.data.stride+this.offset,this.normalized&&(x=normalize(x,this.array),y=normalize(y,this.array),z=normalize(z,this.array)),this.data.array[index+0]=x,this.data.array[index+1]=y,this.data.array[index+2]=z,this}setXYZW(index,x,y,z,w){return index=index*this.data.stride+this.offset,this.normalized&&(x=normalize(x,this.array),y=normalize(y,this.array),z=normalize(z,this.array),w=normalize(w,this.array)),this.data.array[index+0]=x,this.data.array[index+1]=y,this.data.array[index+2]=z,this.data.array[index+3]=w,this}clone(data){if(void 0===data){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const array=[];for(let i=0;i<this.count;i++){const index=i*this.data.stride+this.offset;for(let j=0;j<this.itemSize;j++)array.push(this.data.array[index+j])}return new BufferAttribute(new this.array.constructor(array),this.itemSize,this.normalized)}return void 0===data.interleavedBuffers&&(data.interleavedBuffers={}),void 0===data.interleavedBuffers[this.data.uuid]&&(data.interleavedBuffers[this.data.uuid]=this.data.clone(data)),new InterleavedBufferAttribute(data.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(data){if(void 0===data){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const array=[];for(let i=0;i<this.count;i++){const index=i*this.data.stride+this.offset;for(let j=0;j<this.itemSize;j++)array.push(this.data.array[index+j])}return{itemSize:this.itemSize,type:this.array.constructor.name,array,normalized:this.normalized}}return void 0===data.interleavedBuffers&&(data.interleavedBuffers={}),void 0===data.interleavedBuffers[this.data.uuid]&&(data.interleavedBuffers[this.data.uuid]=this.data.toJSON(data)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class SpriteMaterial extends Material{constructor(parameters){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Color(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(parameters)}copy(source){return super.copy(source),this.color.copy(source.color),this.map=source.map,this.alphaMap=source.alphaMap,this.rotation=source.rotation,this.sizeAttenuation=source.sizeAttenuation,this.fog=source.fog,this}}let _geometry;const _intersectPoint=new Vector3,_worldScale=new Vector3,_mvPosition=new Vector3,_alignedPosition=new Vector2,_rotatedPosition=new Vector2,_viewWorldMatrix=new Matrix4,_vA=new Vector3,_vB=new Vector3,_vC=new Vector3,_uvA=new Vector2,_uvB=new Vector2,_uvC=new Vector2;class Sprite extends Object3D{constructor(material){if(super(),this.isSprite=!0,this.type="Sprite",void 0===_geometry){_geometry=new BufferGeometry;const float32Array=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),interleavedBuffer=new InterleavedBuffer(float32Array,5);_geometry.setIndex([0,1,2,0,2,3]),_geometry.setAttribute("position",new InterleavedBufferAttribute(interleavedBuffer,3,0,!1)),_geometry.setAttribute("uv",new InterleavedBufferAttribute(interleavedBuffer,2,3,!1))}this.geometry=_geometry,this.material=void 0!==material?material:new SpriteMaterial,this.center=new Vector2(.5,.5)}raycast(raycaster,intersects){null===raycaster.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),_worldScale.setFromMatrixScale(this.matrixWorld),_viewWorldMatrix.copy(raycaster.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(raycaster.camera.matrixWorldInverse,this.matrixWorld),_mvPosition.setFromMatrixPosition(this.modelViewMatrix),raycaster.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&_worldScale.multiplyScalar(-_mvPosition.z);const rotation=this.material.rotation;let sin,cos;0!==rotation&&(cos=Math.cos(rotation),sin=Math.sin(rotation));const center=this.center;transformVertex(_vA.set(-.5,-.5,0),_mvPosition,center,_worldScale,sin,cos),transformVertex(_vB.set(.5,-.5,0),_mvPosition,center,_worldScale,sin,cos),transformVertex(_vC.set(.5,.5,0),_mvPosition,center,_worldScale,sin,cos),_uvA.set(0,0),_uvB.set(1,0),_uvC.set(1,1);let intersect=raycaster.ray.intersectTriangle(_vA,_vB,_vC,!1,_intersectPoint);if(null===intersect&&(transformVertex(_vB.set(-.5,.5,0),_mvPosition,center,_worldScale,sin,cos),_uvB.set(0,1),intersect=raycaster.ray.intersectTriangle(_vA,_vC,_vB,!1,_intersectPoint),null===intersect))return;const distance=raycaster.ray.origin.distanceTo(_intersectPoint);distance<raycaster.near||distance>raycaster.far||intersects.push({distance,point:_intersectPoint.clone(),uv:Triangle.getInterpolation(_intersectPoint,_vA,_vB,_vC,_uvA,_uvB,_uvC,new Vector2),face:null,object:this})}copy(source,recursive){return super.copy(source,recursive),void 0!==source.center&&this.center.copy(source.center),this.material=source.material,this}}function transformVertex(vertexPosition,mvPosition,center,scale,sin,cos){_alignedPosition.subVectors(vertexPosition,center).addScalar(.5).multiply(scale),void 0!==sin?(_rotatedPosition.x=cos*_alignedPosition.x-sin*_alignedPosition.y,_rotatedPosition.y=sin*_alignedPosition.x+cos*_alignedPosition.y):_rotatedPosition.copy(_alignedPosition),vertexPosition.copy(mvPosition),vertexPosition.x+=_rotatedPosition.x,vertexPosition.y+=_rotatedPosition.y,vertexPosition.applyMatrix4(_viewWorldMatrix)}const _v1$2=new Vector3,_v2$1=new Vector3;class LOD extends Object3D{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(source){super.copy(source,!1);const levels=source.levels;for(let i=0,l=levels.length;i<l;i++){const level=levels[i];this.addLevel(level.object.clone(),level.distance,level.hysteresis)}return this.autoUpdate=source.autoUpdate,this}addLevel(object,distance=0,hysteresis=0){distance=Math.abs(distance);const levels=this.levels;let l;for(l=0;l<levels.length&&!(distance<levels[l].distance);l++);return levels.splice(l,0,{distance,hysteresis,object}),this.add(object),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(distance){const levels=this.levels;if(levels.length>0){let i,l;for(i=1,l=levels.length;i<l;i++){let levelDistance=levels[i].distance;if(levels[i].object.visible&&(levelDistance-=levelDistance*levels[i].hysteresis),distance<levelDistance)break}return levels[i-1].object}return null}raycast(raycaster,intersects){if(this.levels.length>0){_v1$2.setFromMatrixPosition(this.matrixWorld);const distance=raycaster.ray.origin.distanceTo(_v1$2);this.getObjectForDistance(distance).raycast(raycaster,intersects)}}update(camera){const levels=this.levels;if(levels.length>1){_v1$2.setFromMatrixPosition(camera.matrixWorld),_v2$1.setFromMatrixPosition(this.matrixWorld);const distance=_v1$2.distanceTo(_v2$1)/camera.zoom;let i,l;for(levels[0].object.visible=!0,i=1,l=levels.length;i<l;i++){let levelDistance=levels[i].distance;if(levels[i].object.visible&&(levelDistance-=levelDistance*levels[i].hysteresis),!(distance>=levelDistance))break;levels[i-1].object.visible=!1,levels[i].object.visible=!0}for(this._currentLevel=i-1;i<l;i++)levels[i].object.visible=!1}}toJSON(meta){const data=super.toJSON(meta);!1===this.autoUpdate&&(data.object.autoUpdate=!1),data.object.levels=[];const levels=this.levels;for(let i=0,l=levels.length;i<l;i++){const level=levels[i];data.object.levels.push({object:level.object.uuid,distance:level.distance,hysteresis:level.hysteresis})}return data}}const _basePosition=new Vector3,_skinIndex=new Vector4,_skinWeight=new Vector4,_vector3=new Vector3,_matrix4=new Matrix4,_vertex=new Vector3;class SkinnedMesh extends Mesh{constructor(geometry,material){super(geometry,material),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Matrix4,this.bindMatrixInverse=new Matrix4,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const geometry=this.geometry;null===this.boundingBox&&(this.boundingBox=new Box3),this.boundingBox.makeEmpty();const positionAttribute=geometry.getAttribute("position");for(let i=0;i<positionAttribute.count;i++)_vertex.fromBufferAttribute(positionAttribute,i),this.applyBoneTransform(i,_vertex),this.boundingBox.expandByPoint(_vertex)}computeBoundingSphere(){const geometry=this.geometry;null===this.boundingSphere&&(this.boundingSphere=new Sphere),this.boundingSphere.makeEmpty();const positionAttribute=geometry.getAttribute("position");for(let i=0;i<positionAttribute.count;i++)_vertex.fromBufferAttribute(positionAttribute,i),this.applyBoneTransform(i,_vertex),this.boundingSphere.expandByPoint(_vertex)}copy(source,recursive){return super.copy(source,recursive),this.bindMode=source.bindMode,this.bindMatrix.copy(source.bindMatrix),this.bindMatrixInverse.copy(source.bindMatrixInverse),this.skeleton=source.skeleton,this}getVertexPosition(index,target){return super.getVertexPosition(index,target),this.applyBoneTransform(index,target),target}bind(skeleton,bindMatrix){this.skeleton=skeleton,void 0===bindMatrix&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),bindMatrix=this.matrixWorld),this.bindMatrix.copy(bindMatrix),this.bindMatrixInverse.copy(bindMatrix).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const vector=new Vector4,skinWeight=this.geometry.attributes.skinWeight;for(let i=0,l=skinWeight.count;i<l;i++){vector.fromBufferAttribute(skinWeight,i);const scale=1/vector.manhattanLength();scale!==1/0?vector.multiplyScalar(scale):vector.set(1,0,0,0),skinWeight.setXYZW(i,vector.x,vector.y,vector.z,vector.w)}}updateMatrixWorld(force){super.updateMatrixWorld(force),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(index,vector){const skeleton=this.skeleton,geometry=this.geometry;_skinIndex.fromBufferAttribute(geometry.attributes.skinIndex,index),_skinWeight.fromBufferAttribute(geometry.attributes.skinWeight,index),_basePosition.copy(vector).applyMatrix4(this.bindMatrix),vector.set(0,0,0);for(let i=0;i<4;i++){const weight=_skinWeight.getComponent(i);if(0!==weight){const boneIndex=_skinIndex.getComponent(i);_matrix4.multiplyMatrices(skeleton.bones[boneIndex].matrixWorld,skeleton.boneInverses[boneIndex]),vector.addScaledVector(_vector3.copy(_basePosition).applyMatrix4(_matrix4),weight)}}return vector.applyMatrix4(this.bindMatrixInverse)}boneTransform(index,vector){return console.warn("THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151."),this.applyBoneTransform(index,vector)}}class Bone extends Object3D{constructor(){super(),this.isBone=!0,this.type="Bone"}}class DataTexture extends Texture{constructor(data=null,width=1,height=1,format,type,mapping,wrapS,wrapT,magFilter=NearestFilter,minFilter=NearestFilter,anisotropy,colorSpace){super(null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,colorSpace),this.isDataTexture=!0,this.image={data,width,height},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const _offsetMatrix=new Matrix4,_identityMatrix=new Matrix4;class Skeleton{constructor(bones=[],boneInverses=[]){this.uuid=generateUUID(),this.bones=bones.slice(0),this.boneInverses=boneInverses,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const bones=this.bones,boneInverses=this.boneInverses;if(this.boneMatrices=new Float32Array(16*bones.length),0===boneInverses.length)this.calculateInverses();else if(bones.length!==boneInverses.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let i=0,il=this.bones.length;i<il;i++)this.boneInverses.push(new Matrix4)}}calculateInverses(){this.boneInverses.length=0;for(let i=0,il=this.bones.length;i<il;i++){const inverse=new Matrix4;this.bones[i]&&inverse.copy(this.bones[i].matrixWorld).invert(),this.boneInverses.push(inverse)}}pose(){for(let i=0,il=this.bones.length;i<il;i++){const bone=this.bones[i];bone&&bone.matrixWorld.copy(this.boneInverses[i]).invert()}for(let i=0,il=this.bones.length;i<il;i++){const bone=this.bones[i];bone&&(bone.parent&&bone.parent.isBone?(bone.matrix.copy(bone.parent.matrixWorld).invert(),bone.matrix.multiply(bone.matrixWorld)):bone.matrix.copy(bone.matrixWorld),bone.matrix.decompose(bone.position,bone.quaternion,bone.scale))}}update(){const bones=this.bones,boneInverses=this.boneInverses,boneMatrices=this.boneMatrices,boneTexture=this.boneTexture;for(let i=0,il=bones.length;i<il;i++){const matrix=bones[i]?bones[i].matrixWorld:_identityMatrix;_offsetMatrix.multiplyMatrices(matrix,boneInverses[i]),_offsetMatrix.toArray(boneMatrices,16*i)}null!==boneTexture&&(boneTexture.needsUpdate=!0)}clone(){return new Skeleton(this.bones,this.boneInverses)}computeBoneTexture(){let size=Math.sqrt(4*this.bones.length);size=ceilPowerOfTwo(size),size=Math.max(size,4);const boneMatrices=new Float32Array(size*size*4);boneMatrices.set(this.boneMatrices);const boneTexture=new DataTexture(boneMatrices,size,size,RGBAFormat,FloatType);return boneTexture.needsUpdate=!0,this.boneMatrices=boneMatrices,this.boneTexture=boneTexture,this.boneTextureSize=size,this}getBoneByName(name){for(let i=0,il=this.bones.length;i<il;i++){const bone=this.bones[i];if(bone.name===name)return bone}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(json,bones){this.uuid=json.uuid;for(let i=0,l=json.bones.length;i<l;i++){const uuid=json.bones[i];let bone=bones[uuid];void 0===bone&&(console.warn("THREE.Skeleton: No bone found with UUID:",uuid),bone=new Bone),this.bones.push(bone),this.boneInverses.push((new Matrix4).fromArray(json.boneInverses[i]))}return this.init(),this}toJSON(){const data={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};data.uuid=this.uuid;const bones=this.bones,boneInverses=this.boneInverses;for(let i=0,l=bones.length;i<l;i++){const bone=bones[i];data.bones.push(bone.uuid);const boneInverse=boneInverses[i];data.boneInverses.push(boneInverse.toArray())}return data}}class InstancedBufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized,meshPerAttribute=1){super(array,itemSize,normalized),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=meshPerAttribute}copy(source){return super.copy(source),this.meshPerAttribute=source.meshPerAttribute,this}toJSON(){const data=super.toJSON();return data.meshPerAttribute=this.meshPerAttribute,data.isInstancedBufferAttribute=!0,data}}const _instanceLocalMatrix=new Matrix4,_instanceWorldMatrix=new Matrix4,_instanceIntersects=[],_box3=new Box3,_identity=new Matrix4,_mesh=new Mesh,_sphere$2=new Sphere;class InstancedMesh extends Mesh{constructor(geometry,material,count){super(geometry,material),this.isInstancedMesh=!0,this.instanceMatrix=new InstancedBufferAttribute(new Float32Array(16*count),16),this.instanceColor=null,this.count=count,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<count;i++)this.setMatrixAt(i,_identity)}computeBoundingBox(){const geometry=this.geometry,count=this.count;null===this.boundingBox&&(this.boundingBox=new Box3),null===geometry.boundingBox&&geometry.computeBoundingBox(),this.boundingBox.makeEmpty();for(let i=0;i<count;i++)this.getMatrixAt(i,_instanceLocalMatrix),_box3.copy(geometry.boundingBox).applyMatrix4(_instanceLocalMatrix),this.boundingBox.union(_box3)}computeBoundingSphere(){const geometry=this.geometry,count=this.count;null===this.boundingSphere&&(this.boundingSphere=new Sphere),null===geometry.boundingSphere&&geometry.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let i=0;i<count;i++)this.getMatrixAt(i,_instanceLocalMatrix),_sphere$2.copy(geometry.boundingSphere).applyMatrix4(_instanceLocalMatrix),this.boundingSphere.union(_sphere$2)}copy(source,recursive){return super.copy(source,recursive),this.instanceMatrix.copy(source.instanceMatrix),null!==source.instanceColor&&(this.instanceColor=source.instanceColor.clone()),this.count=source.count,this}getColorAt(index,color){color.fromArray(this.instanceColor.array,3*index)}getMatrixAt(index,matrix){matrix.fromArray(this.instanceMatrix.array,16*index)}raycast(raycaster,intersects){const matrixWorld=this.matrixWorld,raycastTimes=this.count;if(_mesh.geometry=this.geometry,_mesh.material=this.material,void 0!==_mesh.material&&(null===this.boundingSphere&&this.computeBoundingSphere(),_sphere$2.copy(this.boundingSphere),_sphere$2.applyMatrix4(matrixWorld),!1!==raycaster.ray.intersectsSphere(_sphere$2)))for(let instanceId=0;instanceId<raycastTimes;instanceId++){this.getMatrixAt(instanceId,_instanceLocalMatrix),_instanceWorldMatrix.multiplyMatrices(matrixWorld,_instanceLocalMatrix),_mesh.matrixWorld=_instanceWorldMatrix,_mesh.raycast(raycaster,_instanceIntersects);for(let i=0,l=_instanceIntersects.length;i<l;i++){const intersect=_instanceIntersects[i];intersect.instanceId=instanceId,intersect.object=this,intersects.push(intersect)}_instanceIntersects.length=0}}setColorAt(index,color){null===this.instanceColor&&(this.instanceColor=new InstancedBufferAttribute(new Float32Array(3*this.instanceMatrix.count),3)),color.toArray(this.instanceColor.array,3*index)}setMatrixAt(index,matrix){matrix.toArray(this.instanceMatrix.array,16*index)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class LineBasicMaterial extends Material{constructor(parameters){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Color(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(parameters)}copy(source){return super.copy(source),this.color.copy(source.color),this.map=source.map,this.linewidth=source.linewidth,this.linecap=source.linecap,this.linejoin=source.linejoin,this.fog=source.fog,this}}const _start$1=new Vector3,_end$1=new Vector3,_inverseMatrix$1=new Matrix4,_ray$1=new Ray,_sphere$1=new Sphere;class Line extends Object3D{constructor(geometry=new BufferGeometry,material=new LineBasicMaterial){super(),this.isLine=!0,this.type="Line",this.geometry=geometry,this.material=material,this.updateMorphTargets()}copy(source,recursive){return super.copy(source,recursive),this.material=source.material,this.geometry=source.geometry,this}computeLineDistances(){const geometry=this.geometry;if(null===geometry.index){const positionAttribute=geometry.attributes.position,lineDistances=[0];for(let i=1,l=positionAttribute.count;i<l;i++)_start$1.fromBufferAttribute(positionAttribute,i-1),_end$1.fromBufferAttribute(positionAttribute,i),lineDistances[i]=lineDistances[i-1],lineDistances[i]+=_start$1.distanceTo(_end$1);geometry.setAttribute("lineDistance",new Float32BufferAttribute(lineDistances,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(raycaster,intersects){const geometry=this.geometry,matrixWorld=this.matrixWorld,threshold=raycaster.params.Line.threshold,drawRange=geometry.drawRange;if(null===geometry.boundingSphere&&geometry.computeBoundingSphere(),_sphere$1.copy(geometry.boundingSphere),_sphere$1.applyMatrix4(matrixWorld),_sphere$1.radius+=threshold,!1===raycaster.ray.intersectsSphere(_sphere$1))return;_inverseMatrix$1.copy(matrixWorld).invert(),_ray$1.copy(raycaster.ray).applyMatrix4(_inverseMatrix$1);const localThreshold=threshold/((this.scale.x+this.scale.y+this.scale.z)/3),localThresholdSq=localThreshold*localThreshold,vStart=new Vector3,vEnd=new Vector3,interSegment=new Vector3,interRay=new Vector3,step=this.isLineSegments?2:1,index=geometry.index,positionAttribute=geometry.attributes.position;if(null!==index){for(let i=Math.max(0,drawRange.start),l=Math.min(index.count,drawRange.start+drawRange.count)-1;i<l;i+=step){const a=index.getX(i),b=index.getX(i+1);vStart.fromBufferAttribute(positionAttribute,a),vEnd.fromBufferAttribute(positionAttribute,b);if(_ray$1.distanceSqToSegment(vStart,vEnd,interRay,interSegment)>localThresholdSq)continue;interRay.applyMatrix4(this.matrixWorld);const distance=raycaster.ray.origin.distanceTo(interRay);distance<raycaster.near||distance>raycaster.far||intersects.push({distance,point:interSegment.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}else{for(let i=Math.max(0,drawRange.start),l=Math.min(positionAttribute.count,drawRange.start+drawRange.count)-1;i<l;i+=step){vStart.fromBufferAttribute(positionAttribute,i),vEnd.fromBufferAttribute(positionAttribute,i+1);if(_ray$1.distanceSqToSegment(vStart,vEnd,interRay,interSegment)>localThresholdSq)continue;interRay.applyMatrix4(this.matrixWorld);const distance=raycaster.ray.origin.distanceTo(interRay);distance<raycaster.near||distance>raycaster.far||intersects.push({distance,point:interSegment.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const morphAttributes=this.geometry.morphAttributes,keys=Object.keys(morphAttributes);if(keys.length>0){const morphAttribute=morphAttributes[keys[0]];if(void 0!==morphAttribute){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let m=0,ml=morphAttribute.length;m<ml;m++){const name=morphAttribute[m].name||String(m);this.morphTargetInfluences.push(0),this.morphTargetDictionary[name]=m}}}}}const _start=new Vector3,_end=new Vector3;class LineSegments extends Line{constructor(geometry,material){super(geometry,material),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const geometry=this.geometry;if(null===geometry.index){const positionAttribute=geometry.attributes.position,lineDistances=[];for(let i=0,l=positionAttribute.count;i<l;i+=2)_start.fromBufferAttribute(positionAttribute,i),_end.fromBufferAttribute(positionAttribute,i+1),lineDistances[i]=0===i?0:lineDistances[i-1],lineDistances[i+1]=lineDistances[i]+_start.distanceTo(_end);geometry.setAttribute("lineDistance",new Float32BufferAttribute(lineDistances,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class LineLoop extends Line{constructor(geometry,material){super(geometry,material),this.isLineLoop=!0,this.type="LineLoop"}}class PointsMaterial extends Material{constructor(parameters){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Color(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(parameters)}copy(source){return super.copy(source),this.color.copy(source.color),this.map=source.map,this.alphaMap=source.alphaMap,this.size=source.size,this.sizeAttenuation=source.sizeAttenuation,this.fog=source.fog,this}}const _inverseMatrix=new Matrix4,_ray=new Ray,_sphere=new Sphere,_position$2=new Vector3;class Points extends Object3D{constructor(geometry=new BufferGeometry,material=new PointsMaterial){super(),this.isPoints=!0,this.type="Points",this.geometry=geometry,this.material=material,this.updateMorphTargets()}copy(source,recursive){return super.copy(source,recursive),this.material=source.material,this.geometry=source.geometry,this}raycast(raycaster,intersects){const geometry=this.geometry,matrixWorld=this.matrixWorld,threshold=raycaster.params.Points.threshold,drawRange=geometry.drawRange;if(null===geometry.boundingSphere&&geometry.computeBoundingSphere(),_sphere.copy(geometry.boundingSphere),_sphere.applyMatrix4(matrixWorld),_sphere.radius+=threshold,!1===raycaster.ray.intersectsSphere(_sphere))return;_inverseMatrix.copy(matrixWorld).invert(),_ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);const localThreshold=threshold/((this.scale.x+this.scale.y+this.scale.z)/3),localThresholdSq=localThreshold*localThreshold,index=geometry.index,positionAttribute=geometry.attributes.position;if(null!==index){for(let i=Math.max(0,drawRange.start),il=Math.min(index.count,drawRange.start+drawRange.count);i<il;i++){const a=index.getX(i);_position$2.fromBufferAttribute(positionAttribute,a),testPoint(_position$2,a,localThresholdSq,matrixWorld,raycaster,intersects,this)}}else{for(let i=Math.max(0,drawRange.start),l=Math.min(positionAttribute.count,drawRange.start+drawRange.count);i<l;i++)_position$2.fromBufferAttribute(positionAttribute,i),testPoint(_position$2,i,localThresholdSq,matrixWorld,raycaster,intersects,this)}}updateMorphTargets(){const morphAttributes=this.geometry.morphAttributes,keys=Object.keys(morphAttributes);if(keys.length>0){const morphAttribute=morphAttributes[keys[0]];if(void 0!==morphAttribute){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let m=0,ml=morphAttribute.length;m<ml;m++){const name=morphAttribute[m].name||String(m);this.morphTargetInfluences.push(0),this.morphTargetDictionary[name]=m}}}}}function testPoint(point,index,localThresholdSq,matrixWorld,raycaster,intersects,object){const rayPointDistanceSq=_ray.distanceSqToPoint(point);if(rayPointDistanceSq<localThresholdSq){const intersectPoint=new Vector3;_ray.closestPointToPoint(point,intersectPoint),intersectPoint.applyMatrix4(matrixWorld);const distance=raycaster.ray.origin.distanceTo(intersectPoint);if(distance<raycaster.near||distance>raycaster.far)return;intersects.push({distance,distanceToRay:Math.sqrt(rayPointDistanceSq),point:intersectPoint,index,face:null,object})}}class VideoTexture extends Texture{constructor(video,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy){super(video,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy),this.isVideoTexture=!0,this.minFilter=void 0!==minFilter?minFilter:LinearFilter,this.magFilter=void 0!==magFilter?magFilter:LinearFilter,this.generateMipmaps=!1;const scope=this;"requestVideoFrameCallback"in video&&video.requestVideoFrameCallback((function updateVideo(){scope.needsUpdate=!0,video.requestVideoFrameCallback(updateVideo)}))}clone(){return new this.constructor(this.image).copy(this)}update(){const video=this.image;!1==="requestVideoFrameCallback"in video&&video.readyState>=video.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class FramebufferTexture extends Texture{constructor(width,height,format){super({width,height}),this.isFramebufferTexture=!0,this.format=format,this.magFilter=NearestFilter,this.minFilter=NearestFilter,this.generateMipmaps=!1,this.needsUpdate=!0}}class CompressedTexture extends Texture{constructor(mipmaps,width,height,format,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy,colorSpace){super(null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,colorSpace),this.isCompressedTexture=!0,this.image={width,height},this.mipmaps=mipmaps,this.flipY=!1,this.generateMipmaps=!1}}class CompressedArrayTexture extends CompressedTexture{constructor(mipmaps,width,height,depth,format,type){super(mipmaps,width,height,format,type),this.isCompressedArrayTexture=!0,this.image.depth=depth,this.wrapR=ClampToEdgeWrapping}}class CanvasTexture extends Texture{constructor(canvas,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy){super(canvas,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Curve{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(u,optionalTarget){const t=this.getUtoTmapping(u);return this.getPoint(t,optionalTarget)}getPoints(divisions=5){const points=[];for(let d=0;d<=divisions;d++)points.push(this.getPoint(d/divisions));return points}getSpacedPoints(divisions=5){const points=[];for(let d=0;d<=divisions;d++)points.push(this.getPointAt(d/divisions));return points}getLength(){const lengths=this.getLengths();return lengths[lengths.length-1]}getLengths(divisions=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===divisions+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const cache=[];let current,last=this.getPoint(0),sum=0;cache.push(0);for(let p=1;p<=divisions;p++)current=this.getPoint(p/divisions),sum+=current.distanceTo(last),cache.push(sum),last=current;return this.cacheArcLengths=cache,cache}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(u,distance){const arcLengths=this.getLengths();let i=0;const il=arcLengths.length;let targetArcLength;targetArcLength=distance||u*arcLengths[il-1];let comparison,low=0,high=il-1;for(;low<=high;)if(i=Math.floor(low+(high-low)/2),comparison=arcLengths[i]-targetArcLength,comparison<0)low=i+1;else{if(!(comparison>0)){high=i;break}high=i-1}if(i=high,arcLengths[i]===targetArcLength)return i/(il-1);const lengthBefore=arcLengths[i];return(i+(targetArcLength-lengthBefore)/(arcLengths[i+1]-lengthBefore))/(il-1)}getTangent(t,optionalTarget){let t1=t-1e-4,t2=t+1e-4;t1<0&&(t1=0),t2>1&&(t2=1);const pt1=this.getPoint(t1),pt2=this.getPoint(t2),tangent=optionalTarget||(pt1.isVector2?new Vector2:new Vector3);return tangent.copy(pt2).sub(pt1).normalize(),tangent}getTangentAt(u,optionalTarget){const t=this.getUtoTmapping(u);return this.getTangent(t,optionalTarget)}computeFrenetFrames(segments,closed){const normal=new Vector3,tangents=[],normals=[],binormals=[],vec=new Vector3,mat=new Matrix4;for(let i=0;i<=segments;i++){const u=i/segments;tangents[i]=this.getTangentAt(u,new Vector3)}normals[0]=new Vector3,binormals[0]=new Vector3;let min=Number.MAX_VALUE;const tx=Math.abs(tangents[0].x),ty=Math.abs(tangents[0].y),tz=Math.abs(tangents[0].z);tx<=min&&(min=tx,normal.set(1,0,0)),ty<=min&&(min=ty,normal.set(0,1,0)),tz<=min&&normal.set(0,0,1),vec.crossVectors(tangents[0],normal).normalize(),normals[0].crossVectors(tangents[0],vec),binormals[0].crossVectors(tangents[0],normals[0]);for(let i=1;i<=segments;i++){if(normals[i]=normals[i-1].clone(),binormals[i]=binormals[i-1].clone(),vec.crossVectors(tangents[i-1],tangents[i]),vec.length()>Number.EPSILON){vec.normalize();const theta=Math.acos(clamp(tangents[i-1].dot(tangents[i]),-1,1));normals[i].applyMatrix4(mat.makeRotationAxis(vec,theta))}binormals[i].crossVectors(tangents[i],normals[i])}if(!0===closed){let theta=Math.acos(clamp(normals[0].dot(normals[segments]),-1,1));theta/=segments,tangents[0].dot(vec.crossVectors(normals[0],normals[segments]))>0&&(theta=-theta);for(let i=1;i<=segments;i++)normals[i].applyMatrix4(mat.makeRotationAxis(tangents[i],theta*i)),binormals[i].crossVectors(tangents[i],normals[i])}return{tangents,normals,binormals}}clone(){return(new this.constructor).copy(this)}copy(source){return this.arcLengthDivisions=source.arcLengthDivisions,this}toJSON(){const data={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return data.arcLengthDivisions=this.arcLengthDivisions,data.type=this.type,data}fromJSON(json){return this.arcLengthDivisions=json.arcLengthDivisions,this}}class EllipseCurve extends Curve{constructor(aX=0,aY=0,xRadius=1,yRadius=1,aStartAngle=0,aEndAngle=2*Math.PI,aClockwise=!1,aRotation=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=aX,this.aY=aY,this.xRadius=xRadius,this.yRadius=yRadius,this.aStartAngle=aStartAngle,this.aEndAngle=aEndAngle,this.aClockwise=aClockwise,this.aRotation=aRotation}getPoint(t,optionalTarget){const point=optionalTarget||new Vector2,twoPi=2*Math.PI;let deltaAngle=this.aEndAngle-this.aStartAngle;const samePoints=Math.abs(deltaAngle)<Number.EPSILON;for(;deltaAngle<0;)deltaAngle+=twoPi;for(;deltaAngle>twoPi;)deltaAngle-=twoPi;deltaAngle<Number.EPSILON&&(deltaAngle=samePoints?0:twoPi),!0!==this.aClockwise||samePoints||(deltaAngle===twoPi?deltaAngle=-twoPi:deltaAngle-=twoPi);const angle=this.aStartAngle+t*deltaAngle;let x=this.aX+this.xRadius*Math.cos(angle),y=this.aY+this.yRadius*Math.sin(angle);if(0!==this.aRotation){const cos=Math.cos(this.aRotation),sin=Math.sin(this.aRotation),tx=x-this.aX,ty=y-this.aY;x=tx*cos-ty*sin+this.aX,y=tx*sin+ty*cos+this.aY}return point.set(x,y)}copy(source){return super.copy(source),this.aX=source.aX,this.aY=source.aY,this.xRadius=source.xRadius,this.yRadius=source.yRadius,this.aStartAngle=source.aStartAngle,this.aEndAngle=source.aEndAngle,this.aClockwise=source.aClockwise,this.aRotation=source.aRotation,this}toJSON(){const data=super.toJSON();return data.aX=this.aX,data.aY=this.aY,data.xRadius=this.xRadius,data.yRadius=this.yRadius,data.aStartAngle=this.aStartAngle,data.aEndAngle=this.aEndAngle,data.aClockwise=this.aClockwise,data.aRotation=this.aRotation,data}fromJSON(json){return super.fromJSON(json),this.aX=json.aX,this.aY=json.aY,this.xRadius=json.xRadius,this.yRadius=json.yRadius,this.aStartAngle=json.aStartAngle,this.aEndAngle=json.aEndAngle,this.aClockwise=json.aClockwise,this.aRotation=json.aRotation,this}}class ArcCurve extends EllipseCurve{constructor(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){super(aX,aY,aRadius,aRadius,aStartAngle,aEndAngle,aClockwise),this.isArcCurve=!0,this.type="ArcCurve"}}function CubicPoly(){let c0=0,c1=0,c2=0,c3=0;function init(x0,x1,t0,t1){c0=x0,c1=t0,c2=-3*x0+3*x1-2*t0-t1,c3=2*x0-2*x1+t0+t1}return{initCatmullRom:function(x0,x1,x2,x3,tension){init(x1,x2,tension*(x2-x0),tension*(x3-x1))},initNonuniformCatmullRom:function(x0,x1,x2,x3,dt0,dt1,dt2){let t1=(x1-x0)/dt0-(x2-x0)/(dt0+dt1)+(x2-x1)/dt1,t2=(x2-x1)/dt1-(x3-x1)/(dt1+dt2)+(x3-x2)/dt2;t1*=dt1,t2*=dt1,init(x1,x2,t1,t2)},calc:function(t){const t2=t*t;return c0+c1*t+c2*t2+c3*(t2*t)}}}const tmp=new Vector3,px=new CubicPoly,py=new CubicPoly,pz=new CubicPoly;class CatmullRomCurve3 extends Curve{constructor(points=[],closed=!1,curveType="centripetal",tension=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=points,this.closed=closed,this.curveType=curveType,this.tension=tension}getPoint(t,optionalTarget=new Vector3){const point=optionalTarget,points=this.points,l=points.length,p=(l-(this.closed?0:1))*t;let p0,p3,intPoint=Math.floor(p),weight=p-intPoint;this.closed?intPoint+=intPoint>0?0:(Math.floor(Math.abs(intPoint)/l)+1)*l:0===weight&&intPoint===l-1&&(intPoint=l-2,weight=1),this.closed||intPoint>0?p0=points[(intPoint-1)%l]:(tmp.subVectors(points[0],points[1]).add(points[0]),p0=tmp);const p1=points[intPoint%l],p2=points[(intPoint+1)%l];if(this.closed||intPoint+2<l?p3=points[(intPoint+2)%l]:(tmp.subVectors(points[l-1],points[l-2]).add(points[l-1]),p3=tmp),"centripetal"===this.curveType||"chordal"===this.curveType){const pow="chordal"===this.curveType?.5:.25;let dt0=Math.pow(p0.distanceToSquared(p1),pow),dt1=Math.pow(p1.distanceToSquared(p2),pow),dt2=Math.pow(p2.distanceToSquared(p3),pow);dt1<1e-4&&(dt1=1),dt0<1e-4&&(dt0=dt1),dt2<1e-4&&(dt2=dt1),px.initNonuniformCatmullRom(p0.x,p1.x,p2.x,p3.x,dt0,dt1,dt2),py.initNonuniformCatmullRom(p0.y,p1.y,p2.y,p3.y,dt0,dt1,dt2),pz.initNonuniformCatmullRom(p0.z,p1.z,p2.z,p3.z,dt0,dt1,dt2)}else"catmullrom"===this.curveType&&(px.initCatmullRom(p0.x,p1.x,p2.x,p3.x,this.tension),py.initCatmullRom(p0.y,p1.y,p2.y,p3.y,this.tension),pz.initCatmullRom(p0.z,p1.z,p2.z,p3.z,this.tension));return point.set(px.calc(weight),py.calc(weight),pz.calc(weight)),point}copy(source){super.copy(source),this.points=[];for(let i=0,l=source.points.length;i<l;i++){const point=source.points[i];this.points.push(point.clone())}return this.closed=source.closed,this.curveType=source.curveType,this.tension=source.tension,this}toJSON(){const data=super.toJSON();data.points=[];for(let i=0,l=this.points.length;i<l;i++){const point=this.points[i];data.points.push(point.toArray())}return data.closed=this.closed,data.curveType=this.curveType,data.tension=this.tension,data}fromJSON(json){super.fromJSON(json),this.points=[];for(let i=0,l=json.points.length;i<l;i++){const point=json.points[i];this.points.push((new Vector3).fromArray(point))}return this.closed=json.closed,this.curveType=json.curveType,this.tension=json.tension,this}}function CatmullRom(t,p0,p1,p2,p3){const v0=.5*(p2-p0),v1=.5*(p3-p1),t2=t*t;return(2*p1-2*p2+v0+v1)*(t*t2)+(-3*p1+3*p2-2*v0-v1)*t2+v0*t+p1}function QuadraticBezier(t,p0,p1,p2){return function QuadraticBezierP0(t,p){const k=1-t;return k*k*p}(t,p0)+function QuadraticBezierP1(t,p){return 2*(1-t)*t*p}(t,p1)+function QuadraticBezierP2(t,p){return t*t*p}(t,p2)}function CubicBezier(t,p0,p1,p2,p3){return function CubicBezierP0(t,p){const k=1-t;return k*k*k*p}(t,p0)+function CubicBezierP1(t,p){const k=1-t;return 3*k*k*t*p}(t,p1)+function CubicBezierP2(t,p){return 3*(1-t)*t*t*p}(t,p2)+function CubicBezierP3(t,p){return t*t*t*p}(t,p3)}class CubicBezierCurve extends Curve{constructor(v0=new Vector2,v1=new Vector2,v2=new Vector2,v3=new Vector2){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=v0,this.v1=v1,this.v2=v2,this.v3=v3}getPoint(t,optionalTarget=new Vector2){const point=optionalTarget,v0=this.v0,v1=this.v1,v2=this.v2,v3=this.v3;return point.set(CubicBezier(t,v0.x,v1.x,v2.x,v3.x),CubicBezier(t,v0.y,v1.y,v2.y,v3.y)),point}copy(source){return super.copy(source),this.v0.copy(source.v0),this.v1.copy(source.v1),this.v2.copy(source.v2),this.v3.copy(source.v3),this}toJSON(){const data=super.toJSON();return data.v0=this.v0.toArray(),data.v1=this.v1.toArray(),data.v2=this.v2.toArray(),data.v3=this.v3.toArray(),data}fromJSON(json){return super.fromJSON(json),this.v0.fromArray(json.v0),this.v1.fromArray(json.v1),this.v2.fromArray(json.v2),this.v3.fromArray(json.v3),this}}class CubicBezierCurve3 extends Curve{constructor(v0=new Vector3,v1=new Vector3,v2=new Vector3,v3=new Vector3){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=v0,this.v1=v1,this.v2=v2,this.v3=v3}getPoint(t,optionalTarget=new Vector3){const point=optionalTarget,v0=this.v0,v1=this.v1,v2=this.v2,v3=this.v3;return point.set(CubicBezier(t,v0.x,v1.x,v2.x,v3.x),CubicBezier(t,v0.y,v1.y,v2.y,v3.y),CubicBezier(t,v0.z,v1.z,v2.z,v3.z)),point}copy(source){return super.copy(source),this.v0.copy(source.v0),this.v1.copy(source.v1),this.v2.copy(source.v2),this.v3.copy(source.v3),this}toJSON(){const data=super.toJSON();return data.v0=this.v0.toArray(),data.v1=this.v1.toArray(),data.v2=this.v2.toArray(),data.v3=this.v3.toArray(),data}fromJSON(json){return super.fromJSON(json),this.v0.fromArray(json.v0),this.v1.fromArray(json.v1),this.v2.fromArray(json.v2),this.v3.fromArray(json.v3),this}}class LineCurve extends Curve{constructor(v1=new Vector2,v2=new Vector2){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=v1,this.v2=v2}getPoint(t,optionalTarget=new Vector2){const point=optionalTarget;return 1===t?point.copy(this.v2):(point.copy(this.v2).sub(this.v1),point.multiplyScalar(t).add(this.v1)),point}getPointAt(u,optionalTarget){return this.getPoint(u,optionalTarget)}getTangent(t,optionalTarget=new Vector2){return optionalTarget.subVectors(this.v2,this.v1).normalize()}getTangentAt(u,optionalTarget){return this.getTangent(u,optionalTarget)}copy(source){return super.copy(source),this.v1.copy(source.v1),this.v2.copy(source.v2),this}toJSON(){const data=super.toJSON();return data.v1=this.v1.toArray(),data.v2=this.v2.toArray(),data}fromJSON(json){return super.fromJSON(json),this.v1.fromArray(json.v1),this.v2.fromArray(json.v2),this}}class LineCurve3 extends Curve{constructor(v1=new Vector3,v2=new Vector3){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=v1,this.v2=v2}getPoint(t,optionalTarget=new Vector3){const point=optionalTarget;return 1===t?point.copy(this.v2):(point.copy(this.v2).sub(this.v1),point.multiplyScalar(t).add(this.v1)),point}getPointAt(u,optionalTarget){return this.getPoint(u,optionalTarget)}getTangent(t,optionalTarget=new Vector3){return optionalTarget.subVectors(this.v2,this.v1).normalize()}getTangentAt(u,optionalTarget){return this.getTangent(u,optionalTarget)}copy(source){return super.copy(source),this.v1.copy(source.v1),this.v2.copy(source.v2),this}toJSON(){const data=super.toJSON();return data.v1=this.v1.toArray(),data.v2=this.v2.toArray(),data}fromJSON(json){return super.fromJSON(json),this.v1.fromArray(json.v1),this.v2.fromArray(json.v2),this}}class QuadraticBezierCurve extends Curve{constructor(v0=new Vector2,v1=new Vector2,v2=new Vector2){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=v0,this.v1=v1,this.v2=v2}getPoint(t,optionalTarget=new Vector2){const point=optionalTarget,v0=this.v0,v1=this.v1,v2=this.v2;return point.set(QuadraticBezier(t,v0.x,v1.x,v2.x),QuadraticBezier(t,v0.y,v1.y,v2.y)),point}copy(source){return super.copy(source),this.v0.copy(source.v0),this.v1.copy(source.v1),this.v2.copy(source.v2),this}toJSON(){const data=super.toJSON();return data.v0=this.v0.toArray(),data.v1=this.v1.toArray(),data.v2=this.v2.toArray(),data}fromJSON(json){return super.fromJSON(json),this.v0.fromArray(json.v0),this.v1.fromArray(json.v1),this.v2.fromArray(json.v2),this}}class QuadraticBezierCurve3 extends Curve{constructor(v0=new Vector3,v1=new Vector3,v2=new Vector3){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=v0,this.v1=v1,this.v2=v2}getPoint(t,optionalTarget=new Vector3){const point=optionalTarget,v0=this.v0,v1=this.v1,v2=this.v2;return point.set(QuadraticBezier(t,v0.x,v1.x,v2.x),QuadraticBezier(t,v0.y,v1.y,v2.y),QuadraticBezier(t,v0.z,v1.z,v2.z)),point}copy(source){return super.copy(source),this.v0.copy(source.v0),this.v1.copy(source.v1),this.v2.copy(source.v2),this}toJSON(){const data=super.toJSON();return data.v0=this.v0.toArray(),data.v1=this.v1.toArray(),data.v2=this.v2.toArray(),data}fromJSON(json){return super.fromJSON(json),this.v0.fromArray(json.v0),this.v1.fromArray(json.v1),this.v2.fromArray(json.v2),this}}class SplineCurve extends Curve{constructor(points=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=points}getPoint(t,optionalTarget=new Vector2){const point=optionalTarget,points=this.points,p=(points.length-1)*t,intPoint=Math.floor(p),weight=p-intPoint,p0=points[0===intPoint?intPoint:intPoint-1],p1=points[intPoint],p2=points[intPoint>points.length-2?points.length-1:intPoint+1],p3=points[intPoint>points.length-3?points.length-1:intPoint+2];return point.set(CatmullRom(weight,p0.x,p1.x,p2.x,p3.x),CatmullRom(weight,p0.y,p1.y,p2.y,p3.y)),point}copy(source){super.copy(source),this.points=[];for(let i=0,l=source.points.length;i<l;i++){const point=source.points[i];this.points.push(point.clone())}return this}toJSON(){const data=super.toJSON();data.points=[];for(let i=0,l=this.points.length;i<l;i++){const point=this.points[i];data.points.push(point.toArray())}return data}fromJSON(json){super.fromJSON(json),this.points=[];for(let i=0,l=json.points.length;i<l;i++){const point=json.points[i];this.points.push((new Vector2).fromArray(point))}return this}}var Curves=Object.freeze({__proto__:null,ArcCurve,CatmullRomCurve3,CubicBezierCurve,CubicBezierCurve3,EllipseCurve,LineCurve,LineCurve3,QuadraticBezierCurve,QuadraticBezierCurve3,SplineCurve});class CurvePath extends Curve{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(curve){this.curves.push(curve)}closePath(){const startPoint=this.curves[0].getPoint(0),endPoint=this.curves[this.curves.length-1].getPoint(1);startPoint.equals(endPoint)||this.curves.push(new LineCurve(endPoint,startPoint))}getPoint(t,optionalTarget){const d=t*this.getLength(),curveLengths=this.getCurveLengths();let i=0;for(;i<curveLengths.length;){if(curveLengths[i]>=d){const diff=curveLengths[i]-d,curve=this.curves[i],segmentLength=curve.getLength(),u=0===segmentLength?0:1-diff/segmentLength;return curve.getPointAt(u,optionalTarget)}i++}return null}getLength(){const lens=this.getCurveLengths();return lens[lens.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const lengths=[];let sums=0;for(let i=0,l=this.curves.length;i<l;i++)sums+=this.curves[i].getLength(),lengths.push(sums);return this.cacheLengths=lengths,lengths}getSpacedPoints(divisions=40){const points=[];for(let i=0;i<=divisions;i++)points.push(this.getPoint(i/divisions));return this.autoClose&&points.push(points[0]),points}getPoints(divisions=12){const points=[];let last;for(let i=0,curves=this.curves;i<curves.length;i++){const curve=curves[i],resolution=curve.isEllipseCurve?2*divisions:curve.isLineCurve||curve.isLineCurve3?1:curve.isSplineCurve?divisions*curve.points.length:divisions,pts=curve.getPoints(resolution);for(let j=0;j<pts.length;j++){const point=pts[j];last&&last.equals(point)||(points.push(point),last=point)}}return this.autoClose&&points.length>1&&!points[points.length-1].equals(points[0])&&points.push(points[0]),points}copy(source){super.copy(source),this.curves=[];for(let i=0,l=source.curves.length;i<l;i++){const curve=source.curves[i];this.curves.push(curve.clone())}return this.autoClose=source.autoClose,this}toJSON(){const data=super.toJSON();data.autoClose=this.autoClose,data.curves=[];for(let i=0,l=this.curves.length;i<l;i++){const curve=this.curves[i];data.curves.push(curve.toJSON())}return data}fromJSON(json){super.fromJSON(json),this.autoClose=json.autoClose,this.curves=[];for(let i=0,l=json.curves.length;i<l;i++){const curve=json.curves[i];this.curves.push((new Curves[curve.type]).fromJSON(curve))}return this}}class Path extends CurvePath{constructor(points){super(),this.type="Path",this.currentPoint=new Vector2,points&&this.setFromPoints(points)}setFromPoints(points){this.moveTo(points[0].x,points[0].y);for(let i=1,l=points.length;i<l;i++)this.lineTo(points[i].x,points[i].y);return this}moveTo(x,y){return this.currentPoint.set(x,y),this}lineTo(x,y){const curve=new LineCurve(this.currentPoint.clone(),new Vector2(x,y));return this.curves.push(curve),this.currentPoint.set(x,y),this}quadraticCurveTo(aCPx,aCPy,aX,aY){const curve=new QuadraticBezierCurve(this.currentPoint.clone(),new Vector2(aCPx,aCPy),new Vector2(aX,aY));return this.curves.push(curve),this.currentPoint.set(aX,aY),this}bezierCurveTo(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY){const curve=new CubicBezierCurve(this.currentPoint.clone(),new Vector2(aCP1x,aCP1y),new Vector2(aCP2x,aCP2y),new Vector2(aX,aY));return this.curves.push(curve),this.currentPoint.set(aX,aY),this}splineThru(pts){const npts=[this.currentPoint.clone()].concat(pts),curve=new SplineCurve(npts);return this.curves.push(curve),this.currentPoint.copy(pts[pts.length-1]),this}arc(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){const x0=this.currentPoint.x,y0=this.currentPoint.y;return this.absarc(aX+x0,aY+y0,aRadius,aStartAngle,aEndAngle,aClockwise),this}absarc(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){return this.absellipse(aX,aY,aRadius,aRadius,aStartAngle,aEndAngle,aClockwise),this}ellipse(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation){const x0=this.currentPoint.x,y0=this.currentPoint.y;return this.absellipse(aX+x0,aY+y0,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation),this}absellipse(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation){const curve=new EllipseCurve(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation);if(this.curves.length>0){const firstPoint=curve.getPoint(0);firstPoint.equals(this.currentPoint)||this.lineTo(firstPoint.x,firstPoint.y)}this.curves.push(curve);const lastPoint=curve.getPoint(1);return this.currentPoint.copy(lastPoint),this}copy(source){return super.copy(source),this.currentPoint.copy(source.currentPoint),this}toJSON(){const data=super.toJSON();return data.currentPoint=this.currentPoint.toArray(),data}fromJSON(json){return super.fromJSON(json),this.currentPoint.fromArray(json.currentPoint),this}}class LatheGeometry extends BufferGeometry{constructor(points=[new Vector2(0,-.5),new Vector2(.5,0),new Vector2(0,.5)],segments=12,phiStart=0,phiLength=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points,segments,phiStart,phiLength},segments=Math.floor(segments),phiLength=clamp(phiLength,0,2*Math.PI);const indices=[],vertices=[],uvs=[],initNormals=[],normals=[],inverseSegments=1/segments,vertex=new Vector3,uv=new Vector2,normal=new Vector3,curNormal=new Vector3,prevNormal=new Vector3;let dx=0,dy=0;for(let j=0;j<=points.length-1;j++)switch(j){case 0:dx=points[j+1].x-points[j].x,dy=points[j+1].y-points[j].y,normal.x=1*dy,normal.y=-dx,normal.z=0*dy,prevNormal.copy(normal),normal.normalize(),initNormals.push(normal.x,normal.y,normal.z);break;case points.length-1:initNormals.push(prevNormal.x,prevNormal.y,prevNormal.z);break;default:dx=points[j+1].x-points[j].x,dy=points[j+1].y-points[j].y,normal.x=1*dy,normal.y=-dx,normal.z=0*dy,curNormal.copy(normal),normal.x+=prevNormal.x,normal.y+=prevNormal.y,normal.z+=prevNormal.z,normal.normalize(),initNormals.push(normal.x,normal.y,normal.z),prevNormal.copy(curNormal)}for(let i=0;i<=segments;i++){const phi=phiStart+i*inverseSegments*phiLength,sin=Math.sin(phi),cos=Math.cos(phi);for(let j=0;j<=points.length-1;j++){vertex.x=points[j].x*sin,vertex.y=points[j].y,vertex.z=points[j].x*cos,vertices.push(vertex.x,vertex.y,vertex.z),uv.x=i/segments,uv.y=j/(points.length-1),uvs.push(uv.x,uv.y);const x=initNormals[3*j+0]*sin,y=initNormals[3*j+1],z=initNormals[3*j+0]*cos;normals.push(x,y,z)}}for(let i=0;i<segments;i++)for(let j=0;j<points.length-1;j++){const base=j+i*points.length,a=base,b=base+points.length,c=base+points.length+1,d=base+1;indices.push(a,b,d),indices.push(c,d,b)}this.setIndex(indices),this.setAttribute("position",new Float32BufferAttribute(vertices,3)),this.setAttribute("uv",new Float32BufferAttribute(uvs,2)),this.setAttribute("normal",new Float32BufferAttribute(normals,3))}copy(source){return super.copy(source),this.parameters=Object.assign({},source.parameters),this}static fromJSON(data){return new LatheGeometry(data.points,data.segments,data.phiStart,data.phiLength)}}class CapsuleGeometry extends LatheGeometry{constructor(radius=1,length=1,capSegments=4,radialSegments=8){const path=new Path;path.absarc(0,-length/2,radius,1.5*Math.PI,0),path.absarc(0,length/2,radius,0,.5*Math.PI),super(path.getPoints(capSegments),radialSegments),this.type="CapsuleGeometry",this.parameters={radius,height:length,capSegments,radialSegments}}static fromJSON(data){return new CapsuleGeometry(data.radius,data.length,data.capSegments,data.radialSegments)}}class CircleGeometry extends BufferGeometry{constructor(radius=1,segments=32,thetaStart=0,thetaLength=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius,segments,thetaStart,thetaLength},segments=Math.max(3,segments);const indices=[],vertices=[],normals=[],uvs=[],vertex=new Vector3,uv=new Vector2;vertices.push(0,0,0),normals.push(0,0,1),uvs.push(.5,.5);for(let s=0,i=3;s<=segments;s++,i+=3){const segment=thetaStart+s/segments*thetaLength;vertex.x=radius*Math.cos(segment),vertex.y=radius*Math.sin(segment),vertices.push(vertex.x,vertex.y,vertex.z),normals.push(0,0,1),uv.x=(vertices[i]/radius+1)/2,uv.y=(vertices[i+1]/radius+1)/2,uvs.push(uv.x,uv.y)}for(let i=1;i<=segments;i++)indices.push(i,i+1,0);this.setIndex(indices),this.setAttribute("position",new Float32BufferAttribute(vertices,3)),this.setAttribute("normal",new Float32BufferAttribute(normals,3)),this.setAttribute("uv",new Float32BufferAttribute(uvs,2))}copy(source){return super.copy(source),this.parameters=Object.assign({},source.parameters),this}static fromJSON(data){return new CircleGeometry(data.radius,data.segments,data.thetaStart,data.thetaLength)}}class CylinderGeometry extends BufferGeometry{constructor(radiusTop=1,radiusBottom=1,height=1,radialSegments=32,heightSegments=1,openEnded=!1,thetaStart=0,thetaLength=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop,radiusBottom,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength};const scope=this;radialSegments=Math.floor(radialSegments),heightSegments=Math.floor(heightSegments);const indices=[],vertices=[],normals=[],uvs=[];let index=0;const indexArray=[],halfHeight=height/2;let groupStart=0;function generateCap(top){const centerIndexStart=index,uv=new Vector2,vertex=new Vector3;let groupCount=0;const radius=!0===top?radiusTop:radiusBottom,sign=!0===top?1:-1;for(let x=1;x<=radialSegments;x++)vertices.push(0,halfHeight*sign,0),normals.push(0,sign,0),uvs.push(.5,.5),index++;const centerIndexEnd=index;for(let x=0;x<=radialSegments;x++){const theta=x/radialSegments*thetaLength+thetaStart,cosTheta=Math.cos(theta),sinTheta=Math.sin(theta);vertex.x=radius*sinTheta,vertex.y=halfHeight*sign,vertex.z=radius*cosTheta,vertices.push(vertex.x,vertex.y,vertex.z),normals.push(0,sign,0),uv.x=.5*cosTheta+.5,uv.y=.5*sinTheta*sign+.5,uvs.push(uv.x,uv.y),index++}for(let x=0;x<radialSegments;x++){const c=centerIndexStart+x,i=centerIndexEnd+x;!0===top?indices.push(i,i+1,c):indices.push(i+1,i,c),groupCount+=3}scope.addGroup(groupStart,groupCount,!0===top?1:2),groupStart+=groupCount}!function generateTorso(){const normal=new Vector3,vertex=new Vector3;let groupCount=0;const slope=(radiusBottom-radiusTop)/height;for(let y=0;y<=heightSegments;y++){const indexRow=[],v=y/heightSegments,radius=v*(radiusBottom-radiusTop)+radiusTop;for(let x=0;x<=radialSegments;x++){const u=x/radialSegments,theta=u*thetaLength+thetaStart,sinTheta=Math.sin(theta),cosTheta=Math.cos(theta);vertex.x=radius*sinTheta,vertex.y=-v*height+halfHeight,vertex.z=radius*cosTheta,vertices.push(vertex.x,vertex.y,vertex.z),normal.set(sinTheta,slope,cosTheta).normalize(),normals.push(normal.x,normal.y,normal.z),uvs.push(u,1-v),indexRow.push(index++)}indexArray.push(indexRow)}for(let x=0;x<radialSegments;x++)for(let y=0;y<heightSegments;y++){const a=indexArray[y][x],b=indexArray[y+1][x],c=indexArray[y+1][x+1],d=indexArray[y][x+1];indices.push(a,b,d),indices.push(b,c,d),groupCount+=6}scope.addGroup(groupStart,groupCount,0),groupStart+=groupCount}(),!1===openEnded&&(radiusTop>0&&generateCap(!0),radiusBottom>0&&generateCap(!1)),this.setIndex(indices),this.setAttribute("position",new Float32BufferAttribute(vertices,3)),this.setAttribute("normal",new Float32BufferAttribute(normals,3)),this.setAttribute("uv",new Float32BufferAttribute(uvs,2))}copy(source){return super.copy(source),this.parameters=Object.assign({},source.parameters),this}static fromJSON(data){return new CylinderGeometry(data.radiusTop,data.radiusBottom,data.height,data.radialSegments,data.heightSegments,data.openEnded,data.thetaStart,data.thetaLength)}}class ConeGeometry extends CylinderGeometry{constructor(radius=1,height=1,radialSegments=32,heightSegments=1,openEnded=!1,thetaStart=0,thetaLength=2*Math.PI){super(0,radius,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength),this.type="ConeGeometry",this.parameters={radius,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength}}static fromJSON(data){return new ConeGeometry(data.radius,data.height,data.radialSegments,data.heightSegments,data.openEnded,data.thetaStart,data.thetaLength)}}class PolyhedronGeometry extends BufferGeometry{constructor(vertices=[],indices=[],radius=1,detail=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices,indices,radius,detail};const vertexBuffer=[],uvBuffer=[];function subdivideFace(a,b,c,detail){const cols=detail+1,v=[];for(let i=0;i<=cols;i++){v[i]=[];const aj=a.clone().lerp(c,i/cols),bj=b.clone().lerp(c,i/cols),rows=cols-i;for(let j=0;j<=rows;j++)v[i][j]=0===j&&i===cols?aj:aj.clone().lerp(bj,j/rows)}for(let i=0;i<cols;i++)for(let j=0;j<2*(cols-i)-1;j++){const k=Math.floor(j/2);j%2==0?(pushVertex(v[i][k+1]),pushVertex(v[i+1][k]),pushVertex(v[i][k])):(pushVertex(v[i][k+1]),pushVertex(v[i+1][k+1]),pushVertex(v[i+1][k]))}}function pushVertex(vertex){vertexBuffer.push(vertex.x,vertex.y,vertex.z)}function getVertexByIndex(index,vertex){const stride=3*index;vertex.x=vertices[stride+0],vertex.y=vertices[stride+1],vertex.z=vertices[stride+2]}function correctUV(uv,stride,vector,azimuth){azimuth<0&&1===uv.x&&(uvBuffer[stride]=uv.x-1),0===vector.x&&0===vector.z&&(uvBuffer[stride]=azimuth/2/Math.PI+.5)}function azimuth(vector){return Math.atan2(vector.z,-vector.x)}!function subdivide(detail){const a=new Vector3,b=new Vector3,c=new Vector3;for(let i=0;i<indices.length;i+=3)getVertexByIndex(indices[i+0],a),getVertexByIndex(indices[i+1],b),getVertexByIndex(indices[i+2],c),subdivideFace(a,b,c,detail)}(detail),function applyRadius(radius){const vertex=new Vector3;for(let i=0;i<vertexBuffer.length;i+=3)vertex.x=vertexBuffer[i+0],vertex.y=vertexBuffer[i+1],vertex.z=vertexBuffer[i+2],vertex.normalize().multiplyScalar(radius),vertexBuffer[i+0]=vertex.x,vertexBuffer[i+1]=vertex.y,vertexBuffer[i+2]=vertex.z}(radius),function generateUVs(){const vertex=new Vector3;for(let i=0;i<vertexBuffer.length;i+=3){vertex.x=vertexBuffer[i+0],vertex.y=vertexBuffer[i+1],vertex.z=vertexBuffer[i+2];const u=azimuth(vertex)/2/Math.PI+.5,v=(vector=vertex,Math.atan2(-vector.y,Math.sqrt(vector.x*vector.x+vector.z*vector.z))/Math.PI+.5);uvBuffer.push(u,1-v)}var vector;(function correctUVs(){const a=new Vector3,b=new Vector3,c=new Vector3,centroid=new Vector3,uvA=new Vector2,uvB=new Vector2,uvC=new Vector2;for(let i=0,j=0;i<vertexBuffer.length;i+=9,j+=6){a.set(vertexBuffer[i+0],vertexBuffer[i+1],vertexBuffer[i+2]),b.set(vertexBuffer[i+3],vertexBuffer[i+4],vertexBuffer[i+5]),c.set(vertexBuffer[i+6],vertexBuffer[i+7],vertexBuffer[i+8]),uvA.set(uvBuffer[j+0],uvBuffer[j+1]),uvB.set(uvBuffer[j+2],uvBuffer[j+3]),uvC.set(uvBuffer[j+4],uvBuffer[j+5]),centroid.copy(a).add(b).add(c).divideScalar(3);const azi=azimuth(centroid);correctUV(uvA,j+0,a,azi),correctUV(uvB,j+2,b,azi),correctUV(uvC,j+4,c,azi)}})(),function correctSeam(){for(let i=0;i<uvBuffer.length;i+=6){const x0=uvBuffer[i+0],x1=uvBuffer[i+2],x2=uvBuffer[i+4],max=Math.max(x0,x1,x2),min=Math.min(x0,x1,x2);max>.9&&min<.1&&(x0<.2&&(uvBuffer[i+0]+=1),x1<.2&&(uvBuffer[i+2]+=1),x2<.2&&(uvBuffer[i+4]+=1))}}()}(),this.setAttribute("position",new Float32BufferAttribute(vertexBuffer,3)),this.setAttribute("normal",new Float32BufferAttribute(vertexBuffer.slice(),3)),this.setAttribute("uv",new Float32BufferAttribute(uvBuffer,2)),0===detail?this.computeVertexNormals():this.normalizeNormals()}copy(source){return super.copy(source),this.parameters=Object.assign({},source.parameters),this}static fromJSON(data){return new PolyhedronGeometry(data.vertices,data.indices,data.radius,data.details)}}class DodecahedronGeometry extends PolyhedronGeometry{constructor(radius=1,detail=0){const t=(1+Math.sqrt(5))/2,r=1/t;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-t,0,-r,t,0,r,-t,0,r,t,-r,-t,0,-r,t,0,r,-t,0,r,t,0,-t,0,-r,t,0,-r,-t,0,r,t,0,r],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],radius,detail),this.type="DodecahedronGeometry",this.parameters={radius,detail}}static fromJSON(data){return new DodecahedronGeometry(data.radius,data.detail)}}const _v0=new Vector3,_v1$1=new Vector3,_normal=new Vector3,_triangle=new Triangle;class EdgesGeometry extends BufferGeometry{constructor(geometry=null,thresholdAngle=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry,thresholdAngle},null!==geometry){const precisionPoints=4,precision=Math.pow(10,precisionPoints),thresholdDot=Math.cos(DEG2RAD*thresholdAngle),indexAttr=geometry.getIndex(),positionAttr=geometry.getAttribute("position"),indexCount=indexAttr?indexAttr.count:positionAttr.count,indexArr=[0,0,0],vertKeys=["a","b","c"],hashes=new Array(3),edgeData={},vertices=[];for(let i=0;i<indexCount;i+=3){indexAttr?(indexArr[0]=indexAttr.getX(i),indexArr[1]=indexAttr.getX(i+1),indexArr[2]=indexAttr.getX(i+2)):(indexArr[0]=i,indexArr[1]=i+1,indexArr[2]=i+2);const{a,b,c}=_triangle;if(a.fromBufferAttribute(positionAttr,indexArr[0]),b.fromBufferAttribute(positionAttr,indexArr[1]),c.fromBufferAttribute(positionAttr,indexArr[2]),_triangle.getNormal(_normal),hashes[0]=`${Math.round(a.x*precision)},${Math.round(a.y*precision)},${Math.round(a.z*precision)}`,hashes[1]=`${Math.round(b.x*precision)},${Math.round(b.y*precision)},${Math.round(b.z*precision)}`,hashes[2]=`${Math.round(c.x*precision)},${Math.round(c.y*precision)},${Math.round(c.z*precision)}`,hashes[0]!==hashes[1]&&hashes[1]!==hashes[2]&&hashes[2]!==hashes[0])for(let j=0;j<3;j++){const jNext=(j+1)%3,vecHash0=hashes[j],vecHash1=hashes[jNext],v0=_triangle[vertKeys[j]],v1=_triangle[vertKeys[jNext]],hash=`${vecHash0}_${vecHash1}`,reverseHash=`${vecHash1}_${vecHash0}`;reverseHash in edgeData&&edgeData[reverseHash]?(_normal.dot(edgeData[reverseHash].normal)<=thresholdDot&&(vertices.push(v0.x,v0.y,v0.z),vertices.push(v1.x,v1.y,v1.z)),edgeData[reverseHash]=null):hash in edgeData||(edgeData[hash]={index0:indexArr[j],index1:indexArr[jNext],normal:_normal.clone()})}}for(const key in edgeData)if(edgeData[key]){const{index0,index1}=edgeData[key];_v0.fromBufferAttribute(positionAttr,index0),_v1$1.fromBufferAttribute(positionAttr,index1),vertices.push(_v0.x,_v0.y,_v0.z),vertices.push(_v1$1.x,_v1$1.y,_v1$1.z)}this.setAttribute("position",new Float32BufferAttribute(vertices,3))}}copy(source){return super.copy(source),this.parameters=Object.assign({},source.parameters),this}}class Shape extends Path{constructor(points){super(points),this.uuid=generateUUID(),this.type="Shape",this.holes=[]}getPointsHoles(divisions){const holesPts=[];for(let i=0,l=this.holes.length;i<l;i++)holesPts[i]=this.holes[i].getPoints(divisions);return holesPts}extractPoints(divisions){return{shape:this.getPoints(divisions),holes:this.getPointsHoles(divisions)}}copy(source){super.copy(source),this.holes=[];for(let i=0,l=source.holes.length;i<l;i++){const hole=source.holes[i];this.holes.push(hole.clone())}return this}toJSON(){const data=super.toJSON();data.uuid=this.uuid,data.holes=[];for(let i=0,l=this.holes.length;i<l;i++){const hole=this.holes[i];data.holes.push(hole.toJSON())}return data}fromJSON(json){super.fromJSON(json),this.uuid=json.uuid,this.holes=[];for(let i=0,l=json.holes.length;i<l;i++){const hole=json.holes[i];this.holes.push((new Path).fromJSON(hole))}return this}}const Earcut_triangulate=function(data,holeIndices,dim=2){const hasHoles=holeIndices&&holeIndices.length,outerLen=hasHoles?holeIndices[0]*dim:data.length;let outerNode=linkedList(data,0,outerLen,dim,!0);const triangles=[];if(!outerNode||outerNode.next===outerNode.prev)return triangles;let minX,minY,maxX,maxY,x,y,invSize;if(hasHoles&&(outerNode=function eliminateHoles(data,holeIndices,outerNode,dim){const queue=[];let i,len,start,end,list;for(i=0,len=holeIndices.length;i<len;i++)start=holeIndices[i]*dim,end=i<len-1?holeIndices[i+1]*dim:data.length,list=linkedList(data,start,end,dim,!1),list===list.next&&(list.steiner=!0),queue.push(getLeftmost(list));for(queue.sort(compareX),i=0;i<queue.length;i++)outerNode=eliminateHole(queue[i],outerNode);return outerNode}(data,holeIndices,outerNode,dim)),data.length>80*dim){minX=maxX=data[0],minY=maxY=data[1];for(let i=dim;i<outerLen;i+=dim)x=data[i],y=data[i+1],x<minX&&(minX=x),y<minY&&(minY=y),x>maxX&&(maxX=x),y>maxY&&(maxY=y);invSize=Math.max(maxX-minX,maxY-minY),invSize=0!==invSize?32767/invSize:0}return earcutLinked(outerNode,triangles,dim,minX,minY,invSize,0),triangles};function linkedList(data,start,end,dim,clockwise){let i,last;if(clockwise===function signedArea(data,start,end,dim){let sum=0;for(let i=start,j=end-dim;i<end;i+=dim)sum+=(data[j]-data[i])*(data[i+1]+data[j+1]),j=i;return sum}(data,start,end,dim)>0)for(i=start;i<end;i+=dim)last=insertNode(i,data[i],data[i+1],last);else for(i=end-dim;i>=start;i-=dim)last=insertNode(i,data[i],data[i+1],last);return last&&equals(last,last.next)&&(removeNode(last),last=last.next),last}function filterPoints(start,end){if(!start)return start;end||(end=start);let again,p=start;do{if(again=!1,p.steiner||!equals(p,p.next)&&0!==area(p.prev,p,p.next))p=p.next;else{if(removeNode(p),p=end=p.prev,p===p.next)break;again=!0}}while(again||p!==end);return end}function earcutLinked(ear,triangles,dim,minX,minY,invSize,pass){if(!ear)return;!pass&&invSize&&function indexCurve(start,minX,minY,invSize){let p=start;do{0===p.z&&(p.z=zOrder(p.x,p.y,minX,minY,invSize)),p.prevZ=p.prev,p.nextZ=p.next,p=p.next}while(p!==start);p.prevZ.nextZ=null,p.prevZ=null,function sortLinked(list){let i,p,q,e,tail,numMerges,pSize,qSize,inSize=1;do{for(p=list,list=null,tail=null,numMerges=0;p;){for(numMerges++,q=p,pSize=0,i=0;i<inSize&&(pSize++,q=q.nextZ,q);i++);for(qSize=inSize;pSize>0||qSize>0&&q;)0!==pSize&&(0===qSize||!q||p.z<=q.z)?(e=p,p=p.nextZ,pSize--):(e=q,q=q.nextZ,qSize--),tail?tail.nextZ=e:list=e,e.prevZ=tail,tail=e;p=q}tail.nextZ=null,inSize*=2}while(numMerges>1);return list}(p)}(ear,minX,minY,invSize);let prev,next,stop=ear;for(;ear.prev!==ear.next;)if(prev=ear.prev,next=ear.next,invSize?isEarHashed(ear,minX,minY,invSize):isEar(ear))triangles.push(prev.i/dim|0),triangles.push(ear.i/dim|0),triangles.push(next.i/dim|0),removeNode(ear),ear=next.next,stop=next.next;else if((ear=next)===stop){pass?1===pass?earcutLinked(ear=cureLocalIntersections(filterPoints(ear),triangles,dim),triangles,dim,minX,minY,invSize,2):2===pass&&splitEarcut(ear,triangles,dim,minX,minY,invSize):earcutLinked(filterPoints(ear),triangles,dim,minX,minY,invSize,1);break}}function isEar(ear){const a=ear.prev,b=ear,c=ear.next;if(area(a,b,c)>=0)return!1;const ax=a.x,bx=b.x,cx=c.x,ay=a.y,by=b.y,cy=c.y,x0=ax<bx?ax<cx?ax:cx:bx<cx?bx:cx,y0=ay<by?ay<cy?ay:cy:by<cy?by:cy,x1=ax>bx?ax>cx?ax:cx:bx>cx?bx:cx,y1=ay>by?ay>cy?ay:cy:by>cy?by:cy;let p=c.next;for(;p!==a;){if(p.x>=x0&&p.x<=x1&&p.y>=y0&&p.y<=y1&&pointInTriangle(ax,ay,bx,by,cx,cy,p.x,p.y)&&area(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function isEarHashed(ear,minX,minY,invSize){const a=ear.prev,b=ear,c=ear.next;if(area(a,b,c)>=0)return!1;const ax=a.x,bx=b.x,cx=c.x,ay=a.y,by=b.y,cy=c.y,x0=ax<bx?ax<cx?ax:cx:bx<cx?bx:cx,y0=ay<by?ay<cy?ay:cy:by<cy?by:cy,x1=ax>bx?ax>cx?ax:cx:bx>cx?bx:cx,y1=ay>by?ay>cy?ay:cy:by>cy?by:cy,minZ=zOrder(x0,y0,minX,minY,invSize),maxZ=zOrder(x1,y1,minX,minY,invSize);let p=ear.prevZ,n=ear.nextZ;for(;p&&p.z>=minZ&&n&&n.z<=maxZ;){if(p.x>=x0&&p.x<=x1&&p.y>=y0&&p.y<=y1&&p!==a&&p!==c&&pointInTriangle(ax,ay,bx,by,cx,cy,p.x,p.y)&&area(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,n.x>=x0&&n.x<=x1&&n.y>=y0&&n.y<=y1&&n!==a&&n!==c&&pointInTriangle(ax,ay,bx,by,cx,cy,n.x,n.y)&&area(n.prev,n,n.next)>=0)return!1;n=n.nextZ}for(;p&&p.z>=minZ;){if(p.x>=x0&&p.x<=x1&&p.y>=y0&&p.y<=y1&&p!==a&&p!==c&&pointInTriangle(ax,ay,bx,by,cx,cy,p.x,p.y)&&area(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;n&&n.z<=maxZ;){if(n.x>=x0&&n.x<=x1&&n.y>=y0&&n.y<=y1&&n!==a&&n!==c&&pointInTriangle(ax,ay,bx,by,cx,cy,n.x,n.y)&&area(n.prev,n,n.next)>=0)return!1;n=n.nextZ}return!0}function cureLocalIntersections(start,triangles,dim){let p=start;do{const a=p.prev,b=p.next.next;!equals(a,b)&&intersects(a,p,p.next,b)&&locallyInside(a,b)&&locallyInside(b,a)&&(triangles.push(a.i/dim|0),triangles.push(p.i/dim|0),triangles.push(b.i/dim|0),removeNode(p),removeNode(p.next),p=start=b),p=p.next}while(p!==start);return filterPoints(p)}function splitEarcut(start,triangles,dim,minX,minY,invSize){let a=start;do{let b=a.next.next;for(;b!==a.prev;){if(a.i!==b.i&&isValidDiagonal(a,b)){let c=splitPolygon(a,b);return a=filterPoints(a,a.next),c=filterPoints(c,c.next),earcutLinked(a,triangles,dim,minX,minY,invSize,0),void earcutLinked(c,triangles,dim,minX,minY,invSize,0)}b=b.next}a=a.next}while(a!==start)}function compareX(a,b){return a.x-b.x}function eliminateHole(hole,outerNode){const bridge=function findHoleBridge(hole,outerNode){let m,p=outerNode,qx=-1/0;const hx=hole.x,hy=hole.y;do{if(hy<=p.y&&hy>=p.next.y&&p.next.y!==p.y){const x=p.x+(hy-p.y)*(p.next.x-p.x)/(p.next.y-p.y);if(x<=hx&&x>qx&&(qx=x,m=p.x<p.next.x?p:p.next,x===hx))return m}p=p.next}while(p!==outerNode);if(!m)return null;const stop=m,mx=m.x,my=m.y;let tan,tanMin=1/0;p=m;do{hx>=p.x&&p.x>=mx&&hx!==p.x&&pointInTriangle(hy<my?hx:qx,hy,mx,my,hy<my?qx:hx,hy,p.x,p.y)&&(tan=Math.abs(hy-p.y)/(hx-p.x),locallyInside(p,hole)&&(tan<tanMin||tan===tanMin&&(p.x>m.x||p.x===m.x&&sectorContainsSector(m,p)))&&(m=p,tanMin=tan)),p=p.next}while(p!==stop);return m}(hole,outerNode);if(!bridge)return outerNode;const bridgeReverse=splitPolygon(bridge,hole);return filterPoints(bridgeReverse,bridgeReverse.next),filterPoints(bridge,bridge.next)}function sectorContainsSector(m,p){return area(m.prev,m,p.prev)<0&&area(p.next,m,m.next)<0}function zOrder(x,y,minX,minY,invSize){return(x=1431655765&((x=858993459&((x=252645135&((x=16711935&((x=(x-minX)*invSize|0)|x<<8))|x<<4))|x<<2))|x<<1))|(y=1431655765&((y=858993459&((y=252645135&((y=16711935&((y=(y-minY)*invSize|0)|y<<8))|y<<4))|y<<2))|y<<1))<<1}function getLeftmost(start){let p=start,leftmost=start;do{(p.x<leftmost.x||p.x===leftmost.x&&p.y<leftmost.y)&&(leftmost=p),p=p.next}while(p!==start);return leftmost}function pointInTriangle(ax,ay,bx,by,cx,cy,px,py){return(cx-px)*(ay-py)>=(ax-px)*(cy-py)&&(ax-px)*(by-py)>=(bx-px)*(ay-py)&&(bx-px)*(cy-py)>=(cx-px)*(by-py)}function isValidDiagonal(a,b){return a.next.i!==b.i&&a.prev.i!==b.i&&!function intersectsPolygon(a,b){let p=a;do{if(p.i!==a.i&&p.next.i!==a.i&&p.i!==b.i&&p.next.i!==b.i&&intersects(p,p.next,a,b))return!0;p=p.next}while(p!==a);return!1}(a,b)&&(locallyInside(a,b)&&locallyInside(b,a)&&function middleInside(a,b){let p=a,inside=!1;const px=(a.x+b.x)/2,py=(a.y+b.y)/2;do{p.y>py!=p.next.y>py&&p.next.y!==p.y&&px<(p.next.x-p.x)*(py-p.y)/(p.next.y-p.y)+p.x&&(inside=!inside),p=p.next}while(p!==a);return inside}(a,b)&&(area(a.prev,a,b.prev)||area(a,b.prev,b))||equals(a,b)&&area(a.prev,a,a.next)>0&&area(b.prev,b,b.next)>0)}function area(p,q,r){return(q.y-p.y)*(r.x-q.x)-(q.x-p.x)*(r.y-q.y)}function equals(p1,p2){return p1.x===p2.x&&p1.y===p2.y}function intersects(p1,q1,p2,q2){const o1=sign(area(p1,q1,p2)),o2=sign(area(p1,q1,q2)),o3=sign(area(p2,q2,p1)),o4=sign(area(p2,q2,q1));return o1!==o2&&o3!==o4||(!(0!==o1||!onSegment(p1,p2,q1))||(!(0!==o2||!onSegment(p1,q2,q1))||(!(0!==o3||!onSegment(p2,p1,q2))||!(0!==o4||!onSegment(p2,q1,q2)))))}function onSegment(p,q,r){return q.x<=Math.max(p.x,r.x)&&q.x>=Math.min(p.x,r.x)&&q.y<=Math.max(p.y,r.y)&&q.y>=Math.min(p.y,r.y)}function sign(num){return num>0?1:num<0?-1:0}function locallyInside(a,b){return area(a.prev,a,a.next)<0?area(a,b,a.next)>=0&&area(a,a.prev,b)>=0:area(a,b,a.prev)<0||area(a,a.next,b)<0}function splitPolygon(a,b){const a2=new Node(a.i,a.x,a.y),b2=new Node(b.i,b.x,b.y),an=a.next,bp=b.prev;return a.next=b,b.prev=a,a2.next=an,an.prev=a2,b2.next=a2,a2.prev=b2,bp.next=b2,b2.prev=bp,b2}function insertNode(i,x,y,last){const p=new Node(i,x,y);return last?(p.next=last.next,p.prev=last,last.next.prev=p,last.next=p):(p.prev=p,p.next=p),p}function removeNode(p){p.next.prev=p.prev,p.prev.next=p.next,p.prevZ&&(p.prevZ.nextZ=p.nextZ),p.nextZ&&(p.nextZ.prevZ=p.prevZ)}function Node(i,x,y){this.i=i,this.x=x,this.y=y,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}class ShapeUtils{static area(contour){const n=contour.length;let a=0;for(let p=n-1,q=0;q<n;p=q++)a+=contour[p].x*contour[q].y-contour[q].x*contour[p].y;return.5*a}static isClockWise(pts){return ShapeUtils.area(pts)<0}static triangulateShape(contour,holes){const vertices=[],holeIndices=[],faces=[];removeDupEndPts(contour),addContour(vertices,contour);let holeIndex=contour.length;holes.forEach(removeDupEndPts);for(let i=0;i<holes.length;i++)holeIndices.push(holeIndex),holeIndex+=holes[i].length,addContour(vertices,holes[i]);const triangles=Earcut_triangulate(vertices,holeIndices);for(let i=0;i<triangles.length;i+=3)faces.push(triangles.slice(i,i+3));return faces}}function removeDupEndPts(points){const l=points.length;l>2&&points[l-1].equals(points[0])&&points.pop()}function addContour(vertices,contour){for(let i=0;i<contour.length;i++)vertices.push(contour[i].x),vertices.push(contour[i].y)}class ExtrudeGeometry extends BufferGeometry{constructor(shapes=new Shape([new Vector2(.5,.5),new Vector2(-.5,.5),new Vector2(-.5,-.5),new Vector2(.5,-.5)]),options={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes,options},shapes=Array.isArray(shapes)?shapes:[shapes];const scope=this,verticesArray=[],uvArray=[];for(let i=0,l=shapes.length;i<l;i++){addShape(shapes[i])}function addShape(shape){const placeholder=[],curveSegments=void 0!==options.curveSegments?options.curveSegments:12,steps=void 0!==options.steps?options.steps:1,depth=void 0!==options.depth?options.depth:1;let bevelEnabled=void 0===options.bevelEnabled||options.bevelEnabled,bevelThickness=void 0!==options.bevelThickness?options.bevelThickness:.2,bevelSize=void 0!==options.bevelSize?options.bevelSize:bevelThickness-.1,bevelOffset=void 0!==options.bevelOffset?options.bevelOffset:0,bevelSegments=void 0!==options.bevelSegments?options.bevelSegments:3;const extrudePath=options.extrudePath,uvgen=void 0!==options.UVGenerator?options.UVGenerator:WorldUVGenerator;let extrudePts,splineTube,binormal,normal,position2,extrudeByPath=!1;extrudePath&&(extrudePts=extrudePath.getSpacedPoints(steps),extrudeByPath=!0,bevelEnabled=!1,splineTube=extrudePath.computeFrenetFrames(steps,!1),binormal=new Vector3,normal=new Vector3,position2=new Vector3),bevelEnabled||(bevelSegments=0,bevelThickness=0,bevelSize=0,bevelOffset=0);const shapePoints=shape.extractPoints(curveSegments);let vertices=shapePoints.shape;const holes=shapePoints.holes;if(!ShapeUtils.isClockWise(vertices)){vertices=vertices.reverse();for(let h=0,hl=holes.length;h<hl;h++){const ahole=holes[h];ShapeUtils.isClockWise(ahole)&&(holes[h]=ahole.reverse())}}const faces=ShapeUtils.triangulateShape(vertices,holes),contour=vertices;for(let h=0,hl=holes.length;h<hl;h++){const ahole=holes[h];vertices=vertices.concat(ahole)}function scalePt2(pt,vec,size){return vec||console.error("THREE.ExtrudeGeometry: vec does not exist"),pt.clone().addScaledVector(vec,size)}const vlen=vertices.length,flen=faces.length;function getBevelVec(inPt,inPrev,inNext){let v_trans_x,v_trans_y,shrink_by;const v_prev_x=inPt.x-inPrev.x,v_prev_y=inPt.y-inPrev.y,v_next_x=inNext.x-inPt.x,v_next_y=inNext.y-inPt.y,v_prev_lensq=v_prev_x*v_prev_x+v_prev_y*v_prev_y,collinear0=v_prev_x*v_next_y-v_prev_y*v_next_x;if(Math.abs(collinear0)>Number.EPSILON){const v_prev_len=Math.sqrt(v_prev_lensq),v_next_len=Math.sqrt(v_next_x*v_next_x+v_next_y*v_next_y),ptPrevShift_x=inPrev.x-v_prev_y/v_prev_len,ptPrevShift_y=inPrev.y+v_prev_x/v_prev_len,sf=((inNext.x-v_next_y/v_next_len-ptPrevShift_x)*v_next_y-(inNext.y+v_next_x/v_next_len-ptPrevShift_y)*v_next_x)/(v_prev_x*v_next_y-v_prev_y*v_next_x);v_trans_x=ptPrevShift_x+v_prev_x*sf-inPt.x,v_trans_y=ptPrevShift_y+v_prev_y*sf-inPt.y;const v_trans_lensq=v_trans_x*v_trans_x+v_trans_y*v_trans_y;if(v_trans_lensq<=2)return new Vector2(v_trans_x,v_trans_y);shrink_by=Math.sqrt(v_trans_lensq/2)}else{let direction_eq=!1;v_prev_x>Number.EPSILON?v_next_x>Number.EPSILON&&(direction_eq=!0):v_prev_x<-Number.EPSILON?v_next_x<-Number.EPSILON&&(direction_eq=!0):Math.sign(v_prev_y)===Math.sign(v_next_y)&&(direction_eq=!0),direction_eq?(v_trans_x=-v_prev_y,v_trans_y=v_prev_x,shrink_by=Math.sqrt(v_prev_lensq)):(v_trans_x=v_prev_x,v_trans_y=v_prev_y,shrink_by=Math.sqrt(v_prev_lensq/2))}return new Vector2(v_trans_x/shrink_by,v_trans_y/shrink_by)}const contourMovements=[];for(let i=0,il=contour.length,j=il-1,k=i+1;i<il;i++,j++,k++)j===il&&(j=0),k===il&&(k=0),contourMovements[i]=getBevelVec(contour[i],contour[j],contour[k]);const holesMovements=[];let oneHoleMovements,verticesMovements=contourMovements.concat();for(let h=0,hl=holes.length;h<hl;h++){const ahole=holes[h];oneHoleMovements=[];for(let i=0,il=ahole.length,j=il-1,k=i+1;i<il;i++,j++,k++)j===il&&(j=0),k===il&&(k=0),oneHoleMovements[i]=getBevelVec(ahole[i],ahole[j],ahole[k]);holesMovements.push(oneHoleMovements),verticesMovements=verticesMovements.concat(oneHoleMovements)}for(let b=0;b<bevelSegments;b++){const t=b/bevelSegments,z=bevelThickness*Math.cos(t*Math.PI/2),bs=bevelSize*Math.sin(t*Math.PI/2)+bevelOffset;for(let i=0,il=contour.length;i<il;i++){const vert=scalePt2(contour[i],contourMovements[i],bs);v(vert.x,vert.y,-z)}for(let h=0,hl=holes.length;h<hl;h++){const ahole=holes[h];oneHoleMovements=holesMovements[h];for(let i=0,il=ahole.length;i<il;i++){const vert=scalePt2(ahole[i],oneHoleMovements[i],bs);v(vert.x,vert.y,-z)}}}const bs=bevelSize+bevelOffset;for(let i=0;i<vlen;i++){const vert=bevelEnabled?scalePt2(vertices[i],verticesMovements[i],bs):vertices[i];extrudeByPath?(normal.copy(splineTube.normals[0]).multiplyScalar(vert.x),binormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y),position2.copy(extrudePts[0]).add(normal).add(binormal),v(position2.x,position2.y,position2.z)):v(vert.x,vert.y,0)}for(let s=1;s<=steps;s++)for(let i=0;i<vlen;i++){const vert=bevelEnabled?scalePt2(vertices[i],verticesMovements[i],bs):vertices[i];extrudeByPath?(normal.copy(splineTube.normals[s]).multiplyScalar(vert.x),binormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y),position2.copy(extrudePts[s]).add(normal).add(binormal),v(position2.x,position2.y,position2.z)):v(vert.x,vert.y,depth/steps*s)}for(let b=bevelSegments-1;b>=0;b--){const t=b/bevelSegments,z=bevelThickness*Math.cos(t*Math.PI/2),bs=bevelSize*Math.sin(t*Math.PI/2)+bevelOffset;for(let i=0,il=contour.length;i<il;i++){const vert=scalePt2(contour[i],contourMovements[i],bs);v(vert.x,vert.y,depth+z)}for(let h=0,hl=holes.length;h<hl;h++){const ahole=holes[h];oneHoleMovements=holesMovements[h];for(let i=0,il=ahole.length;i<il;i++){const vert=scalePt2(ahole[i],oneHoleMovements[i],bs);extrudeByPath?v(vert.x,vert.y+extrudePts[steps-1].y,extrudePts[steps-1].x+z):v(vert.x,vert.y,depth+z)}}}function sidewalls(contour,layeroffset){let i=contour.length;for(;--i>=0;){const j=i;let k=i-1;k<0&&(k=contour.length-1);for(let s=0,sl=steps+2*bevelSegments;s<sl;s++){const slen1=vlen*s,slen2=vlen*(s+1);f4(layeroffset+j+slen1,layeroffset+k+slen1,layeroffset+k+slen2,layeroffset+j+slen2)}}}function v(x,y,z){placeholder.push(x),placeholder.push(y),placeholder.push(z)}function f3(a,b,c){addVertex(a),addVertex(b),addVertex(c);const nextIndex=verticesArray.length/3,uvs=uvgen.generateTopUV(scope,verticesArray,nextIndex-3,nextIndex-2,nextIndex-1);addUV(uvs[0]),addUV(uvs[1]),addUV(uvs[2])}function f4(a,b,c,d){addVertex(a),addVertex(b),addVertex(d),addVertex(b),addVertex(c),addVertex(d);const nextIndex=verticesArray.length/3,uvs=uvgen.generateSideWallUV(scope,verticesArray,nextIndex-6,nextIndex-3,nextIndex-2,nextIndex-1);addUV(uvs[0]),addUV(uvs[1]),addUV(uvs[3]),addUV(uvs[1]),addUV(uvs[2]),addUV(uvs[3])}function addVertex(index){verticesArray.push(placeholder[3*index+0]),verticesArray.push(placeholder[3*index+1]),verticesArray.push(placeholder[3*index+2])}function addUV(vector2){uvArray.push(vector2.x),uvArray.push(vector2.y)}!function buildLidFaces(){const start=verticesArray.length/3;if(bevelEnabled){let layer=0,offset=vlen*layer;for(let i=0;i<flen;i++){const face=faces[i];f3(face[2]+offset,face[1]+offset,face[0]+offset)}layer=steps+2*bevelSegments,offset=vlen*layer;for(let i=0;i<flen;i++){const face=faces[i];f3(face[0]+offset,face[1]+offset,face[2]+offset)}}else{for(let i=0;i<flen;i++){const face=faces[i];f3(face[2],face[1],face[0])}for(let i=0;i<flen;i++){const face=faces[i];f3(face[0]+vlen*steps,face[1]+vlen*steps,face[2]+vlen*steps)}}scope.addGroup(start,verticesArray.length/3-start,0)}(),function buildSideFaces(){const start=verticesArray.length/3;let layeroffset=0;sidewalls(contour,layeroffset),layeroffset+=contour.length;for(let h=0,hl=holes.length;h<hl;h++){const ahole=holes[h];sidewalls(ahole,layeroffset),layeroffset+=ahole.length}scope.addGroup(start,verticesArray.length/3-start,1)}()}this.setAttribute("position",new Float32BufferAttribute(verticesArray,3)),this.setAttribute("uv",new Float32BufferAttribute(uvArray,2)),this.computeVertexNormals()}copy(source){return super.copy(source),this.parameters=Object.assign({},source.parameters),this}toJSON(){const data=super.toJSON();return function toJSON$1(shapes,options,data){if(data.shapes=[],Array.isArray(shapes))for(let i=0,l=shapes.length;i<l;i++){const shape=shapes[i];data.shapes.push(shape.uuid)}else data.shapes.push(shapes.uuid);data.options=Object.assign({},options),void 0!==options.extrudePath&&(data.options.extrudePath=options.extrudePath.toJSON());return data}(this.parameters.shapes,this.parameters.options,data)}static fromJSON(data,shapes){const geometryShapes=[];for(let j=0,jl=data.shapes.length;j<jl;j++){const shape=shapes[data.shapes[j]];geometryShapes.push(shape)}const extrudePath=data.options.extrudePath;return void 0!==extrudePath&&(data.options.extrudePath=(new Curves[extrudePath.type]).fromJSON(extrudePath)),new ExtrudeGeometry(geometryShapes,data.options)}}const WorldUVGenerator={generateTopUV:function(geometry,vertices,indexA,indexB,indexC){const a_x=vertices[3*indexA],a_y=vertices[3*indexA+1],b_x=vertices[3*indexB],b_y=vertices[3*indexB+1],c_x=vertices[3*indexC],c_y=vertices[3*indexC+1];return[new Vector2(a_x,a_y),new Vector2(b_x,b_y),new Vector2(c_x,c_y)]},generateSideWallUV:function(geometry,vertices,indexA,indexB,indexC,indexD){const a_x=vertices[3*indexA],a_y=vertices[3*indexA+1],a_z=vertices[3*indexA+2],b_x=vertices[3*indexB],b_y=vertices[3*indexB+1],b_z=vertices[3*indexB+2],c_x=vertices[3*indexC],c_y=vertices[3*indexC+1],c_z=vertices[3*indexC+2],d_x=vertices[3*indexD],d_y=vertices[3*indexD+1],d_z=vertices[3*indexD+2];return Math.abs(a_y-b_y)<Math.abs(a_x-b_x)?[new Vector2(a_x,1-a_z),new Vector2(b_x,1-b_z),new Vector2(c_x,1-c_z),new Vector2(d_x,1-d_z)]:[new Vector2(a_y,1-a_z),new Vector2(b_y,1-b_z),new Vector2(c_y,1-c_z),new Vector2(d_y,1-d_z)]}};class IcosahedronGeometry extends PolyhedronGeometry{constructor(radius=1,detail=0){const t=(1+Math.sqrt(5))/2;super([-1,t,0,1,t,0,-1,-t,0,1,-t,0,0,-1,t,0,1,t,0,-1,-t,0,1,-t,t,0,-1,t,0,1,-t,0,-1,-t,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],radius,detail),this.type="IcosahedronGeometry",this.parameters={radius,detail}}static fromJSON(data){return new IcosahedronGeometry(data.radius,data.detail)}}class OctahedronGeometry extends PolyhedronGeometry{constructor(radius=1,detail=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],radius,detail),this.type="OctahedronGeometry",this.parameters={radius,detail}}static fromJSON(data){return new OctahedronGeometry(data.radius,data.detail)}}class RingGeometry extends BufferGeometry{constructor(innerRadius=.5,outerRadius=1,thetaSegments=32,phiSegments=1,thetaStart=0,thetaLength=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius,outerRadius,thetaSegments,phiSegments,thetaStart,thetaLength},thetaSegments=Math.max(3,thetaSegments);const indices=[],vertices=[],normals=[],uvs=[];let radius=innerRadius;const radiusStep=(outerRadius-innerRadius)/(phiSegments=Math.max(1,phiSegments)),vertex=new Vector3,uv=new Vector2;for(let j=0;j<=phiSegments;j++){for(let i=0;i<=thetaSegments;i++){const segment=thetaStart+i/thetaSegments*thetaLength;vertex.x=radius*Math.cos(segment),vertex.y=radius*Math.sin(segment),vertices.push(vertex.x,vertex.y,vertex.z),normals.push(0,0,1),uv.x=(vertex.x/outerRadius+1)/2,uv.y=(vertex.y/outerRadius+1)/2,uvs.push(uv.x,uv.y)}radius+=radiusStep}for(let j=0;j<phiSegments;j++){const thetaSegmentLevel=j*(thetaSegments+1);for(let i=0;i<thetaSegments;i++){const segment=i+thetaSegmentLevel,a=segment,b=segment+thetaSegments+1,c=segment+thetaSegments+2,d=segment+1;indices.push(a,b,d),indices.push(b,c,d)}}this.setIndex(indices),this.setAttribute("position",new Float32BufferAttribute(vertices,3)),this.setAttribute("normal",new Float32BufferAttribute(normals,3)),this.setAttribute("uv",new Float32BufferAttribute(uvs,2))}copy(source){return super.copy(source),this.parameters=Object.assign({},source.parameters),this}static fromJSON(data){return new RingGeometry(data.innerRadius,data.outerRadius,data.thetaSegments,data.phiSegments,data.thetaStart,data.thetaLength)}}class ShapeGeometry extends BufferGeometry{constructor(shapes=new Shape([new Vector2(0,.5),new Vector2(-.5,-.5),new Vector2(.5,-.5)]),curveSegments=12){super(),this.type="ShapeGeometry",this.parameters={shapes,curveSegments};const indices=[],vertices=[],normals=[],uvs=[];let groupStart=0,groupCount=0;if(!1===Array.isArray(shapes))addShape(shapes);else for(let i=0;i<shapes.length;i++)addShape(shapes[i]),this.addGroup(groupStart,groupCount,i),groupStart+=groupCount,groupCount=0;function addShape(shape){const indexOffset=vertices.length/3,points=shape.extractPoints(curveSegments);let shapeVertices=points.shape;const shapeHoles=points.holes;!1===ShapeUtils.isClockWise(shapeVertices)&&(shapeVertices=shapeVertices.reverse());for(let i=0,l=shapeHoles.length;i<l;i++){const shapeHole=shapeHoles[i];!0===ShapeUtils.isClockWise(shapeHole)&&(shapeHoles[i]=shapeHole.reverse())}const faces=ShapeUtils.triangulateShape(shapeVertices,shapeHoles);for(let i=0,l=shapeHoles.length;i<l;i++){const shapeHole=shapeHoles[i];shapeVertices=shapeVertices.concat(shapeHole)}for(let i=0,l=shapeVertices.length;i<l;i++){const vertex=shapeVertices[i];vertices.push(vertex.x,vertex.y,0),normals.push(0,0,1),uvs.push(vertex.x,vertex.y)}for(let i=0,l=faces.length;i<l;i++){const face=faces[i],a=face[0]+indexOffset,b=face[1]+indexOffset,c=face[2]+indexOffset;indices.push(a,b,c),groupCount+=3}}this.setIndex(indices),this.setAttribute("position",new Float32BufferAttribute(vertices,3)),this.setAttribute("normal",new Float32BufferAttribute(normals,3)),this.setAttribute("uv",new Float32BufferAttribute(uvs,2))}copy(source){return super.copy(source),this.parameters=Object.assign({},source.parameters),this}toJSON(){const data=super.toJSON();return function toJSON(shapes,data){if(data.shapes=[],Array.isArray(shapes))for(let i=0,l=shapes.length;i<l;i++){const shape=shapes[i];data.shapes.push(shape.uuid)}else data.shapes.push(shapes.uuid);return data}(this.parameters.shapes,data)}static fromJSON(data,shapes){const geometryShapes=[];for(let j=0,jl=data.shapes.length;j<jl;j++){const shape=shapes[data.shapes[j]];geometryShapes.push(shape)}return new ShapeGeometry(geometryShapes,data.curveSegments)}}class SphereGeometry extends BufferGeometry{constructor(radius=1,widthSegments=32,heightSegments=16,phiStart=0,phiLength=2*Math.PI,thetaStart=0,thetaLength=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius,widthSegments,heightSegments,phiStart,phiLength,thetaStart,thetaLength},widthSegments=Math.max(3,Math.floor(widthSegments)),heightSegments=Math.max(2,Math.floor(heightSegments));const thetaEnd=Math.min(thetaStart+thetaLength,Math.PI);let index=0;const grid=[],vertex=new Vector3,normal=new Vector3,indices=[],vertices=[],normals=[],uvs=[];for(let iy=0;iy<=heightSegments;iy++){const verticesRow=[],v=iy/heightSegments;let uOffset=0;0===iy&&0===thetaStart?uOffset=.5/widthSegments:iy===heightSegments&&thetaEnd===Math.PI&&(uOffset=-.5/widthSegments);for(let ix=0;ix<=widthSegments;ix++){const u=ix/widthSegments;vertex.x=-radius*Math.cos(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength),vertex.y=radius*Math.cos(thetaStart+v*thetaLength),vertex.z=radius*Math.sin(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength),vertices.push(vertex.x,vertex.y,vertex.z),normal.copy(vertex).normalize(),normals.push(normal.x,normal.y,normal.z),uvs.push(u+uOffset,1-v),verticesRow.push(index++)}grid.push(verticesRow)}for(let iy=0;iy<heightSegments;iy++)for(let ix=0;ix<widthSegments;ix++){const a=grid[iy][ix+1],b=grid[iy][ix],c=grid[iy+1][ix],d=grid[iy+1][ix+1];(0!==iy||thetaStart>0)&&indices.push(a,b,d),(iy!==heightSegments-1||thetaEnd<Math.PI)&&indices.push(b,c,d)}this.setIndex(indices),this.setAttribute("position",new Float32BufferAttribute(vertices,3)),this.setAttribute("normal",new Float32BufferAttribute(normals,3)),this.setAttribute("uv",new Float32BufferAttribute(uvs,2))}copy(source){return super.copy(source),this.parameters=Object.assign({},source.parameters),this}static fromJSON(data){return new SphereGeometry(data.radius,data.widthSegments,data.heightSegments,data.phiStart,data.phiLength,data.thetaStart,data.thetaLength)}}class TetrahedronGeometry extends PolyhedronGeometry{constructor(radius=1,detail=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],radius,detail),this.type="TetrahedronGeometry",this.parameters={radius,detail}}static fromJSON(data){return new TetrahedronGeometry(data.radius,data.detail)}}class TorusGeometry extends BufferGeometry{constructor(radius=1,tube=.4,radialSegments=12,tubularSegments=48,arc=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius,tube,radialSegments,tubularSegments,arc},radialSegments=Math.floor(radialSegments),tubularSegments=Math.floor(tubularSegments);const indices=[],vertices=[],normals=[],uvs=[],center=new Vector3,vertex=new Vector3,normal=new Vector3;for(let j=0;j<=radialSegments;j++)for(let i=0;i<=tubularSegments;i++){const u=i/tubularSegments*arc,v=j/radialSegments*Math.PI*2;vertex.x=(radius+tube*Math.cos(v))*Math.cos(u),vertex.y=(radius+tube*Math.cos(v))*Math.sin(u),vertex.z=tube*Math.sin(v),vertices.push(vertex.x,vertex.y,vertex.z),center.x=radius*Math.cos(u),center.y=radius*Math.sin(u),normal.subVectors(vertex,center).normalize(),normals.push(normal.x,normal.y,normal.z),uvs.push(i/tubularSegments),uvs.push(j/radialSegments)}for(let j=1;j<=radialSegments;j++)for(let i=1;i<=tubularSegments;i++){const a=(tubularSegments+1)*j+i-1,b=(tubularSegments+1)*(j-1)+i-1,c=(tubularSegments+1)*(j-1)+i,d=(tubularSegments+1)*j+i;indices.push(a,b,d),indices.push(b,c,d)}this.setIndex(indices),this.setAttribute("position",new Float32BufferAttribute(vertices,3)),this.setAttribute("normal",new Float32BufferAttribute(normals,3)),this.setAttribute("uv",new Float32BufferAttribute(uvs,2))}copy(source){return super.copy(source),this.parameters=Object.assign({},source.parameters),this}static fromJSON(data){return new TorusGeometry(data.radius,data.tube,data.radialSegments,data.tubularSegments,data.arc)}}class TorusKnotGeometry extends BufferGeometry{constructor(radius=1,tube=.4,tubularSegments=64,radialSegments=8,p=2,q=3){super(),this.type="TorusKnotGeometry",this.parameters={radius,tube,tubularSegments,radialSegments,p,q},tubularSegments=Math.floor(tubularSegments),radialSegments=Math.floor(radialSegments);const indices=[],vertices=[],normals=[],uvs=[],vertex=new Vector3,normal=new Vector3,P1=new Vector3,P2=new Vector3,B=new Vector3,T=new Vector3,N=new Vector3;for(let i=0;i<=tubularSegments;++i){const u=i/tubularSegments*p*Math.PI*2;calculatePositionOnCurve(u,p,q,radius,P1),calculatePositionOnCurve(u+.01,p,q,radius,P2),T.subVectors(P2,P1),N.addVectors(P2,P1),B.crossVectors(T,N),N.crossVectors(B,T),B.normalize(),N.normalize();for(let j=0;j<=radialSegments;++j){const v=j/radialSegments*Math.PI*2,cx=-tube*Math.cos(v),cy=tube*Math.sin(v);vertex.x=P1.x+(cx*N.x+cy*B.x),vertex.y=P1.y+(cx*N.y+cy*B.y),vertex.z=P1.z+(cx*N.z+cy*B.z),vertices.push(vertex.x,vertex.y,vertex.z),normal.subVectors(vertex,P1).normalize(),normals.push(normal.x,normal.y,normal.z),uvs.push(i/tubularSegments),uvs.push(j/radialSegments)}}for(let j=1;j<=tubularSegments;j++)for(let i=1;i<=radialSegments;i++){const a=(radialSegments+1)*(j-1)+(i-1),b=(radialSegments+1)*j+(i-1),c=(radialSegments+1)*j+i,d=(radialSegments+1)*(j-1)+i;indices.push(a,b,d),indices.push(b,c,d)}function calculatePositionOnCurve(u,p,q,radius,position){const cu=Math.cos(u),su=Math.sin(u),quOverP=q/p*u,cs=Math.cos(quOverP);position.x=radius*(2+cs)*.5*cu,position.y=radius*(2+cs)*su*.5,position.z=radius*Math.sin(quOverP)*.5}this.setIndex(indices),this.setAttribute("position",new Float32BufferAttribute(vertices,3)),this.setAttribute("normal",new Float32BufferAttribute(normals,3)),this.setAttribute("uv",new Float32BufferAttribute(uvs,2))}copy(source){return super.copy(source),this.parameters=Object.assign({},source.parameters),this}static fromJSON(data){return new TorusKnotGeometry(data.radius,data.tube,data.tubularSegments,data.radialSegments,data.p,data.q)}}class TubeGeometry extends BufferGeometry{constructor(path=new QuadraticBezierCurve3(new Vector3(-1,-1,0),new Vector3(-1,1,0),new Vector3(1,1,0)),tubularSegments=64,radius=1,radialSegments=8,closed=!1){super(),this.type="TubeGeometry",this.parameters={path,tubularSegments,radius,radialSegments,closed};const frames=path.computeFrenetFrames(tubularSegments,closed);this.tangents=frames.tangents,this.normals=frames.normals,this.binormals=frames.binormals;const vertex=new Vector3,normal=new Vector3,uv=new Vector2;let P=new Vector3;const vertices=[],normals=[],uvs=[],indices=[];function generateSegment(i){P=path.getPointAt(i/tubularSegments,P);const N=frames.normals[i],B=frames.binormals[i];for(let j=0;j<=radialSegments;j++){const v=j/radialSegments*Math.PI*2,sin=Math.sin(v),cos=-Math.cos(v);normal.x=cos*N.x+sin*B.x,normal.y=cos*N.y+sin*B.y,normal.z=cos*N.z+sin*B.z,normal.normalize(),normals.push(normal.x,normal.y,normal.z),vertex.x=P.x+radius*normal.x,vertex.y=P.y+radius*normal.y,vertex.z=P.z+radius*normal.z,vertices.push(vertex.x,vertex.y,vertex.z)}}!function generateBufferData(){for(let i=0;i<tubularSegments;i++)generateSegment(i);generateSegment(!1===closed?tubularSegments:0),function generateUVs(){for(let i=0;i<=tubularSegments;i++)for(let j=0;j<=radialSegments;j++)uv.x=i/tubularSegments,uv.y=j/radialSegments,uvs.push(uv.x,uv.y)}(),function generateIndices(){for(let j=1;j<=tubularSegments;j++)for(let i=1;i<=radialSegments;i++){const a=(radialSegments+1)*(j-1)+(i-1),b=(radialSegments+1)*j+(i-1),c=(radialSegments+1)*j+i,d=(radialSegments+1)*(j-1)+i;indices.push(a,b,d),indices.push(b,c,d)}}()}(),this.setIndex(indices),this.setAttribute("position",new Float32BufferAttribute(vertices,3)),this.setAttribute("normal",new Float32BufferAttribute(normals,3)),this.setAttribute("uv",new Float32BufferAttribute(uvs,2))}copy(source){return super.copy(source),this.parameters=Object.assign({},source.parameters),this}toJSON(){const data=super.toJSON();return data.path=this.parameters.path.toJSON(),data}static fromJSON(data){return new TubeGeometry((new Curves[data.path.type]).fromJSON(data.path),data.tubularSegments,data.radius,data.radialSegments,data.closed)}}class WireframeGeometry extends BufferGeometry{constructor(geometry=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry},null!==geometry){const vertices=[],edges=new Set,start=new Vector3,end=new Vector3;if(null!==geometry.index){const position=geometry.attributes.position,indices=geometry.index;let groups=geometry.groups;0===groups.length&&(groups=[{start:0,count:indices.count,materialIndex:0}]);for(let o=0,ol=groups.length;o<ol;++o){const group=groups[o],groupStart=group.start;for(let i=groupStart,l=groupStart+group.count;i<l;i+=3)for(let j=0;j<3;j++){const index1=indices.getX(i+j),index2=indices.getX(i+(j+1)%3);start.fromBufferAttribute(position,index1),end.fromBufferAttribute(position,index2),!0===isUniqueEdge(start,end,edges)&&(vertices.push(start.x,start.y,start.z),vertices.push(end.x,end.y,end.z))}}}else{const position=geometry.attributes.position;for(let i=0,l=position.count/3;i<l;i++)for(let j=0;j<3;j++){const index1=3*i+j,index2=3*i+(j+1)%3;start.fromBufferAttribute(position,index1),end.fromBufferAttribute(position,index2),!0===isUniqueEdge(start,end,edges)&&(vertices.push(start.x,start.y,start.z),vertices.push(end.x,end.y,end.z))}}this.setAttribute("position",new Float32BufferAttribute(vertices,3))}}copy(source){return super.copy(source),this.parameters=Object.assign({},source.parameters),this}}function isUniqueEdge(start,end,edges){const hash1=`${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`,hash2=`${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`;return!0!==edges.has(hash1)&&!0!==edges.has(hash2)&&(edges.add(hash1),edges.add(hash2),!0)}var Geometries=Object.freeze({__proto__:null,BoxGeometry,CapsuleGeometry,CircleGeometry,ConeGeometry,CylinderGeometry,DodecahedronGeometry,EdgesGeometry,ExtrudeGeometry,IcosahedronGeometry,LatheGeometry,OctahedronGeometry,PlaneGeometry,PolyhedronGeometry,RingGeometry,ShapeGeometry,SphereGeometry,TetrahedronGeometry,TorusGeometry,TorusKnotGeometry,TubeGeometry,WireframeGeometry});class ShadowMaterial extends Material{constructor(parameters){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Color(0),this.transparent=!0,this.fog=!0,this.setValues(parameters)}copy(source){return super.copy(source),this.color.copy(source.color),this.fog=source.fog,this}}class RawShaderMaterial extends ShaderMaterial{constructor(parameters){super(parameters),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class MeshStandardMaterial extends Material{constructor(parameters){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Color(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(parameters)}copy(source){return super.copy(source),this.defines={STANDARD:""},this.color.copy(source.color),this.roughness=source.roughness,this.metalness=source.metalness,this.map=source.map,this.lightMap=source.lightMap,this.lightMapIntensity=source.lightMapIntensity,this.aoMap=source.aoMap,this.aoMapIntensity=source.aoMapIntensity,this.emissive.copy(source.emissive),this.emissiveMap=source.emissiveMap,this.emissiveIntensity=source.emissiveIntensity,this.bumpMap=source.bumpMap,this.bumpScale=source.bumpScale,this.normalMap=source.normalMap,this.normalMapType=source.normalMapType,this.normalScale.copy(source.normalScale),this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this.roughnessMap=source.roughnessMap,this.metalnessMap=source.metalnessMap,this.alphaMap=source.alphaMap,this.envMap=source.envMap,this.envMapIntensity=source.envMapIntensity,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.wireframeLinecap=source.wireframeLinecap,this.wireframeLinejoin=source.wireframeLinejoin,this.flatShading=source.flatShading,this.fog=source.fog,this}}class MeshPhysicalMaterial extends MeshStandardMaterial{constructor(parameters){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Vector2(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return clamp(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(reflectivity){this.ior=(1+.4*reflectivity)/(1-.4*reflectivity)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Color(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Color(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Color(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._iridescence=0,this._transmission=0,this.setValues(parameters)}get sheen(){return this._sheen}set sheen(value){this._sheen>0!=value>0&&this.version++,this._sheen=value}get clearcoat(){return this._clearcoat}set clearcoat(value){this._clearcoat>0!=value>0&&this.version++,this._clearcoat=value}get iridescence(){return this._iridescence}set iridescence(value){this._iridescence>0!=value>0&&this.version++,this._iridescence=value}get transmission(){return this._transmission}set transmission(value){this._transmission>0!=value>0&&this.version++,this._transmission=value}copy(source){return super.copy(source),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=source.clearcoat,this.clearcoatMap=source.clearcoatMap,this.clearcoatRoughness=source.clearcoatRoughness,this.clearcoatRoughnessMap=source.clearcoatRoughnessMap,this.clearcoatNormalMap=source.clearcoatNormalMap,this.clearcoatNormalScale.copy(source.clearcoatNormalScale),this.ior=source.ior,this.iridescence=source.iridescence,this.iridescenceMap=source.iridescenceMap,this.iridescenceIOR=source.iridescenceIOR,this.iridescenceThicknessRange=[...source.iridescenceThicknessRange],this.iridescenceThicknessMap=source.iridescenceThicknessMap,this.sheen=source.sheen,this.sheenColor.copy(source.sheenColor),this.sheenColorMap=source.sheenColorMap,this.sheenRoughness=source.sheenRoughness,this.sheenRoughnessMap=source.sheenRoughnessMap,this.transmission=source.transmission,this.transmissionMap=source.transmissionMap,this.thickness=source.thickness,this.thicknessMap=source.thicknessMap,this.attenuationDistance=source.attenuationDistance,this.attenuationColor.copy(source.attenuationColor),this.specularIntensity=source.specularIntensity,this.specularIntensityMap=source.specularIntensityMap,this.specularColor.copy(source.specularColor),this.specularColorMap=source.specularColorMap,this}}class MeshPhongMaterial extends Material{constructor(parameters){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Color(16777215),this.specular=new Color(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(parameters)}copy(source){return super.copy(source),this.color.copy(source.color),this.specular.copy(source.specular),this.shininess=source.shininess,this.map=source.map,this.lightMap=source.lightMap,this.lightMapIntensity=source.lightMapIntensity,this.aoMap=source.aoMap,this.aoMapIntensity=source.aoMapIntensity,this.emissive.copy(source.emissive),this.emissiveMap=source.emissiveMap,this.emissiveIntensity=source.emissiveIntensity,this.bumpMap=source.bumpMap,this.bumpScale=source.bumpScale,this.normalMap=source.normalMap,this.normalMapType=source.normalMapType,this.normalScale.copy(source.normalScale),this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this.specularMap=source.specularMap,this.alphaMap=source.alphaMap,this.envMap=source.envMap,this.combine=source.combine,this.reflectivity=source.reflectivity,this.refractionRatio=source.refractionRatio,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.wireframeLinecap=source.wireframeLinecap,this.wireframeLinejoin=source.wireframeLinejoin,this.flatShading=source.flatShading,this.fog=source.fog,this}}class MeshToonMaterial extends Material{constructor(parameters){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Color(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(parameters)}copy(source){return super.copy(source),this.color.copy(source.color),this.map=source.map,this.gradientMap=source.gradientMap,this.lightMap=source.lightMap,this.lightMapIntensity=source.lightMapIntensity,this.aoMap=source.aoMap,this.aoMapIntensity=source.aoMapIntensity,this.emissive.copy(source.emissive),this.emissiveMap=source.emissiveMap,this.emissiveIntensity=source.emissiveIntensity,this.bumpMap=source.bumpMap,this.bumpScale=source.bumpScale,this.normalMap=source.normalMap,this.normalMapType=source.normalMapType,this.normalScale.copy(source.normalScale),this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this.alphaMap=source.alphaMap,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.wireframeLinecap=source.wireframeLinecap,this.wireframeLinejoin=source.wireframeLinejoin,this.fog=source.fog,this}}class MeshNormalMaterial extends Material{constructor(parameters){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(parameters)}copy(source){return super.copy(source),this.bumpMap=source.bumpMap,this.bumpScale=source.bumpScale,this.normalMap=source.normalMap,this.normalMapType=source.normalMapType,this.normalScale.copy(source.normalScale),this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.flatShading=source.flatShading,this}}class MeshLambertMaterial extends Material{constructor(parameters){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Color(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(parameters)}copy(source){return super.copy(source),this.color.copy(source.color),this.map=source.map,this.lightMap=source.lightMap,this.lightMapIntensity=source.lightMapIntensity,this.aoMap=source.aoMap,this.aoMapIntensity=source.aoMapIntensity,this.emissive.copy(source.emissive),this.emissiveMap=source.emissiveMap,this.emissiveIntensity=source.emissiveIntensity,this.bumpMap=source.bumpMap,this.bumpScale=source.bumpScale,this.normalMap=source.normalMap,this.normalMapType=source.normalMapType,this.normalScale.copy(source.normalScale),this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this.specularMap=source.specularMap,this.alphaMap=source.alphaMap,this.envMap=source.envMap,this.combine=source.combine,this.reflectivity=source.reflectivity,this.refractionRatio=source.refractionRatio,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.wireframeLinecap=source.wireframeLinecap,this.wireframeLinejoin=source.wireframeLinejoin,this.flatShading=source.flatShading,this.fog=source.fog,this}}class MeshMatcapMaterial extends Material{constructor(parameters){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Color(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(parameters)}copy(source){return super.copy(source),this.defines={MATCAP:""},this.color.copy(source.color),this.matcap=source.matcap,this.map=source.map,this.bumpMap=source.bumpMap,this.bumpScale=source.bumpScale,this.normalMap=source.normalMap,this.normalMapType=source.normalMapType,this.normalScale.copy(source.normalScale),this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this.alphaMap=source.alphaMap,this.flatShading=source.flatShading,this.fog=source.fog,this}}class LineDashedMaterial extends LineBasicMaterial{constructor(parameters){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(parameters)}copy(source){return super.copy(source),this.scale=source.scale,this.dashSize=source.dashSize,this.gapSize=source.gapSize,this}}function arraySlice(array,from,to){return isTypedArray(array)?new array.constructor(array.subarray(from,void 0!==to?to:array.length)):array.slice(from,to)}function convertArray(array,type,forceClone){return!array||!forceClone&&array.constructor===type?array:"number"==typeof type.BYTES_PER_ELEMENT?new type(array):Array.prototype.slice.call(array)}function isTypedArray(object){return ArrayBuffer.isView(object)&&!(object instanceof DataView)}function getKeyframeOrder(times){const n=times.length,result=new Array(n);for(let i=0;i!==n;++i)result[i]=i;return result.sort((function compareTime(i,j){return times[i]-times[j]})),result}function sortedArray(values,stride,order){const nValues=values.length,result=new values.constructor(nValues);for(let i=0,dstOffset=0;dstOffset!==nValues;++i){const srcOffset=order[i]*stride;for(let j=0;j!==stride;++j)result[dstOffset++]=values[srcOffset+j]}return result}function flattenJSON(jsonKeys,times,values,valuePropertyName){let i=1,key=jsonKeys[0];for(;void 0!==key&&void 0===key[valuePropertyName];)key=jsonKeys[i++];if(void 0===key)return;let value=key[valuePropertyName];if(void 0!==value)if(Array.isArray(value))do{value=key[valuePropertyName],void 0!==value&&(times.push(key.time),values.push.apply(values,value)),key=jsonKeys[i++]}while(void 0!==key);else if(void 0!==value.toArray)do{value=key[valuePropertyName],void 0!==value&&(times.push(key.time),value.toArray(values,values.length)),key=jsonKeys[i++]}while(void 0!==key);else do{value=key[valuePropertyName],void 0!==value&&(times.push(key.time),values.push(value)),key=jsonKeys[i++]}while(void 0!==key)}const AnimationUtils={arraySlice,convertArray,isTypedArray,getKeyframeOrder,sortedArray,flattenJSON,subclip:function subclip(sourceClip,name,startFrame,endFrame,fps=30){const clip=sourceClip.clone();clip.name=name;const tracks=[];for(let i=0;i<clip.tracks.length;++i){const track=clip.tracks[i],valueSize=track.getValueSize(),times=[],values=[];for(let j=0;j<track.times.length;++j){const frame=track.times[j]*fps;if(!(frame<startFrame||frame>=endFrame)){times.push(track.times[j]);for(let k=0;k<valueSize;++k)values.push(track.values[j*valueSize+k])}}0!==times.length&&(track.times=convertArray(times,track.times.constructor),track.values=convertArray(values,track.values.constructor),tracks.push(track))}clip.tracks=tracks;let minStartTime=1/0;for(let i=0;i<clip.tracks.length;++i)minStartTime>clip.tracks[i].times[0]&&(minStartTime=clip.tracks[i].times[0]);for(let i=0;i<clip.tracks.length;++i)clip.tracks[i].shift(-1*minStartTime);return clip.resetDuration(),clip},makeClipAdditive:function makeClipAdditive(targetClip,referenceFrame=0,referenceClip=targetClip,fps=30){fps<=0&&(fps=30);const numTracks=referenceClip.tracks.length,referenceTime=referenceFrame/fps;for(let i=0;i<numTracks;++i){const referenceTrack=referenceClip.tracks[i],referenceTrackType=referenceTrack.ValueTypeName;if("bool"===referenceTrackType||"string"===referenceTrackType)continue;const targetTrack=targetClip.tracks.find((function(track){return track.name===referenceTrack.name&&track.ValueTypeName===referenceTrackType}));if(void 0===targetTrack)continue;let referenceOffset=0;const referenceValueSize=referenceTrack.getValueSize();referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(referenceOffset=referenceValueSize/3);let targetOffset=0;const targetValueSize=targetTrack.getValueSize();targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(targetOffset=targetValueSize/3);const lastIndex=referenceTrack.times.length-1;let referenceValue;if(referenceTime<=referenceTrack.times[0]){const startIndex=referenceOffset,endIndex=referenceValueSize-referenceOffset;referenceValue=arraySlice(referenceTrack.values,startIndex,endIndex)}else if(referenceTime>=referenceTrack.times[lastIndex]){const startIndex=lastIndex*referenceValueSize+referenceOffset,endIndex=startIndex+referenceValueSize-referenceOffset;referenceValue=arraySlice(referenceTrack.values,startIndex,endIndex)}else{const interpolant=referenceTrack.createInterpolant(),startIndex=referenceOffset,endIndex=referenceValueSize-referenceOffset;interpolant.evaluate(referenceTime),referenceValue=arraySlice(interpolant.resultBuffer,startIndex,endIndex)}if("quaternion"===referenceTrackType){(new Quaternion).fromArray(referenceValue).normalize().conjugate().toArray(referenceValue)}const numTimes=targetTrack.times.length;for(let j=0;j<numTimes;++j){const valueStart=j*targetValueSize+targetOffset;if("quaternion"===referenceTrackType)Quaternion.multiplyQuaternionsFlat(targetTrack.values,valueStart,referenceValue,0,targetTrack.values,valueStart);else{const valueEnd=targetValueSize-2*targetOffset;for(let k=0;k<valueEnd;++k)targetTrack.values[valueStart+k]-=referenceValue[k]}}}return targetClip.blendMode=AdditiveAnimationBlendMode,targetClip}};class Interpolant{constructor(parameterPositions,sampleValues,sampleSize,resultBuffer){this.parameterPositions=parameterPositions,this._cachedIndex=0,this.resultBuffer=void 0!==resultBuffer?resultBuffer:new sampleValues.constructor(sampleSize),this.sampleValues=sampleValues,this.valueSize=sampleSize,this.settings=null,this.DefaultSettings_={}}evaluate(t){const pp=this.parameterPositions;let i1=this._cachedIndex,t1=pp[i1],t0=pp[i1-1];validate_interval:{seek:{let right;linear_scan:{forward_scan:if(!(t<t1)){for(let giveUpAt=i1+2;;){if(void 0===t1){if(t<t0)break forward_scan;return i1=pp.length,this._cachedIndex=i1,this.copySampleValue_(i1-1)}if(i1===giveUpAt)break;if(t0=t1,t1=pp[++i1],t<t1)break seek}right=pp.length;break linear_scan}if(t>=t0)break validate_interval;{const t1global=pp[1];t<t1global&&(i1=2,t0=t1global);for(let giveUpAt=i1-2;;){if(void 0===t0)return this._cachedIndex=0,this.copySampleValue_(0);if(i1===giveUpAt)break;if(t1=t0,t0=pp[--i1-1],t>=t0)break seek}right=i1,i1=0}}for(;i1<right;){const mid=i1+right>>>1;t<pp[mid]?right=mid:i1=mid+1}if(t1=pp[i1],t0=pp[i1-1],void 0===t0)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===t1)return i1=pp.length,this._cachedIndex=i1,this.copySampleValue_(i1-1)}this._cachedIndex=i1,this.intervalChanged_(i1,t0,t1)}return this.interpolate_(i1,t0,t,t1)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(index){const result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,offset=index*stride;for(let i=0;i!==stride;++i)result[i]=values[offset+i];return result}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class CubicInterpolant extends Interpolant{constructor(parameterPositions,sampleValues,sampleSize,resultBuffer){super(parameterPositions,sampleValues,sampleSize,resultBuffer),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:ZeroCurvatureEnding,endingEnd:ZeroCurvatureEnding}}intervalChanged_(i1,t0,t1){const pp=this.parameterPositions;let iPrev=i1-2,iNext=i1+1,tPrev=pp[iPrev],tNext=pp[iNext];if(void 0===tPrev)switch(this.getSettings_().endingStart){case ZeroSlopeEnding:iPrev=i1,tPrev=2*t0-t1;break;case WrapAroundEnding:iPrev=pp.length-2,tPrev=t0+pp[iPrev]-pp[iPrev+1];break;default:iPrev=i1,tPrev=t1}if(void 0===tNext)switch(this.getSettings_().endingEnd){case ZeroSlopeEnding:iNext=i1,tNext=2*t1-t0;break;case WrapAroundEnding:iNext=1,tNext=t1+pp[1]-pp[0];break;default:iNext=i1-1,tNext=t0}const halfDt=.5*(t1-t0),stride=this.valueSize;this._weightPrev=halfDt/(t0-tPrev),this._weightNext=halfDt/(tNext-t1),this._offsetPrev=iPrev*stride,this._offsetNext=iNext*stride}interpolate_(i1,t0,t,t1){const result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,o1=i1*stride,o0=o1-stride,oP=this._offsetPrev,oN=this._offsetNext,wP=this._weightPrev,wN=this._weightNext,p=(t-t0)/(t1-t0),pp=p*p,ppp=pp*p,sP=-wP*ppp+2*wP*pp-wP*p,s0=(1+wP)*ppp+(-1.5-2*wP)*pp+(-.5+wP)*p+1,s1=(-1-wN)*ppp+(1.5+wN)*pp+.5*p,sN=wN*ppp-wN*pp;for(let i=0;i!==stride;++i)result[i]=sP*values[oP+i]+s0*values[o0+i]+s1*values[o1+i]+sN*values[oN+i];return result}}class LinearInterpolant extends Interpolant{constructor(parameterPositions,sampleValues,sampleSize,resultBuffer){super(parameterPositions,sampleValues,sampleSize,resultBuffer)}interpolate_(i1,t0,t,t1){const result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,offset1=i1*stride,offset0=offset1-stride,weight1=(t-t0)/(t1-t0),weight0=1-weight1;for(let i=0;i!==stride;++i)result[i]=values[offset0+i]*weight0+values[offset1+i]*weight1;return result}}class DiscreteInterpolant extends Interpolant{constructor(parameterPositions,sampleValues,sampleSize,resultBuffer){super(parameterPositions,sampleValues,sampleSize,resultBuffer)}interpolate_(i1){return this.copySampleValue_(i1-1)}}class KeyframeTrack{constructor(name,times,values,interpolation){if(void 0===name)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===times||0===times.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+name);this.name=name,this.times=convertArray(times,this.TimeBufferType),this.values=convertArray(values,this.ValueBufferType),this.setInterpolation(interpolation||this.DefaultInterpolation)}static toJSON(track){const trackType=track.constructor;let json;if(trackType.toJSON!==this.toJSON)json=trackType.toJSON(track);else{json={name:track.name,times:convertArray(track.times,Array),values:convertArray(track.values,Array)};const interpolation=track.getInterpolation();interpolation!==track.DefaultInterpolation&&(json.interpolation=interpolation)}return json.type=track.ValueTypeName,json}InterpolantFactoryMethodDiscrete(result){return new DiscreteInterpolant(this.times,this.values,this.getValueSize(),result)}InterpolantFactoryMethodLinear(result){return new LinearInterpolant(this.times,this.values,this.getValueSize(),result)}InterpolantFactoryMethodSmooth(result){return new CubicInterpolant(this.times,this.values,this.getValueSize(),result)}setInterpolation(interpolation){let factoryMethod;switch(interpolation){case InterpolateDiscrete:factoryMethod=this.InterpolantFactoryMethodDiscrete;break;case InterpolateLinear:factoryMethod=this.InterpolantFactoryMethodLinear;break;case InterpolateSmooth:factoryMethod=this.InterpolantFactoryMethodSmooth}if(void 0===factoryMethod){const message="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(interpolation===this.DefaultInterpolation)throw new Error(message);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",message),this}return this.createInterpolant=factoryMethod,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return InterpolateDiscrete;case this.InterpolantFactoryMethodLinear:return InterpolateLinear;case this.InterpolantFactoryMethodSmooth:return InterpolateSmooth}}getValueSize(){return this.values.length/this.times.length}shift(timeOffset){if(0!==timeOffset){const times=this.times;for(let i=0,n=times.length;i!==n;++i)times[i]+=timeOffset}return this}scale(timeScale){if(1!==timeScale){const times=this.times;for(let i=0,n=times.length;i!==n;++i)times[i]*=timeScale}return this}trim(startTime,endTime){const times=this.times,nKeys=times.length;let from=0,to=nKeys-1;for(;from!==nKeys&&times[from]<startTime;)++from;for(;-1!==to&&times[to]>endTime;)--to;if(++to,0!==from||to!==nKeys){from>=to&&(to=Math.max(to,1),from=to-1);const stride=this.getValueSize();this.times=arraySlice(times,from,to),this.values=arraySlice(this.values,from*stride,to*stride)}return this}validate(){let valid=!0;const valueSize=this.getValueSize();valueSize-Math.floor(valueSize)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),valid=!1);const times=this.times,values=this.values,nKeys=times.length;0===nKeys&&(console.error("THREE.KeyframeTrack: Track is empty.",this),valid=!1);let prevTime=null;for(let i=0;i!==nKeys;i++){const currTime=times[i];if("number"==typeof currTime&&isNaN(currTime)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,i,currTime),valid=!1;break}if(null!==prevTime&&prevTime>currTime){console.error("THREE.KeyframeTrack: Out of order keys.",this,i,currTime,prevTime),valid=!1;break}prevTime=currTime}if(void 0!==values&&isTypedArray(values))for(let i=0,n=values.length;i!==n;++i){const value=values[i];if(isNaN(value)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,i,value),valid=!1;break}}return valid}optimize(){const times=arraySlice(this.times),values=arraySlice(this.values),stride=this.getValueSize(),smoothInterpolation=this.getInterpolation()===InterpolateSmooth,lastIndex=times.length-1;let writeIndex=1;for(let i=1;i<lastIndex;++i){let keep=!1;const time=times[i];if(time!==times[i+1]&&(1!==i||time!==times[0]))if(smoothInterpolation)keep=!0;else{const offset=i*stride,offsetP=offset-stride,offsetN=offset+stride;for(let j=0;j!==stride;++j){const value=values[offset+j];if(value!==values[offsetP+j]||value!==values[offsetN+j]){keep=!0;break}}}if(keep){if(i!==writeIndex){times[writeIndex]=times[i];const readOffset=i*stride,writeOffset=writeIndex*stride;for(let j=0;j!==stride;++j)values[writeOffset+j]=values[readOffset+j]}++writeIndex}}if(lastIndex>0){times[writeIndex]=times[lastIndex];for(let readOffset=lastIndex*stride,writeOffset=writeIndex*stride,j=0;j!==stride;++j)values[writeOffset+j]=values[readOffset+j];++writeIndex}return writeIndex!==times.length?(this.times=arraySlice(times,0,writeIndex),this.values=arraySlice(values,0,writeIndex*stride)):(this.times=times,this.values=values),this}clone(){const times=arraySlice(this.times,0),values=arraySlice(this.values,0),track=new(0,this.constructor)(this.name,times,values);return track.createInterpolant=this.createInterpolant,track}}KeyframeTrack.prototype.TimeBufferType=Float32Array,KeyframeTrack.prototype.ValueBufferType=Float32Array,KeyframeTrack.prototype.DefaultInterpolation=InterpolateLinear;class BooleanKeyframeTrack extends KeyframeTrack{}BooleanKeyframeTrack.prototype.ValueTypeName="bool",BooleanKeyframeTrack.prototype.ValueBufferType=Array,BooleanKeyframeTrack.prototype.DefaultInterpolation=InterpolateDiscrete,BooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear=void 0,BooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth=void 0;class ColorKeyframeTrack extends KeyframeTrack{}ColorKeyframeTrack.prototype.ValueTypeName="color";class NumberKeyframeTrack extends KeyframeTrack{}NumberKeyframeTrack.prototype.ValueTypeName="number";class QuaternionLinearInterpolant extends Interpolant{constructor(parameterPositions,sampleValues,sampleSize,resultBuffer){super(parameterPositions,sampleValues,sampleSize,resultBuffer)}interpolate_(i1,t0,t,t1){const result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,alpha=(t-t0)/(t1-t0);let offset=i1*stride;for(let end=offset+stride;offset!==end;offset+=4)Quaternion.slerpFlat(result,0,values,offset-stride,values,offset,alpha);return result}}class QuaternionKeyframeTrack extends KeyframeTrack{InterpolantFactoryMethodLinear(result){return new QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),result)}}QuaternionKeyframeTrack.prototype.ValueTypeName="quaternion",QuaternionKeyframeTrack.prototype.DefaultInterpolation=InterpolateLinear,QuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth=void 0;class StringKeyframeTrack extends KeyframeTrack{}StringKeyframeTrack.prototype.ValueTypeName="string",StringKeyframeTrack.prototype.ValueBufferType=Array,StringKeyframeTrack.prototype.DefaultInterpolation=InterpolateDiscrete,StringKeyframeTrack.prototype.InterpolantFactoryMethodLinear=void 0,StringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth=void 0;class VectorKeyframeTrack extends KeyframeTrack{}VectorKeyframeTrack.prototype.ValueTypeName="vector";class AnimationClip{constructor(name,duration=-1,tracks,blendMode=NormalAnimationBlendMode){this.name=name,this.tracks=tracks,this.duration=duration,this.blendMode=blendMode,this.uuid=generateUUID(),this.duration<0&&this.resetDuration()}static parse(json){const tracks=[],jsonTracks=json.tracks,frameTime=1/(json.fps||1);for(let i=0,n=jsonTracks.length;i!==n;++i)tracks.push(parseKeyframeTrack(jsonTracks[i]).scale(frameTime));const clip=new this(json.name,json.duration,tracks,json.blendMode);return clip.uuid=json.uuid,clip}static toJSON(clip){const tracks=[],clipTracks=clip.tracks,json={name:clip.name,duration:clip.duration,tracks,uuid:clip.uuid,blendMode:clip.blendMode};for(let i=0,n=clipTracks.length;i!==n;++i)tracks.push(KeyframeTrack.toJSON(clipTracks[i]));return json}static CreateFromMorphTargetSequence(name,morphTargetSequence,fps,noLoop){const numMorphTargets=morphTargetSequence.length,tracks=[];for(let i=0;i<numMorphTargets;i++){let times=[],values=[];times.push((i+numMorphTargets-1)%numMorphTargets,i,(i+1)%numMorphTargets),values.push(0,1,0);const order=getKeyframeOrder(times);times=sortedArray(times,1,order),values=sortedArray(values,1,order),noLoop||0!==times[0]||(times.push(numMorphTargets),values.push(values[0])),tracks.push(new NumberKeyframeTrack(".morphTargetInfluences["+morphTargetSequence[i].name+"]",times,values).scale(1/fps))}return new this(name,-1,tracks)}static findByName(objectOrClipArray,name){let clipArray=objectOrClipArray;if(!Array.isArray(objectOrClipArray)){const o=objectOrClipArray;clipArray=o.geometry&&o.geometry.animations||o.animations}for(let i=0;i<clipArray.length;i++)if(clipArray[i].name===name)return clipArray[i];return null}static CreateClipsFromMorphTargetSequences(morphTargets,fps,noLoop){const animationToMorphTargets={},pattern=/^([\w-]*?)([\d]+)$/;for(let i=0,il=morphTargets.length;i<il;i++){const morphTarget=morphTargets[i],parts=morphTarget.name.match(pattern);if(parts&&parts.length>1){const name=parts[1];let animationMorphTargets=animationToMorphTargets[name];animationMorphTargets||(animationToMorphTargets[name]=animationMorphTargets=[]),animationMorphTargets.push(morphTarget)}}const clips=[];for(const name in animationToMorphTargets)clips.push(this.CreateFromMorphTargetSequence(name,animationToMorphTargets[name],fps,noLoop));return clips}static parseAnimation(animation,bones){if(!animation)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const addNonemptyTrack=function(trackType,trackName,animationKeys,propertyName,destTracks){if(0!==animationKeys.length){const times=[],values=[];flattenJSON(animationKeys,times,values,propertyName),0!==times.length&&destTracks.push(new trackType(trackName,times,values))}},tracks=[],clipName=animation.name||"default",fps=animation.fps||30,blendMode=animation.blendMode;let duration=animation.length||-1;const hierarchyTracks=animation.hierarchy||[];for(let h=0;h<hierarchyTracks.length;h++){const animationKeys=hierarchyTracks[h].keys;if(animationKeys&&0!==animationKeys.length)if(animationKeys[0].morphTargets){const morphTargetNames={};let k;for(k=0;k<animationKeys.length;k++)if(animationKeys[k].morphTargets)for(let m=0;m<animationKeys[k].morphTargets.length;m++)morphTargetNames[animationKeys[k].morphTargets[m]]=-1;for(const morphTargetName in morphTargetNames){const times=[],values=[];for(let m=0;m!==animationKeys[k].morphTargets.length;++m){const animationKey=animationKeys[k];times.push(animationKey.time),values.push(animationKey.morphTarget===morphTargetName?1:0)}tracks.push(new NumberKeyframeTrack(".morphTargetInfluence["+morphTargetName+"]",times,values))}duration=morphTargetNames.length*fps}else{const boneName=".bones["+bones[h].name+"]";addNonemptyTrack(VectorKeyframeTrack,boneName+".position",animationKeys,"pos",tracks),addNonemptyTrack(QuaternionKeyframeTrack,boneName+".quaternion",animationKeys,"rot",tracks),addNonemptyTrack(VectorKeyframeTrack,boneName+".scale",animationKeys,"scl",tracks)}}if(0===tracks.length)return null;return new this(clipName,duration,tracks,blendMode)}resetDuration(){let duration=0;for(let i=0,n=this.tracks.length;i!==n;++i){const track=this.tracks[i];duration=Math.max(duration,track.times[track.times.length-1])}return this.duration=duration,this}trim(){for(let i=0;i<this.tracks.length;i++)this.tracks[i].trim(0,this.duration);return this}validate(){let valid=!0;for(let i=0;i<this.tracks.length;i++)valid=valid&&this.tracks[i].validate();return valid}optimize(){for(let i=0;i<this.tracks.length;i++)this.tracks[i].optimize();return this}clone(){const tracks=[];for(let i=0;i<this.tracks.length;i++)tracks.push(this.tracks[i].clone());return new this.constructor(this.name,this.duration,tracks,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function parseKeyframeTrack(json){if(void 0===json.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const trackType=function getTrackTypeForValueTypeName(typeName){switch(typeName.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return NumberKeyframeTrack;case"vector":case"vector2":case"vector3":case"vector4":return VectorKeyframeTrack;case"color":return ColorKeyframeTrack;case"quaternion":return QuaternionKeyframeTrack;case"bool":case"boolean":return BooleanKeyframeTrack;case"string":return StringKeyframeTrack}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+typeName)}(json.type);if(void 0===json.times){const times=[],values=[];flattenJSON(json.keys,times,values,"value"),json.times=times,json.values=values}return void 0!==trackType.parse?trackType.parse(json):new trackType(json.name,json.times,json.values,json.interpolation)}const Cache={enabled:!1,files:{},add:function(key,file){!1!==this.enabled&&(this.files[key]=file)},get:function(key){if(!1!==this.enabled)return this.files[key]},remove:function(key){delete this.files[key]},clear:function(){this.files={}}};class LoadingManager{constructor(onLoad,onProgress,onError){const scope=this;let urlModifier,isLoading=!1,itemsLoaded=0,itemsTotal=0;const handlers=[];this.onStart=void 0,this.onLoad=onLoad,this.onProgress=onProgress,this.onError=onError,this.itemStart=function(url){itemsTotal++,!1===isLoading&&void 0!==scope.onStart&&scope.onStart(url,itemsLoaded,itemsTotal),isLoading=!0},this.itemEnd=function(url){itemsLoaded++,void 0!==scope.onProgress&&scope.onProgress(url,itemsLoaded,itemsTotal),itemsLoaded===itemsTotal&&(isLoading=!1,void 0!==scope.onLoad&&scope.onLoad())},this.itemError=function(url){void 0!==scope.onError&&scope.onError(url)},this.resolveURL=function(url){return urlModifier?urlModifier(url):url},this.setURLModifier=function(transform){return urlModifier=transform,this},this.addHandler=function(regex,loader){return handlers.push(regex,loader),this},this.removeHandler=function(regex){const index=handlers.indexOf(regex);return-1!==index&&handlers.splice(index,2),this},this.getHandler=function(file){for(let i=0,l=handlers.length;i<l;i+=2){const regex=handlers[i],loader=handlers[i+1];if(regex.global&&(regex.lastIndex=0),regex.test(file))return loader}return null}}}const DefaultLoadingManager=new LoadingManager;class Loader{constructor(manager){this.manager=void 0!==manager?manager:DefaultLoadingManager,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(url,onProgress){const scope=this;return new Promise((function(resolve,reject){scope.load(url,resolve,onProgress,reject)}))}parse(){}setCrossOrigin(crossOrigin){return this.crossOrigin=crossOrigin,this}setWithCredentials(value){return this.withCredentials=value,this}setPath(path){return this.path=path,this}setResourcePath(resourcePath){return this.resourcePath=resourcePath,this}setRequestHeader(requestHeader){return this.requestHeader=requestHeader,this}}const loading={};class HttpError extends Error{constructor(message,response){super(message),this.response=response}}class FileLoader extends Loader{constructor(manager){super(manager)}load(url,onLoad,onProgress,onError){void 0===url&&(url=""),void 0!==this.path&&(url=this.path+url),url=this.manager.resolveURL(url);const cached=Cache.get(url);if(void 0!==cached)return this.manager.itemStart(url),setTimeout((()=>{onLoad&&onLoad(cached),this.manager.itemEnd(url)}),0),cached;if(void 0!==loading[url])return void loading[url].push({onLoad,onProgress,onError});loading[url]=[],loading[url].push({onLoad,onProgress,onError});const req=new Request(url,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),mimeType=this.mimeType,responseType=this.responseType;fetch(req).then((response=>{if(200===response.status||0===response.status){if(0===response.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===response.body||void 0===response.body.getReader)return response;const callbacks=loading[url],reader=response.body.getReader(),contentLength=response.headers.get("Content-Length")||response.headers.get("X-File-Size"),total=contentLength?parseInt(contentLength):0,lengthComputable=0!==total;let loaded=0;const stream=new ReadableStream({start(controller){!function readData(){reader.read().then((({done,value})=>{if(done)controller.close();else{loaded+=value.byteLength;const event=new ProgressEvent("progress",{lengthComputable,loaded,total});for(let i=0,il=callbacks.length;i<il;i++){const callback=callbacks[i];callback.onProgress&&callback.onProgress(event)}controller.enqueue(value),readData()}}))}()}});return new Response(stream)}throw new HttpError(`fetch for "${response.url}" responded with ${response.status}: ${response.statusText}`,response)})).then((response=>{switch(responseType){case"arraybuffer":return response.arrayBuffer();case"blob":return response.blob();case"document":return response.text().then((text=>(new DOMParser).parseFromString(text,mimeType)));case"json":return response.json();default:if(void 0===mimeType)return response.text();{const exec=/charset="?([^;"\s]*)"?/i.exec(mimeType),label=exec&&exec[1]?exec[1].toLowerCase():void 0,decoder=new TextDecoder(label);return response.arrayBuffer().then((ab=>decoder.decode(ab)))}}})).then((data=>{Cache.add(url,data);const callbacks=loading[url];delete loading[url];for(let i=0,il=callbacks.length;i<il;i++){const callback=callbacks[i];callback.onLoad&&callback.onLoad(data)}})).catch((err=>{const callbacks=loading[url];if(void 0===callbacks)throw this.manager.itemError(url),err;delete loading[url];for(let i=0,il=callbacks.length;i<il;i++){const callback=callbacks[i];callback.onError&&callback.onError(err)}this.manager.itemError(url)})).finally((()=>{this.manager.itemEnd(url)})),this.manager.itemStart(url)}setResponseType(value){return this.responseType=value,this}setMimeType(value){return this.mimeType=value,this}}class AnimationLoader extends Loader{constructor(manager){super(manager)}load(url,onLoad,onProgress,onError){const scope=this,loader=new FileLoader(this.manager);loader.setPath(this.path),loader.setRequestHeader(this.requestHeader),loader.setWithCredentials(this.withCredentials),loader.load(url,(function(text){try{onLoad(scope.parse(JSON.parse(text)))}catch(e){onError?onError(e):console.error(e),scope.manager.itemError(url)}}),onProgress,onError)}parse(json){const animations=[];for(let i=0;i<json.length;i++){const clip=AnimationClip.parse(json[i]);animations.push(clip)}return animations}}class CompressedTextureLoader extends Loader{constructor(manager){super(manager)}load(url,onLoad,onProgress,onError){const scope=this,images=[],texture=new CompressedTexture,loader=new FileLoader(this.manager);loader.setPath(this.path),loader.setResponseType("arraybuffer"),loader.setRequestHeader(this.requestHeader),loader.setWithCredentials(scope.withCredentials);let loaded=0;function loadTexture(i){loader.load(url[i],(function(buffer){const texDatas=scope.parse(buffer,!0);images[i]={width:texDatas.width,height:texDatas.height,format:texDatas.format,mipmaps:texDatas.mipmaps},loaded+=1,6===loaded&&(1===texDatas.mipmapCount&&(texture.minFilter=LinearFilter),texture.image=images,texture.format=texDatas.format,texture.needsUpdate=!0,onLoad&&onLoad(texture))}),onProgress,onError)}if(Array.isArray(url))for(let i=0,il=url.length;i<il;++i)loadTexture(i);else loader.load(url,(function(buffer){const texDatas=scope.parse(buffer,!0);if(texDatas.isCubemap){const faces=texDatas.mipmaps.length/texDatas.mipmapCount;for(let f=0;f<faces;f++){images[f]={mipmaps:[]};for(let i=0;i<texDatas.mipmapCount;i++)images[f].mipmaps.push(texDatas.mipmaps[f*texDatas.mipmapCount+i]),images[f].format=texDatas.format,images[f].width=texDatas.width,images[f].height=texDatas.height}texture.image=images}else texture.image.width=texDatas.width,texture.image.height=texDatas.height,texture.mipmaps=texDatas.mipmaps;1===texDatas.mipmapCount&&(texture.minFilter=LinearFilter),texture.format=texDatas.format,texture.needsUpdate=!0,onLoad&&onLoad(texture)}),onProgress,onError);return texture}}class ImageLoader extends Loader{constructor(manager){super(manager)}load(url,onLoad,onProgress,onError){void 0!==this.path&&(url=this.path+url),url=this.manager.resolveURL(url);const scope=this,cached=Cache.get(url);if(void 0!==cached)return scope.manager.itemStart(url),setTimeout((function(){onLoad&&onLoad(cached),scope.manager.itemEnd(url)}),0),cached;const image=createElementNS("img");function onImageLoad(){removeEventListeners(),Cache.add(url,this),onLoad&&onLoad(this),scope.manager.itemEnd(url)}function onImageError(event){removeEventListeners(),onError&&onError(event),scope.manager.itemError(url),scope.manager.itemEnd(url)}function removeEventListeners(){image.removeEventListener("load",onImageLoad,!1),image.removeEventListener("error",onImageError,!1)}return image.addEventListener("load",onImageLoad,!1),image.addEventListener("error",onImageError,!1),"data:"!==url.slice(0,5)&&void 0!==this.crossOrigin&&(image.crossOrigin=this.crossOrigin),scope.manager.itemStart(url),image.src=url,image}}class CubeTextureLoader extends Loader{constructor(manager){super(manager)}load(urls,onLoad,onProgress,onError){const texture=new CubeTexture,loader=new ImageLoader(this.manager);loader.setCrossOrigin(this.crossOrigin),loader.setPath(this.path);let loaded=0;function loadTexture(i){loader.load(urls[i],(function(image){texture.images[i]=image,loaded++,6===loaded&&(texture.needsUpdate=!0,onLoad&&onLoad(texture))}),void 0,onError)}for(let i=0;i<urls.length;++i)loadTexture(i);return texture}}class DataTextureLoader extends Loader{constructor(manager){super(manager)}load(url,onLoad,onProgress,onError){const scope=this,texture=new DataTexture,loader=new FileLoader(this.manager);return loader.setResponseType("arraybuffer"),loader.setRequestHeader(this.requestHeader),loader.setPath(this.path),loader.setWithCredentials(scope.withCredentials),loader.load(url,(function(buffer){const texData=scope.parse(buffer);texData&&(void 0!==texData.image?texture.image=texData.image:void 0!==texData.data&&(texture.image.width=texData.width,texture.image.height=texData.height,texture.image.data=texData.data),texture.wrapS=void 0!==texData.wrapS?texData.wrapS:ClampToEdgeWrapping,texture.wrapT=void 0!==texData.wrapT?texData.wrapT:ClampToEdgeWrapping,texture.magFilter=void 0!==texData.magFilter?texData.magFilter:LinearFilter,texture.minFilter=void 0!==texData.minFilter?texData.minFilter:LinearFilter,texture.anisotropy=void 0!==texData.anisotropy?texData.anisotropy:1,void 0!==texData.colorSpace?texture.colorSpace=texData.colorSpace:void 0!==texData.encoding&&(texture.encoding=texData.encoding),void 0!==texData.flipY&&(texture.flipY=texData.flipY),void 0!==texData.format&&(texture.format=texData.format),void 0!==texData.type&&(texture.type=texData.type),void 0!==texData.mipmaps&&(texture.mipmaps=texData.mipmaps,texture.minFilter=LinearMipmapLinearFilter),1===texData.mipmapCount&&(texture.minFilter=LinearFilter),void 0!==texData.generateMipmaps&&(texture.generateMipmaps=texData.generateMipmaps),texture.needsUpdate=!0,onLoad&&onLoad(texture,texData))}),onProgress,onError),texture}}class TextureLoader extends Loader{constructor(manager){super(manager)}load(url,onLoad,onProgress,onError){const texture=new Texture,loader=new ImageLoader(this.manager);return loader.setCrossOrigin(this.crossOrigin),loader.setPath(this.path),loader.load(url,(function(image){texture.image=image,texture.needsUpdate=!0,void 0!==onLoad&&onLoad(texture)}),onProgress,onError),texture}}class Light extends Object3D{constructor(color,intensity=1){super(),this.isLight=!0,this.type="Light",this.color=new Color(color),this.intensity=intensity}dispose(){}copy(source,recursive){return super.copy(source,recursive),this.color.copy(source.color),this.intensity=source.intensity,this}toJSON(meta){const data=super.toJSON(meta);return data.object.color=this.color.getHex(),data.object.intensity=this.intensity,void 0!==this.groundColor&&(data.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(data.object.distance=this.distance),void 0!==this.angle&&(data.object.angle=this.angle),void 0!==this.decay&&(data.object.decay=this.decay),void 0!==this.penumbra&&(data.object.penumbra=this.penumbra),void 0!==this.shadow&&(data.object.shadow=this.shadow.toJSON()),data}}class HemisphereLight extends Light{constructor(skyColor,groundColor,intensity){super(skyColor,intensity),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Object3D.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Color(groundColor)}copy(source,recursive){return super.copy(source,recursive),this.groundColor.copy(source.groundColor),this}}const _projScreenMatrix$1=new Matrix4,_lightPositionWorld$1=new Vector3,_lookTarget$1=new Vector3;class LightShadow{constructor(camera){this.camera=camera,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Vector2(512,512),this.map=null,this.mapPass=null,this.matrix=new Matrix4,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Frustum,this._frameExtents=new Vector2(1,1),this._viewportCount=1,this._viewports=[new Vector4(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(light){const shadowCamera=this.camera,shadowMatrix=this.matrix;_lightPositionWorld$1.setFromMatrixPosition(light.matrixWorld),shadowCamera.position.copy(_lightPositionWorld$1),_lookTarget$1.setFromMatrixPosition(light.target.matrixWorld),shadowCamera.lookAt(_lookTarget$1),shadowCamera.updateMatrixWorld(),_projScreenMatrix$1.multiplyMatrices(shadowCamera.projectionMatrix,shadowCamera.matrixWorldInverse),this._frustum.setFromProjectionMatrix(_projScreenMatrix$1),shadowMatrix.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),shadowMatrix.multiply(_projScreenMatrix$1)}getViewport(viewportIndex){return this._viewports[viewportIndex]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(source){return this.camera=source.camera.clone(),this.bias=source.bias,this.radius=source.radius,this.mapSize.copy(source.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const object={};return 0!==this.bias&&(object.bias=this.bias),0!==this.normalBias&&(object.normalBias=this.normalBias),1!==this.radius&&(object.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(object.mapSize=this.mapSize.toArray()),object.camera=this.camera.toJSON(!1).object,delete object.camera.matrix,object}}class SpotLightShadow extends LightShadow{constructor(){super(new PerspectiveCamera(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(light){const camera=this.camera,fov=2*RAD2DEG*light.angle*this.focus,aspect=this.mapSize.width/this.mapSize.height,far=light.distance||camera.far;fov===camera.fov&&aspect===camera.aspect&&far===camera.far||(camera.fov=fov,camera.aspect=aspect,camera.far=far,camera.updateProjectionMatrix()),super.updateMatrices(light)}copy(source){return super.copy(source),this.focus=source.focus,this}}class SpotLight extends Light{constructor(color,intensity,distance=0,angle=Math.PI/3,penumbra=0,decay=2){super(color,intensity),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Object3D.DEFAULT_UP),this.updateMatrix(),this.target=new Object3D,this.distance=distance,this.angle=angle,this.penumbra=penumbra,this.decay=decay,this.map=null,this.shadow=new SpotLightShadow}get power(){return this.intensity*Math.PI}set power(power){this.intensity=power/Math.PI}dispose(){this.shadow.dispose()}copy(source,recursive){return super.copy(source,recursive),this.distance=source.distance,this.angle=source.angle,this.penumbra=source.penumbra,this.decay=source.decay,this.target=source.target.clone(),this.shadow=source.shadow.clone(),this}}const _projScreenMatrix=new Matrix4,_lightPositionWorld=new Vector3,_lookTarget=new Vector3;class PointLightShadow extends LightShadow{constructor(){super(new PerspectiveCamera(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new Vector2(4,2),this._viewportCount=6,this._viewports=[new Vector4(2,1,1,1),new Vector4(0,1,1,1),new Vector4(3,1,1,1),new Vector4(1,1,1,1),new Vector4(3,0,1,1),new Vector4(1,0,1,1)],this._cubeDirections=[new Vector3(1,0,0),new Vector3(-1,0,0),new Vector3(0,0,1),new Vector3(0,0,-1),new Vector3(0,1,0),new Vector3(0,-1,0)],this._cubeUps=[new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,0,1),new Vector3(0,0,-1)]}updateMatrices(light,viewportIndex=0){const camera=this.camera,shadowMatrix=this.matrix,far=light.distance||camera.far;far!==camera.far&&(camera.far=far,camera.updateProjectionMatrix()),_lightPositionWorld.setFromMatrixPosition(light.matrixWorld),camera.position.copy(_lightPositionWorld),_lookTarget.copy(camera.position),_lookTarget.add(this._cubeDirections[viewportIndex]),camera.up.copy(this._cubeUps[viewportIndex]),camera.lookAt(_lookTarget),camera.updateMatrixWorld(),shadowMatrix.makeTranslation(-_lightPositionWorld.x,-_lightPositionWorld.y,-_lightPositionWorld.z),_projScreenMatrix.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse),this._frustum.setFromProjectionMatrix(_projScreenMatrix)}}class PointLight extends Light{constructor(color,intensity,distance=0,decay=2){super(color,intensity),this.isPointLight=!0,this.type="PointLight",this.distance=distance,this.decay=decay,this.shadow=new PointLightShadow}get power(){return 4*this.intensity*Math.PI}set power(power){this.intensity=power/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(source,recursive){return super.copy(source,recursive),this.distance=source.distance,this.decay=source.decay,this.shadow=source.shadow.clone(),this}}class DirectionalLightShadow extends LightShadow{constructor(){super(new OrthographicCamera(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class DirectionalLight extends Light{constructor(color,intensity){super(color,intensity),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Object3D.DEFAULT_UP),this.updateMatrix(),this.target=new Object3D,this.shadow=new DirectionalLightShadow}dispose(){this.shadow.dispose()}copy(source){return super.copy(source),this.target=source.target.clone(),this.shadow=source.shadow.clone(),this}}class AmbientLight extends Light{constructor(color,intensity){super(color,intensity),this.isAmbientLight=!0,this.type="AmbientLight"}}class RectAreaLight extends Light{constructor(color,intensity,width=10,height=10){super(color,intensity),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=width,this.height=height}get power(){return this.intensity*this.width*this.height*Math.PI}set power(power){this.intensity=power/(this.width*this.height*Math.PI)}copy(source){return super.copy(source),this.width=source.width,this.height=source.height,this}toJSON(meta){const data=super.toJSON(meta);return data.object.width=this.width,data.object.height=this.height,data}}class SphericalHarmonics3{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let i=0;i<9;i++)this.coefficients.push(new Vector3)}set(coefficients){for(let i=0;i<9;i++)this.coefficients[i].copy(coefficients[i]);return this}zero(){for(let i=0;i<9;i++)this.coefficients[i].set(0,0,0);return this}getAt(normal,target){const x=normal.x,y=normal.y,z=normal.z,coeff=this.coefficients;return target.copy(coeff[0]).multiplyScalar(.282095),target.addScaledVector(coeff[1],.488603*y),target.addScaledVector(coeff[2],.488603*z),target.addScaledVector(coeff[3],.488603*x),target.addScaledVector(coeff[4],x*y*1.092548),target.addScaledVector(coeff[5],y*z*1.092548),target.addScaledVector(coeff[6],.315392*(3*z*z-1)),target.addScaledVector(coeff[7],x*z*1.092548),target.addScaledVector(coeff[8],.546274*(x*x-y*y)),target}getIrradianceAt(normal,target){const x=normal.x,y=normal.y,z=normal.z,coeff=this.coefficients;return target.copy(coeff[0]).multiplyScalar(.886227),target.addScaledVector(coeff[1],1.023328*y),target.addScaledVector(coeff[2],1.023328*z),target.addScaledVector(coeff[3],1.023328*x),target.addScaledVector(coeff[4],.858086*x*y),target.addScaledVector(coeff[5],.858086*y*z),target.addScaledVector(coeff[6],.743125*z*z-.247708),target.addScaledVector(coeff[7],.858086*x*z),target.addScaledVector(coeff[8],.429043*(x*x-y*y)),target}add(sh){for(let i=0;i<9;i++)this.coefficients[i].add(sh.coefficients[i]);return this}addScaledSH(sh,s){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(sh.coefficients[i],s);return this}scale(s){for(let i=0;i<9;i++)this.coefficients[i].multiplyScalar(s);return this}lerp(sh,alpha){for(let i=0;i<9;i++)this.coefficients[i].lerp(sh.coefficients[i],alpha);return this}equals(sh){for(let i=0;i<9;i++)if(!this.coefficients[i].equals(sh.coefficients[i]))return!1;return!0}copy(sh){return this.set(sh.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(array,offset=0){const coefficients=this.coefficients;for(let i=0;i<9;i++)coefficients[i].fromArray(array,offset+3*i);return this}toArray(array=[],offset=0){const coefficients=this.coefficients;for(let i=0;i<9;i++)coefficients[i].toArray(array,offset+3*i);return array}static getBasisAt(normal,shBasis){const x=normal.x,y=normal.y,z=normal.z;shBasis[0]=.282095,shBasis[1]=.488603*y,shBasis[2]=.488603*z,shBasis[3]=.488603*x,shBasis[4]=1.092548*x*y,shBasis[5]=1.092548*y*z,shBasis[6]=.315392*(3*z*z-1),shBasis[7]=1.092548*x*z,shBasis[8]=.546274*(x*x-y*y)}}class LightProbe extends Light{constructor(sh=new SphericalHarmonics3,intensity=1){super(void 0,intensity),this.isLightProbe=!0,this.sh=sh}copy(source){return super.copy(source),this.sh.copy(source.sh),this}fromJSON(json){return this.intensity=json.intensity,this.sh.fromArray(json.sh),this}toJSON(meta){const data=super.toJSON(meta);return data.object.sh=this.sh.toArray(),data}}class MaterialLoader extends Loader{constructor(manager){super(manager),this.textures={}}load(url,onLoad,onProgress,onError){const scope=this,loader=new FileLoader(scope.manager);loader.setPath(scope.path),loader.setRequestHeader(scope.requestHeader),loader.setWithCredentials(scope.withCredentials),loader.load(url,(function(text){try{onLoad(scope.parse(JSON.parse(text)))}catch(e){onError?onError(e):console.error(e),scope.manager.itemError(url)}}),onProgress,onError)}parse(json){const textures=this.textures;function getTexture(name){return void 0===textures[name]&&console.warn("THREE.MaterialLoader: Undefined texture",name),textures[name]}const material=MaterialLoader.createMaterialFromType(json.type);if(void 0!==json.uuid&&(material.uuid=json.uuid),void 0!==json.name&&(material.name=json.name),void 0!==json.color&&void 0!==material.color&&material.color.setHex(json.color),void 0!==json.roughness&&(material.roughness=json.roughness),void 0!==json.metalness&&(material.metalness=json.metalness),void 0!==json.sheen&&(material.sheen=json.sheen),void 0!==json.sheenColor&&(material.sheenColor=(new Color).setHex(json.sheenColor)),void 0!==json.sheenRoughness&&(material.sheenRoughness=json.sheenRoughness),void 0!==json.emissive&&void 0!==material.emissive&&material.emissive.setHex(json.emissive),void 0!==json.specular&&void 0!==material.specular&&material.specular.setHex(json.specular),void 0!==json.specularIntensity&&(material.specularIntensity=json.specularIntensity),void 0!==json.specularColor&&void 0!==material.specularColor&&material.specularColor.setHex(json.specularColor),void 0!==json.shininess&&(material.shininess=json.shininess),void 0!==json.clearcoat&&(material.clearcoat=json.clearcoat),void 0!==json.clearcoatRoughness&&(material.clearcoatRoughness=json.clearcoatRoughness),void 0!==json.iridescence&&(material.iridescence=json.iridescence),void 0!==json.iridescenceIOR&&(material.iridescenceIOR=json.iridescenceIOR),void 0!==json.iridescenceThicknessRange&&(material.iridescenceThicknessRange=json.iridescenceThicknessRange),void 0!==json.transmission&&(material.transmission=json.transmission),void 0!==json.thickness&&(material.thickness=json.thickness),void 0!==json.attenuationDistance&&(material.attenuationDistance=json.attenuationDistance),void 0!==json.attenuationColor&&void 0!==material.attenuationColor&&material.attenuationColor.setHex(json.attenuationColor),void 0!==json.fog&&(material.fog=json.fog),void 0!==json.flatShading&&(material.flatShading=json.flatShading),void 0!==json.blending&&(material.blending=json.blending),void 0!==json.combine&&(material.combine=json.combine),void 0!==json.side&&(material.side=json.side),void 0!==json.shadowSide&&(material.shadowSide=json.shadowSide),void 0!==json.opacity&&(material.opacity=json.opacity),void 0!==json.transparent&&(material.transparent=json.transparent),void 0!==json.alphaTest&&(material.alphaTest=json.alphaTest),void 0!==json.depthTest&&(material.depthTest=json.depthTest),void 0!==json.depthWrite&&(material.depthWrite=json.depthWrite),void 0!==json.colorWrite&&(material.colorWrite=json.colorWrite),void 0!==json.stencilWrite&&(material.stencilWrite=json.stencilWrite),void 0!==json.stencilWriteMask&&(material.stencilWriteMask=json.stencilWriteMask),void 0!==json.stencilFunc&&(material.stencilFunc=json.stencilFunc),void 0!==json.stencilRef&&(material.stencilRef=json.stencilRef),void 0!==json.stencilFuncMask&&(material.stencilFuncMask=json.stencilFuncMask),void 0!==json.stencilFail&&(material.stencilFail=json.stencilFail),void 0!==json.stencilZFail&&(material.stencilZFail=json.stencilZFail),void 0!==json.stencilZPass&&(material.stencilZPass=json.stencilZPass),void 0!==json.wireframe&&(material.wireframe=json.wireframe),void 0!==json.wireframeLinewidth&&(material.wireframeLinewidth=json.wireframeLinewidth),void 0!==json.wireframeLinecap&&(material.wireframeLinecap=json.wireframeLinecap),void 0!==json.wireframeLinejoin&&(material.wireframeLinejoin=json.wireframeLinejoin),void 0!==json.rotation&&(material.rotation=json.rotation),1!==json.linewidth&&(material.linewidth=json.linewidth),void 0!==json.dashSize&&(material.dashSize=json.dashSize),void 0!==json.gapSize&&(material.gapSize=json.gapSize),void 0!==json.scale&&(material.scale=json.scale),void 0!==json.polygonOffset&&(material.polygonOffset=json.polygonOffset),void 0!==json.polygonOffsetFactor&&(material.polygonOffsetFactor=json.polygonOffsetFactor),void 0!==json.polygonOffsetUnits&&(material.polygonOffsetUnits=json.polygonOffsetUnits),void 0!==json.dithering&&(material.dithering=json.dithering),void 0!==json.alphaToCoverage&&(material.alphaToCoverage=json.alphaToCoverage),void 0!==json.premultipliedAlpha&&(material.premultipliedAlpha=json.premultipliedAlpha),void 0!==json.forceSinglePass&&(material.forceSinglePass=json.forceSinglePass),void 0!==json.visible&&(material.visible=json.visible),void 0!==json.toneMapped&&(material.toneMapped=json.toneMapped),void 0!==json.userData&&(material.userData=json.userData),void 0!==json.vertexColors&&("number"==typeof json.vertexColors?material.vertexColors=json.vertexColors>0:material.vertexColors=json.vertexColors),void 0!==json.uniforms)for(const name in json.uniforms){const uniform=json.uniforms[name];switch(material.uniforms[name]={},uniform.type){case"t":material.uniforms[name].value=getTexture(uniform.value);break;case"c":material.uniforms[name].value=(new Color).setHex(uniform.value);break;case"v2":material.uniforms[name].value=(new Vector2).fromArray(uniform.value);break;case"v3":material.uniforms[name].value=(new Vector3).fromArray(uniform.value);break;case"v4":material.uniforms[name].value=(new Vector4).fromArray(uniform.value);break;case"m3":material.uniforms[name].value=(new Matrix3).fromArray(uniform.value);break;case"m4":material.uniforms[name].value=(new Matrix4).fromArray(uniform.value);break;default:material.uniforms[name].value=uniform.value}}if(void 0!==json.defines&&(material.defines=json.defines),void 0!==json.vertexShader&&(material.vertexShader=json.vertexShader),void 0!==json.fragmentShader&&(material.fragmentShader=json.fragmentShader),void 0!==json.glslVersion&&(material.glslVersion=json.glslVersion),void 0!==json.extensions)for(const key in json.extensions)material.extensions[key]=json.extensions[key];if(void 0!==json.lights&&(material.lights=json.lights),void 0!==json.clipping&&(material.clipping=json.clipping),void 0!==json.size&&(material.size=json.size),void 0!==json.sizeAttenuation&&(material.sizeAttenuation=json.sizeAttenuation),void 0!==json.map&&(material.map=getTexture(json.map)),void 0!==json.matcap&&(material.matcap=getTexture(json.matcap)),void 0!==json.alphaMap&&(material.alphaMap=getTexture(json.alphaMap)),void 0!==json.bumpMap&&(material.bumpMap=getTexture(json.bumpMap)),void 0!==json.bumpScale&&(material.bumpScale=json.bumpScale),void 0!==json.normalMap&&(material.normalMap=getTexture(json.normalMap)),void 0!==json.normalMapType&&(material.normalMapType=json.normalMapType),void 0!==json.normalScale){let normalScale=json.normalScale;!1===Array.isArray(normalScale)&&(normalScale=[normalScale,normalScale]),material.normalScale=(new Vector2).fromArray(normalScale)}return void 0!==json.displacementMap&&(material.displacementMap=getTexture(json.displacementMap)),void 0!==json.displacementScale&&(material.displacementScale=json.displacementScale),void 0!==json.displacementBias&&(material.displacementBias=json.displacementBias),void 0!==json.roughnessMap&&(material.roughnessMap=getTexture(json.roughnessMap)),void 0!==json.metalnessMap&&(material.metalnessMap=getTexture(json.metalnessMap)),void 0!==json.emissiveMap&&(material.emissiveMap=getTexture(json.emissiveMap)),void 0!==json.emissiveIntensity&&(material.emissiveIntensity=json.emissiveIntensity),void 0!==json.specularMap&&(material.specularMap=getTexture(json.specularMap)),void 0!==json.specularIntensityMap&&(material.specularIntensityMap=getTexture(json.specularIntensityMap)),void 0!==json.specularColorMap&&(material.specularColorMap=getTexture(json.specularColorMap)),void 0!==json.envMap&&(material.envMap=getTexture(json.envMap)),void 0!==json.envMapIntensity&&(material.envMapIntensity=json.envMapIntensity),void 0!==json.reflectivity&&(material.reflectivity=json.reflectivity),void 0!==json.refractionRatio&&(material.refractionRatio=json.refractionRatio),void 0!==json.lightMap&&(material.lightMap=getTexture(json.lightMap)),void 0!==json.lightMapIntensity&&(material.lightMapIntensity=json.lightMapIntensity),void 0!==json.aoMap&&(material.aoMap=getTexture(json.aoMap)),void 0!==json.aoMapIntensity&&(material.aoMapIntensity=json.aoMapIntensity),void 0!==json.gradientMap&&(material.gradientMap=getTexture(json.gradientMap)),void 0!==json.clearcoatMap&&(material.clearcoatMap=getTexture(json.clearcoatMap)),void 0!==json.clearcoatRoughnessMap&&(material.clearcoatRoughnessMap=getTexture(json.clearcoatRoughnessMap)),void 0!==json.clearcoatNormalMap&&(material.clearcoatNormalMap=getTexture(json.clearcoatNormalMap)),void 0!==json.clearcoatNormalScale&&(material.clearcoatNormalScale=(new Vector2).fromArray(json.clearcoatNormalScale)),void 0!==json.iridescenceMap&&(material.iridescenceMap=getTexture(json.iridescenceMap)),void 0!==json.iridescenceThicknessMap&&(material.iridescenceThicknessMap=getTexture(json.iridescenceThicknessMap)),void 0!==json.transmissionMap&&(material.transmissionMap=getTexture(json.transmissionMap)),void 0!==json.thicknessMap&&(material.thicknessMap=getTexture(json.thicknessMap)),void 0!==json.sheenColorMap&&(material.sheenColorMap=getTexture(json.sheenColorMap)),void 0!==json.sheenRoughnessMap&&(material.sheenRoughnessMap=getTexture(json.sheenRoughnessMap)),material}setTextures(value){return this.textures=value,this}static createMaterialFromType(type){return new{ShadowMaterial,SpriteMaterial,RawShaderMaterial,ShaderMaterial,PointsMaterial,MeshPhysicalMaterial,MeshStandardMaterial,MeshPhongMaterial,MeshToonMaterial,MeshNormalMaterial,MeshLambertMaterial,MeshDepthMaterial,MeshDistanceMaterial,MeshBasicMaterial,MeshMatcapMaterial,LineDashedMaterial,LineBasicMaterial,Material}[type]}}class LoaderUtils{static decodeText(array){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(array);let s="";for(let i=0,il=array.length;i<il;i++)s+=String.fromCharCode(array[i]);try{return decodeURIComponent(escape(s))}catch(e){return s}}static extractUrlBase(url){const index=url.lastIndexOf("/");return-1===index?"./":url.slice(0,index+1)}static resolveURL(url,path){return"string"!=typeof url||""===url?"":(/^https?:\/\//i.test(path)&&/^\//.test(url)&&(path=path.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(url)||/^data:.*,.*$/i.test(url)||/^blob:.*$/i.test(url)?url:path+url)}}class InstancedBufferGeometry extends BufferGeometry{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(source){return super.copy(source),this.instanceCount=source.instanceCount,this}toJSON(){const data=super.toJSON();return data.instanceCount=this.instanceCount,data.isInstancedBufferGeometry=!0,data}}class BufferGeometryLoader extends Loader{constructor(manager){super(manager)}load(url,onLoad,onProgress,onError){const scope=this,loader=new FileLoader(scope.manager);loader.setPath(scope.path),loader.setRequestHeader(scope.requestHeader),loader.setWithCredentials(scope.withCredentials),loader.load(url,(function(text){try{onLoad(scope.parse(JSON.parse(text)))}catch(e){onError?onError(e):console.error(e),scope.manager.itemError(url)}}),onProgress,onError)}parse(json){const interleavedBufferMap={},arrayBufferMap={};function getInterleavedBuffer(json,uuid){if(void 0!==interleavedBufferMap[uuid])return interleavedBufferMap[uuid];const interleavedBuffer=json.interleavedBuffers[uuid],buffer=function getArrayBuffer(json,uuid){if(void 0!==arrayBufferMap[uuid])return arrayBufferMap[uuid];const arrayBuffers=json.arrayBuffers,arrayBuffer=arrayBuffers[uuid],ab=new Uint32Array(arrayBuffer).buffer;return arrayBufferMap[uuid]=ab,ab}(json,interleavedBuffer.buffer),array=getTypedArray(interleavedBuffer.type,buffer),ib=new InterleavedBuffer(array,interleavedBuffer.stride);return ib.uuid=interleavedBuffer.uuid,interleavedBufferMap[uuid]=ib,ib}const geometry=json.isInstancedBufferGeometry?new InstancedBufferGeometry:new BufferGeometry,index=json.data.index;if(void 0!==index){const typedArray=getTypedArray(index.type,index.array);geometry.setIndex(new BufferAttribute(typedArray,1))}const attributes=json.data.attributes;for(const key in attributes){const attribute=attributes[key];let bufferAttribute;if(attribute.isInterleavedBufferAttribute){const interleavedBuffer=getInterleavedBuffer(json.data,attribute.data);bufferAttribute=new InterleavedBufferAttribute(interleavedBuffer,attribute.itemSize,attribute.offset,attribute.normalized)}else{const typedArray=getTypedArray(attribute.type,attribute.array);bufferAttribute=new(attribute.isInstancedBufferAttribute?InstancedBufferAttribute:BufferAttribute)(typedArray,attribute.itemSize,attribute.normalized)}void 0!==attribute.name&&(bufferAttribute.name=attribute.name),void 0!==attribute.usage&&bufferAttribute.setUsage(attribute.usage),void 0!==attribute.updateRange&&(bufferAttribute.updateRange.offset=attribute.updateRange.offset,bufferAttribute.updateRange.count=attribute.updateRange.count),geometry.setAttribute(key,bufferAttribute)}const morphAttributes=json.data.morphAttributes;if(morphAttributes)for(const key in morphAttributes){const attributeArray=morphAttributes[key],array=[];for(let i=0,il=attributeArray.length;i<il;i++){const attribute=attributeArray[i];let bufferAttribute;if(attribute.isInterleavedBufferAttribute){const interleavedBuffer=getInterleavedBuffer(json.data,attribute.data);bufferAttribute=new InterleavedBufferAttribute(interleavedBuffer,attribute.itemSize,attribute.offset,attribute.normalized)}else{const typedArray=getTypedArray(attribute.type,attribute.array);bufferAttribute=new BufferAttribute(typedArray,attribute.itemSize,attribute.normalized)}void 0!==attribute.name&&(bufferAttribute.name=attribute.name),array.push(bufferAttribute)}geometry.morphAttributes[key]=array}json.data.morphTargetsRelative&&(geometry.morphTargetsRelative=!0);const groups=json.data.groups||json.data.drawcalls||json.data.offsets;if(void 0!==groups)for(let i=0,n=groups.length;i!==n;++i){const group=groups[i];geometry.addGroup(group.start,group.count,group.materialIndex)}const boundingSphere=json.data.boundingSphere;if(void 0!==boundingSphere){const center=new Vector3;void 0!==boundingSphere.center&&center.fromArray(boundingSphere.center),geometry.boundingSphere=new Sphere(center,boundingSphere.radius)}return json.name&&(geometry.name=json.name),json.userData&&(geometry.userData=json.userData),geometry}}class ObjectLoader extends Loader{constructor(manager){super(manager)}load(url,onLoad,onProgress,onError){const scope=this,path=""===this.path?LoaderUtils.extractUrlBase(url):this.path;this.resourcePath=this.resourcePath||path;const loader=new FileLoader(this.manager);loader.setPath(this.path),loader.setRequestHeader(this.requestHeader),loader.setWithCredentials(this.withCredentials),loader.load(url,(function(text){let json=null;try{json=JSON.parse(text)}catch(error){return void 0!==onError&&onError(error),void console.error("THREE:ObjectLoader: Can't parse "+url+".",error.message)}const metadata=json.metadata;if(void 0===metadata||void 0===metadata.type||"geometry"===metadata.type.toLowerCase())return void 0!==onError&&onError(new Error("THREE.ObjectLoader: Can't load "+url)),void console.error("THREE.ObjectLoader: Can't load "+url);scope.parse(json,onLoad)}),onProgress,onError)}loadAsync(url,onProgress){var _this2=this;return(0,_home_runner_work_ng_components_ng_components_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__.A)((function*(){const scope=_this2,path=""===_this2.path?LoaderUtils.extractUrlBase(url):_this2.path;_this2.resourcePath=_this2.resourcePath||path;const loader=new FileLoader(_this2.manager);loader.setPath(_this2.path),loader.setRequestHeader(_this2.requestHeader),loader.setWithCredentials(_this2.withCredentials);const text=yield loader.loadAsync(url,onProgress),json=JSON.parse(text),metadata=json.metadata;if(void 0===metadata||void 0===metadata.type||"geometry"===metadata.type.toLowerCase())throw new Error("THREE.ObjectLoader: Can't load "+url);return yield scope.parseAsync(json)}))()}parse(json,onLoad){const animations=this.parseAnimations(json.animations),shapes=this.parseShapes(json.shapes),geometries=this.parseGeometries(json.geometries,shapes),images=this.parseImages(json.images,(function(){void 0!==onLoad&&onLoad(object)})),textures=this.parseTextures(json.textures,images),materials=this.parseMaterials(json.materials,textures),object=this.parseObject(json.object,geometries,materials,textures,animations),skeletons=this.parseSkeletons(json.skeletons,object);if(this.bindSkeletons(object,skeletons),void 0!==onLoad){let hasImages=!1;for(const uuid in images)if(images[uuid].data instanceof HTMLImageElement){hasImages=!0;break}!1===hasImages&&onLoad(object)}return object}parseAsync(json){var _this3=this;return(0,_home_runner_work_ng_components_ng_components_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__.A)((function*(){const animations=_this3.parseAnimations(json.animations),shapes=_this3.parseShapes(json.shapes),geometries=_this3.parseGeometries(json.geometries,shapes),images=yield _this3.parseImagesAsync(json.images),textures=_this3.parseTextures(json.textures,images),materials=_this3.parseMaterials(json.materials,textures),object=_this3.parseObject(json.object,geometries,materials,textures,animations),skeletons=_this3.parseSkeletons(json.skeletons,object);return _this3.bindSkeletons(object,skeletons),object}))()}parseShapes(json){const shapes={};if(void 0!==json)for(let i=0,l=json.length;i<l;i++){const shape=(new Shape).fromJSON(json[i]);shapes[shape.uuid]=shape}return shapes}parseSkeletons(json,object){const skeletons={},bones={};if(object.traverse((function(child){child.isBone&&(bones[child.uuid]=child)})),void 0!==json)for(let i=0,l=json.length;i<l;i++){const skeleton=(new Skeleton).fromJSON(json[i],bones);skeletons[skeleton.uuid]=skeleton}return skeletons}parseGeometries(json,shapes){const geometries={};if(void 0!==json){const bufferGeometryLoader=new BufferGeometryLoader;for(let i=0,l=json.length;i<l;i++){let geometry;const data=json[i];switch(data.type){case"BufferGeometry":case"InstancedBufferGeometry":geometry=bufferGeometryLoader.parse(data);break;default:data.type in Geometries?geometry=Geometries[data.type].fromJSON(data,shapes):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${data.type}"`)}geometry.uuid=data.uuid,void 0!==data.name&&(geometry.name=data.name),void 0!==data.userData&&(geometry.userData=data.userData),geometries[data.uuid]=geometry}}return geometries}parseMaterials(json,textures){const cache={},materials={};if(void 0!==json){const loader=new MaterialLoader;loader.setTextures(textures);for(let i=0,l=json.length;i<l;i++){const data=json[i];void 0===cache[data.uuid]&&(cache[data.uuid]=loader.parse(data)),materials[data.uuid]=cache[data.uuid]}}return materials}parseAnimations(json){const animations={};if(void 0!==json)for(let i=0;i<json.length;i++){const data=json[i],clip=AnimationClip.parse(data);animations[clip.uuid]=clip}return animations}parseImages(json,onLoad){const scope=this,images={};let loader;function deserializeImage(image){if("string"==typeof image){const url=image;return function loadImage(url){return scope.manager.itemStart(url),loader.load(url,(function(){scope.manager.itemEnd(url)}),void 0,(function(){scope.manager.itemError(url),scope.manager.itemEnd(url)}))}(/^(\/\/)|([a-z]+:(\/\/)?)/i.test(url)?url:scope.resourcePath+url)}return image.data?{data:getTypedArray(image.type,image.data),width:image.width,height:image.height}:null}if(void 0!==json&&json.length>0){const manager=new LoadingManager(onLoad);loader=new ImageLoader(manager),loader.setCrossOrigin(this.crossOrigin);for(let i=0,il=json.length;i<il;i++){const image=json[i],url=image.url;if(Array.isArray(url)){const imageArray=[];for(let j=0,jl=url.length;j<jl;j++){const deserializedImage=deserializeImage(url[j]);null!==deserializedImage&&(deserializedImage instanceof HTMLImageElement?imageArray.push(deserializedImage):imageArray.push(new DataTexture(deserializedImage.data,deserializedImage.width,deserializedImage.height)))}images[image.uuid]=new Source(imageArray)}else{const deserializedImage=deserializeImage(image.url);images[image.uuid]=new Source(deserializedImage)}}}return images}parseImagesAsync(json){var _this4=this;return(0,_home_runner_work_ng_components_ng_components_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__.A)((function*(){const scope=_this4,images={};let loader;function deserializeImage(_x3){return _deserializeImage.apply(this,arguments)}function _deserializeImage(){return(_deserializeImage=(0,_home_runner_work_ng_components_ng_components_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__.A)((function*(image){if("string"==typeof image){const url=image,path=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(url)?url:scope.resourcePath+url;return yield loader.loadAsync(path)}return image.data?{data:getTypedArray(image.type,image.data),width:image.width,height:image.height}:null}))).apply(this,arguments)}if(void 0!==json&&json.length>0){loader=new ImageLoader(_this4.manager),loader.setCrossOrigin(_this4.crossOrigin);for(let i=0,il=json.length;i<il;i++){const image=json[i],url=image.url;if(Array.isArray(url)){const imageArray=[];for(let j=0,jl=url.length;j<jl;j++){const currentUrl=url[j],deserializedImage=yield deserializeImage(currentUrl);null!==deserializedImage&&(deserializedImage instanceof HTMLImageElement?imageArray.push(deserializedImage):imageArray.push(new DataTexture(deserializedImage.data,deserializedImage.width,deserializedImage.height)))}images[image.uuid]=new Source(imageArray)}else{const deserializedImage=yield deserializeImage(image.url);images[image.uuid]=new Source(deserializedImage)}}}return images}))()}parseTextures(json,images){function parseConstant(value,type){return"number"==typeof value?value:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",value),type[value])}const textures={};if(void 0!==json)for(let i=0,l=json.length;i<l;i++){const data=json[i];void 0===data.image&&console.warn('THREE.ObjectLoader: No "image" specified for',data.uuid),void 0===images[data.image]&&console.warn("THREE.ObjectLoader: Undefined image",data.image);const source=images[data.image],image=source.data;let texture;Array.isArray(image)?(texture=new CubeTexture,6===image.length&&(texture.needsUpdate=!0)):(texture=image&&image.data?new DataTexture:new Texture,image&&(texture.needsUpdate=!0)),texture.source=source,texture.uuid=data.uuid,void 0!==data.name&&(texture.name=data.name),void 0!==data.mapping&&(texture.mapping=parseConstant(data.mapping,TEXTURE_MAPPING)),void 0!==data.channel&&(texture.channel=data.channel),void 0!==data.offset&&texture.offset.fromArray(data.offset),void 0!==data.repeat&&texture.repeat.fromArray(data.repeat),void 0!==data.center&&texture.center.fromArray(data.center),void 0!==data.rotation&&(texture.rotation=data.rotation),void 0!==data.wrap&&(texture.wrapS=parseConstant(data.wrap[0],TEXTURE_WRAPPING),texture.wrapT=parseConstant(data.wrap[1],TEXTURE_WRAPPING)),void 0!==data.format&&(texture.format=data.format),void 0!==data.internalFormat&&(texture.internalFormat=data.internalFormat),void 0!==data.type&&(texture.type=data.type),void 0!==data.colorSpace&&(texture.colorSpace=data.colorSpace),void 0!==data.encoding&&(texture.encoding=data.encoding),void 0!==data.minFilter&&(texture.minFilter=parseConstant(data.minFilter,TEXTURE_FILTER)),void 0!==data.magFilter&&(texture.magFilter=parseConstant(data.magFilter,TEXTURE_FILTER)),void 0!==data.anisotropy&&(texture.anisotropy=data.anisotropy),void 0!==data.flipY&&(texture.flipY=data.flipY),void 0!==data.generateMipmaps&&(texture.generateMipmaps=data.generateMipmaps),void 0!==data.premultiplyAlpha&&(texture.premultiplyAlpha=data.premultiplyAlpha),void 0!==data.unpackAlignment&&(texture.unpackAlignment=data.unpackAlignment),void 0!==data.userData&&(texture.userData=data.userData),textures[data.uuid]=texture}return textures}parseObject(data,geometries,materials,textures,animations){let object,geometry,material;function getGeometry(name){return void 0===geometries[name]&&console.warn("THREE.ObjectLoader: Undefined geometry",name),geometries[name]}function getMaterial(name){if(void 0!==name){if(Array.isArray(name)){const array=[];for(let i=0,l=name.length;i<l;i++){const uuid=name[i];void 0===materials[uuid]&&console.warn("THREE.ObjectLoader: Undefined material",uuid),array.push(materials[uuid])}return array}return void 0===materials[name]&&console.warn("THREE.ObjectLoader: Undefined material",name),materials[name]}}function getTexture(uuid){return void 0===textures[uuid]&&console.warn("THREE.ObjectLoader: Undefined texture",uuid),textures[uuid]}switch(data.type){case"Scene":object=new Scene,void 0!==data.background&&(Number.isInteger(data.background)?object.background=new Color(data.background):object.background=getTexture(data.background)),void 0!==data.environment&&(object.environment=getTexture(data.environment)),void 0!==data.fog&&("Fog"===data.fog.type?object.fog=new Fog(data.fog.color,data.fog.near,data.fog.far):"FogExp2"===data.fog.type&&(object.fog=new FogExp2(data.fog.color,data.fog.density))),void 0!==data.backgroundBlurriness&&(object.backgroundBlurriness=data.backgroundBlurriness),void 0!==data.backgroundIntensity&&(object.backgroundIntensity=data.backgroundIntensity);break;case"PerspectiveCamera":object=new PerspectiveCamera(data.fov,data.aspect,data.near,data.far),void 0!==data.focus&&(object.focus=data.focus),void 0!==data.zoom&&(object.zoom=data.zoom),void 0!==data.filmGauge&&(object.filmGauge=data.filmGauge),void 0!==data.filmOffset&&(object.filmOffset=data.filmOffset),void 0!==data.view&&(object.view=Object.assign({},data.view));break;case"OrthographicCamera":object=new OrthographicCamera(data.left,data.right,data.top,data.bottom,data.near,data.far),void 0!==data.zoom&&(object.zoom=data.zoom),void 0!==data.view&&(object.view=Object.assign({},data.view));break;case"AmbientLight":object=new AmbientLight(data.color,data.intensity);break;case"DirectionalLight":object=new DirectionalLight(data.color,data.intensity);break;case"PointLight":object=new PointLight(data.color,data.intensity,data.distance,data.decay);break;case"RectAreaLight":object=new RectAreaLight(data.color,data.intensity,data.width,data.height);break;case"SpotLight":object=new SpotLight(data.color,data.intensity,data.distance,data.angle,data.penumbra,data.decay);break;case"HemisphereLight":object=new HemisphereLight(data.color,data.groundColor,data.intensity);break;case"LightProbe":object=(new LightProbe).fromJSON(data);break;case"SkinnedMesh":geometry=getGeometry(data.geometry),material=getMaterial(data.material),object=new SkinnedMesh(geometry,material),void 0!==data.bindMode&&(object.bindMode=data.bindMode),void 0!==data.bindMatrix&&object.bindMatrix.fromArray(data.bindMatrix),void 0!==data.skeleton&&(object.skeleton=data.skeleton);break;case"Mesh":geometry=getGeometry(data.geometry),material=getMaterial(data.material),object=new Mesh(geometry,material);break;case"InstancedMesh":geometry=getGeometry(data.geometry),material=getMaterial(data.material);const count=data.count,instanceMatrix=data.instanceMatrix,instanceColor=data.instanceColor;object=new InstancedMesh(geometry,material,count),object.instanceMatrix=new InstancedBufferAttribute(new Float32Array(instanceMatrix.array),16),void 0!==instanceColor&&(object.instanceColor=new InstancedBufferAttribute(new Float32Array(instanceColor.array),instanceColor.itemSize));break;case"LOD":object=new LOD;break;case"Line":object=new Line(getGeometry(data.geometry),getMaterial(data.material));break;case"LineLoop":object=new LineLoop(getGeometry(data.geometry),getMaterial(data.material));break;case"LineSegments":object=new LineSegments(getGeometry(data.geometry),getMaterial(data.material));break;case"PointCloud":case"Points":object=new Points(getGeometry(data.geometry),getMaterial(data.material));break;case"Sprite":object=new Sprite(getMaterial(data.material));break;case"Group":object=new Group;break;case"Bone":object=new Bone;break;default:object=new Object3D}if(object.uuid=data.uuid,void 0!==data.name&&(object.name=data.name),void 0!==data.matrix?(object.matrix.fromArray(data.matrix),void 0!==data.matrixAutoUpdate&&(object.matrixAutoUpdate=data.matrixAutoUpdate),object.matrixAutoUpdate&&object.matrix.decompose(object.position,object.quaternion,object.scale)):(void 0!==data.position&&object.position.fromArray(data.position),void 0!==data.rotation&&object.rotation.fromArray(data.rotation),void 0!==data.quaternion&&object.quaternion.fromArray(data.quaternion),void 0!==data.scale&&object.scale.fromArray(data.scale)),void 0!==data.up&&object.up.fromArray(data.up),void 0!==data.castShadow&&(object.castShadow=data.castShadow),void 0!==data.receiveShadow&&(object.receiveShadow=data.receiveShadow),data.shadow&&(void 0!==data.shadow.bias&&(object.shadow.bias=data.shadow.bias),void 0!==data.shadow.normalBias&&(object.shadow.normalBias=data.shadow.normalBias),void 0!==data.shadow.radius&&(object.shadow.radius=data.shadow.radius),void 0!==data.shadow.mapSize&&object.shadow.mapSize.fromArray(data.shadow.mapSize),void 0!==data.shadow.camera&&(object.shadow.camera=this.parseObject(data.shadow.camera))),void 0!==data.visible&&(object.visible=data.visible),void 0!==data.frustumCulled&&(object.frustumCulled=data.frustumCulled),void 0!==data.renderOrder&&(object.renderOrder=data.renderOrder),void 0!==data.userData&&(object.userData=data.userData),void 0!==data.layers&&(object.layers.mask=data.layers),void 0!==data.children){const children=data.children;for(let i=0;i<children.length;i++)object.add(this.parseObject(children[i],geometries,materials,textures,animations))}if(void 0!==data.animations){const objectAnimations=data.animations;for(let i=0;i<objectAnimations.length;i++){const uuid=objectAnimations[i];object.animations.push(animations[uuid])}}if("LOD"===data.type){void 0!==data.autoUpdate&&(object.autoUpdate=data.autoUpdate);const levels=data.levels;for(let l=0;l<levels.length;l++){const level=levels[l],child=object.getObjectByProperty("uuid",level.object);void 0!==child&&object.addLevel(child,level.distance,level.hysteresis)}}return object}bindSkeletons(object,skeletons){0!==Object.keys(skeletons).length&&object.traverse((function(child){if(!0===child.isSkinnedMesh&&void 0!==child.skeleton){const skeleton=skeletons[child.skeleton];void 0===skeleton?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",child.skeleton):child.bind(skeleton,child.bindMatrix)}}))}}const TEXTURE_MAPPING={UVMapping,CubeReflectionMapping,CubeRefractionMapping,EquirectangularReflectionMapping,EquirectangularRefractionMapping,CubeUVReflectionMapping},TEXTURE_WRAPPING={RepeatWrapping,ClampToEdgeWrapping,MirroredRepeatWrapping},TEXTURE_FILTER={NearestFilter,NearestMipmapNearestFilter,NearestMipmapLinearFilter,LinearFilter,LinearMipmapNearestFilter,LinearMipmapLinearFilter};class ImageBitmapLoader extends Loader{constructor(manager){super(manager),this.isImageBitmapLoader=!0,"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(options){return this.options=options,this}load(url,onLoad,onProgress,onError){void 0===url&&(url=""),void 0!==this.path&&(url=this.path+url),url=this.manager.resolveURL(url);const scope=this,cached=Cache.get(url);if(void 0!==cached)return scope.manager.itemStart(url),setTimeout((function(){onLoad&&onLoad(cached),scope.manager.itemEnd(url)}),0),cached;const fetchOptions={};fetchOptions.credentials="anonymous"===this.crossOrigin?"same-origin":"include",fetchOptions.headers=this.requestHeader,fetch(url,fetchOptions).then((function(res){return res.blob()})).then((function(blob){return createImageBitmap(blob,Object.assign(scope.options,{colorSpaceConversion:"none"}))})).then((function(imageBitmap){Cache.add(url,imageBitmap),onLoad&&onLoad(imageBitmap),scope.manager.itemEnd(url)})).catch((function(e){onError&&onError(e),scope.manager.itemError(url),scope.manager.itemEnd(url)})),scope.manager.itemStart(url)}}let _context;class AudioContext{static getContext(){return void 0===_context&&(_context=new(window.AudioContext||window.webkitAudioContext)),_context}static setContext(value){_context=value}}class AudioLoader extends Loader{constructor(manager){super(manager)}load(url,onLoad,onProgress,onError){const scope=this,loader=new FileLoader(this.manager);function handleError(e){onError?onError(e):console.error(e),scope.manager.itemError(url)}loader.setResponseType("arraybuffer"),loader.setPath(this.path),loader.setRequestHeader(this.requestHeader),loader.setWithCredentials(this.withCredentials),loader.load(url,(function(buffer){try{const bufferCopy=buffer.slice(0);AudioContext.getContext().decodeAudioData(bufferCopy,(function(audioBuffer){onLoad(audioBuffer)}),handleError)}catch(e){handleError(e)}}),onProgress,onError)}}class HemisphereLightProbe extends LightProbe{constructor(skyColor,groundColor,intensity=1){super(void 0,intensity),this.isHemisphereLightProbe=!0;const color1=(new Color).set(skyColor),color2=(new Color).set(groundColor),sky=new Vector3(color1.r,color1.g,color1.b),ground=new Vector3(color2.r,color2.g,color2.b),c0=Math.sqrt(Math.PI),c1=c0*Math.sqrt(.75);this.sh.coefficients[0].copy(sky).add(ground).multiplyScalar(c0),this.sh.coefficients[1].copy(sky).sub(ground).multiplyScalar(c1)}}class AmbientLightProbe extends LightProbe{constructor(color,intensity=1){super(void 0,intensity),this.isAmbientLightProbe=!0;const color1=(new Color).set(color);this.sh.coefficients[0].set(color1.r,color1.g,color1.b).multiplyScalar(2*Math.sqrt(Math.PI))}}const _eyeRight=new Matrix4,_eyeLeft=new Matrix4,_projectionMatrix=new Matrix4;class StereoCamera{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new PerspectiveCamera,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new PerspectiveCamera,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(camera){const cache=this._cache;if(cache.focus!==camera.focus||cache.fov!==camera.fov||cache.aspect!==camera.aspect*this.aspect||cache.near!==camera.near||cache.far!==camera.far||cache.zoom!==camera.zoom||cache.eyeSep!==this.eyeSep){cache.focus=camera.focus,cache.fov=camera.fov,cache.aspect=camera.aspect*this.aspect,cache.near=camera.near,cache.far=camera.far,cache.zoom=camera.zoom,cache.eyeSep=this.eyeSep,_projectionMatrix.copy(camera.projectionMatrix);const eyeSepHalf=cache.eyeSep/2,eyeSepOnProjection=eyeSepHalf*cache.near/cache.focus,ymax=cache.near*Math.tan(DEG2RAD*cache.fov*.5)/cache.zoom;let xmin,xmax;_eyeLeft.elements[12]=-eyeSepHalf,_eyeRight.elements[12]=eyeSepHalf,xmin=-ymax*cache.aspect+eyeSepOnProjection,xmax=ymax*cache.aspect+eyeSepOnProjection,_projectionMatrix.elements[0]=2*cache.near/(xmax-xmin),_projectionMatrix.elements[8]=(xmax+xmin)/(xmax-xmin),this.cameraL.projectionMatrix.copy(_projectionMatrix),xmin=-ymax*cache.aspect-eyeSepOnProjection,xmax=ymax*cache.aspect-eyeSepOnProjection,_projectionMatrix.elements[0]=2*cache.near/(xmax-xmin),_projectionMatrix.elements[8]=(xmax+xmin)/(xmax-xmin),this.cameraR.projectionMatrix.copy(_projectionMatrix)}this.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(_eyeLeft),this.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(_eyeRight)}}class Clock{constructor(autoStart=!0){this.autoStart=autoStart,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let diff=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const newTime=now();diff=(newTime-this.oldTime)/1e3,this.oldTime=newTime,this.elapsedTime+=diff}return diff}}function now(){return("undefined"==typeof performance?Date:performance).now()}const _position$1=new Vector3,_quaternion$1=new Quaternion,_scale$1=new Vector3,_orientation$1=new Vector3;class AudioListener extends Object3D{constructor(){super(),this.type="AudioListener",this.context=AudioContext.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Clock}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(value){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=value,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(value){return this.gain.gain.setTargetAtTime(value,this.context.currentTime,.01),this}updateMatrixWorld(force){super.updateMatrixWorld(force);const listener=this.context.listener,up=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(_position$1,_quaternion$1,_scale$1),_orientation$1.set(0,0,-1).applyQuaternion(_quaternion$1),listener.positionX){const endTime=this.context.currentTime+this.timeDelta;listener.positionX.linearRampToValueAtTime(_position$1.x,endTime),listener.positionY.linearRampToValueAtTime(_position$1.y,endTime),listener.positionZ.linearRampToValueAtTime(_position$1.z,endTime),listener.forwardX.linearRampToValueAtTime(_orientation$1.x,endTime),listener.forwardY.linearRampToValueAtTime(_orientation$1.y,endTime),listener.forwardZ.linearRampToValueAtTime(_orientation$1.z,endTime),listener.upX.linearRampToValueAtTime(up.x,endTime),listener.upY.linearRampToValueAtTime(up.y,endTime),listener.upZ.linearRampToValueAtTime(up.z,endTime)}else listener.setPosition(_position$1.x,_position$1.y,_position$1.z),listener.setOrientation(_orientation$1.x,_orientation$1.y,_orientation$1.z,up.x,up.y,up.z)}}class Audio extends Object3D{constructor(listener){super(),this.type="Audio",this.listener=listener,this.context=listener.context,this.gain=this.context.createGain(),this.gain.connect(listener.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(audioNode){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=audioNode,this.connect(),this}setMediaElementSource(mediaElement){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(mediaElement),this.connect(),this}setMediaStreamSource(mediaStream){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(mediaStream),this.connect(),this}setBuffer(audioBuffer){return this.buffer=audioBuffer,this.sourceType="buffer",this.autoplay&&this.play(),this}play(delay=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+delay;const source=this.context.createBufferSource();return source.buffer=this.buffer,source.loop=this.loop,source.loopStart=this.loopStart,source.loopEnd=this.loopEnd,source.onended=this.onEnded.bind(this),source.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=source,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,null!==this.source&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let i=1,l=this.filters.length;i<l;i++)this.filters[i-1].connect(this.filters[i]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let i=1,l=this.filters.length;i<l;i++)this.filters[i-1].disconnect(this.filters[i]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(value){return value||(value=[]),!0===this._connected?(this.disconnect(),this.filters=value.slice(),this.connect()):this.filters=value.slice(),this}setDetune(value){if(this.detune=value,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(filter){return this.setFilters(filter?[filter]:[])}setPlaybackRate(value){if(!1!==this.hasPlaybackControl)return this.playbackRate=value,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(value){if(!1!==this.hasPlaybackControl)return this.loop=value,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(value){return this.loopStart=value,this}setLoopEnd(value){return this.loopEnd=value,this}getVolume(){return this.gain.gain.value}setVolume(value){return this.gain.gain.setTargetAtTime(value,this.context.currentTime,.01),this}}const _position=new Vector3,_quaternion=new Quaternion,_scale=new Vector3,_orientation=new Vector3;class PositionalAudio extends Audio{constructor(listener){super(listener),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(value){return this.panner.refDistance=value,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(value){return this.panner.rolloffFactor=value,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(value){return this.panner.distanceModel=value,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(value){return this.panner.maxDistance=value,this}setDirectionalCone(coneInnerAngle,coneOuterAngle,coneOuterGain){return this.panner.coneInnerAngle=coneInnerAngle,this.panner.coneOuterAngle=coneOuterAngle,this.panner.coneOuterGain=coneOuterGain,this}updateMatrixWorld(force){if(super.updateMatrixWorld(force),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(_position,_quaternion,_scale),_orientation.set(0,0,1).applyQuaternion(_quaternion);const panner=this.panner;if(panner.positionX){const endTime=this.context.currentTime+this.listener.timeDelta;panner.positionX.linearRampToValueAtTime(_position.x,endTime),panner.positionY.linearRampToValueAtTime(_position.y,endTime),panner.positionZ.linearRampToValueAtTime(_position.z,endTime),panner.orientationX.linearRampToValueAtTime(_orientation.x,endTime),panner.orientationY.linearRampToValueAtTime(_orientation.y,endTime),panner.orientationZ.linearRampToValueAtTime(_orientation.z,endTime)}else panner.setPosition(_position.x,_position.y,_position.z),panner.setOrientation(_orientation.x,_orientation.y,_orientation.z)}}class AudioAnalyser{constructor(audio,fftSize=2048){this.analyser=audio.context.createAnalyser(),this.analyser.fftSize=fftSize,this.data=new Uint8Array(this.analyser.frequencyBinCount),audio.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let value=0;const data=this.getFrequencyData();for(let i=0;i<data.length;i++)value+=data[i];return value/data.length}}class PropertyMixer{constructor(binding,typeName,valueSize){let mixFunction,mixFunctionAdditive,setIdentity;switch(this.binding=binding,this.valueSize=valueSize,typeName){case"quaternion":mixFunction=this._slerp,mixFunctionAdditive=this._slerpAdditive,setIdentity=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*valueSize),this._workIndex=5;break;case"string":case"bool":mixFunction=this._select,mixFunctionAdditive=this._select,setIdentity=this._setAdditiveIdentityOther,this.buffer=new Array(5*valueSize);break;default:mixFunction=this._lerp,mixFunctionAdditive=this._lerpAdditive,setIdentity=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*valueSize)}this._mixBufferRegion=mixFunction,this._mixBufferRegionAdditive=mixFunctionAdditive,this._setIdentity=setIdentity,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(accuIndex,weight){const buffer=this.buffer,stride=this.valueSize,offset=accuIndex*stride+stride;let currentWeight=this.cumulativeWeight;if(0===currentWeight){for(let i=0;i!==stride;++i)buffer[offset+i]=buffer[i];currentWeight=weight}else{currentWeight+=weight;const mix=weight/currentWeight;this._mixBufferRegion(buffer,offset,0,mix,stride)}this.cumulativeWeight=currentWeight}accumulateAdditive(weight){const buffer=this.buffer,stride=this.valueSize,offset=stride*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(buffer,offset,0,weight,stride),this.cumulativeWeightAdditive+=weight}apply(accuIndex){const stride=this.valueSize,buffer=this.buffer,offset=accuIndex*stride+stride,weight=this.cumulativeWeight,weightAdditive=this.cumulativeWeightAdditive,binding=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,weight<1){const originalValueOffset=stride*this._origIndex;this._mixBufferRegion(buffer,offset,originalValueOffset,1-weight,stride)}weightAdditive>0&&this._mixBufferRegionAdditive(buffer,offset,this._addIndex*stride,1,stride);for(let i=stride,e=stride+stride;i!==e;++i)if(buffer[i]!==buffer[i+stride]){binding.setValue(buffer,offset);break}}saveOriginalState(){const binding=this.binding,buffer=this.buffer,stride=this.valueSize,originalValueOffset=stride*this._origIndex;binding.getValue(buffer,originalValueOffset);for(let i=stride,e=originalValueOffset;i!==e;++i)buffer[i]=buffer[originalValueOffset+i%stride];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const originalValueOffset=3*this.valueSize;this.binding.setValue(this.buffer,originalValueOffset)}_setAdditiveIdentityNumeric(){const startIndex=this._addIndex*this.valueSize,endIndex=startIndex+this.valueSize;for(let i=startIndex;i<endIndex;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const startIndex=this._origIndex*this.valueSize,targetIndex=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[targetIndex+i]=this.buffer[startIndex+i]}_select(buffer,dstOffset,srcOffset,t,stride){if(t>=.5)for(let i=0;i!==stride;++i)buffer[dstOffset+i]=buffer[srcOffset+i]}_slerp(buffer,dstOffset,srcOffset,t){Quaternion.slerpFlat(buffer,dstOffset,buffer,dstOffset,buffer,srcOffset,t)}_slerpAdditive(buffer,dstOffset,srcOffset,t,stride){const workOffset=this._workIndex*stride;Quaternion.multiplyQuaternionsFlat(buffer,workOffset,buffer,dstOffset,buffer,srcOffset),Quaternion.slerpFlat(buffer,dstOffset,buffer,dstOffset,buffer,workOffset,t)}_lerp(buffer,dstOffset,srcOffset,t,stride){const s=1-t;for(let i=0;i!==stride;++i){const j=dstOffset+i;buffer[j]=buffer[j]*s+buffer[srcOffset+i]*t}}_lerpAdditive(buffer,dstOffset,srcOffset,t,stride){for(let i=0;i!==stride;++i){const j=dstOffset+i;buffer[j]=buffer[j]+buffer[srcOffset+i]*t}}}const _reservedRe=new RegExp("[\\[\\]\\.:\\/]","g"),_wordCharOrDot="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",_trackRe=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC","[^\\[\\]\\.:\\/]")+/(WCOD+)?/.source.replace("WCOD",_wordCharOrDot)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC","[^\\[\\]\\.:\\/]")+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC","[^\\[\\]\\.:\\/]")+"$"),_supportedObjectNames=["material","materials","bones","map"];class PropertyBinding{constructor(rootNode,path,parsedPath){this.path=path,this.parsedPath=parsedPath||PropertyBinding.parseTrackName(path),this.node=PropertyBinding.findNode(rootNode,this.parsedPath.nodeName),this.rootNode=rootNode,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(root,path,parsedPath){return root&&root.isAnimationObjectGroup?new PropertyBinding.Composite(root,path,parsedPath):new PropertyBinding(root,path,parsedPath)}static sanitizeNodeName(name){return name.replace(/\s/g,"_").replace(_reservedRe,"")}static parseTrackName(trackName){const matches=_trackRe.exec(trackName);if(null===matches)throw new Error("PropertyBinding: Cannot parse trackName: "+trackName);const results={nodeName:matches[2],objectName:matches[3],objectIndex:matches[4],propertyName:matches[5],propertyIndex:matches[6]},lastDot=results.nodeName&&results.nodeName.lastIndexOf(".");if(void 0!==lastDot&&-1!==lastDot){const objectName=results.nodeName.substring(lastDot+1);-1!==_supportedObjectNames.indexOf(objectName)&&(results.nodeName=results.nodeName.substring(0,lastDot),results.objectName=objectName)}if(null===results.propertyName||0===results.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+trackName);return results}static findNode(root,nodeName){if(void 0===nodeName||""===nodeName||"."===nodeName||-1===nodeName||nodeName===root.name||nodeName===root.uuid)return root;if(root.skeleton){const bone=root.skeleton.getBoneByName(nodeName);if(void 0!==bone)return bone}if(root.children){const searchNodeSubtree=function(children){for(let i=0;i<children.length;i++){const childNode=children[i];if(childNode.name===nodeName||childNode.uuid===nodeName)return childNode;const result=searchNodeSubtree(childNode.children);if(result)return result}return null},subTreeNode=searchNodeSubtree(root.children);if(subTreeNode)return subTreeNode}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(buffer,offset){buffer[offset]=this.targetObject[this.propertyName]}_getValue_array(buffer,offset){const source=this.resolvedProperty;for(let i=0,n=source.length;i!==n;++i)buffer[offset++]=source[i]}_getValue_arrayElement(buffer,offset){buffer[offset]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(buffer,offset){this.resolvedProperty.toArray(buffer,offset)}_setValue_direct(buffer,offset){this.targetObject[this.propertyName]=buffer[offset]}_setValue_direct_setNeedsUpdate(buffer,offset){this.targetObject[this.propertyName]=buffer[offset],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(buffer,offset){this.targetObject[this.propertyName]=buffer[offset],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(buffer,offset){const dest=this.resolvedProperty;for(let i=0,n=dest.length;i!==n;++i)dest[i]=buffer[offset++]}_setValue_array_setNeedsUpdate(buffer,offset){const dest=this.resolvedProperty;for(let i=0,n=dest.length;i!==n;++i)dest[i]=buffer[offset++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(buffer,offset){const dest=this.resolvedProperty;for(let i=0,n=dest.length;i!==n;++i)dest[i]=buffer[offset++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset]}_setValue_arrayElement_setNeedsUpdate(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(buffer,offset){this.resolvedProperty.fromArray(buffer,offset)}_setValue_fromArray_setNeedsUpdate(buffer,offset){this.resolvedProperty.fromArray(buffer,offset),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(buffer,offset){this.resolvedProperty.fromArray(buffer,offset),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(targetArray,offset){this.bind(),this.getValue(targetArray,offset)}_setValue_unbound(sourceArray,offset){this.bind(),this.setValue(sourceArray,offset)}bind(){let targetObject=this.node;const parsedPath=this.parsedPath,objectName=parsedPath.objectName,propertyName=parsedPath.propertyName;let propertyIndex=parsedPath.propertyIndex;if(targetObject||(targetObject=PropertyBinding.findNode(this.rootNode,parsedPath.nodeName),this.node=targetObject),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!targetObject)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(objectName){let objectIndex=parsedPath.objectIndex;switch(objectName){case"materials":if(!targetObject.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!targetObject.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);targetObject=targetObject.material.materials;break;case"bones":if(!targetObject.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);targetObject=targetObject.skeleton.bones;for(let i=0;i<targetObject.length;i++)if(targetObject[i].name===objectIndex){objectIndex=i;break}break;case"map":if("map"in targetObject){targetObject=targetObject.map;break}if(!targetObject.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!targetObject.material.map)return void console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);targetObject=targetObject.material.map;break;default:if(void 0===targetObject[objectName])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);targetObject=targetObject[objectName]}if(void 0!==objectIndex){if(void 0===targetObject[objectIndex])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,targetObject);targetObject=targetObject[objectIndex]}}const nodeProperty=targetObject[propertyName];if(void 0===nodeProperty){const nodeName=parsedPath.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+nodeName+"."+propertyName+" but it wasn't found.",targetObject)}let versioning=this.Versioning.None;this.targetObject=targetObject,void 0!==targetObject.needsUpdate?versioning=this.Versioning.NeedsUpdate:void 0!==targetObject.matrixWorldNeedsUpdate&&(versioning=this.Versioning.MatrixWorldNeedsUpdate);let bindingType=this.BindingType.Direct;if(void 0!==propertyIndex){if("morphTargetInfluences"===propertyName){if(!targetObject.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!targetObject.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==targetObject.morphTargetDictionary[propertyIndex]&&(propertyIndex=targetObject.morphTargetDictionary[propertyIndex])}bindingType=this.BindingType.ArrayElement,this.resolvedProperty=nodeProperty,this.propertyIndex=propertyIndex}else void 0!==nodeProperty.fromArray&&void 0!==nodeProperty.toArray?(bindingType=this.BindingType.HasFromToArray,this.resolvedProperty=nodeProperty):Array.isArray(nodeProperty)?(bindingType=this.BindingType.EntireArray,this.resolvedProperty=nodeProperty):this.propertyName=propertyName;this.getValue=this.GetterByBindingType[bindingType],this.setValue=this.SetterByBindingTypeAndVersioning[bindingType][versioning]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}PropertyBinding.Composite=class Composite{constructor(targetGroup,path,optionalParsedPath){const parsedPath=optionalParsedPath||PropertyBinding.parseTrackName(path);this._targetGroup=targetGroup,this._bindings=targetGroup.subscribe_(path,parsedPath)}getValue(array,offset){this.bind();const firstValidIndex=this._targetGroup.nCachedObjects_,binding=this._bindings[firstValidIndex];void 0!==binding&&binding.getValue(array,offset)}setValue(array,offset){const bindings=this._bindings;for(let i=this._targetGroup.nCachedObjects_,n=bindings.length;i!==n;++i)bindings[i].setValue(array,offset)}bind(){const bindings=this._bindings;for(let i=this._targetGroup.nCachedObjects_,n=bindings.length;i!==n;++i)bindings[i].bind()}unbind(){const bindings=this._bindings;for(let i=this._targetGroup.nCachedObjects_,n=bindings.length;i!==n;++i)bindings[i].unbind()}},PropertyBinding.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},PropertyBinding.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},PropertyBinding.prototype.GetterByBindingType=[PropertyBinding.prototype._getValue_direct,PropertyBinding.prototype._getValue_array,PropertyBinding.prototype._getValue_arrayElement,PropertyBinding.prototype._getValue_toArray],PropertyBinding.prototype.SetterByBindingTypeAndVersioning=[[PropertyBinding.prototype._setValue_direct,PropertyBinding.prototype._setValue_direct_setNeedsUpdate,PropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[PropertyBinding.prototype._setValue_array,PropertyBinding.prototype._setValue_array_setNeedsUpdate,PropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate],[PropertyBinding.prototype._setValue_arrayElement,PropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,PropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[PropertyBinding.prototype._setValue_fromArray,PropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,PropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class AnimationObjectGroup{constructor(){this.isAnimationObjectGroup=!0,this.uuid=generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const indices={};this._indicesByUUID=indices;for(let i=0,n=arguments.length;i!==n;++i)indices[arguments[i].uuid]=i;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const scope=this;this.stats={objects:{get total(){return scope._objects.length},get inUse(){return this.total-scope.nCachedObjects_}},get bindingsPerObject(){return scope._bindings.length}}}add(){const objects=this._objects,indicesByUUID=this._indicesByUUID,paths=this._paths,parsedPaths=this._parsedPaths,bindings=this._bindings,nBindings=bindings.length;let knownObject,nObjects=objects.length,nCachedObjects=this.nCachedObjects_;for(let i=0,n=arguments.length;i!==n;++i){const object=arguments[i],uuid=object.uuid;let index=indicesByUUID[uuid];if(void 0===index){index=nObjects++,indicesByUUID[uuid]=index,objects.push(object);for(let j=0,m=nBindings;j!==m;++j)bindings[j].push(new PropertyBinding(object,paths[j],parsedPaths[j]))}else if(index<nCachedObjects){knownObject=objects[index];const firstActiveIndex=--nCachedObjects,lastCachedObject=objects[firstActiveIndex];indicesByUUID[lastCachedObject.uuid]=index,objects[index]=lastCachedObject,indicesByUUID[uuid]=firstActiveIndex,objects[firstActiveIndex]=object;for(let j=0,m=nBindings;j!==m;++j){const bindingsForPath=bindings[j],lastCached=bindingsForPath[firstActiveIndex];let binding=bindingsForPath[index];bindingsForPath[index]=lastCached,void 0===binding&&(binding=new PropertyBinding(object,paths[j],parsedPaths[j])),bindingsForPath[firstActiveIndex]=binding}}else objects[index]!==knownObject&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=nCachedObjects}remove(){const objects=this._objects,indicesByUUID=this._indicesByUUID,bindings=this._bindings,nBindings=bindings.length;let nCachedObjects=this.nCachedObjects_;for(let i=0,n=arguments.length;i!==n;++i){const object=arguments[i],uuid=object.uuid,index=indicesByUUID[uuid];if(void 0!==index&&index>=nCachedObjects){const lastCachedIndex=nCachedObjects++,firstActiveObject=objects[lastCachedIndex];indicesByUUID[firstActiveObject.uuid]=index,objects[index]=firstActiveObject,indicesByUUID[uuid]=lastCachedIndex,objects[lastCachedIndex]=object;for(let j=0,m=nBindings;j!==m;++j){const bindingsForPath=bindings[j],firstActive=bindingsForPath[lastCachedIndex],binding=bindingsForPath[index];bindingsForPath[index]=firstActive,bindingsForPath[lastCachedIndex]=binding}}}this.nCachedObjects_=nCachedObjects}uncache(){const objects=this._objects,indicesByUUID=this._indicesByUUID,bindings=this._bindings,nBindings=bindings.length;let nCachedObjects=this.nCachedObjects_,nObjects=objects.length;for(let i=0,n=arguments.length;i!==n;++i){const uuid=arguments[i].uuid,index=indicesByUUID[uuid];if(void 0!==index)if(delete indicesByUUID[uuid],index<nCachedObjects){const firstActiveIndex=--nCachedObjects,lastCachedObject=objects[firstActiveIndex],lastIndex=--nObjects,lastObject=objects[lastIndex];indicesByUUID[lastCachedObject.uuid]=index,objects[index]=lastCachedObject,indicesByUUID[lastObject.uuid]=firstActiveIndex,objects[firstActiveIndex]=lastObject,objects.pop();for(let j=0,m=nBindings;j!==m;++j){const bindingsForPath=bindings[j],lastCached=bindingsForPath[firstActiveIndex],last=bindingsForPath[lastIndex];bindingsForPath[index]=lastCached,bindingsForPath[firstActiveIndex]=last,bindingsForPath.pop()}}else{const lastIndex=--nObjects,lastObject=objects[lastIndex];lastIndex>0&&(indicesByUUID[lastObject.uuid]=index),objects[index]=lastObject,objects.pop();for(let j=0,m=nBindings;j!==m;++j){const bindingsForPath=bindings[j];bindingsForPath[index]=bindingsForPath[lastIndex],bindingsForPath.pop()}}}this.nCachedObjects_=nCachedObjects}subscribe_(path,parsedPath){const indicesByPath=this._bindingsIndicesByPath;let index=indicesByPath[path];const bindings=this._bindings;if(void 0!==index)return bindings[index];const paths=this._paths,parsedPaths=this._parsedPaths,objects=this._objects,nObjects=objects.length,nCachedObjects=this.nCachedObjects_,bindingsForPath=new Array(nObjects);index=bindings.length,indicesByPath[path]=index,paths.push(path),parsedPaths.push(parsedPath),bindings.push(bindingsForPath);for(let i=nCachedObjects,n=objects.length;i!==n;++i){const object=objects[i];bindingsForPath[i]=new PropertyBinding(object,path,parsedPath)}return bindingsForPath}unsubscribe_(path){const indicesByPath=this._bindingsIndicesByPath,index=indicesByPath[path];if(void 0!==index){const paths=this._paths,parsedPaths=this._parsedPaths,bindings=this._bindings,lastBindingsIndex=bindings.length-1,lastBindings=bindings[lastBindingsIndex];indicesByPath[path[lastBindingsIndex]]=index,bindings[index]=lastBindings,bindings.pop(),parsedPaths[index]=parsedPaths[lastBindingsIndex],parsedPaths.pop(),paths[index]=paths[lastBindingsIndex],paths.pop()}}}class AnimationAction{constructor(mixer,clip,localRoot=null,blendMode=clip.blendMode){this._mixer=mixer,this._clip=clip,this._localRoot=localRoot,this.blendMode=blendMode;const tracks=clip.tracks,nTracks=tracks.length,interpolants=new Array(nTracks),interpolantSettings={endingStart:ZeroCurvatureEnding,endingEnd:ZeroCurvatureEnding};for(let i=0;i!==nTracks;++i){const interpolant=tracks[i].createInterpolant(null);interpolants[i]=interpolant,interpolant.settings=interpolantSettings}this._interpolantSettings=interpolantSettings,this._interpolants=interpolants,this._propertyBindings=new Array(nTracks),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=LoopRepeat,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(time){return this._startTime=time,this}setLoop(mode,repetitions){return this.loop=mode,this.repetitions=repetitions,this}setEffectiveWeight(weight){return this.weight=weight,this._effectiveWeight=this.enabled?weight:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(duration){return this._scheduleFading(duration,0,1)}fadeOut(duration){return this._scheduleFading(duration,1,0)}crossFadeFrom(fadeOutAction,duration,warp){if(fadeOutAction.fadeOut(duration),this.fadeIn(duration),warp){const fadeInDuration=this._clip.duration,fadeOutDuration=fadeOutAction._clip.duration,startEndRatio=fadeOutDuration/fadeInDuration,endStartRatio=fadeInDuration/fadeOutDuration;fadeOutAction.warp(1,startEndRatio,duration),this.warp(endStartRatio,1,duration)}return this}crossFadeTo(fadeInAction,duration,warp){return fadeInAction.crossFadeFrom(this,duration,warp)}stopFading(){const weightInterpolant=this._weightInterpolant;return null!==weightInterpolant&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(weightInterpolant)),this}setEffectiveTimeScale(timeScale){return this.timeScale=timeScale,this._effectiveTimeScale=this.paused?0:timeScale,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(duration){return this.timeScale=this._clip.duration/duration,this.stopWarping()}syncWith(action){return this.time=action.time,this.timeScale=action.timeScale,this.stopWarping()}halt(duration){return this.warp(this._effectiveTimeScale,0,duration)}warp(startTimeScale,endTimeScale,duration){const mixer=this._mixer,now=mixer.time,timeScale=this.timeScale;let interpolant=this._timeScaleInterpolant;null===interpolant&&(interpolant=mixer._lendControlInterpolant(),this._timeScaleInterpolant=interpolant);const times=interpolant.parameterPositions,values=interpolant.sampleValues;return times[0]=now,times[1]=now+duration,values[0]=startTimeScale/timeScale,values[1]=endTimeScale/timeScale,this}stopWarping(){const timeScaleInterpolant=this._timeScaleInterpolant;return null!==timeScaleInterpolant&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(timeScaleInterpolant)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(time,deltaTime,timeDirection,accuIndex){if(!this.enabled)return void this._updateWeight(time);const startTime=this._startTime;if(null!==startTime){const timeRunning=(time-startTime)*timeDirection;timeRunning<0||0===timeDirection?deltaTime=0:(this._startTime=null,deltaTime=timeDirection*timeRunning)}deltaTime*=this._updateTimeScale(time);const clipTime=this._updateTime(deltaTime),weight=this._updateWeight(time);if(weight>0){const interpolants=this._interpolants,propertyMixers=this._propertyBindings;if(this.blendMode===AdditiveAnimationBlendMode)for(let j=0,m=interpolants.length;j!==m;++j)interpolants[j].evaluate(clipTime),propertyMixers[j].accumulateAdditive(weight);else for(let j=0,m=interpolants.length;j!==m;++j)interpolants[j].evaluate(clipTime),propertyMixers[j].accumulate(accuIndex,weight)}}_updateWeight(time){let weight=0;if(this.enabled){weight=this.weight;const interpolant=this._weightInterpolant;if(null!==interpolant){const interpolantValue=interpolant.evaluate(time)[0];weight*=interpolantValue,time>interpolant.parameterPositions[1]&&(this.stopFading(),0===interpolantValue&&(this.enabled=!1))}}return this._effectiveWeight=weight,weight}_updateTimeScale(time){let timeScale=0;if(!this.paused){timeScale=this.timeScale;const interpolant=this._timeScaleInterpolant;if(null!==interpolant){timeScale*=interpolant.evaluate(time)[0],time>interpolant.parameterPositions[1]&&(this.stopWarping(),0===timeScale?this.paused=!0:this.timeScale=timeScale)}}return this._effectiveTimeScale=timeScale,timeScale}_updateTime(deltaTime){const duration=this._clip.duration,loop=this.loop;let time=this.time+deltaTime,loopCount=this._loopCount;const pingPong=loop===LoopPingPong;if(0===deltaTime)return-1===loopCount||!pingPong||1&~loopCount?time:duration-time;if(loop===LoopOnce){-1===loopCount&&(this._loopCount=0,this._setEndings(!0,!0,!1));handle_stop:{if(time>=duration)time=duration;else{if(!(time<0)){this.time=time;break handle_stop}time=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=time,this._mixer.dispatchEvent({type:"finished",action:this,direction:deltaTime<0?-1:1})}}else{if(-1===loopCount&&(deltaTime>=0?(loopCount=0,this._setEndings(!0,0===this.repetitions,pingPong)):this._setEndings(0===this.repetitions,!0,pingPong)),time>=duration||time<0){const loopDelta=Math.floor(time/duration);time-=duration*loopDelta,loopCount+=Math.abs(loopDelta);const pending=this.repetitions-loopCount;if(pending<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,time=deltaTime>0?duration:0,this.time=time,this._mixer.dispatchEvent({type:"finished",action:this,direction:deltaTime>0?1:-1});else{if(1===pending){const atStart=deltaTime<0;this._setEndings(atStart,!atStart,pingPong)}else this._setEndings(!1,!1,pingPong);this._loopCount=loopCount,this.time=time,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta})}}else this.time=time;if(pingPong&&!(1&~loopCount))return duration-time}return time}_setEndings(atStart,atEnd,pingPong){const settings=this._interpolantSettings;pingPong?(settings.endingStart=ZeroSlopeEnding,settings.endingEnd=ZeroSlopeEnding):(settings.endingStart=atStart?this.zeroSlopeAtStart?ZeroSlopeEnding:ZeroCurvatureEnding:WrapAroundEnding,settings.endingEnd=atEnd?this.zeroSlopeAtEnd?ZeroSlopeEnding:ZeroCurvatureEnding:WrapAroundEnding)}_scheduleFading(duration,weightNow,weightThen){const mixer=this._mixer,now=mixer.time;let interpolant=this._weightInterpolant;null===interpolant&&(interpolant=mixer._lendControlInterpolant(),this._weightInterpolant=interpolant);const times=interpolant.parameterPositions,values=interpolant.sampleValues;return times[0]=now,values[0]=weightNow,times[1]=now+duration,values[1]=weightThen,this}}const _controlInterpolantsResultBuffer=new Float32Array(1);class AnimationMixer extends EventDispatcher{constructor(root){super(),this._root=root,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(action,prototypeAction){const root=action._localRoot||this._root,tracks=action._clip.tracks,nTracks=tracks.length,bindings=action._propertyBindings,interpolants=action._interpolants,rootUuid=root.uuid,bindingsByRoot=this._bindingsByRootAndName;let bindingsByName=bindingsByRoot[rootUuid];void 0===bindingsByName&&(bindingsByName={},bindingsByRoot[rootUuid]=bindingsByName);for(let i=0;i!==nTracks;++i){const track=tracks[i],trackName=track.name;let binding=bindingsByName[trackName];if(void 0!==binding)++binding.referenceCount,bindings[i]=binding;else{if(binding=bindings[i],void 0!==binding){null===binding._cacheIndex&&(++binding.referenceCount,this._addInactiveBinding(binding,rootUuid,trackName));continue}const path=prototypeAction&&prototypeAction._propertyBindings[i].binding.parsedPath;binding=new PropertyMixer(PropertyBinding.create(root,trackName,path),track.ValueTypeName,track.getValueSize()),++binding.referenceCount,this._addInactiveBinding(binding,rootUuid,trackName),bindings[i]=binding}interpolants[i].resultBuffer=binding.buffer}}_activateAction(action){if(!this._isActiveAction(action)){if(null===action._cacheIndex){const rootUuid=(action._localRoot||this._root).uuid,clipUuid=action._clip.uuid,actionsForClip=this._actionsByClip[clipUuid];this._bindAction(action,actionsForClip&&actionsForClip.knownActions[0]),this._addInactiveAction(action,clipUuid,rootUuid)}const bindings=action._propertyBindings;for(let i=0,n=bindings.length;i!==n;++i){const binding=bindings[i];0==binding.useCount++&&(this._lendBinding(binding),binding.saveOriginalState())}this._lendAction(action)}}_deactivateAction(action){if(this._isActiveAction(action)){const bindings=action._propertyBindings;for(let i=0,n=bindings.length;i!==n;++i){const binding=bindings[i];0==--binding.useCount&&(binding.restoreOriginalState(),this._takeBackBinding(binding))}this._takeBackAction(action)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const scope=this;this.stats={actions:{get total(){return scope._actions.length},get inUse(){return scope._nActiveActions}},bindings:{get total(){return scope._bindings.length},get inUse(){return scope._nActiveBindings}},controlInterpolants:{get total(){return scope._controlInterpolants.length},get inUse(){return scope._nActiveControlInterpolants}}}}_isActiveAction(action){const index=action._cacheIndex;return null!==index&&index<this._nActiveActions}_addInactiveAction(action,clipUuid,rootUuid){const actions=this._actions,actionsByClip=this._actionsByClip;let actionsForClip=actionsByClip[clipUuid];if(void 0===actionsForClip)actionsForClip={knownActions:[action],actionByRoot:{}},action._byClipCacheIndex=0,actionsByClip[clipUuid]=actionsForClip;else{const knownActions=actionsForClip.knownActions;action._byClipCacheIndex=knownActions.length,knownActions.push(action)}action._cacheIndex=actions.length,actions.push(action),actionsForClip.actionByRoot[rootUuid]=action}_removeInactiveAction(action){const actions=this._actions,lastInactiveAction=actions[actions.length-1],cacheIndex=action._cacheIndex;lastInactiveAction._cacheIndex=cacheIndex,actions[cacheIndex]=lastInactiveAction,actions.pop(),action._cacheIndex=null;const clipUuid=action._clip.uuid,actionsByClip=this._actionsByClip,actionsForClip=actionsByClip[clipUuid],knownActionsForClip=actionsForClip.knownActions,lastKnownAction=knownActionsForClip[knownActionsForClip.length-1],byClipCacheIndex=action._byClipCacheIndex;lastKnownAction._byClipCacheIndex=byClipCacheIndex,knownActionsForClip[byClipCacheIndex]=lastKnownAction,knownActionsForClip.pop(),action._byClipCacheIndex=null;delete actionsForClip.actionByRoot[(action._localRoot||this._root).uuid],0===knownActionsForClip.length&&delete actionsByClip[clipUuid],this._removeInactiveBindingsForAction(action)}_removeInactiveBindingsForAction(action){const bindings=action._propertyBindings;for(let i=0,n=bindings.length;i!==n;++i){const binding=bindings[i];0==--binding.referenceCount&&this._removeInactiveBinding(binding)}}_lendAction(action){const actions=this._actions,prevIndex=action._cacheIndex,lastActiveIndex=this._nActiveActions++,firstInactiveAction=actions[lastActiveIndex];action._cacheIndex=lastActiveIndex,actions[lastActiveIndex]=action,firstInactiveAction._cacheIndex=prevIndex,actions[prevIndex]=firstInactiveAction}_takeBackAction(action){const actions=this._actions,prevIndex=action._cacheIndex,firstInactiveIndex=--this._nActiveActions,lastActiveAction=actions[firstInactiveIndex];action._cacheIndex=firstInactiveIndex,actions[firstInactiveIndex]=action,lastActiveAction._cacheIndex=prevIndex,actions[prevIndex]=lastActiveAction}_addInactiveBinding(binding,rootUuid,trackName){const bindingsByRoot=this._bindingsByRootAndName,bindings=this._bindings;let bindingByName=bindingsByRoot[rootUuid];void 0===bindingByName&&(bindingByName={},bindingsByRoot[rootUuid]=bindingByName),bindingByName[trackName]=binding,binding._cacheIndex=bindings.length,bindings.push(binding)}_removeInactiveBinding(binding){const bindings=this._bindings,propBinding=binding.binding,rootUuid=propBinding.rootNode.uuid,trackName=propBinding.path,bindingsByRoot=this._bindingsByRootAndName,bindingByName=bindingsByRoot[rootUuid],lastInactiveBinding=bindings[bindings.length-1],cacheIndex=binding._cacheIndex;lastInactiveBinding._cacheIndex=cacheIndex,bindings[cacheIndex]=lastInactiveBinding,bindings.pop(),delete bindingByName[trackName],0===Object.keys(bindingByName).length&&delete bindingsByRoot[rootUuid]}_lendBinding(binding){const bindings=this._bindings,prevIndex=binding._cacheIndex,lastActiveIndex=this._nActiveBindings++,firstInactiveBinding=bindings[lastActiveIndex];binding._cacheIndex=lastActiveIndex,bindings[lastActiveIndex]=binding,firstInactiveBinding._cacheIndex=prevIndex,bindings[prevIndex]=firstInactiveBinding}_takeBackBinding(binding){const bindings=this._bindings,prevIndex=binding._cacheIndex,firstInactiveIndex=--this._nActiveBindings,lastActiveBinding=bindings[firstInactiveIndex];binding._cacheIndex=firstInactiveIndex,bindings[firstInactiveIndex]=binding,lastActiveBinding._cacheIndex=prevIndex,bindings[prevIndex]=lastActiveBinding}_lendControlInterpolant(){const interpolants=this._controlInterpolants,lastActiveIndex=this._nActiveControlInterpolants++;let interpolant=interpolants[lastActiveIndex];return void 0===interpolant&&(interpolant=new LinearInterpolant(new Float32Array(2),new Float32Array(2),1,_controlInterpolantsResultBuffer),interpolant.__cacheIndex=lastActiveIndex,interpolants[lastActiveIndex]=interpolant),interpolant}_takeBackControlInterpolant(interpolant){const interpolants=this._controlInterpolants,prevIndex=interpolant.__cacheIndex,firstInactiveIndex=--this._nActiveControlInterpolants,lastActiveInterpolant=interpolants[firstInactiveIndex];interpolant.__cacheIndex=firstInactiveIndex,interpolants[firstInactiveIndex]=interpolant,lastActiveInterpolant.__cacheIndex=prevIndex,interpolants[prevIndex]=lastActiveInterpolant}clipAction(clip,optionalRoot,blendMode){const root=optionalRoot||this._root,rootUuid=root.uuid;let clipObject="string"==typeof clip?AnimationClip.findByName(root,clip):clip;const clipUuid=null!==clipObject?clipObject.uuid:clip,actionsForClip=this._actionsByClip[clipUuid];let prototypeAction=null;if(void 0===blendMode&&(blendMode=null!==clipObject?clipObject.blendMode:NormalAnimationBlendMode),void 0!==actionsForClip){const existingAction=actionsForClip.actionByRoot[rootUuid];if(void 0!==existingAction&&existingAction.blendMode===blendMode)return existingAction;prototypeAction=actionsForClip.knownActions[0],null===clipObject&&(clipObject=prototypeAction._clip)}if(null===clipObject)return null;const newAction=new AnimationAction(this,clipObject,optionalRoot,blendMode);return this._bindAction(newAction,prototypeAction),this._addInactiveAction(newAction,clipUuid,rootUuid),newAction}existingAction(clip,optionalRoot){const root=optionalRoot||this._root,rootUuid=root.uuid,clipObject="string"==typeof clip?AnimationClip.findByName(root,clip):clip,clipUuid=clipObject?clipObject.uuid:clip,actionsForClip=this._actionsByClip[clipUuid];return void 0!==actionsForClip&&actionsForClip.actionByRoot[rootUuid]||null}stopAllAction(){const actions=this._actions;for(let i=this._nActiveActions-1;i>=0;--i)actions[i].stop();return this}update(deltaTime){deltaTime*=this.timeScale;const actions=this._actions,nActions=this._nActiveActions,time=this.time+=deltaTime,timeDirection=Math.sign(deltaTime),accuIndex=this._accuIndex^=1;for(let i=0;i!==nActions;++i){actions[i]._update(time,deltaTime,timeDirection,accuIndex)}const bindings=this._bindings,nBindings=this._nActiveBindings;for(let i=0;i!==nBindings;++i)bindings[i].apply(accuIndex);return this}setTime(timeInSeconds){this.time=0;for(let i=0;i<this._actions.length;i++)this._actions[i].time=0;return this.update(timeInSeconds)}getRoot(){return this._root}uncacheClip(clip){const actions=this._actions,clipUuid=clip.uuid,actionsByClip=this._actionsByClip,actionsForClip=actionsByClip[clipUuid];if(void 0!==actionsForClip){const actionsToRemove=actionsForClip.knownActions;for(let i=0,n=actionsToRemove.length;i!==n;++i){const action=actionsToRemove[i];this._deactivateAction(action);const cacheIndex=action._cacheIndex,lastInactiveAction=actions[actions.length-1];action._cacheIndex=null,action._byClipCacheIndex=null,lastInactiveAction._cacheIndex=cacheIndex,actions[cacheIndex]=lastInactiveAction,actions.pop(),this._removeInactiveBindingsForAction(action)}delete actionsByClip[clipUuid]}}uncacheRoot(root){const rootUuid=root.uuid,actionsByClip=this._actionsByClip;for(const clipUuid in actionsByClip){const action=actionsByClip[clipUuid].actionByRoot[rootUuid];void 0!==action&&(this._deactivateAction(action),this._removeInactiveAction(action))}const bindingByName=this._bindingsByRootAndName[rootUuid];if(void 0!==bindingByName)for(const trackName in bindingByName){const binding=bindingByName[trackName];binding.restoreOriginalState(),this._removeInactiveBinding(binding)}}uncacheAction(clip,optionalRoot){const action=this.existingAction(clip,optionalRoot);null!==action&&(this._deactivateAction(action),this._removeInactiveAction(action))}}class Uniform{constructor(value){this.value=value}clone(){return new Uniform(void 0===this.value.clone?this.value:this.value.clone())}}let id=0;class UniformsGroup extends EventDispatcher{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:id++}),this.name="",this.usage=StaticDrawUsage,this.uniforms=[]}add(uniform){return this.uniforms.push(uniform),this}remove(uniform){const index=this.uniforms.indexOf(uniform);return-1!==index&&this.uniforms.splice(index,1),this}setName(name){return this.name=name,this}setUsage(value){return this.usage=value,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(source){this.name=source.name,this.usage=source.usage;const uniformsSource=source.uniforms;this.uniforms.length=0;for(let i=0,l=uniformsSource.length;i<l;i++)this.uniforms.push(uniformsSource[i].clone());return this}clone(){return(new this.constructor).copy(this)}}class InstancedInterleavedBuffer extends InterleavedBuffer{constructor(array,stride,meshPerAttribute=1){super(array,stride),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=meshPerAttribute}copy(source){return super.copy(source),this.meshPerAttribute=source.meshPerAttribute,this}clone(data){const ib=super.clone(data);return ib.meshPerAttribute=this.meshPerAttribute,ib}toJSON(data){const json=super.toJSON(data);return json.isInstancedInterleavedBuffer=!0,json.meshPerAttribute=this.meshPerAttribute,json}}class GLBufferAttribute{constructor(buffer,type,itemSize,elementSize,count){this.isGLBufferAttribute=!0,this.name="",this.buffer=buffer,this.type=type,this.itemSize=itemSize,this.elementSize=elementSize,this.count=count,this.version=0}set needsUpdate(value){!0===value&&this.version++}setBuffer(buffer){return this.buffer=buffer,this}setType(type,elementSize){return this.type=type,this.elementSize=elementSize,this}setItemSize(itemSize){return this.itemSize=itemSize,this}setCount(count){return this.count=count,this}}class Raycaster{constructor(origin,direction,near=0,far=1/0){this.ray=new Ray(origin,direction),this.near=near,this.far=far,this.camera=null,this.layers=new Layers,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(origin,direction){this.ray.set(origin,direction)}setFromCamera(coords,camera){camera.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(camera.matrixWorld),this.ray.direction.set(coords.x,coords.y,.5).unproject(camera).sub(this.ray.origin).normalize(),this.camera=camera):camera.isOrthographicCamera?(this.ray.origin.set(coords.x,coords.y,(camera.near+camera.far)/(camera.near-camera.far)).unproject(camera),this.ray.direction.set(0,0,-1).transformDirection(camera.matrixWorld),this.camera=camera):console.error("THREE.Raycaster: Unsupported camera type: "+camera.type)}intersectObject(object,recursive=!0,intersects=[]){return intersectObject(object,this,intersects,recursive),intersects.sort(ascSort),intersects}intersectObjects(objects,recursive=!0,intersects=[]){for(let i=0,l=objects.length;i<l;i++)intersectObject(objects[i],this,intersects,recursive);return intersects.sort(ascSort),intersects}}function ascSort(a,b){return a.distance-b.distance}function intersectObject(object,raycaster,intersects,recursive){if(object.layers.test(raycaster.layers)&&object.raycast(raycaster,intersects),!0===recursive){const children=object.children;for(let i=0,l=children.length;i<l;i++)intersectObject(children[i],raycaster,intersects,!0)}}class Spherical{constructor(radius=1,phi=0,theta=0){return this.radius=radius,this.phi=phi,this.theta=theta,this}set(radius,phi,theta){return this.radius=radius,this.phi=phi,this.theta=theta,this}copy(other){return this.radius=other.radius,this.phi=other.phi,this.theta=other.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(v){return this.setFromCartesianCoords(v.x,v.y,v.z)}setFromCartesianCoords(x,y,z){return this.radius=Math.sqrt(x*x+y*y+z*z),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(x,z),this.phi=Math.acos(clamp(y/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class Cylindrical{constructor(radius=1,theta=0,y=0){return this.radius=radius,this.theta=theta,this.y=y,this}set(radius,theta,y){return this.radius=radius,this.theta=theta,this.y=y,this}copy(other){return this.radius=other.radius,this.theta=other.theta,this.y=other.y,this}setFromVector3(v){return this.setFromCartesianCoords(v.x,v.y,v.z)}setFromCartesianCoords(x,y,z){return this.radius=Math.sqrt(x*x+z*z),this.theta=Math.atan2(x,z),this.y=y,this}clone(){return(new this.constructor).copy(this)}}const _vector$4=new Vector2;class Box2{constructor(min=new Vector2(1/0,1/0),max=new Vector2(-1/0,-1/0)){this.isBox2=!0,this.min=min,this.max=max}set(min,max){return this.min.copy(min),this.max.copy(max),this}setFromPoints(points){this.makeEmpty();for(let i=0,il=points.length;i<il;i++)this.expandByPoint(points[i]);return this}setFromCenterAndSize(center,size){const halfSize=_vector$4.copy(size).multiplyScalar(.5);return this.min.copy(center).sub(halfSize),this.max.copy(center).add(halfSize),this}clone(){return(new this.constructor).copy(this)}copy(box){return this.min.copy(box.min),this.max.copy(box.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(target){return this.isEmpty()?target.set(0,0):target.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(target){return this.isEmpty()?target.set(0,0):target.subVectors(this.max,this.min)}expandByPoint(point){return this.min.min(point),this.max.max(point),this}expandByVector(vector){return this.min.sub(vector),this.max.add(vector),this}expandByScalar(scalar){return this.min.addScalar(-scalar),this.max.addScalar(scalar),this}containsPoint(point){return!(point.x<this.min.x||point.x>this.max.x||point.y<this.min.y||point.y>this.max.y)}containsBox(box){return this.min.x<=box.min.x&&box.max.x<=this.max.x&&this.min.y<=box.min.y&&box.max.y<=this.max.y}getParameter(point,target){return target.set((point.x-this.min.x)/(this.max.x-this.min.x),(point.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(box){return!(box.max.x<this.min.x||box.min.x>this.max.x||box.max.y<this.min.y||box.min.y>this.max.y)}clampPoint(point,target){return target.copy(point).clamp(this.min,this.max)}distanceToPoint(point){return this.clampPoint(point,_vector$4).distanceTo(point)}intersect(box){return this.min.max(box.min),this.max.min(box.max),this.isEmpty()&&this.makeEmpty(),this}union(box){return this.min.min(box.min),this.max.max(box.max),this}translate(offset){return this.min.add(offset),this.max.add(offset),this}equals(box){return box.min.equals(this.min)&&box.max.equals(this.max)}}const _startP=new Vector3,_startEnd=new Vector3;class Line3{constructor(start=new Vector3,end=new Vector3){this.start=start,this.end=end}set(start,end){return this.start.copy(start),this.end.copy(end),this}copy(line){return this.start.copy(line.start),this.end.copy(line.end),this}getCenter(target){return target.addVectors(this.start,this.end).multiplyScalar(.5)}delta(target){return target.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,target){return this.delta(target).multiplyScalar(t).add(this.start)}closestPointToPointParameter(point,clampToLine){_startP.subVectors(point,this.start),_startEnd.subVectors(this.end,this.start);const startEnd2=_startEnd.dot(_startEnd);let t=_startEnd.dot(_startP)/startEnd2;return clampToLine&&(t=clamp(t,0,1)),t}closestPointToPoint(point,clampToLine,target){const t=this.closestPointToPointParameter(point,clampToLine);return this.delta(target).multiplyScalar(t).add(this.start)}applyMatrix4(matrix){return this.start.applyMatrix4(matrix),this.end.applyMatrix4(matrix),this}equals(line){return line.start.equals(this.start)&&line.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}const _vector$3=new Vector3;class SpotLightHelper extends Object3D{constructor(light,color){super(),this.light=light,this.matrix=light.matrixWorld,this.matrixAutoUpdate=!1,this.color=color,this.type="SpotLightHelper";const geometry=new BufferGeometry,positions=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let i=0,j=1,l=32;i<l;i++,j++){const p1=i/l*Math.PI*2,p2=j/l*Math.PI*2;positions.push(Math.cos(p1),Math.sin(p1),1,Math.cos(p2),Math.sin(p2),1)}geometry.setAttribute("position",new Float32BufferAttribute(positions,3));const material=new LineBasicMaterial({fog:!1,toneMapped:!1});this.cone=new LineSegments(geometry,material),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1);const coneLength=this.light.distance?this.light.distance:1e3,coneWidth=coneLength*Math.tan(this.light.angle);this.cone.scale.set(coneWidth,coneWidth,coneLength),_vector$3.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(_vector$3),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const _vector$2=new Vector3,_boneMatrix=new Matrix4,_matrixWorldInv=new Matrix4;class SkeletonHelper extends LineSegments{constructor(object){const bones=getBoneList(object),geometry=new BufferGeometry,vertices=[],colors=[],color1=new Color(0,0,1),color2=new Color(0,1,0);for(let i=0;i<bones.length;i++){const bone=bones[i];bone.parent&&bone.parent.isBone&&(vertices.push(0,0,0),vertices.push(0,0,0),colors.push(color1.r,color1.g,color1.b),colors.push(color2.r,color2.g,color2.b))}geometry.setAttribute("position",new Float32BufferAttribute(vertices,3)),geometry.setAttribute("color",new Float32BufferAttribute(colors,3));super(geometry,new LineBasicMaterial({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=object,this.bones=bones,this.matrix=object.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(force){const bones=this.bones,geometry=this.geometry,position=geometry.getAttribute("position");_matrixWorldInv.copy(this.root.matrixWorld).invert();for(let i=0,j=0;i<bones.length;i++){const bone=bones[i];bone.parent&&bone.parent.isBone&&(_boneMatrix.multiplyMatrices(_matrixWorldInv,bone.matrixWorld),_vector$2.setFromMatrixPosition(_boneMatrix),position.setXYZ(j,_vector$2.x,_vector$2.y,_vector$2.z),_boneMatrix.multiplyMatrices(_matrixWorldInv,bone.parent.matrixWorld),_vector$2.setFromMatrixPosition(_boneMatrix),position.setXYZ(j+1,_vector$2.x,_vector$2.y,_vector$2.z),j+=2)}geometry.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(force)}dispose(){this.geometry.dispose(),this.material.dispose()}}function getBoneList(object){const boneList=[];!0===object.isBone&&boneList.push(object);for(let i=0;i<object.children.length;i++)boneList.push.apply(boneList,getBoneList(object.children[i]));return boneList}class PointLightHelper extends Mesh{constructor(light,sphereSize,color){super(new SphereGeometry(sphereSize,4,2),new MeshBasicMaterial({wireframe:!0,fog:!1,toneMapped:!1})),this.light=light,this.color=color,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const _vector$1=new Vector3,_color1=new Color,_color2=new Color;class HemisphereLightHelper extends Object3D{constructor(light,size,color){super(),this.light=light,this.matrix=light.matrixWorld,this.matrixAutoUpdate=!1,this.color=color,this.type="HemisphereLightHelper";const geometry=new OctahedronGeometry(size);geometry.rotateY(.5*Math.PI),this.material=new MeshBasicMaterial({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const position=geometry.getAttribute("position"),colors=new Float32Array(3*position.count);geometry.setAttribute("color",new BufferAttribute(colors,3)),this.add(new Mesh(geometry,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const mesh=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const colors=mesh.geometry.getAttribute("color");_color1.copy(this.light.color),_color2.copy(this.light.groundColor);for(let i=0,l=colors.count;i<l;i++){const color=i<l/2?_color1:_color2;colors.setXYZ(i,color.r,color.g,color.b)}colors.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),mesh.lookAt(_vector$1.setFromMatrixPosition(this.light.matrixWorld).negate())}}class GridHelper extends LineSegments{constructor(size=10,divisions=10,color1=4473924,color2=8947848){color1=new Color(color1),color2=new Color(color2);const center=divisions/2,step=size/divisions,halfSize=size/2,vertices=[],colors=[];for(let i=0,j=0,k=-halfSize;i<=divisions;i++,k+=step){vertices.push(-halfSize,0,k,halfSize,0,k),vertices.push(k,0,-halfSize,k,0,halfSize);const color=i===center?color1:color2;color.toArray(colors,j),j+=3,color.toArray(colors,j),j+=3,color.toArray(colors,j),j+=3,color.toArray(colors,j),j+=3}const geometry=new BufferGeometry;geometry.setAttribute("position",new Float32BufferAttribute(vertices,3)),geometry.setAttribute("color",new Float32BufferAttribute(colors,3));super(geometry,new LineBasicMaterial({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class PolarGridHelper extends LineSegments{constructor(radius=10,sectors=16,rings=8,divisions=64,color1=4473924,color2=8947848){color1=new Color(color1),color2=new Color(color2);const vertices=[],colors=[];if(sectors>1)for(let i=0;i<sectors;i++){const v=i/sectors*(2*Math.PI),x=Math.sin(v)*radius,z=Math.cos(v)*radius;vertices.push(0,0,0),vertices.push(x,0,z);const color=1&i?color1:color2;colors.push(color.r,color.g,color.b),colors.push(color.r,color.g,color.b)}for(let i=0;i<rings;i++){const color=1&i?color1:color2,r=radius-radius/rings*i;for(let j=0;j<divisions;j++){let v=j/divisions*(2*Math.PI),x=Math.sin(v)*r,z=Math.cos(v)*r;vertices.push(x,0,z),colors.push(color.r,color.g,color.b),v=(j+1)/divisions*(2*Math.PI),x=Math.sin(v)*r,z=Math.cos(v)*r,vertices.push(x,0,z),colors.push(color.r,color.g,color.b)}}const geometry=new BufferGeometry;geometry.setAttribute("position",new Float32BufferAttribute(vertices,3)),geometry.setAttribute("color",new Float32BufferAttribute(colors,3));super(geometry,new LineBasicMaterial({vertexColors:!0,toneMapped:!1})),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const _v1=new Vector3,_v2=new Vector3,_v3=new Vector3;class DirectionalLightHelper extends Object3D{constructor(light,size,color){super(),this.light=light,this.matrix=light.matrixWorld,this.matrixAutoUpdate=!1,this.color=color,this.type="DirectionalLightHelper",void 0===size&&(size=1);let geometry=new BufferGeometry;geometry.setAttribute("position",new Float32BufferAttribute([-size,size,0,size,size,0,size,-size,0,-size,-size,0,-size,size,0],3));const material=new LineBasicMaterial({fog:!1,toneMapped:!1});this.lightPlane=new Line(geometry,material),this.add(this.lightPlane),geometry=new BufferGeometry,geometry.setAttribute("position",new Float32BufferAttribute([0,0,0,0,0,1],3)),this.targetLine=new Line(geometry,material),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),_v1.setFromMatrixPosition(this.light.matrixWorld),_v2.setFromMatrixPosition(this.light.target.matrixWorld),_v3.subVectors(_v2,_v1),this.lightPlane.lookAt(_v2),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(_v2),this.targetLine.scale.z=_v3.length()}}const _vector=new Vector3,_camera=new Camera;class CameraHelper extends LineSegments{constructor(camera){const geometry=new BufferGeometry,material=new LineBasicMaterial({color:16777215,vertexColors:!0,toneMapped:!1}),vertices=[],colors=[],pointMap={};function addLine(a,b){addPoint(a),addPoint(b)}function addPoint(id){vertices.push(0,0,0),colors.push(0,0,0),void 0===pointMap[id]&&(pointMap[id]=[]),pointMap[id].push(vertices.length/3-1)}addLine("n1","n2"),addLine("n2","n4"),addLine("n4","n3"),addLine("n3","n1"),addLine("f1","f2"),addLine("f2","f4"),addLine("f4","f3"),addLine("f3","f1"),addLine("n1","f1"),addLine("n2","f2"),addLine("n3","f3"),addLine("n4","f4"),addLine("p","n1"),addLine("p","n2"),addLine("p","n3"),addLine("p","n4"),addLine("u1","u2"),addLine("u2","u3"),addLine("u3","u1"),addLine("c","t"),addLine("p","c"),addLine("cn1","cn2"),addLine("cn3","cn4"),addLine("cf1","cf2"),addLine("cf3","cf4"),geometry.setAttribute("position",new Float32BufferAttribute(vertices,3)),geometry.setAttribute("color",new Float32BufferAttribute(colors,3)),super(geometry,material),this.type="CameraHelper",this.camera=camera,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=camera.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=pointMap,this.update();const colorFrustum=new Color(16755200),colorCone=new Color(16711680),colorUp=new Color(43775),colorTarget=new Color(16777215),colorCross=new Color(3355443);this.setColors(colorFrustum,colorCone,colorUp,colorTarget,colorCross)}setColors(frustum,cone,up,target,cross){const colorAttribute=this.geometry.getAttribute("color");colorAttribute.setXYZ(0,frustum.r,frustum.g,frustum.b),colorAttribute.setXYZ(1,frustum.r,frustum.g,frustum.b),colorAttribute.setXYZ(2,frustum.r,frustum.g,frustum.b),colorAttribute.setXYZ(3,frustum.r,frustum.g,frustum.b),colorAttribute.setXYZ(4,frustum.r,frustum.g,frustum.b),colorAttribute.setXYZ(5,frustum.r,frustum.g,frustum.b),colorAttribute.setXYZ(6,frustum.r,frustum.g,frustum.b),colorAttribute.setXYZ(7,frustum.r,frustum.g,frustum.b),colorAttribute.setXYZ(8,frustum.r,frustum.g,frustum.b),colorAttribute.setXYZ(9,frustum.r,frustum.g,frustum.b),colorAttribute.setXYZ(10,frustum.r,frustum.g,frustum.b),colorAttribute.setXYZ(11,frustum.r,frustum.g,frustum.b),colorAttribute.setXYZ(12,frustum.r,frustum.g,frustum.b),colorAttribute.setXYZ(13,frustum.r,frustum.g,frustum.b),colorAttribute.setXYZ(14,frustum.r,frustum.g,frustum.b),colorAttribute.setXYZ(15,frustum.r,frustum.g,frustum.b),colorAttribute.setXYZ(16,frustum.r,frustum.g,frustum.b),colorAttribute.setXYZ(17,frustum.r,frustum.g,frustum.b),colorAttribute.setXYZ(18,frustum.r,frustum.g,frustum.b),colorAttribute.setXYZ(19,frustum.r,frustum.g,frustum.b),colorAttribute.setXYZ(20,frustum.r,frustum.g,frustum.b),colorAttribute.setXYZ(21,frustum.r,frustum.g,frustum.b),colorAttribute.setXYZ(22,frustum.r,frustum.g,frustum.b),colorAttribute.setXYZ(23,frustum.r,frustum.g,frustum.b),colorAttribute.setXYZ(24,cone.r,cone.g,cone.b),colorAttribute.setXYZ(25,cone.r,cone.g,cone.b),colorAttribute.setXYZ(26,cone.r,cone.g,cone.b),colorAttribute.setXYZ(27,cone.r,cone.g,cone.b),colorAttribute.setXYZ(28,cone.r,cone.g,cone.b),colorAttribute.setXYZ(29,cone.r,cone.g,cone.b),colorAttribute.setXYZ(30,cone.r,cone.g,cone.b),colorAttribute.setXYZ(31,cone.r,cone.g,cone.b),colorAttribute.setXYZ(32,up.r,up.g,up.b),colorAttribute.setXYZ(33,up.r,up.g,up.b),colorAttribute.setXYZ(34,up.r,up.g,up.b),colorAttribute.setXYZ(35,up.r,up.g,up.b),colorAttribute.setXYZ(36,up.r,up.g,up.b),colorAttribute.setXYZ(37,up.r,up.g,up.b),colorAttribute.setXYZ(38,target.r,target.g,target.b),colorAttribute.setXYZ(39,target.r,target.g,target.b),colorAttribute.setXYZ(40,cross.r,cross.g,cross.b),colorAttribute.setXYZ(41,cross.r,cross.g,cross.b),colorAttribute.setXYZ(42,cross.r,cross.g,cross.b),colorAttribute.setXYZ(43,cross.r,cross.g,cross.b),colorAttribute.setXYZ(44,cross.r,cross.g,cross.b),colorAttribute.setXYZ(45,cross.r,cross.g,cross.b),colorAttribute.setXYZ(46,cross.r,cross.g,cross.b),colorAttribute.setXYZ(47,cross.r,cross.g,cross.b),colorAttribute.setXYZ(48,cross.r,cross.g,cross.b),colorAttribute.setXYZ(49,cross.r,cross.g,cross.b),colorAttribute.needsUpdate=!0}update(){const geometry=this.geometry,pointMap=this.pointMap;_camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),setPoint("c",pointMap,geometry,_camera,0,0,-1),setPoint("t",pointMap,geometry,_camera,0,0,1),setPoint("n1",pointMap,geometry,_camera,-1,-1,-1),setPoint("n2",pointMap,geometry,_camera,1,-1,-1),setPoint("n3",pointMap,geometry,_camera,-1,1,-1),setPoint("n4",pointMap,geometry,_camera,1,1,-1),setPoint("f1",pointMap,geometry,_camera,-1,-1,1),setPoint("f2",pointMap,geometry,_camera,1,-1,1),setPoint("f3",pointMap,geometry,_camera,-1,1,1),setPoint("f4",pointMap,geometry,_camera,1,1,1),setPoint("u1",pointMap,geometry,_camera,.7,1.1,-1),setPoint("u2",pointMap,geometry,_camera,-.7,1.1,-1),setPoint("u3",pointMap,geometry,_camera,0,2,-1),setPoint("cf1",pointMap,geometry,_camera,-1,0,1),setPoint("cf2",pointMap,geometry,_camera,1,0,1),setPoint("cf3",pointMap,geometry,_camera,0,-1,1),setPoint("cf4",pointMap,geometry,_camera,0,1,1),setPoint("cn1",pointMap,geometry,_camera,-1,0,-1),setPoint("cn2",pointMap,geometry,_camera,1,0,-1),setPoint("cn3",pointMap,geometry,_camera,0,-1,-1),setPoint("cn4",pointMap,geometry,_camera,0,1,-1),geometry.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function setPoint(point,pointMap,geometry,camera,x,y,z){_vector.set(x,y,z).unproject(camera);const points=pointMap[point];if(void 0!==points){const position=geometry.getAttribute("position");for(let i=0,l=points.length;i<l;i++)position.setXYZ(points[i],_vector.x,_vector.y,_vector.z)}}const _box=new Box3;class BoxHelper extends LineSegments{constructor(object,color=16776960){const indices=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),positions=new Float32Array(24),geometry=new BufferGeometry;geometry.setIndex(new BufferAttribute(indices,1)),geometry.setAttribute("position",new BufferAttribute(positions,3)),super(geometry,new LineBasicMaterial({color,toneMapped:!1})),this.object=object,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(object){if(void 0!==object&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&_box.setFromObject(this.object),_box.isEmpty())return;const min=_box.min,max=_box.max,position=this.geometry.attributes.position,array=position.array;array[0]=max.x,array[1]=max.y,array[2]=max.z,array[3]=min.x,array[4]=max.y,array[5]=max.z,array[6]=min.x,array[7]=min.y,array[8]=max.z,array[9]=max.x,array[10]=min.y,array[11]=max.z,array[12]=max.x,array[13]=max.y,array[14]=min.z,array[15]=min.x,array[16]=max.y,array[17]=min.z,array[18]=min.x,array[19]=min.y,array[20]=min.z,array[21]=max.x,array[22]=min.y,array[23]=min.z,position.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(object){return this.object=object,this.update(),this}copy(source,recursive){return super.copy(source,recursive),this.object=source.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Box3Helper extends LineSegments{constructor(box,color=16776960){const indices=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),geometry=new BufferGeometry;geometry.setIndex(new BufferAttribute(indices,1)),geometry.setAttribute("position",new Float32BufferAttribute([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(geometry,new LineBasicMaterial({color,toneMapped:!1})),this.box=box,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(force){const box=this.box;box.isEmpty()||(box.getCenter(this.position),box.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(force))}dispose(){this.geometry.dispose(),this.material.dispose()}}class PlaneHelper extends Line{constructor(plane,size=1,hex=16776960){const color=hex,geometry=new BufferGeometry;geometry.setAttribute("position",new Float32BufferAttribute([1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],3)),geometry.computeBoundingSphere(),super(geometry,new LineBasicMaterial({color,toneMapped:!1})),this.type="PlaneHelper",this.plane=plane,this.size=size;const geometry2=new BufferGeometry;geometry2.setAttribute("position",new Float32BufferAttribute([1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],3)),geometry2.computeBoundingSphere(),this.add(new Mesh(geometry2,new MeshBasicMaterial({color,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(force){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(force)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const _axis=new Vector3;let _lineGeometry,_coneGeometry;class ArrowHelper extends Object3D{constructor(dir=new Vector3(0,0,1),origin=new Vector3(0,0,0),length=1,color=16776960,headLength=.2*length,headWidth=.2*headLength){super(),this.type="ArrowHelper",void 0===_lineGeometry&&(_lineGeometry=new BufferGeometry,_lineGeometry.setAttribute("position",new Float32BufferAttribute([0,0,0,0,1,0],3)),_coneGeometry=new CylinderGeometry(0,.5,1,5,1),_coneGeometry.translate(0,-.5,0)),this.position.copy(origin),this.line=new Line(_lineGeometry,new LineBasicMaterial({color,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Mesh(_coneGeometry,new MeshBasicMaterial({color,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(dir),this.setLength(length,headLength,headWidth)}setDirection(dir){if(dir.y>.99999)this.quaternion.set(0,0,0,1);else if(dir.y<-.99999)this.quaternion.set(1,0,0,0);else{_axis.set(dir.z,0,-dir.x).normalize();const radians=Math.acos(dir.y);this.quaternion.setFromAxisAngle(_axis,radians)}}setLength(length,headLength=.2*length,headWidth=.2*headLength){this.line.scale.set(1,Math.max(1e-4,length-headLength),1),this.line.updateMatrix(),this.cone.scale.set(headWidth,headLength,headWidth),this.cone.position.y=length,this.cone.updateMatrix()}setColor(color){this.line.material.color.set(color),this.cone.material.color.set(color)}copy(source){return super.copy(source,!1),this.line.copy(source.line),this.cone.copy(source.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class AxesHelper extends LineSegments{constructor(size=1){const vertices=[0,0,0,size,0,0,0,0,0,0,size,0,0,0,0,0,0,size],geometry=new BufferGeometry;geometry.setAttribute("position",new Float32BufferAttribute(vertices,3)),geometry.setAttribute("color",new Float32BufferAttribute([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));super(geometry,new LineBasicMaterial({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}setColors(xAxisColor,yAxisColor,zAxisColor){const color=new Color,array=this.geometry.attributes.color.array;return color.set(xAxisColor),color.toArray(array,0),color.toArray(array,3),color.set(yAxisColor),color.toArray(array,6),color.toArray(array,9),color.set(zAxisColor),color.toArray(array,12),color.toArray(array,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class ShapePath{constructor(){this.type="ShapePath",this.color=new Color,this.subPaths=[],this.currentPath=null}moveTo(x,y){return this.currentPath=new Path,this.subPaths.push(this.currentPath),this.currentPath.moveTo(x,y),this}lineTo(x,y){return this.currentPath.lineTo(x,y),this}quadraticCurveTo(aCPx,aCPy,aX,aY){return this.currentPath.quadraticCurveTo(aCPx,aCPy,aX,aY),this}bezierCurveTo(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY){return this.currentPath.bezierCurveTo(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY),this}splineThru(pts){return this.currentPath.splineThru(pts),this}toShapes(isCCW){function isPointInsidePolygon(inPt,inPolygon){const polyLen=inPolygon.length;let inside=!1;for(let p=polyLen-1,q=0;q<polyLen;p=q++){let edgeLowPt=inPolygon[p],edgeHighPt=inPolygon[q],edgeDx=edgeHighPt.x-edgeLowPt.x,edgeDy=edgeHighPt.y-edgeLowPt.y;if(Math.abs(edgeDy)>Number.EPSILON){if(edgeDy<0&&(edgeLowPt=inPolygon[q],edgeDx=-edgeDx,edgeHighPt=inPolygon[p],edgeDy=-edgeDy),inPt.y<edgeLowPt.y||inPt.y>edgeHighPt.y)continue;if(inPt.y===edgeLowPt.y){if(inPt.x===edgeLowPt.x)return!0}else{const perpEdge=edgeDy*(inPt.x-edgeLowPt.x)-edgeDx*(inPt.y-edgeLowPt.y);if(0===perpEdge)return!0;if(perpEdge<0)continue;inside=!inside}}else{if(inPt.y!==edgeLowPt.y)continue;if(edgeHighPt.x<=inPt.x&&inPt.x<=edgeLowPt.x||edgeLowPt.x<=inPt.x&&inPt.x<=edgeHighPt.x)return!0}}return inside}const isClockWise=ShapeUtils.isClockWise,subPaths=this.subPaths;if(0===subPaths.length)return[];let solid,tmpPath,tmpShape;const shapes=[];if(1===subPaths.length)return tmpPath=subPaths[0],tmpShape=new Shape,tmpShape.curves=tmpPath.curves,shapes.push(tmpShape),shapes;let holesFirst=!isClockWise(subPaths[0].getPoints());holesFirst=isCCW?!holesFirst:holesFirst;const betterShapeHoles=[],newShapes=[];let tmpPoints,tmpHoles,newShapeHoles=[],mainIdx=0;newShapes[mainIdx]=void 0,newShapeHoles[mainIdx]=[];for(let i=0,l=subPaths.length;i<l;i++)tmpPath=subPaths[i],tmpPoints=tmpPath.getPoints(),solid=isClockWise(tmpPoints),solid=isCCW?!solid:solid,solid?(!holesFirst&&newShapes[mainIdx]&&mainIdx++,newShapes[mainIdx]={s:new Shape,p:tmpPoints},newShapes[mainIdx].s.curves=tmpPath.curves,holesFirst&&mainIdx++,newShapeHoles[mainIdx]=[]):newShapeHoles[mainIdx].push({h:tmpPath,p:tmpPoints[0]});if(!newShapes[0])return function toShapesNoHoles(inSubpaths){const shapes=[];for(let i=0,l=inSubpaths.length;i<l;i++){const tmpPath=inSubpaths[i],tmpShape=new Shape;tmpShape.curves=tmpPath.curves,shapes.push(tmpShape)}return shapes}(subPaths);if(newShapes.length>1){let ambiguous=!1,toChange=0;for(let sIdx=0,sLen=newShapes.length;sIdx<sLen;sIdx++)betterShapeHoles[sIdx]=[];for(let sIdx=0,sLen=newShapes.length;sIdx<sLen;sIdx++){const sho=newShapeHoles[sIdx];for(let hIdx=0;hIdx<sho.length;hIdx++){const ho=sho[hIdx];let hole_unassigned=!0;for(let s2Idx=0;s2Idx<newShapes.length;s2Idx++)isPointInsidePolygon(ho.p,newShapes[s2Idx].p)&&(sIdx!==s2Idx&&toChange++,hole_unassigned?(hole_unassigned=!1,betterShapeHoles[s2Idx].push(ho)):ambiguous=!0);hole_unassigned&&betterShapeHoles[sIdx].push(ho)}}toChange>0&&!1===ambiguous&&(newShapeHoles=betterShapeHoles)}for(let i=0,il=newShapes.length;i<il;i++){tmpShape=newShapes[i].s,shapes.push(tmpShape),tmpHoles=newShapeHoles[i];for(let j=0,jl=tmpHoles.length;j<jl;j++)tmpShape.holes.push(tmpHoles[j].h)}return shapes}}class BoxBufferGeometry extends BoxGeometry{constructor(width,height,depth,widthSegments,heightSegments,depthSegments){console.warn("THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry."),super(width,height,depth,widthSegments,heightSegments,depthSegments)}}class CapsuleBufferGeometry extends CapsuleGeometry{constructor(radius,length,capSegments,radialSegments){console.warn("THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry."),super(radius,length,capSegments,radialSegments)}}class CircleBufferGeometry extends CircleGeometry{constructor(radius,segments,thetaStart,thetaLength){console.warn("THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry."),super(radius,segments,thetaStart,thetaLength)}}class ConeBufferGeometry extends ConeGeometry{constructor(radius,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength){console.warn("THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry."),super(radius,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength)}}class CylinderBufferGeometry extends CylinderGeometry{constructor(radiusTop,radiusBottom,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength){console.warn("THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry."),super(radiusTop,radiusBottom,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength)}}class DodecahedronBufferGeometry extends DodecahedronGeometry{constructor(radius,detail){console.warn("THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry."),super(radius,detail)}}class ExtrudeBufferGeometry extends ExtrudeGeometry{constructor(shapes,options){console.warn("THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry."),super(shapes,options)}}class IcosahedronBufferGeometry extends IcosahedronGeometry{constructor(radius,detail){console.warn("THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry."),super(radius,detail)}}class LatheBufferGeometry extends LatheGeometry{constructor(points,segments,phiStart,phiLength){console.warn("THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry."),super(points,segments,phiStart,phiLength)}}class OctahedronBufferGeometry extends OctahedronGeometry{constructor(radius,detail){console.warn("THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry."),super(radius,detail)}}class PlaneBufferGeometry extends PlaneGeometry{constructor(width,height,widthSegments,heightSegments){console.warn("THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry."),super(width,height,widthSegments,heightSegments)}}class PolyhedronBufferGeometry extends PolyhedronGeometry{constructor(vertices,indices,radius,detail){console.warn("THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry."),super(vertices,indices,radius,detail)}}class RingBufferGeometry extends RingGeometry{constructor(innerRadius,outerRadius,thetaSegments,phiSegments,thetaStart,thetaLength){console.warn("THREE.RingBufferGeometry has been renamed to THREE.RingGeometry."),super(innerRadius,outerRadius,thetaSegments,phiSegments,thetaStart,thetaLength)}}class ShapeBufferGeometry extends ShapeGeometry{constructor(shapes,curveSegments){console.warn("THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry."),super(shapes,curveSegments)}}class SphereBufferGeometry extends SphereGeometry{constructor(radius,widthSegments,heightSegments,phiStart,phiLength,thetaStart,thetaLength){console.warn("THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry."),super(radius,widthSegments,heightSegments,phiStart,phiLength,thetaStart,thetaLength)}}class TetrahedronBufferGeometry extends TetrahedronGeometry{constructor(radius,detail){console.warn("THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry."),super(radius,detail)}}class TorusBufferGeometry extends TorusGeometry{constructor(radius,tube,radialSegments,tubularSegments,arc){console.warn("THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry."),super(radius,tube,radialSegments,tubularSegments,arc)}}class TorusKnotBufferGeometry extends TorusKnotGeometry{constructor(radius,tube,tubularSegments,radialSegments,p,q){console.warn("THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry."),super(radius,tube,tubularSegments,radialSegments,p,q)}}class TubeBufferGeometry extends TubeGeometry{constructor(path,tubularSegments,radius,radialSegments,closed){console.warn("THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry."),super(path,tubularSegments,radius,radialSegments,closed)}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:REVISION}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=REVISION)}}]);
"use strict";(self.webpackChunk_ng_components_source=self.webpackChunk_ng_components_source||[]).push([[2155],{"./node_modules/rxjs/dist/esm5/internal/operators/throttleTime.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{c:()=>throttleTime});var scheduler_async=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/scheduler/async.js"),lift=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/lift.js"),OperatorSubscriber=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"),innerFrom=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js");var timer=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/timer.js");function throttleTime(duration,scheduler,config){void 0===scheduler&&(scheduler=scheduler_async.E);var duration$=(0,timer.O)(duration,scheduler);return function throttle(durationSelector,config){return(0,lift.N)((function(source,subscriber){var _a=null!=config?config:{},_b=_a.leading,leading=void 0===_b||_b,_c=_a.trailing,trailing=void 0!==_c&&_c,hasValue=!1,sendValue=null,throttled=null,isComplete=!1,endThrottling=function(){null==throttled||throttled.unsubscribe(),throttled=null,trailing&&(send(),isComplete&&subscriber.complete())},cleanupThrottling=function(){throttled=null,isComplete&&subscriber.complete()},startThrottle=function(value){return throttled=(0,innerFrom.Tg)(durationSelector(value)).subscribe((0,OperatorSubscriber._)(subscriber,endThrottling,cleanupThrottling))},send=function(){if(hasValue){hasValue=!1;var value=sendValue;sendValue=null,subscriber.next(value),!isComplete&&startThrottle(value)}};source.subscribe((0,OperatorSubscriber._)(subscriber,(function(value){hasValue=!0,sendValue=value,(!throttled||throttled.closed)&&(leading?send():startThrottle(value))}),(function(){isComplete=!0,(!(trailing&&hasValue&&throttled)||throttled.closed)&&subscriber.complete()})))}))}((function(){return duration$}),config)}},"./projects/components/src/component/select/Select.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__,disabledSelect:()=>disabledSelect,invalidSelect:()=>invalidSelect,multipleSelect:()=>multipleSelect,singleSelect:()=>singleSelect,singleSelectWithSearch:()=>singleSelectWithSearch});var _common_enum_align_enum__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./projects/components/src/common/enum/align.enum.ts"),_common_enum_vertical_align_enum__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./projects/components/src/common/enum/vertical-align.enum.ts"),_select_select_component__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./projects/components/src/component/select/select/select.component.ts"),faker__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/faker/index.js"),_angular_forms__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),_storybook_angular__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),_angular_common_http__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/common/fesm2022/http.mjs"),_icon_icon_sprite_directive__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./projects/components/src/component/icon/icon-sprite.directive.ts"),_select_option_directive__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./projects/components/src/component/select/select-option.directive.ts"),_select_value_directive__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./projects/components/src/component/select/select-value.directive.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Component/Select",decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_1__.applicationConfig)({providers:[(0,_angular_common_http__WEBPACK_IMPORTED_MODULE_2__.$R)()]})],argTypes:{align:{options:["Align.left"," Align.right","Align.center","Align.auto"],control:{type:"select"}},verticalAlign:{options:["VerticalAlign.bottom","VerticalAlign.top","VerticalAlign.center","VerticalAlign.auto","VerticalAlign.innerAuto","VerticalAlign.innerBottom","VerticalAlign.innerTop"],control:{type:"select"}},viewType:{options:["rounded","brick","circle"],control:{type:"select"}},allowNull:{control:{type:"boolean"}},virtual:{control:{type:"boolean"}},autoClose:{control:{type:"boolean"}},autoCloseIgnore:{options:["esc","enter","inside","outside"],control:{type:"multi-select"}}},args:{viewType:"rounded",verticalAlign:"VerticalAlign.auto",align:"Align.auto",allowNull:!0,autoClose:!0,virtual:!1,autoCloseIgnore:["esc"]},component:_select_select_component__WEBPACK_IMPORTED_MODULE_3__.w,moduleMetadata:{imports:[_angular_forms__WEBPACK_IMPORTED_MODULE_4__.YN]}},getOptions=size=>{const res=[];for(let i=0;i<size;i++)res.push({id:i,name:faker__WEBPACK_IMPORTED_MODULE_0__.address.city()});return res},alignMap=(new Map).set("Align.left",_common_enum_align_enum__WEBPACK_IMPORTED_MODULE_5__.W.left).set("Align.auto",_common_enum_align_enum__WEBPACK_IMPORTED_MODULE_5__.W.auto).set("Align.center",_common_enum_align_enum__WEBPACK_IMPORTED_MODULE_5__.W.center).set("Align.right",_common_enum_align_enum__WEBPACK_IMPORTED_MODULE_5__.W.right),valignMap=(new Map).set("VerticalAlign.bottom",_common_enum_vertical_align_enum__WEBPACK_IMPORTED_MODULE_6__.G.bottom).set("VerticalAlign.top",_common_enum_vertical_align_enum__WEBPACK_IMPORTED_MODULE_6__.G.top).set("VerticalAlign.center",_common_enum_vertical_align_enum__WEBPACK_IMPORTED_MODULE_6__.G.center).set("VerticalAlign.auto",_common_enum_vertical_align_enum__WEBPACK_IMPORTED_MODULE_6__.G.auto).set("VerticalAlign.innerAuto",_common_enum_vertical_align_enum__WEBPACK_IMPORTED_MODULE_6__.G.innerAuto).set("VerticalAlign.innerBottom",_common_enum_vertical_align_enum__WEBPACK_IMPORTED_MODULE_6__.G.innerBottom).set("VerticalAlign.innerTop",_common_enum_vertical_align_enum__WEBPACK_IMPORTED_MODULE_6__.G.innerTop),singleSelect=args=>({moduleMetadata:{imports:[_angular_forms__WEBPACK_IMPORTED_MODULE_4__.YN,_icon_icon_sprite_directive__WEBPACK_IMPORTED_MODULE_7__._,_select_select_component__WEBPACK_IMPORTED_MODULE_3__.w,_select_option_directive__WEBPACK_IMPORTED_MODULE_8__.F,_select_value_directive__WEBPACK_IMPORTED_MODULE_9__.l]},props:{...args,valignMap,alignMap,icon:"user",options:getOptions(1e3)},template:'<div class="padding-4 bg-panel-50" [tetaIconSprite]="\'assets/icons.svg\'">\n    <teta-select  style="width: 200px;"\n    [viewType]="viewType"\n    [allowNull]="allowNull"\n                  [options]="options"\n                  [icon]="icon"\n                  [align]="alignMap.get(align)"\n                  [verticalAlign]="valignMap.get(verticalAlign)"\n\n                  [textRef]="\'name\'"\n                  [virtual]="virtual"\n                  [valueRef]="\'id\'"\n                  [autoClose]="autoClose"\n                  [autoCloseIgnore]="autoCloseIgnore"\n                  [disabled]="false">\n      <ng-template tetaSelectOption let-option>\n        {{option.name}}\n      </ng-template>\n      <ng-template tetaSelectValue let-value>\n        {{value?.name}}\n      </ng-template>\n    </teta-select>\n    <div class="margin-top-3">\n      value: {{selected | json}}\n    </div>\n  </div>'}),singleSelectWithSearch=args=>({moduleMetadata:{imports:[_angular_forms__WEBPACK_IMPORTED_MODULE_4__.YN,_icon_icon_sprite_directive__WEBPACK_IMPORTED_MODULE_7__._,_select_select_component__WEBPACK_IMPORTED_MODULE_3__.w,_select_option_directive__WEBPACK_IMPORTED_MODULE_8__.F,_select_value_directive__WEBPACK_IMPORTED_MODULE_9__.l]},props:{...args,valignMap,alignMap,icon:"user",options:getOptions(1e3)},template:'<div class="padding-4 bg-panel-50" [tetaIconSprite]="\'assets/icons.svg\'">\n    <teta-select  style="width: 200px;"\n    [viewType]="viewType"\n    [allowNull]="allowNull"\n                  [options]="options"\n                  [icon]="icon"\n                  [align]="alignMap.get(align)"\n                  [verticalAlign]="valignMap.get(verticalAlign)"\n                  [searchRef]="\'name\'"\n                  [textRef]="\'name\'"\n                  [virtual]="virtual"\n                  [valueRef]="\'id\'"\n                  [autoClose]="autoClose"\n                  [autoCloseIgnore]="autoCloseIgnore"\n                  [disabled]="false">\n      <ng-template tetaSelectOption let-option>\n        {{option.name}}\n      </ng-template>\n      <ng-template tetaSelectValue let-value>\n        {{value?.name}}\n      </ng-template>\n    </teta-select>\n    <div class="margin-top-3">\n      value: {{selected | json}}\n    </div>\n  </div>'}),disabledSelect=args=>({moduleMetadata:{imports:[_angular_forms__WEBPACK_IMPORTED_MODULE_4__.YN,_icon_icon_sprite_directive__WEBPACK_IMPORTED_MODULE_7__._,_select_select_component__WEBPACK_IMPORTED_MODULE_3__.w,_select_option_directive__WEBPACK_IMPORTED_MODULE_8__.F,_select_value_directive__WEBPACK_IMPORTED_MODULE_9__.l]},props:{...args,valignMap,alignMap,icon:"user",options:getOptions(1e3)},template:'<div class="padding-4 bg-panel-50" [tetaIconSprite]="\'assets/icons.svg\'">\n    <teta-select  style="width: 200px;"\n    [viewType]="viewType"\n    [allowNull]="allowNull"\n                  [options]="options"\n                  [icon]="icon"\n                  [align]="alignMap.get(align)"\n                  [verticalAlign]="valignMap.get(verticalAlign)"\n                  [searchRef]="\'name\'"\n                  [textRef]="\'name\'"\n                  [virtual]="virtual"\n                  [valueRef]="\'id\'"\n                  [autoClose]="autoClose"\n                  [autoCloseIgnore]="autoCloseIgnore"\n                  [disabled]="true">\n      <ng-template tetaSelectOption let-option>\n        {{option.name}}\n      </ng-template>\n      <ng-template tetaSelectValue let-value>\n        {{value?.name}}\n      </ng-template>\n    </teta-select>\n    <div class="margin-top-3">\n      value: {{selected | json}}\n    </div>\n  </div>'}),invalidSelect=args=>({moduleMetadata:{imports:[_angular_forms__WEBPACK_IMPORTED_MODULE_4__.YN,_icon_icon_sprite_directive__WEBPACK_IMPORTED_MODULE_7__._,_select_select_component__WEBPACK_IMPORTED_MODULE_3__.w,_select_option_directive__WEBPACK_IMPORTED_MODULE_8__.F,_select_value_directive__WEBPACK_IMPORTED_MODULE_9__.l]},props:{...args,valignMap,alignMap,icon:"user",options:getOptions(1e3)},template:'<div class="padding-4 bg-panel-50" [tetaIconSprite]="\'assets/icons.svg\'">\n    <teta-select  style="width: 200px;"\n    [viewType]="viewType"\n    [allowNull]="allowNull"\n                  [options]="options"\n                  [icon]="icon"\n                  [align]="alignMap.get(align)"\n                  [verticalAlign]="valignMap.get(verticalAlign)"\n    [invalid]="true"\n                  [textRef]="\'name\'"\n                  [virtual]="virtual"\n                  [valueRef]="\'id\'"\n                  [autoClose]="autoClose"\n                  [autoCloseIgnore]="autoCloseIgnore"\n                  [disabled]="false">\n      <ng-template tetaSelectOption let-option>\n        {{option.name}}\n      </ng-template>\n      <ng-template tetaSelectValue let-value>\n        {{value?.name}}\n      </ng-template>\n    </teta-select>\n    <div class="margin-top-3">\n      value: {{selected | json}}\n    </div>\n  </div>'}),multipleSelect=args=>({moduleMetadata:{imports:[_angular_forms__WEBPACK_IMPORTED_MODULE_4__.YN,_icon_icon_sprite_directive__WEBPACK_IMPORTED_MODULE_7__._,_select_select_component__WEBPACK_IMPORTED_MODULE_3__.w,_select_option_directive__WEBPACK_IMPORTED_MODULE_8__.F,_select_value_directive__WEBPACK_IMPORTED_MODULE_9__.l]},props:{...args,valignMap,alignMap,selected:[],icon:"user",options:getOptions(1e3)},template:'<div class="padding-4 bg-panel-50" [tetaIconSprite]="\'assets/icons.svg\'">\n    <teta-select  style="width: 300px;"\n                  [options]="options"\n                  [multiple]="true"\n                  [icon]="icon"\n                  [ngModel]="selected"\n                  [align]="align"\n                  [verticalAlign]="verticalAlign"\n                  [searchRef]="\'name\'"\n                  [valueRef]="\'id\'"\n\n                  [textRef]="\'name\'"\n  >\n      <ng-template tetaSelectOption let-option>\n        {{option.name}}\n      </ng-template>\n    </teta-select>\n    <div class="margin-top-3">\n      value: {{selected | json}}\n    </div>\n  </div>'}),__namedExportsOrder=["singleSelect","singleSelectWithSearch","disabledSelect","invalidSelect","multipleSelect"];singleSelect.parameters={...singleSelect.parameters,docs:{...singleSelect.parameters?.docs,source:{originalSource:'args => ({\n  moduleMetadata: {\n    imports: [FormsModule, IconSpriteDirective, SelectComponent, SelectOptionDirective, SelectValueDirective]\n  },\n  props: {\n    ...args,\n    valignMap,\n    alignMap,\n    icon: \'user\',\n    options: getOptions(1000)\n  },\n  template: `<div class="padding-4 bg-panel-50" [tetaIconSprite]="\'assets/icons.svg\'">\n    <teta-select  style="width: 200px;"\n    [viewType]="viewType"\n    [allowNull]="allowNull"\n                  [options]="options"\n                  [icon]="icon"\n                  [align]="alignMap.get(align)"\n                  [verticalAlign]="valignMap.get(verticalAlign)"\n\n                  [textRef]="\'name\'"\n                  [virtual]="virtual"\n                  [valueRef]="\'id\'"\n                  [autoClose]="autoClose"\n                  [autoCloseIgnore]="autoCloseIgnore"\n                  [disabled]="false">\n      <ng-template tetaSelectOption let-option>\n        {{option.name}}\n      </ng-template>\n      <ng-template tetaSelectValue let-value>\n        {{value?.name}}\n      </ng-template>\n    </teta-select>\n    <div class="margin-top-3">\n      value: {{selected | json}}\n    </div>\n  </div>`\n})',...singleSelect.parameters?.docs?.source}}},singleSelectWithSearch.parameters={...singleSelectWithSearch.parameters,docs:{...singleSelectWithSearch.parameters?.docs,source:{originalSource:'args => ({\n  moduleMetadata: {\n    imports: [FormsModule, IconSpriteDirective, SelectComponent, SelectOptionDirective, SelectValueDirective]\n  },\n  props: {\n    ...args,\n    valignMap,\n    alignMap,\n    icon: \'user\',\n    options: getOptions(1000)\n  },\n  template: `<div class="padding-4 bg-panel-50" [tetaIconSprite]="\'assets/icons.svg\'">\n    <teta-select  style="width: 200px;"\n    [viewType]="viewType"\n    [allowNull]="allowNull"\n                  [options]="options"\n                  [icon]="icon"\n                  [align]="alignMap.get(align)"\n                  [verticalAlign]="valignMap.get(verticalAlign)"\n                  [searchRef]="\'name\'"\n                  [textRef]="\'name\'"\n                  [virtual]="virtual"\n                  [valueRef]="\'id\'"\n                  [autoClose]="autoClose"\n                  [autoCloseIgnore]="autoCloseIgnore"\n                  [disabled]="false">\n      <ng-template tetaSelectOption let-option>\n        {{option.name}}\n      </ng-template>\n      <ng-template tetaSelectValue let-value>\n        {{value?.name}}\n      </ng-template>\n    </teta-select>\n    <div class="margin-top-3">\n      value: {{selected | json}}\n    </div>\n  </div>`\n})',...singleSelectWithSearch.parameters?.docs?.source}}},disabledSelect.parameters={...disabledSelect.parameters,docs:{...disabledSelect.parameters?.docs,source:{originalSource:'args => ({\n  moduleMetadata: {\n    imports: [FormsModule, IconSpriteDirective, SelectComponent, SelectOptionDirective, SelectValueDirective]\n  },\n  props: {\n    ...args,\n    valignMap,\n    alignMap,\n    icon: \'user\',\n    options: getOptions(1000)\n  },\n  template: `<div class="padding-4 bg-panel-50" [tetaIconSprite]="\'assets/icons.svg\'">\n    <teta-select  style="width: 200px;"\n    [viewType]="viewType"\n    [allowNull]="allowNull"\n                  [options]="options"\n                  [icon]="icon"\n                  [align]="alignMap.get(align)"\n                  [verticalAlign]="valignMap.get(verticalAlign)"\n                  [searchRef]="\'name\'"\n                  [textRef]="\'name\'"\n                  [virtual]="virtual"\n                  [valueRef]="\'id\'"\n                  [autoClose]="autoClose"\n                  [autoCloseIgnore]="autoCloseIgnore"\n                  [disabled]="true">\n      <ng-template tetaSelectOption let-option>\n        {{option.name}}\n      </ng-template>\n      <ng-template tetaSelectValue let-value>\n        {{value?.name}}\n      </ng-template>\n    </teta-select>\n    <div class="margin-top-3">\n      value: {{selected | json}}\n    </div>\n  </div>`\n})',...disabledSelect.parameters?.docs?.source}}},invalidSelect.parameters={...invalidSelect.parameters,docs:{...invalidSelect.parameters?.docs,source:{originalSource:'args => ({\n  moduleMetadata: {\n    imports: [FormsModule, IconSpriteDirective, SelectComponent, SelectOptionDirective, SelectValueDirective]\n  },\n  props: {\n    ...args,\n    valignMap,\n    alignMap,\n    icon: \'user\',\n    options: getOptions(1000)\n  },\n  template: `<div class="padding-4 bg-panel-50" [tetaIconSprite]="\'assets/icons.svg\'">\n    <teta-select  style="width: 200px;"\n    [viewType]="viewType"\n    [allowNull]="allowNull"\n                  [options]="options"\n                  [icon]="icon"\n                  [align]="alignMap.get(align)"\n                  [verticalAlign]="valignMap.get(verticalAlign)"\n    [invalid]="true"\n                  [textRef]="\'name\'"\n                  [virtual]="virtual"\n                  [valueRef]="\'id\'"\n                  [autoClose]="autoClose"\n                  [autoCloseIgnore]="autoCloseIgnore"\n                  [disabled]="false">\n      <ng-template tetaSelectOption let-option>\n        {{option.name}}\n      </ng-template>\n      <ng-template tetaSelectValue let-value>\n        {{value?.name}}\n      </ng-template>\n    </teta-select>\n    <div class="margin-top-3">\n      value: {{selected | json}}\n    </div>\n  </div>`\n})',...invalidSelect.parameters?.docs?.source}}},multipleSelect.parameters={...multipleSelect.parameters,docs:{...multipleSelect.parameters?.docs,source:{originalSource:'args => ({\n  moduleMetadata: {\n    imports: [FormsModule, IconSpriteDirective, SelectComponent, SelectOptionDirective, SelectValueDirective]\n  },\n  props: {\n    ...args,\n    valignMap,\n    alignMap,\n    selected: [],\n    icon: \'user\',\n    options: getOptions(1000)\n  },\n  template: `<div class="padding-4 bg-panel-50" [tetaIconSprite]="\'assets/icons.svg\'">\n    <teta-select  style="width: 300px;"\n                  [options]="options"\n                  [multiple]="true"\n                  [icon]="icon"\n                  [ngModel]="selected"\n                  [align]="align"\n                  [verticalAlign]="verticalAlign"\n                  [searchRef]="\'name\'"\n                  [valueRef]="\'id\'"\n\n                  [textRef]="\'name\'"\n  >\n      <ng-template tetaSelectOption let-option>\n        {{option.name}}\n      </ng-template>\n    </teta-select>\n    <div class="margin-top-3">\n      value: {{selected | json}}\n    </div>\n  </div>`\n})',...multipleSelect.parameters?.docs?.source}}}}}]);